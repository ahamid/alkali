{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///index.js","webpack:///webpack/bootstrap ec73241735099629c44e","webpack:///./index.js","webpack:///./Element.js","webpack:///./util/lang.js","webpack:///./Renderer.js","webpack:///./Variable.js","webpack:///./react.js","webpack:///./operators.js","webpack:///./Copy.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","apply","undefined","Element","Renderer","react","Copy","operators","VariableExports","lang","main","Object","create","copy","defineProperty","getOwnPropertyDescriptor","spawn","ElementRenderer","booleanStyle","options","element","value","key","style","defaultStyle","directStyle","layoutChildren","parent","children","container","prepend","fragment","length","doc","createDocumentFragment","i","l","childNode","child","currentParent","appendChild","isContentNode","contentNode","notifies","ref","isIterable","variableAsContent","Array","nodeType","Error","createTextNode","insertBefore","firstChild","content","textNode","renderer","TextRenderer","variable","bidirectionalHandler","InputPropertyRenderer","name","inputs","tagName","bindChanges","prototype","renderSelectValueUpdate","type","isNaN","noop","applyAttribute","AttributeRenderer","setAttribute","applySubProperties","SubPropertyRenderer","compose","PropertyRenderer","arguments","renderUpdate","subKey","subValue","assignProperties","properties","propertyHandlers","_propertyHandlers","constructor","VariableClass","hasOwn","put","styleDefinition","propertyHandler","styleDefinitions","StyleRenderer","slice","addEventListener","enumerable","configurable","writable","assignGenerators","customGenerators","styleGenerators","nativeGenerators","generators","_generators","GeneratorVariable","bind","buildContent","each","defineHasOwn","ItemClass","getCollectionOf","Item","itemVariable","from","_item","ListRenderer","forEach","item","childElement","buildInputContent","conversion","nextTurn","inputEvents","event","result","Context","deny","parseFloat","inputType","inputProperty","date","datetime","time","mergeObject","existing","applyToConstructor","argument","applyOnCreate","_applyOnCreate","Variable","isGenerator","classHandlers","TypeError","getApplySet","Class","hasOwnProperty","getForClass","parentApplySet","getPrototypeOf","keys","getOwnPropertyNames","propertyName","toLowerCase","renderDescriptor","renderMethod","map","WeakMap","get","has","set","makeElementConstructor","selector","withProperties","setPrototypeOf","ownedClasses","forTarget","property","propertyForElement","selectorMatch","match","SELECTOR_REGEX","operator","className","remaining","createElement","presumptiveParentMap","buggyConstructorSetter","ElementApplyOnCreate","created","shadow","attachShadow","mode","ready","append","defineTag","extendElement","customElements","extendClass","HTMLElement","extends","console","warn","getConstructor","tags","setupElement","props","elementPropertyHandlers","assigned","handlers","generate","elements","elementName","ElementClass","generateInputs","HTMLInputElement","target","From","Target","createInstance","elementMap","instanceMap","parentNode","ownedInstances","instance","subject","ThisElementVariable","_Variable","elementOverlay","alkaliRenderers","variableProperties","cleanup","renderers","stop","needsRestart","restart","elementAttached","attached","elementDetached","detached","firstVisit","node","state","__alkaliAttached__","action","body","contains","knownElementProperties","newValue","definition","ClassNameRenderer","currentClassName","changingClassName","removed","replace","document","tag","INPUT","TEXTAREA","testElement","originalConstructor","__proto__","display","visibility","color","opacity","zoom","minZoom","maxZoom","fontWeight","position","textDecoration","base","proto","classes","flag","class","for","role","render","dataset","attributes","styleObjectHandler","input","valueAsNumber","valueAsDate","checked","e","select","textarea","a","area","button","dialog","embed","form","frame","frameset","iframe","img","option","optgroup","output","label","td","th","script","track","link","meta","meter","progress","del","ins","source","video","keygen","object","param","radios","querySelectorAll","radio","dispatchEvent","Event","assign","within","aliases","Anchor","Image","Paragraph","Textarea","DList","UList","OList","ListItem","Text","TextInput","TableRow","TableCell","TableHeaderCell","TableHeader","TableBody","alias","to","refresh","moveLiveElementsEnabled","Symbol","hasInstance","extend","ExtendedElement","descriptor","MutationObserver","lifeStates","nodes","observer","mutations","il","mutation","j","jl","nodeIteration","k","kl","baseNode","currentNode","nextNode","nextSibling","observe","childList","subtree","specify","distinctive","generics","push","distinctSubject","subjectMap","specifiedInstance","defaultInstance","getContextualized","_contextMap","context","matches","merge","childContext","getDistinctElement","feature","hasFeatures","SyncPromise","SyncErrorPromise","error","unhandledTimeout","setTimeout","queue","listener","queuedListeners","indexOf","events","diff","previous","current","callback","queued","toJSONHidden","func","displayName","isGeneratorIterator","iterator","next","generator","stepReturn","generatorIterator","isThrowing","nextValue","done","then","isSync","requestAnimationFrame","promise","Promise","onFulfilled","onRejected","catch","handler","clearTimeout","addKey","keyFlag","currentValue","targetAncestor","previousSet","previousGet","remove","timerStarted","setInterval","watchedObjects","watchedCopies","listeners","unobserve","splice","Hidden","toJSON","eval","processAnimationFrame","toRender","execute","resolve","reject","resolution","finished","errorResolution","isResolved","errback","handle","newError","values","mapProperty","intermediary","when","errorHandler","whenAll","onEach","readyInputs","lastPromiseResult","previousPromiseResult","Base","div","deepCopy","update","updateRendering","shouldRender","alwaysUpdate","updated","subscribe","valueOf","updateOnStart","contextualized","ContentRenderer","onElementRemoval","stopNotifies","invalidatedElements","nextId","version","updateEvent","by","invalidated","contextMatches","deferredRender","isCanceled","executeWithin","setVersion","newContext","integrate","addInput","invalidateElement","invalidatedParts","queueTask","processQueue","updateElement","getId","getSubject","always","thisElement","renderersOnShow","addElement","omitValueOf","started","resolved","renderLoading","removeAttribute","oldValue","String","eventualValue","innerHTML","builtList","updates","replaceChild","childNodes","nodeValue","eachItem","childElements","removeChild","previousIndex","index","nextChild","newElement","onShowElement","shownElement","getElementsByClassName","includingTop","onlyChildren","getElementsByTagName","whenStrict","sources","NotifyingContext","registerListener","propertyListenersMap","listenerId","autoObserveObjects","listeningToObject","deregisterListener","RefreshEvent","visited","Set","PropertyChangeEvent","childEvent","AddEvent","args","DeleteEvent","forPropertyNotifyingValues","_properties","returnedVariable","hasChildNotifiers","subProperties","assignPromise","arrayToModify","cachedValue","array","results","cachedVersion","insertedAt","added","startingIndex","arrayLength","addedCount","arrayPosition","modifier","removedAt","removalCount","toArray","newArray","makeSubVar","Type","objectUpdated","_propertyChange","all","transform","Transform","argsToArray","VArray","as","keyMapping","valueArray","resultObject","createForInstance","generalizeClass","prototypeNames","getGeneralizedDescriptor","generalizeMethod","method","instanceForContext","Map","VFunction","VMethod","VString","VNumber","Number","VBoolean","Boolean","VSet","VDate","Date","getType","primitives","of","typedObject","reactive","Reflect","getMetadata","log","typeScriptConversions","defineArrayMethod","returns","IterativeResults","IterativeMethod","noChange","RequestChange","RequestSet","NOT_MODIFIED","nextVersion","now","contextFromCache","executor","previousContext","contextualize","parentContext","contextMap","Math","max","_logStackTrace","v","stack","split","test","shift","coalesce","_debugOpts","shortStackTrace","line","some","re","__debug","s","stackObject","join","VariablePrototype","_currentValue","gotValue","getValue","sync","forModification","forChild","versionWithChildren","ifModifiedSince","notResolvedYet","previousNotifyingValue","deferredContext","PropertyClass","propertyVariable","isPropertyClass","ContextualizedVariable","defaultContext","_changeValue","deniedPut","onPropertyChange","eachKey","forDependencies","hasNotifyingChild","init","contextualizes","dependency","handles","updateVersion","getVersion","getFullVersion","selectVariable","getUpdates","since","nextUpdateMap","isDownstream","add","dependent","fixed","collection","invalidate","updateQueued","updateReceiver","unsubscribe","undefine","is","proxiedVariable","thisVariable","setValue","proxy","complete","onValue","toString","callbackOrItemClass","collectionOf","transformFunction","reverse","_Transform","schema","parentSchemaProperties","validate","required","valid","isValid","validation","Validating","structured","structure","observeObject","observerCount","el","deliverChanges","_sN","_debug","random","_lastUpdated","NewType","names","ExtendedVariable","getGeneratorDescriptor","defineAs","_defaultInstance","VMap","readyState","isFinite","staysUpdated","transformContext","argumentName","onResolve","finishedResolvingArgs","isPromise","lastError","getArguments","originalValue","setReverse","ContextualTransform","contextualizedVariable","_needsContextualization","generic","_isStrictArray","unshift","pop","ArrayClass","resuming","generatorContext","oldSources","newLength","newSources","description","proxyHandler","deleteProperty","ownKeys","Proxy","_collectionOf","_collection","Collection","generalize","Function","returnValue","charAt","codeCharAt","lastIndexOf","substr","toUpperCase","toFixed","toExponential","toPrecision","toLocaleString","clear","delete","_array","toDateString","toTimeString","toGMTString","toUTCString","getTime","setTime","VPromise","string","number","boolean","__esModule","default","isStrictArray","_mappedItems","wrapped","filter","mapFunction","emit","keyGenerator","valueGenerator","hasKeyFunction","hasValueFunction","hasKey","group","variables","preserveObjects","_getAsObject","ObjectTransform","prop","directPropertyValue","cond","consequent","alternate","choose","fcall","mcall","ncall","concat","obj","getOperatingFunction","expression","operatingFunctions","precedence","forward","reverseA","reverseB","addFlags","operatorHandler","infix","firstError","b","message","derivativeMap","copiedFrom","isDirty","derivative","getCopyOf","save","original","newCopiedFrom","onSave","revert"],"mappings":"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B,EACAwI,QAAAxI,EACAyI,WAAAzI,EACA7G,MAAA6G,EACA9C,OAAA,SAAAnF,EAAAkB,GACAiE,EAAAnF,EAAAkB,IAEAO,SAAA,SAAAzB,EAAAkB,GACAlB,EAAAyB,SAAAP,GAEA6J,OAAA,SAAA/K,EAAAkB,GACAlB,EAAA+K,OAAA7J,IAoTAuE,YAuBAzF,GAAA8J,EAAAvK,KAAA,mBAAAiM,yBAAA,aAEAxL,IAAAoL,YACApL,GAAAqT,OAAA,SAAA5G,EAAA3H,GACA,wBAAA2H,GAOA5H,EAAA4H,EAAA3H,IALA6D,EAAA8D,OACAtE,GAAArD,EAAA2H,KAQAzM,GAAAsT,OAAA,SAAArS,KAIAkL,GACA,QACA,SACA,QACA,QACA,KACA,IACA,QACA,QACA,WACA,WACA,QACA,QACA,QACA,KACA,QACA,MACA,WACA,KACA,KACA,UACA,MACA,MACA,QACA,SACA,OACA,QACA,SACA,SACA,SACA,IACA,QACA,WACA,MACA,UACA,QACA,IACA,SACA,SACA,WACA,SACA,KACA,MACA,IACA,MACA,QACA,OACA,OACA,MACA,OACA,SACA,QACA,KACA,SACA,QACA,MACA,SACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,WACA,QACA,OACA,OACA,QACA,KACA,OACA,OACA,MACA,IACA,UACA,QACA,OACA,SACA,SACA,aACA,SACA,OACA,OACA,WACA,MACA,UACA,OACA,UACA,MACA,MACA,SACA,UACA,WACA,KACA,SACA,SACA,OACA,KACA,OACA,MAEAI,GACA,WACA,WACA,SACA,QACA,QACA,OACA,WACA,QACA,QACA,SACA,QACA,SACA,MACA,OACA,MACA,QAEA,IAAAV,OAyDA0H,IACAC,OAAA,IACAC,MAAA,MACAC,UAAA,IACAC,SAAA,WACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,SAAA,KACAC,KAAA,QACAC,UAAA,QACAC,SAAA,KACAC,UAAA,KACAC,gBAAA,KACAC,YAAA,QACAC,UAAA,QAEA,QAAAC,MAAAhB,KACA,SAAAgB,EAAAC,GACAhU,OAAAG,eAAAX,GAAAuU,GACA9K,IAAA,WACA,MAAAzK,MAAAwV,OAGGD,GAAAhB,GAAAgB,IAGHvU,IAAAmL,SACAlL,EAAAkL,SACAnL,GAAA2B,UACA3B,GAAAyU,QAAAxU,EAAAwU,QACAzU,GAAAgB,SACA0T,yBAAA,GAEA1U,GAAAkD,QAAA,SAAAjC,GAEA,OACAqB,eAAA,EACA7B,OAAAQ,EAAAR,OAAA4F,KAAApF,KAIAjB,GAAAsM,aAAA,aACA,mBAAAqI,SAEAnU,OAAAG,eAAAX,GAAAsM,aAAAqI,OAAAC,aAAmE1T,MAAA,SAAAuL,GACnE,MAAAA,MAAAhM,QAAAgM,aAKAzM,GAAA6U,OAAA,SAAAjM,EAAA9D,GACA,QAAAgQ,KACA,MAAAlM,GAAA9I,MAAAd,KAAAyF,WAEAsF,GAAA+K,EAAAlM,EACA,IAAA/E,GAAAiR,EAAAjR,UAAArD,OAAAC,OAAAmI,EAAA/E,WACAoB,aAAiB/D,MAAA4T,IAUjB,OARAtU,QAAA0I,oBAAApE,GAAAkC,QAAA,SAAA7F,GACA,GAAA4T,GAAAvU,OAAAI,yBAAAkE,EAAA3D,EACAsH,IAAAtH,GACAsH,GAAAtH,GAAA2T,EAAAC,EAAA7T,MAAAC,EAAA2D,GAEAtE,OAAAG,eAAAkD,EAAA1C,EAAA4T,KAGAD,EAgFA,IAAAnO,IAAA3G,GAAA2G,KAAAtG,EAAAsG,IAiEA,sBAAAqO,kBAAA,CACA,GAAAC,MACAxR,KAAA,WACAyR,MAAA,eACA7G,OAAAN,IAEAtK,KAAA,WACAyR,MAAA,aACA7G,OAAAR,IAsBAsH,GAAA,GAAAH,kBAAA,SAAAI,GACA,OAAApT,GAAA,EAAAqT,EAAAD,EAAAvT,OAAyCG,EAAAqT,EAAQrT,IAIjD,OAHAsT,GAAAF,EAAApT,GAGAuT,EAAA,EAAAC,EAAAP,GAAApT,OAA2C0T,EAAAC,EAAQD,IAAA,CACnD,GAAApH,GAAA8G,GAAAM,GACAL,EAAAI,EAAAnH,EAAA+G,MAEAO,GACA,OAAAC,GAAA,EAAAC,EAAAT,EAAArT,OAAuC6T,EAAAC,EAAQD,IAAA,CAC/C,GAAAE,GAAAV,EAAAQ,EACA,IAAAzH,EAAA2H,EAAAzH,GAAA,CAEA,GAAA0H,GAAAD,EAAA3S,UACA,IAAA4S,EACA,QACA,GAAAC,EAUA,IATA,IAAAD,EAAAhT,UAAAoL,EAAA4H,EAAA1H,IAEA2H,EAAAD,EAAA5S,WACA6S,IACAA,EAAAD,EAAAE,cAGAD,EAAAD,EAAAE,aAEAD,EAGA,EAEA,IADAD,IAAA9I,WACA8I,IAAAD,EACA,QAAAH,WAEWK,EAAAD,EAAAE,aAEXF,GAAAC,OAUAX,IAAAa,QAAAlU,EAAAwM,MAAAxM,GACAmU,WAAA,EACAC,SAAA,IAuFA,MAnFA5V,GAAAI,KAAAL,EAAAoH,QAAA5D,WACAsS,QAAA,SAAA5N,GACA,GAAAtH,GAAAjC,KAAAkO,QACAkJ,GAAA,GACIpX,KAAAqX,WAAArX,KAAAqX,cAAAC,KAAA/N,EACJ,IACAvJ,KAAAuX,kBAAAtV,IACAmV,GAAA,EAEA,IAAAI,GAAAvV,EAAAgE,YAAA+E,YACA,IAAAwM,EAAA,CACA,GAAA1J,GAAA0J,EAAA/M,IAAAlB,EACA,IAAAuE,EASA,MARAsJ,KACApX,KAAAuX,gBAAAtV,GAEAwV,kBAAA3J,EAAArD,IAAAxI,GACAwV,mBACA3J,EAAAnD,IAAA1I,EAAAwV,kBAAA3J,EAAAF,eACAE,EAAAF,eAAA3L,GAAA,GAAAsH,IAEAkO,yBAGIxV,IAAA8L,YAAApC,GAAAlB,IAAAxI,GAEJ,OAAAsH,GAAAmO,iBAGAC,kBAAA,SAAArT,GAEA,GAAArC,GAAAjC,KAAAkO,OACA,KAAAjM,EAEA,MAAAqC,EAEA,IAAAA,EAAAsT,YACA,GACA,GAAA3J,GAAA3J,EAAAsT,YAAAnN,IAAAxI,EACA,IAAAgM,KAAA4J,QAAAC,QAAA7V,GACA,MAAAgM,SAEKhM,IAAA8L,YAAApC,GAAAlB,IAAAxI,GAEL,OAAAqC,GAAAuT,SAAAvT,EAAAuT,QAAAC,QAAA9X,KAAAkO,SAEA5J,EAFA,QAMAyT,MAAA,SAAAC,KACAhY,KAAAuX,iBACAvX,KAAAuX,kBAAAS,EAAAT,iBAAAvX,KAAAuX,gBAAAhI,SAAAyI,EAAAT,oBACAvX,KAAAuX,gBAAAS,EAAAT,oBAEAD,KAAAxW,MAAAd,KAAAqX,WAAArX,KAAAqX,aAAAW,EAAAX,WAEAY,mBAAA,SAAA1O,EAAAtH,GACA,GACA,GAAAuV,GAAAvV,EAAAgE,YAAA+E,YACA,IAAAwM,EAAA,CACA,GAAA1J,GAAA0J,EAAA/M,IAAAlB,EACA,IAAAuE,KAAApD,IAAAzI,GACA,MAAAA,UAGIA,IAAA8L,YAAApC,GAAAlB,IAAAxI,KAEJ6V,QAAA,SAAA7V,GACA,GAAAoV,GAAArX,KAAAqX,QACA,IAAAA,EACA,OAAArU,GAAA,EAAAC,EAAAoU,EAAAxU,OAAwCG,EAAAC,EAAOD,IAC/C,GAAAhD,KAAAiY,mBAAAZ,EAAArU,GAAAf,KAAAjC,KAAAuX,gBACA,QAIA,aAMAvW,MHqFM,SAASnB,OAAQD,QAASM,qBI3jDhC,GAAAS,gCAAAC,6BAAAC,+BAAA,SAAAnB,EAAAC,GACAiB,gCAAAD,+BAAA,EAAAE,8BAAA,kBAAAF,+DAAAG,MAAAlB,QAAAgB,8BAAAD,iCAAAI,SAAAF,gCAAAhB,OAAAD,QAAAiB,iCAEEb,KAAA,WAgBF,QAAA0K,KAAAwN,GACA,MAAAC,aAAAD,GAGA,QAAAE,aAAAlW,GACAlC,KAAAkC,QAkBA,QAAAmW,kBAAAC,GACAtY,KAAAkC,MAAAoW,EACAtY,KAAAuY,iBAAAC,WAAA,WACA9L,QAAA4L,MAAA,wBAAAA,KAgGA,QAAAG,OAAAC,EAAA5E,EAAArP,GACAkU,gBACAA,gBAAAC,QAAAF,SACAC,gBAAArB,KAAAoB,IAGAC,iBAAAD,GACApX,KAAA+G,SAAA,WACAsQ,gBAAA3Q,QAAA,SAAA0Q,GACA,GAAAG,KACAH,GAAA5S,WAAAkC,QAAA,SAAAkD,GACA2N,EAAAvB,MAAmB7J,OAAAiL,EAAA5E,OAAArP,KAAAyG,MAEnBwN,EAAAG,GACAH,EAAA5E,OAAA,KACA4E,EAAA5S,WAAA,OAEA6S,gBAAA,MACI,IAEJD,EAAA5E,QACA,IAAAhO,GAAA4S,EAAA5S,aAAA4S,EAAA5S,cACAA,GAAA8S,QAAAnU,SACAqB,EAAAwR,KAAA7S,GAqBA,QAAAqU,MAAAC,EAAAC,EAAAC,GAEA,GAAAC,EACA,QAAAlW,KAAA+V,GACAA,EAAAlP,eAAA7G,IAAA+V,EAAA/V,KAAAgW,EAAAhW,KAEA+V,EAAA/V,GAAAgW,EAAAhW,GACAkW,WAAA5B,MAAoC7S,KAAAzB,IAGpC,QAAAA,KAAAgW,GACAA,EAAAnP,eAAA7G,KAAA+V,EAAAlP,eAAA7G,KAEA+V,EAAA/V,GAAAgW,EAAAhW,GACAkW,WAAA5B,MAAoC7S,KAAAzB,IAGpCkW,IACAD,EAAAC,GAOA,QAAAC,gBACA,MAAAA,cA0NA,QAAA3P,aAAA4P,GACA,qBAAAA,GAAA,CACA,GAAAnT,GAAAmT,EAAAnT,WAEA,8BAAAA,EAAAoT,aAAApT,EAAAxB,OAGA,QAAA6U,qBAAAC,GACA,GAAAA,KAAAC,KAAA,CACA,GAAAvT,GAAAsT,EAAAtT,uBACA,8BAAAA,EAAAoT,aAAApT,EAAAxB,OAKA,QAAA5C,OAAA4X,GAMA,QAAAD,KACA,QACA,GAAAE,GAAAC,EAAAC,EAAA,gBAAAC,EACA,IAAAH,EAAAI,KACA,MAAAJ,GAAAxX,KAOA,IALA2X,EAAAH,EAAAxX,MAEA2X,KAAAL,MAAAF,oBAAAO,KACAA,EAAAhY,MAAAgY,IAEAA,KAAAE,KAAA,CAGA,GACAC,GAAA,KACAxR,EAAAqR,EAAAE,KAAA,SAAA7X,GAEA,MADA2X,GAAA3X,EACA8X,KAAA,EACAR,SAEAQ,GAAA,IAEM,SAAA1B,GAGN,MAFAuB,GAAAvB,EACAsB,GAAA,EACAJ,KAEA,KAAAQ,EAEA,MADAA,IAAA,EACAxR,EAGAoR,GAAA,GAtCA,GAEAC,GACAD,EAHAD,EAAA,kBAAAF,QAIA,OAAAD,KA7bA,GAAAxP,gBAAAxI,OAAAwI,gBAAA,SAAAiH,GAAgE,MAAAA,GAAAX,WAChEvF,eAAAvJ,OAAAuJ,gBAAA,SAAAkG,EAAAC,GAAuED,EAAAX,UAAAY,GACvEiH,aACA8B,sBAAA,mBAAAA,uBACAtY,eAAAH,OAAAG,gBAAA,WACA,IAEA,MADAH,QAAAG,kBAA4B,SAC5B,EACI,MAAAqQ,QAGJkI,QAAA,mBAAAC,SACAnE,iBAAA,mBAAAA,kBACAxL,QAAA,kBAAAA,SASA4N,aAAAvT,WACAkV,KAAA,SAAAK,EAAAC,GACA,IAAAD,EACA,UAAAhC,aAAApY,KAAAkC,MAEA,KACA,GAAAsG,GAAA4R,EAAApa,KAAAkC,MACA,OAAAsG,MAAAuR,KAAAvR,EAAA,GAAA4P,aAAA5P,GACI,MAAA8P,GACJ,UAAAD,kBAAAC,KAGAgC,QAAA,SAAAC,GACA,MAAAva,MAAA+Z,KAAA,KAAAQ,KASAlC,iBAAAxT,UAAA,GAAAuT,aACAC,iBAAAxT,UAAAkV,KAAA,SAAAK,EAAAC,GAEA,MADAG,cAAAxa,KAAAuY,kBACA8B,EAGAjC,YAAAvT,UAAAkV,KAAAxZ,KAAAP,KAAAqa,GAFA,GAAAhC,kBAAArY,KAAAkC,OAOA,IAAA8U,SACAtM,IAAA,kBACA,SAAA+C,EAAAiL,GASA,QAAA+B,GAAAtY,GACA,GAAAuY,GAAA,MAAAvY,CACA,KAAAnC,KAAA0a,GAAA,CAGA1a,KAAA0a,IAAA,CAEA,IAEA3E,GAFA4E,EAAAlN,EAAAtL,GACAyY,EAAAnN,CAEA,GACAsI,GAAAvU,OAAAI,yBAAAgZ,EAAAzY,UACK4T,IAAA6E,EAAA5Q,eAAA4Q,IAEL,IAAA7E,KAAApL,IAAA,CACA,GAAAkQ,GAAA9E,EAAApL,IACAmQ,EAAA/E,EAAAtL,GACAjJ,QAAAG,eAAA8L,EAAAtL,GACAsI,IAAA,WACA,MAAAkQ,GAAAG,EAAAva,KAAAP,OAEA2K,IAAA,SAAAzI,GACA2Y,EAAAta,KAAAP,KAAAkC,GACAyY,IAAAzY,IACAyY,EAAAzY,EACAwW,GACAA,IAAoBjL,OAAAzN,KAAAyE,KAAAtC,OAIpBwE,WAAAoP,EAAApP,iBAGAnF,QAAAG,eAAA8L,EAAAtL,GACAsI,IAAA,WACA,MAAAkQ,IAEAhQ,IAAA,SAAAzI,GACAyY,IAAAzY,IACAyY,EAAAzY,EACAwW,GACAA,IAAoBjL,OAAAzN,KAAAyE,KAAAtC,OAIpBwE,YAAAoP,KAAApP,cA9CA,MAJA+R,GAAA+B,SACA/B,EAAAqC,OAAA,WACArC,EAAA,MAEAA,GAoDA,SAAAjL,EAAAiL,GACAsC,eACAA,cAAA,EACAC,YAAA,WACA,OAAAjY,GAAA,EAAAC,EAAAiY,eAAArY,OAA8CG,EAAAC,EAAOD,IACrD8V,KAAAqC,cAAAnY,GAAAkY,eAAAlY,GAAAoY,UAAApY,KAEK,IAEL,IAAAtB,KACA,QAAAsB,KAAAyK,GACAA,EAAA5D,eAAA7G,KACAtB,EAAAsB,GAAAyK,EAAAzK,GAGAkY,gBAAA5D,KAAA7J,GACA0N,cAAA7D,KAAA5V,GACA0Z,UAAA9D,KAAAoB,IAEAC,gBA2BA0C,UAAA3Q,IAAA,WAAAlJ,OAAA6Z,UACA,SAAA5N,EAAAiL,GACAA,EAAAqC,QACArC,EAAAqC,QAEA,QAAA/X,GAAA,EAAAC,EAAAiY,eAAArY,OAA4CG,EAAAC,EAAOD,IACnD,GAAAkY,eAAAlY,KAAAyK,GAAA2N,UAAApY,KAAA0V,EAIA,MAHAwC,gBAAAI,OAAAtY,EAAA,GACAmY,cAAAG,OAAAtY,EAAA,OACAoY,WAAAE,OAAAtY,EAAA,IAKAkY,kBACAC,iBACAC,aACAJ,cAAA,EAuBA3a,GAAA,EAOAkb,OAAA,YAEAA,QAAA1W,UAAA2W,OAAArC,YAEA,IAAA5M,YACA,KACAA,YAAAkP,KAAA,mDACE,MAAAzJ,IAEF,GAAA1Q,OACA2Y,sBAAAvP,IAAA,yBAAAuP,sBACA,WAGA,QAAAyB,KACA,OAAA1Y,GAAA,EAAoBA,EAAA2Y,EAAA9Y,OAAqBG,IACzC2Y,EAAA3Y,IAEA2Y,MACAzC,GAAA,EAEA,QAAAe,GAAA7V,GACA8U,IACAV,WAAAkD,GACAxC,GAAA,GAEAyC,EAAArE,KAAAlT,GAdA,GAAAuX,MACAzC,GAAA,CAeA,OAAAe,MAEA7B,wBACA+B,QAAAzP,IAAA,WAAAyP,QAAA,WACA,QAAAA,GAAAyB,GAGA,QAAAC,GAAA3Z,GAEAA,KAAA6X,KAEA7X,EAAA6X,KAAA8B,EAAAC,IAEAC,EAAA7Z,EACA8Z,KAGA,QAAAF,GAAAxD,GAEA2D,EAAA3D,EACA0D,IAGA,QAAAA,KACAE,GAAA,CACA,QAAAlZ,GAAA,EAAAC,EAAAwV,EAAA5V,OAAqCG,EAAAC,EAAOD,IAC5CyV,EAAAzV,IAGAyV,GAAA,EAxBA,GAAAyD,GAAAH,EAAAE,EACAxD,EAAA,CAyBA,OATAmD,GAAAC,EAAAC,IAUA/B,KAAA,SAAAd,EAAAkD,GACA,UAAAhC,GAAA,SAAA0B,EAAAC,GACA,QAAAM,KAEA,IACAH,IAAAE,EAEAL,EAAAG,GAGAJ,EAAAI,EACAE,EAAAF,GACAhD,EACAA,EAAA8C,MAES,MAAAM,GAETP,EAAAO,IAGAH,EAEAE,KAEA3D,WAAAnB,KAAA8E,OAMA,MAAAjC,MAGA3P,QAAAE,IAAA,WAAAF,QACA,SAAA8R,EAAA7X,GACA,GAAA8X,GAAA,MAAA9X,GAAA,IAAApE,IACA,OAAAqK,KAAA,mBAEAD,IAAA,SAAAtI,GACA,MAAAA,GAAAoa,IAEA5R,IAAA,SAAAxI,EAAAD,GACAV,OAAAG,eAAAQ,EAAAoa,GACAra,QACAyE,YAAA,OAKA8D,IAAA,SAAAtI,GACA,GAAAqa,GAAAra,EAAAoa,EACA,OAAAC,MAAAta,OAEAyI,IAAA,SAAAxI,EAAAD,GAEA,GAAAsa,GAAAra,EAAAoa,KAAApa,EAAAoa,GAAA,GAAAhB,QACAiB,GAAAta,WAKA8U,gBACAqE,oBACA9O,wBACAkQ,KAAA,SAAAva,EAAA+W,EAAAyD,GACA,MAAAxa,MAAA6X,KACA7X,EAAA6X,KAAAd,EAAAyD,IAAAxa,EAAA+W,EAAA/W,IAEAya,QAAA,SAAAjY,EAAAuU,GA+BA,QAAA2D,KACAnR,IACAA,IACAjD,EAAAyQ,EAAA4D,IA5BA,OAFArU,GACAsU,EAHAD,KACApR,EAAA,EAGAzI,EAAA,EAAAC,EAAAyB,EAAA7B,OAAoCG,EAAAC,EAAOD,IAAA,CAC3C,GAAA4O,GAAAlN,EAAA1B,EACA4O,MAAAmI,MACAtO,IACA,SAAAzI,EAAA+Z,GACAD,EAAAlL,EAAAmI,KAAA,SAAA7X,GAGA,MAFA2a,GAAA7Z,GAAAd,EACA0a,IACAnR,EAGAsR,EAFAvU,KAKMxF,EAAA8Z,IAEND,EAAA7Z,GAAA4O,EAIA,MADAgL,KACAnR,EAAA,EACAqR,EAEAtU,GASAjD,QAAA,SAAAyX,EAAA/W,EAAAH,GACA,GAAAjB,GAAAoB,EAAApB,UAAArD,OAAAC,OAAAub,EAAAnY,UACAkG,gBAAA9E,EAAA+W,EACA,QAAAha,KAAA8C,GACAjB,EAAA7B,GAAA8C,EAAA9C,EAGA,OADA6B,GAAAoB,cACAA,GAEAoC,SAAAqC,IAAA,oBACA,SAAAuO,GAIA,GAAAgE,GAAAjN,SAAAtE,cAAA,OACAyK,EAAA,GAAAH,kBAAAiD,EACA9C,GAAAa,QAAAiG,GACAvL,YAAA,IAEAuL,EAAA7X,aAAA,IAAA/E,OAEA,SAAA4Y,GAEAT,WAAAS,EAAA,IAEAvX,KAAAF,OAAA6S,QAAA,SAAA5G,EAAAkG,GACA,OAAA3Q,KAAA2Q,GACAlG,EAAAzK,GAAA2Q,EAAA3Q,EAEA,OAAAyK,IAEAyP,SAAA,SAAAvJ,GACA,GAAAA,GAAA,gBAAAA,GAAA,CACA,GAAAA,YAAA/P,OAEA,OADA6J,MACAzK,EAAA,EAAAC,EAAA0Q,EAAA9Q,OAAsCG,EAAAC,EAAOD,IAC7CyK,EAAAzK,GAAA1B,KAAA4b,SAAAvJ,EAAA3Q,QAEK,CACL,GAAAyK,KACA,QAAAzK,KAAA2Q,GACAlG,EAAAzK,GAAA1B,KAAA4b,SAAAvJ,EAAA3Q,IAGA,MAAAyK,GAEA,MAAAkG,IA8DA,OA9CArS,MAAAkI,wBA6CAlI,KAAAO,YACAP,QJkkDM,SAASzB,EAAQD,EAASM,GK1iEhC,GAAAS,GAAAC,EAAAC,GAAA,SAAAnB,EAAAC,GACAiB,GAAAV,EAAA,GAAAA,EAAA,IAAAS,EAAA,EAAAE,EAAA,kBAAAF,KAAAG,MAAAlB,EAAAgB,GAAAD,IAAAI,SAAAF,IAAAhB,EAAAD,QAAAiB,KAEEb,KAAA,SAAAsB,EAAAD,GASF,QAAAJ,GAAAe,GACA,GAAAsC,GAAAtC,EAAAsC,QAMA,IAJAtE,KAAAsE,WACAtC,EAAA6I,WACA7K,KAAA6K,SAAA7I,EAAA6I,UAEA7I,EAAAoL,SAAA,CACApN,KAAAoN,SAAApL,EAAAoL,SACApN,KAAAiC,QAAAjC,KAAAoN,SAAA,EACA,QAAApK,GAAA,EAAAC,EAAAjD,KAAAoN,SAAAvK,OAA2CG,EAAAC,EAAOD,KAClDhD,KAAAoN,SAAApK,GAAAsL,kBAAAtO,KAAAoN,SAAApK,GAAAsL,qBAAAgJ,KAAAtX,UAGA,KAAAgC,EAAAC,QAIA,SAAA6B,OAAA,kCAHA,IAAA7B,GAAAjC,KAAAiC,QAAAD,EAAAC,SACAA,EAAAqM,kBAAArM,EAAAqM,qBAAAgJ,KAAAtX,MAgBA,GAZAgC,EAAAmb,SACAnd,KAAAod,gBAAApb,EAAAmb,QAEAnb,EAAAqb,eACArd,KAAAqd,aAAArb,EAAAqb,cAEArb,EAAA0D,eACA1F,KAAA0F,aAAA1D,EAAA0D,cAEA1D,EAAAsb,eACAtd,KAAAsd,aAAAtb,EAAAsb,eAEAhZ,EAAAiZ,QAAA,CAEA,GAAAnZ,GAAApE,IACAsE,GAAAkZ,UAAA,SAAAjV,GAGAnE,EAAAE,UACAmZ,QAAA,WACA,MAAAlV,GAAArG,UAGAkC,EAAAmZ,YAGA,GAAAvb,EAAA0b,iBAAA,GACA,GAAAC,GAAA3d,KAAA2d,gBAAA3d,KAAAsE,QACAtE,MAAAsE,SAAAmZ,QAAAzd,MAGA2d,EAAAna,SAAAxD,UAEAA,MAAAod,iBAAA,GA2FA,QAAAtb,GAAAE,GACAf,EAAAV,KAAAP,KAAAgC,GAqGA,QAAAmD,GAAAnD,GACAA,EAAAyC,OACAzE,KAAAyE,KAAAzC,EAAAyC,MAEA3C,EAAAhB,MAAAd,KAAAyF,WAmBA,QAAAD,GAAAxD,GACAA,EAAAyC,OACAzE,KAAAyE,KAAAzC,EAAAyC,MAEA3C,EAAAhB,MAAAd,KAAAyF,WASA,QAAAjB,GAAAxC,GACAA,EAAAC,SAAA,WAAAD,EAAAC,QAAA0C,SAAA,UAAA3C,EAAAyC,OAEAzE,KAAA0F,aAAA1F,KAAA8E,yBAEAU,EAAA1E,MAAAd,KAAAyF,WAiCA,QAAAe,GAAAxE,GACAA,EAAAyC,OACAzE,KAAAyE,KAAAzC,EAAAyC,MAEA3C,EAAAhB,MAAAd,KAAAyF,WASA,QAAAmY,GAAA5b,GACAF,EAAAhB,MAAAd,KAAAyF,WAaA,QAAApB,GAAArC,GACAhC,KAAA+Q,SAAA/O,EAAA+O,SACA/Q,KAAAmE,SAAAnC,EAAAmC,SACArC,EAAAhB,MAAAd,KAAAyF,WAwCA,QAAAsC,GAAA/F,GACAA,EAAAuF,OACAvH,KAAAuH,KAAAvF,EAAAuF,MAEAzF,EAAAhB,MAAAd,KAAAyF,WA8GA,QAAAoY,GAAA5b,GAEA,GAAAA,EAAAqM,gBAEA,OADAG,GAAAxM,EAAAqM,gBACAtL,EAAA,EAAiBA,EAAAyL,EAAA5L,OAAsBG,IAAA,CACvC,GAAAoB,GAAAqK,EAAAzL,EACAoB,GAAAE,SAAAwZ,aAAA1Z,IAtgBA,GACA2Z,GACA7E,EACAyC,GAHA,mBAAA3L,wBAIAgO,EAAA,EACA/D,EAAA3Y,EAAA2Y,sBACAxR,EAAApH,EAAAoH,OAghBA,OAtdAxH,GAAA4D,WACAoB,YAAAhF,EACAgd,QAAA,EACAza,UAAA,EACA4Z,gBAAA,WACA,SAAAtZ,OAAA,iEAEAyZ,QAAA,SAAAW,EAAAC,EAAAtG,GACA,IAAA7X,KAAAoe,eACAvG,GAAA7X,KAAAqe,eAAAxG,IAAA,CAEA7X,KAAAoe,aAAA,EACApe,KAAAse,iBACAte,KAAAse,eAAAC,YAAA,EACAve,KAAAse,eAAA,KAEA,IAAAla,GAAApE,IACAia,GAAA,WACA8D,EAAA,KACA3Z,EAAAgZ,gBAAAhZ,EAAAkZ,kBAKAkB,cAAA/V,EAAA5D,UAAA2Z,cACAC,WAAA,aAGAC,WAAA,WACA,UAAAjW,GAAAzI,KAAAiC,UAAA,KAEA0c,UAAA,SAAA9G,EAAA8F,GACA3d,KAAA4e,SAAAjB,IAEAiB,SAAA,SAAAjB,GACA3d,KAAAsE,WAAAqZ,IACA3d,KAAA2d,mBAGAhG,kBAAA,SAAApO,GACA,MAAAd,GAAA5D,UAAA8S,kBAAApX,KAAAP,KAAAuJ,IAGA4N,QAAA,SAAA5N,GACA,MAAAvJ,MAAA2d,eAAAlV,EAAA5D,UAAAsS,QAAA5W,KAAAP,KAAAuJ,IAKAwO,MAAA,aAGAsG,eAAA,SAAAxG,GACA,UAEAgH,kBAAA,SAAA5c,GACA8b,IACAA,EAAA,GAAAvT,SAAA,oBAEA,IAAAsU,GAAAf,EAAAtT,IAAAxI,EACA8b,GAAApT,IAAA1I,EAAA6c,MACAA,EAAAze,MACAye,EAAAze,KAAA,GAEA6Y,IACA5X,EAAAyd,UAAAC,cACA9F,GAAA,EAEA,IAAA9U,GAAApE,IACA2b,GAAArE,KAAA,WACAlT,EAAAga,aAAA,EACAha,EAAA6a,cAAAhd,MAGAid,MAAA,WACA,MAAAlf,MAAAK,KAAAL,KAAAK,GAAA2d,MAEAtP,KAAA,WACA,GAAAiP,GAAA3d,KAAA2d,gBAAA3d,KAAAsE,QACAqZ,GAAAG,aAAA9d,QAGAwB,OAAAG,eAAAV,EAAA4D,UAAA,WACA4F,IAAA,WACA,MAAAzK,MAAAiC,WAOAH,EAAA+C,UAAArD,OAAAC,OAAAR,EAAA4D,WACA/C,EAAA+C,UAAAwY,aAAA,SAAApb,GACA,MAAA+N,UAAAV,KAAAC,SAAAtN,IAEAH,EAAA+C,UAAAsa,WAAA,WACA,MAAAnf,MAAAiC,SAEAH,EAAA+C,UAAAuY,gBAAA,SAAAgC,EAAAnd,GACA,IAAAA,GAAAjC,KAAAoN,SAAA,CACA,GAAAA,GAAApN,KAAAoN,QACA,KAAAA,EAAAvK,OAAA,CACA,IAAA7C,KAAA6K,SAGA,SAAA/G,OAAA,sDAEA,aAJAsJ,EAAA4C,SAAAiE,iBAAAjU,KAAA6K;CAMA,OAAA7H,GAAA,EAAAC,EAAAmK,EAAAvK,OAAsCG,EAAAC,EAAOD,IAC7ChD,KAAAod,gBAAAgC,EAAAhS,EAAApK,QAEG,CACH,GAAAqc,GAAApd,GAAAjC,KAAAiC,OAEA,IAAAmd,GAAApf,KAAAqd,aAAAgC,GAEArf,KAAAif,cAAAI,OACI,CACJ,GAAAhf,GAAAL,KAAAkf,QACAzQ,EAAA4Q,EAAAC,eACA7Q,KACAA,EAAA4Q,EAAAC,mBACAD,EAAA7T,WAAA,sBAEAiD,EAAApO,KACAoO,EAAApO,GAAAL,SAKA8B,EAAA+C,UAAA0a,WAAA,SAAAtd,GACAjC,KAAA6K,SACA5I,EAAAqd,iBAAAtf,MAEAA,KAAAoN,SAAAkK,KAAArV,GAGAjC,KAAAif,cAAAhd,IAEAH,EAAA+C,UAAAoa,cAAA,SAAAhd,GAEA,GADAjC,KAAAoe,aAAA,EACApe,KAAAwf,YAGA,MAFAxf,MAAAyf,SAAA,MACAzf,MAAA0F,aAAA3E,OAAAkB,EAGA,IAAAyd,GACAtb,EAAApE,KACAse,EAAAte,KAAAwe,cAAA,WACA,MAAApa,GAAAE,SAAAyV,QAEAuE,GAAAvE,KAAA,SAAA7X,GACAwd,GAAA,EACApB,EAAAC,aACAD,IAAAla,EAAAka,iBACAla,EAAAka,eAAA,MAEAla,EAAAuZ,gBAAAvZ,EAAAuZ,iBAAAvZ,EAAAE,UACAF,EAAAuZ,eAAAG,aAAA1Z,GAEAA,EAAAoa,cAAA,WACApa,EAAAE,SAAAd,SAAAY,MAEArD,SAAAmB,GAAAkC,EAAAqb,WACArb,EAAAqb,SAAA,EACArb,EAAAsB,aAAAxD,EAAAD,MAGG,SAAAqW,GACH5L,QAAA4L,MAAA,kBAAAlU,EAAAkU,KAEAoH,IAEA1f,KAAAwe,cAAA,WACApa,EAAAuZ,eAAAvZ,EAAAE,SAAAd,SAAAY,KAEApE,KAAAse,iBACAte,KAAA2f,eAEA3f,KAAA2f,cAAArB,EAAArc,KAIAH,EAAA+C,UAAAa,aAAA,SAAA+J,EAAAxN,GACA,SAAA6B,OAAA,+CAEA7C,aACAA,EAAAa,kBAQAqD,EAAAN,UAAArD,OAAAC,OAAAK,EAAA+C,WACAM,EAAAN,UAAAE,KAAA,oBACAI,EAAAN,UAAAa,aAAA,SAAA+J,EAAAxN,GACA,iBAAAwN,IAAA,MAAAA,EAEAA,EACAxN,EAAAmD,aAAApF,KAAAyE,KAAA,IAEAxC,EAAA2d,gBAAA5f,KAAAyE,MAIAxC,EAAAmD,aAAApF,KAAAyE,KAAAgL,IAGAxO,EAAAkE,oBAQAK,EAAAX,UAAArD,OAAAC,OAAAK,EAAA+C,WACAW,EAAAX,UAAAE,KAAA,mBACAS,EAAAX,UAAAa,aAAA,SAAA+J,EAAAxN,GACAA,EAAAjC,KAAAyE,MAAAgL,GAEAxO,EAAAuE,mBASAhB,EAAAK,UAAArD,OAAAC,OAAA+D,EAAAX,WACAL,EAAAK,UAAAE,KAAA,wBACAP,EAAAK,UAAAa,aAAA,SAAA+J,EAAAxN,IACA,MAAAwN,GAAA,WAAAxN,EAAA8C,MAAAC,MAAAyK,MACAA,EAAA,GAEA,IAAAoQ,GAAA5d,EAAAjC,KAAAyE,KACA,iBAAAob,IAAA,gBAAApQ,KACAA,EAAA,MAAAA,EAAA,GAAAqQ,OAAArQ,IAEAoQ,GAAApQ,IACAxN,EAAAjC,KAAAyE,MAAAgL,IAGAjL,EAAAK,UAAAC,wBAAA,SAAA2K,EAAAxN,GACAA,EAAAC,MAAAuN,EACAxN,EAAAC,OAAAuN,GAAAxN,EAAAC,MAUAD,EAAA8d,cAAAhf,QARAkB,EAAA8d,cAAAtQ,EACAnO,EAAA+G,SAAA,WACApG,EAAA8d,gBACA9d,EAAAC,MAAAD,EAAA8d,cACA9d,EAAA8d,cAAAhf,YAOAE,EAAAuD,wBAQAgC,EAAA3B,UAAArD,OAAAC,OAAAK,EAAA+C,WACA2B,EAAA3B,UAAAE,KAAA,gBACAyB,EAAA3B,UAAAa,aAAA,SAAA+J,EAAAxN,GACAA,EAAAG,MAAApC,KAAAyE,MAAAgL,GAEAxO,EAAAuF,gBAKAoX,EAAA/Y,UAAArD,OAAAC,OAAAK,EAAA+C,WACA+Y,EAAA/Y,UAAAE,KAAA,kBACA6Y,EAAA/Y,UAAAa,aAAA,SAAA+J,EAAAxN,GACAA,EAAA+d,UAAA,GACAjf,SAAA0O,IACAA,EAAA,IAEAxN,EAAAoB,YAAA2M,SAAAjM,eAAA0L,KAEAxO,EAAA2c,kBAOAvZ,EAAAQ,UAAArD,OAAAC,OAAAK,EAAA+C,WACAR,EAAAQ,UAAAE,KAAA,eACAV,EAAAQ,UAAA0Y,QAAA,SAAAW,EAAArG,GACA7X,KAAAigB,YACA,YAAA/B,EAAAnZ,MACA/E,KAAAigB,WAAA,EACAjgB,KAAAwf,aAAA,IAEAxf,KAAAkgB,UAAAlgB,KAAAkgB,aAAA5I,KAAA4G,IAGApc,EAAA+C,UAAA0Y,QAAAhd,KAAAP,KAAAke,EAAArG,IAEAxT,EAAAQ,UAAAa,aAAA,SAAA+J,EAAAxN,GACA,MAAAwN,IACAA,EAAA,IAEAA,EAAAhO,SACAgO,IAAAhO,QAA+Be,OAAAP,KAE/BwN,EAAA5L,UACA7D,KAAAmE,UAAAnE,KAAAmE,SAAA4J,YAAA9L,EAEAA,EAAAke,aAAA1Q,EAAAzP,KAAAmE,UAEAlC,EAAAoB,YAAAoM,GAEAzP,KAAAmE,SAAAsL,GACGA,YAAA7L,QACH5D,KAAA0F,aAAAqC,EAAAlD,UAAAa,aACA1F,KAAAwf,aAAA,EACAxf,KAAA0F,aAAA+J,EAAAxN,KAEAjC,KAAAmE,UAAAlC,EAAAme,WAAApgB,KAAA+Q,WAAAsP,UAAA5Q,GAGAxO,EAAAoD,eAQA0D,EAAAlD,UAAArD,OAAAC,OAAAK,EAAA+C,WACAkD,EAAAlD,UAAA0Y,QAAA,SAAAW,EAAArG,GACA7X,KAAAigB,YACA,YAAA/B,EAAAnZ,MACA/E,KAAAigB,WAAA,EACAjgB,KAAAwf,aAAA,IAEAxf,KAAAkgB,UAAAlgB,KAAAkgB,aAAA5I,KAAA4G,IAGApc,EAAA+C,UAAA0Y,QAAAhd,KAAAP,KAAAke,EAAArG,IAEA9P,EAAAlD,UAAAE,KAAA,eACAgD,EAAAlD,UAAAa,aAAA,SAAA+J,EAAAxN,GAuDA,QAAAqe,GAAArY,GACA,GAAAC,EASA,OARAX,GAAA9F,OACAyG,EAAAX,EAAA9F,QAAgCe,OAAA6c,EAAAvX,MAAAG,KAEhCC,EAAAX,EAAAU,EAAAoX,GACAnX,EAAAzG,SACAyG,IAAAzG,QAAyCe,OAAA6c,EAAAvX,MAAAG,MAGzCC,EAhEA,GAAAxF,GACA6E,EAAAvH,KAAAuH,MAAA,SAAAU,GACA,MAAAA,IAEAoX,EAAArf,KAAAiC,QACAmC,EAAApE,IACA,IAAAA,KAAAigB,UAkBG,CACH,GAAAM,GAAAvgB,KAAAugB,cACAL,EAAAlgB,KAAAkgB,OACAxd,GAAA2c,EACAa,EAAAlY,QAAA,SAAAmV,GACA,eAAAA,EAAApY,KAAA,CACAX,EAAA6b,WAAA,CACA,QAAAjd,GAAA,EAAAC,EAAAsd,EAAA1d,OAA8CG,EAAAC,EAAOD,IACrDqc,EAAAmB,YAAAD,EAAAvd,GAEAoB,GAAAsB,mBAMA,IAJAyX,EAAAsD,mBACApB,EAAAmB,YAAAD,EAAApD,EAAAsD,gBACAF,EAAAjF,OAAA6B,EAAAsD,cAAA,IAEAtD,EAAAuD,SAAA,CACA,GAAAC,GAAAJ,EAAApD,EAAAuD,OACAE,EAAA3f,EAAAkL,OAAAkT,EAAAiB,EAAAnD,EAAAjb,OACAye,IACAtB,EAAArb,aAAA4c,EAAAD,GACAJ,EAAAjF,OAAA6B,EAAAuD,MAAA,EAAAE,IAEAL,EAAAjJ,KAAAsJ,MAKA5gB,KAAAkgB,eA9CA,CACAlgB,KAAAigB,WAAA,EACAjgB,KAAAwf,aAAA,EACAvd,EAAA+d,UAAA,EACA,IAAAO,GAAAvgB,KAAAugB,gBACAhZ,GAAAC,cACAD,EAAAC,eAEAiI,GACAA,EAAAzH,QAAA,SAAAC,GACAsY,EAAAjJ,KAAArW,EAAAkL,OAAAkT,EAAAiB,EAAArY,MAGA,IAAA0V,GAAA3d,KAAA2d,gBAAA3d,KAAAsE,QACAqZ,GAAAna,SAAAxD,QA+CAiB,EAAA8G,eAEA9G,EAAA4f,cAAA,SAAAC,GACA7G,EAAA,WACA8D,EAAA,IACA,IAAA3Q,MAAA3G,MAAAlG,KAAAugB,EAAAC,uBAAA,qBACA,IAAAD,EAAAtV,UAAAoN,QAAA,wBACA,GAAAoI,IAAAF,EACAE,GAAA1J,KAAAxW,MAAAkgB,EAAA5T,GACAA,EAAA4T,EAEA,OAAAhe,GAAA,EAAAC,EAAAmK,EAAAvK,OAAuCG,EAAAC,EAAOD,IAAA,CAC9C,GAAAf,GAAAmL,EAAApK,GACAyL,EAAAxM,EAAAqd,eACA,IAAA7Q,EAAA,CACAxM,EAAAqd,gBAAA,KAEArd,EAAAuJ,UAAAvJ,EAAAuJ,UAAAuE,QAAA,+BACA,QAAA1P,KAAAoO,GAAA,CACA,GAAArK,GAAAqK,EAAApO,EACA+D,GAAA6a,cAAAhd,SAiBAhB,EAAA4c,iBAAA,SAAA5b,EAAAgf,GACAA,GACApD,EAAA5b,EAGA,QADAQ,GAAAR,EAAAif,qBAAA,KACAle,EAAA,EAAAC,EAAAR,EAAAI,OAAqCG,EAAAC,EAAOD,IAAA,CAC5C,GAAAG,GAAAV,EAAAO,EACAG,GAAAmL,iBACAuP,EAAA1a,KAIAlC,KLkjEM,SAASpB,EAAQD,EAASM,GM5kFhC,GAAAS,GAAAC,EAAAC,GAAA,SAAAnB,EAAAC,GACAiB,GAAAV,EAAA,IAAAS,EAAA,EAAAE,EAAA,kBAAAF,KAAAG,MAAAlB,EAAAgB,GAAAD,IAAAI,SAAAF,IAAAhB,EAAAD,QAAAiB,KAEEb,KAAA,SAAAsB,GA0BF,QAAAmb,GAAAva,EAAA+W,EAAAkD,GACA,MAAAja,MAAA6X,KACA7X,EAAA6X,KAAAd,EAAAkD,GAEAlD,EAAA/W,GAEA,QAAAif,GAAAjf,EAAA+W,GACA,MAAA/W,MAAA6X,OAAA7X,EAAAsB,SACAtB,EAAA6X,KAAAd,GAEAA,EAAA/W,GAGA,QAAAuG,GAAAyF,EAAA1K,GACAxD,KAAAkO,UACA1K,IACAxD,KAAAwD,YAEAxD,KAAAohB,WAkHA,QAAAC,GAAA3I,EAAAxK,GACAlO,KAAAkO,UACAlO,KAAA0Y,WAUA,QAAA4I,GAAApf,EAAAwW,GACA,GAAA0C,GAAAmG,EAAA9W,IAAAvI,GACA7B,EAAAqY,EAAA8I,aAAA9I,EAAA8I,WAAA,IAAAA,IACApG,GACAA,EAAA/a,KAAAU,IACAqa,EAAA/a,GAAA+a,EAAA9D,KAAAoB,GAAA,IAGA6I,EAAA5W,IAAAzI,EAAAkZ,GAAA1C,IACA0C,EAAA/a,GAAA,EACAkJ,EAAAkY,oBACAzK,QAAA9U,IAGAwW,EAAAgJ,kBAAAxf,EAEA,QAAAyf,GAAAjJ,GACA,GAAAA,EAAAgJ,kBAAA,CACA,GAAAxf,GAAAwW,EAAAgJ,iBACAhJ,GAAAgJ,kBAAA,IACA,IAAAtG,GAAAmG,EAAA9W,IAAAvI,EACA,IAAAkZ,EAAA,CACA,GAAAsF,GAAAtF,EAAA1C,EAAA8I,WACAd,QACAtF,EAAAE,OAAAoF,EAAA,SACAtF,GAAA1C,EAAA8I,eAMA,QAAAI,KACA5hB,KAAA6hB,QAAA,GAAAC,KAIA,QAAAC,GAAA5f,EAAA6f,EAAAxf,GACAxC,KAAAmC,MACAnC,KAAAgiB,aACAhiB,KAAAwC,SACAxC,KAAA6hB,QAAAG,EAAAH,QAIA,QAAAI,GAAAC,GACAliB,KAAA6hB,QAAA,GAAAC,IACA,QAAA3f,KAAA+f,GACAliB,KAAAmC,GAAA+f,EAAA/f,GAIA,QAAAggB,GAAAD,GACAliB,KAAA6hB,QAAA,GAAAC,IACA,QAAA3f,KAAA+f,GACAliB,KAAAmC,GAAA+f,EAAA/f,GAKA,QAAAigB,GAAA9d,EAAAwB,EAAAmT,GACA3U,IAAAwB,GACAsc,EAAA9d,IAAA+d,YAAApJ,EAEA,QAAA9W,KAAA2D,GAAA,CACA,GAAAoF,GAAApF,EAAA3D,EACA,IAAA+I,KAAA1I,QAAA8B,IACA4G,EAAAoX,kBACArJ,EAAA/N,EAAAoX,kBAEApX,EAAAqX,mBAAA,CACA,GAAAC,GAAAtX,EAAAmX,WACAG,IACAJ,EAAAlX,IAAA+N,KAOA,QAAAwJ,GAAAne,EAAA4V,EAAAjB,GACA,GAAAe,EAkCA,OAjCAE,GAAAH,KAAA,SAAA7X,GACA,GAAA8X,KAAA,EAEAA,GAAA,MACI,IAAA1V,EAAA4V,YAKJ,MAHA5V,GAAA4V,QAAA,KAKAjB,EACAA,EAAA/W,GAEAoC,EAAApC,SAEG,SAAAoW,GACH,GAAA0B,KAAA,EAEAA,GAAA,MACI,IAAA1V,EAAA4V,YAKJ,MAHA5V,GAAA4V,QAAA,KAKA5V,EAAAgU,UAEA0B,IACAA,GAAA,EACA1V,EAAA4V,WAEAA,EAGA,QAAA3Q,GAAArH,GACA,MAAAlC,gBAAAuJ,QAEArH,IAAAnB,IACAmB,KAAA6X,OAAA7X,EAAAsB,SACAif,EAAAziB,KAAAkC,GAEAlC,KAAAkC,UAIAqH,UAAArH,GA29BA,QAAAwgB,GAAApe,EAAA2U,GAEA,MAAAwD,GAAAnY,EAAAqe,aAAAre,EAAAmZ,UAAA,SAAAmF,GACAA,GACAte,EAAA8B,IAAAwc,KAEA,IAAAC,GAAA5J,EAAA1Y,KAAA+D,EAAAse,EAEA,OADAte,GAAAwe,gBACAD,IAIA,QAAAE,GAAAze,EAAA0e,EAAAC,EAAAC,GACA,GAAAC,GAAAH,EAAAngB,MAEA,IAAAsgB,EAAA,GAEA,OADAC,GACApgB,EAAAkgB,EAAAC,EAAyCngB,EAAAigB,GAAmB,CAC5D,GAAAG,GAAA9e,IAAAtB,EACAogB,KACA9e,EAAAtB,GAAAjC,EACAqiB,EAAAjhB,KAAAghB,EACA7e,EAAA8e,EAAAjhB,KAAAihB,GAIA,OAAApgB,GAAA,EAAAC,EAAA+f,EAAAngB,OAAoCG,EAAAC,EAAOD,IAC3CsB,EAAAiZ,QAAA,GAAA0E,IACA/f,MAAA8gB,EAAAhgB,GACA0d,MAAA1d,EAAAigB,EACAI,SAAA/e,IACKA,IAKL,QAAAgf,GAAAhf,EAAAwL,EAAAmT,EAAAM,EAAAL,GAEA,GACAE,GADApgB,EAAAigB,EAAAM,CAEA,IAAAA,EAAA,GACA,OAAAvgB,GAAAigB,EAAAM,EAA6CvgB,EAAAkgB,EAAAK,EAAgCvgB,IAAA,CAC7E,GAAAogB,GAAA9e,EAAAtB,EACAogB,KACA9e,EAAAtB,GAAAjC,EACAqiB,EAAAjhB,KAAAohB,EACAjf,EAAA8e,EAAAjhB,KAAAihB,GAIA,OAAApgB,GAAA,EAAkBA,EAAAugB,EAAkBvgB,IACpCsB,EAAAiZ,QAAA,GAAA4E,IACA1B,cAAAwC,EACApD,SAAA/P,EAAA9M,GACAqgB,SAAA/e,IACKA,EAELA,GAAAwe,cAAAxe,EAAA2Z,SAsZA,QAAAuF,GAAAZ,GACA,IAAAA,EACA,QAEA,IAAAA,EAAA/f,UACA,MAAA+f,EAEA,IAAAa,KAMA,OALAb,GAAA5a,SACA4a,EAAA5a,QAAA,SAAAC,GACAwb,EAAAnM,KAAArP,KAGAwb,EA0IA,QAAAC,GAAAzV,EAAA/L,EAAAyhB,GACA,MAAA1V,aAAA1E,OACAA,GAAAhJ,KAAA0N,EAAA/L,GAEAyhB,UAAAzhB,GAIA,QAAA0hB,GAAA9P,GAEA,GAAAsH,GAAAmG,EAAA9W,IAAAqJ,EACA,IAAAsH,EACA,OAAApY,GAAA,EAAAC,EAAAmY,EAAAvY,OAAwCG,EAAAC,EAAOD,IAC/CoY,EAAApY,GAAA6gB,gBAAA,KAAA/P,GAWA,QAAAgQ,GAAAlB,EAAAmB,GAGA,GAAAnB,YAAAhf,OAIA,MAHAgf,GAAA/f,OAAA,IAGA+f,EAAA/f,OAAA,qBAAAkhB,GAEA,GAAAC,IAAApB,EAAA,qBAAAmB,KAAAE,GAAArB,GAEA,GAAAsB,OAGA,IAAAze,UAAA5C,OAAA,EAEA,UAAAmhB,IAAAve,UAAA,GAAAwe,GAAAxe,WAAA0e,GAAAD,GAEA,oBAAAtB,GAAA,CAEA,GAAAwB,MACAC,IACA,QAAAliB,KAAAygB,GACAwB,EAAA9M,KAAAnV,GACAkiB,EAAA/M,KAAAsL,EAAAzgB,GAEA,WAAAoH,GAAA,SAAAsZ,GAEA,OADAyB,MACAthB,EAAA,EAAmBA,EAAA6f,EAAAhgB,OAAoBG,IACvCshB,EAAAF,EAAAphB,IAAA6f,EAAA7f,EAEA,OAAAshB,KACIxjB,MAAA,KAAAujB,GAEJ,SAAA3a,WAAA,kCAGA,QAAAvD,GAAAwH,EAAA4W,GAEA,GAAAvZ,GAAAhL,KAAAgL,eAAAhL,KAAAgL,aAAA,GAAAR,GAIA,OADAQ,GAAAL,IAAAgD,EAAA4W,GAAA,WAA4D,UAAA5W,KAC5D3N,KAEA,QAAAwkB,KAGA,OAFA3f,GAAA7E,KAAA6E,UACA4f,EAAAjjB,OAAA0I,oBAAArF,GACA7B,EAAA,EAAAC,EAAAwhB,EAAA5hB,OAA2CG,EAAAC,EAAOD,IAAA,CAClD,GAAAyB,GAAAggB,EAAAzhB,EACAxB,QAAAG,eAAA3B,KAAAyE,EAAAigB,EAAAljB,OAAAI,yBAAAiD,EAAAJ,KAAAzE,QAGA,QAAA0kB,GAAA3O,EAAAtR,EAAAmF,GACA,wBAAAmM,GAAA7T,OAEAA,MAAAyiB,EAAA/a,EAAAnF,IAGAsR,EAGA,QAAA4O,GAAA/a,EAAAnF,GAIA,GAAAmgB,GAAAhb,EAAAnF,GAAA,WACA,GAAAwJ,GAAArE,SAAA5J,KACA,OAAAiO,GAAAxJ,GAAA3D,MAAAmN,EAAAxI,WAQA,OANAmf,UAAA,SAAA/M,GACA,GAAA5J,GAAArE,SAAAiO,EACA,mBACA,MAAA5J,GAAAxJ,GAAA3D,MAAAmN,EAAAxI,aAGAmf,EAeA,QAAAC,GAAAjb,EAAAiO,GACA,IAAAA,EACA,MAAAjO,GAAA8N,eAEA,IAAAzJ,GAAA4J,EAAAV,QAAAvN,EAKA,OAJAiO,GAAA/J,cACA+J,EAAA/J,YAAA,GAAAgX,MAEAjN,EAAA/J,YAAAnD,IAAAf,EAAAqE,GACAA,EA2HA,QAAA8W,MAmBA,QAAAC,MAmBA,QAAAC,GAAA/iB,GACA,MAAAwhB,GAAA1jB,KAAA,gBAAAkC,KAAA4d,OAAA5d,GAAA+iB,GAGA,QAAAC,GAAAhjB,GACA,MAAAwhB,GAAA1jB,KAAA,gBAAAkC,KAAAijB,OAAAjjB,GAAAgjB,GAwBA,QAAAE,GAAAljB,GACA,MAAAwhB,GAAA1jB,KAAA,gBAAAkC,KAAAmjB,QAAAnjB,GAAAkjB,GAIA,QAAAE,GAAApjB,GACA,MAAAwhB,GAAA1jB,KAAAkC,YAAA0B,OAAA,GAAAke,KAAA5f,KAAAojB,GAcA,QAAAC,GAAArjB,GACA,MAAAwhB,GAAA1jB,KAAA,gBAAAkC,KAAA,GAAAsjB,MAAAtjB,GAAAqjB,GAuBA,QAAAE,GAAA9B,GACA,mBAAAA,GACA,MAAA+B,IAAA/B,EACG,oBAAAA,GAAA,CACH,GAAAA,YAAA/f,OACA,MAAAsgB,IAAAyB,GAAAF,EAAA9B,EAAA,IAEA,IAAAiC,KACA,QAAAzjB,KAAAwhB,GACAiC,EAAAzjB,GAAAsjB,EAAA9B,EAAAxhB,GAEA,OAAAoH,WAAAqc,GAEA,MAAAjC,GAoCA,QAAAkC,GAAApY,EAAAtL,GACA,GAAAwhB,GAAAmC,QAAAC,YAAA,cAAAtY,EAAAtL,EACAuK,SAAAsZ,IAAA,OAAArC,GACAA,EAAAngB,WACAmgB,EAAAsC,GAAAxb,IAAAkZ,IAAApa,GAEA/H,OAAAG,eAAA8L,EAAAtL,GACAsI,IAAA,WACA,MAAAob,GAAApb,IAAAzK,KAAAmC,EAAAwhB,IAEAhZ,IAAA,SAAAzI,GACA2jB,EAAAlb,IAAA3K,KAAAmC,EAAAD,IAEAyE,YAAA,IAiEA,QAAAuf,GAAAtB,EAAA3e,EAAAH,EAAAqgB,GACA,GAAAC,GAAA9kB,EAAAiE,QAAA4gB,IAAAhC,GAAAkC,OAAApgB,EAAAH,EACAsgB,GAAAvhB,UAAA+f,SAAAwB,EAAAvhB,UAAA+f,UACApjB,OAAAG,eAAAykB,EAAAvhB,UAAA,cAAmE3C,OAAA,IACnEgiB,GAAAU,GAAAV,GAAArf,UAAA+f,GAAA,WACA,GAAA/B,GAAA,GAAAuD,GAAApmB,KAGA,OAFA6iB,GAAAlP,OAAA3T,KACA6iB,EAAApd,oBACAod,GAv1EA,GAEAhL,GAKA9W,EAPA2H,KACA4d,KAEA9b,EAAAlJ,EAAAkJ,QACAO,EAAAvJ,OAAAuJ,gBAAA,SAAAkG,EAAAC,GAAuED,EAAAX,UAAAY,GACvElH,EAAAxI,OAAAwI,gBAAA,SAAAiH,GAAgE,MAAAA,GAAAX,WAChE9G,EAAAlI,EAAAkI,YAGA+c,EAAA,EACAC,EAAA,EACAC,KAEAlF,EAAA,GAAA/W,GAAA,6BAEAkc,GADA,GAAAlc,GACAgb,KAAAmB,OAQAnF,GANAlgB,EAAAiE,QAAAiF,EAAA,cAEAqZ,gBAAA,SAAA1Z,GACAnK,KAAAsE,SAAAuf,gBAAA1Z,EAAAyc,iBAAA5mB,UAGA,EAsBAyI,GAAA5D,WACAoB,YAAAwC,EACAiW,WAAA,SAAApa,GACA,UAAAmE,GAAAzI,KAAAkO,QAAAlO,KAAAwD,WAEAgb,cAAA,SAAAqI,GACA,GAAAC,GAAAjP,CACA,KAEA,MADAA,GAAA7X,KACA6mB,IACI,QACJhP,EAAAiP,IAIA7I,QAAA,EACArP,QAAA,aAGAmY,cAAA,SAAAziB,EAAA0iB,GAGA,GAAArJ,EACA,IAAA3d,KAAAuX,gBAAA,CACA,GAAA0P,GAAA3iB,EAAAsT,cAAAtT,EAAAsT,YAAA,GAAApN,GAEA,IADAmT,EAAAsJ,EAAAxc,IAAAzK,KAAAuX,kBACAoG,EAAA,CACAsJ,EAAAtc,IAAA3K,KAAAuX,gBAAAoG,EAAAnc,OAAAC,OAAA6C,IACAqZ,EAAAvC,WAAA,EACAuC,EAAA9F,QAAA7X,IAEA,QADAohB,GAAAphB,KAAAohB,QACApe,EAAA,EAAAC,EAAAme,EAAAve,OAAwCG,EAAAC,EAAOD,IAC/C2a,EAAAyD,EAAApe,IAAAoe,IAAApe,GAGAhD,KAAA2d,iBAEAqJ,GACAA,EAAAjP,MAAA/X,UAGA2d,GAAArZ,CAKA,OAAAqZ,IAEAc,WAAA,SAAAR,GAgBA,GAAAjZ,MAAAiZ,GACA,SAAAna,OAAA,cAEA,OAAA9D,MAAAie,QAAAiJ,KAAAC,IAAAnnB,KAAAie,YAEAlG,MAAA,SAAAC,GACAhY,KAAAuX,kBACAvX,KAAAuX,gBAAAS,EAAAT,kBAGAJ,QAAA,SAAA5N,GAEA,GAEAkO,GAFAvJ,EAAAlO,KAAAkO,QACAsJ,EAAAtJ,EAAAjI,YAAA+E,YAEA,IAAAwM,EAAA,CACAxX,KAAAuX,kBACAvX,KAAAuX,gBAAArJ,EAEA,IAAAJ,GAAA0J,EAAA/M,IAAAlB,EACA,IAAAuE,EAKA,MAJA2J,GAAA3J,EAAArD,IAAAyD,GACAuJ,GACA3J,EAAAnD,IAAAuD,EAAAuJ,EAAA3J,EAAAF,eAAAE,EAAAF,eAAAM,GAAA,GAAA3E,IAEAkO,EAIA,MAAAlO,GAAAmO,iBAEAC,kBAAA,SAAArT,GACA,IAAAtE,KAAAkO,QAEA,MAAA5J,EAGA,IAAA2J,GAAA3J,EAAAsT,aAAA5X,KAAAkO,SAAA5J,EAAAsT,YAAAnN,IAAAzK,KAAAkO,QACA,OAAAD,MAAA4J,SAAA5J,EAAA4J,QAAAC,QAAA9X,MACAiO,EADA,QAIA6J,QAAA,SAAAD,GAEA,MAAAA,GAAA3J,UAAAlO,KAAAkO,UAQAmT,EAAAxc,UAAArD,OAAAC,OAAAgH,EAAA5D,WACAwc,EAAAxc,UAAAoB,YAAAob,EACAA,EAAAxc,UAAA+Z,SAAA,SAAAjB,GACAA,EAAAna,SAAAxD,KAAA0Y,UAGA,IAAAiE,GAAArb,EAAAqb,OAoCAiF,GAAA/c,UAAAE,KAAA,UAQAgd,EAAAld,UAAAE,KAAA,SAQAkd,EAAApd,UAAAE,KAAA,MAOAod,EAAAtd,UAAAE,KAAA,SA2EAwE,EAAA6d,eAAA,SAAAC,GACA,GAAAC,KAAA,GAAAxjB,QAAAwjB,OAAA,IAAAC,MAAA,UACAD,GAAA,gBAAAE,KAAAF,EAAA,KAAAA,EAAAG,QACAH,EAAA,qBAAAE,KAAAF,EAAA,KAAAA,EAAAG,OACA,IAAAC,GAAA1nB,KAAA2nB,YAAA3nB,KAAA2nB,WAAAD,YACA,IAAA1nB,KAAA2nB,YAAA3nB,KAAA2nB,WAAAC,gBAAA,CAEA,GAAAC,EACAP,GAAAQ,KAAA,SAAAD,GACAH,EAAAI,KAAA,SAAAC,GACA,MAAAA,MAAAP,KAAAK,OAEAA,EAAAP,EAAA,MAGA5a,QAAAsZ,IAAA,YAAAqB,EAAAW,QAAA,WAAAH,KAAA9X,QAAA,gBACG,CACH,GAAA2X,EAAA7kB,OAAA,CAGA,OADAklB,GADAE,KAEAjlB,EAAA,EAAmBA,EAAAskB,EAAAzkB,OAAkBG,IAAA,CACrC,GAAA6kB,GAAAP,EAAAtkB,EACA,IAAA+kB,EAAA,CACA,GAAAA,EAAAP,KAAAK,GAAA,QACAE,GAAA,KAGAL,EAAAI,KAAA,SAAAC,GACA,MAAAA,QAAAP,KAAAK,KAEAA,IAAA9X,QAAA,WACAgY,GACAE,EAAA3Q,KAAA,IAAAyQ,EAAAtjB,KAAA,KAAAojB,GACAE,QAEAE,EAAA3Q,KAAAuQ,GAGAP,EAAAW,EAEA,GAAAC,GAAAloB,KAAA2nB,YAAA3nB,KAAA2nB,WAAAO,WACAA,GACAxb,QAAAsZ,IAAA,YAAAqB,EAAAW,QAAA,WAAAV,GAEA5a,QAAAsZ,IAAA,YAAAqB,EAAAW,QAAA,eAAAV,EAAAa,KAAA,WAKA5e,EAAAoe,YACAD,WAAcjjB,KAAA,SAAAsjB,GAAA,eAAsCtjB,KAAA,UAAAsjB,GAAA,gDACpDG,aAAA,EAGA,IAAAE,GAAA7e,EAAA1E,WAEAwjB,oBACA,MAAAroB,MAAAyd,WAEA4K,kBAAAnmB,GACAlC,KAAAoG,IAAAlE,IAEA+D,YAAAsD,EACAkU,QAAA,WACA,MAAAzd,MAAAsoB,UAAA,EAAAtoB,KAAAuoB,UAAA,KAEAxO,KAAA,SAAAK,EAAAC,GACA,GAAA7R,GAAAxI,KAAAsoB,UAAA,EAAAtoB,KAAAuoB,WAIA,OAHA/f,MAAAuR,OACAvR,EAAA,GAAAlH,GAAA8W,YAAA5P,IAEA4R,GAAAC,EACA7R,EAAAuR,KAAAK,EAAAC,GAEA7R,GAEA+f,SAAA,SAAAC,EAAAC,EAAAC,GAIA,GAHA7Q,GACAA,EAAA4G,WAAAiK,EAAA1oB,KAAAie,QAAAiJ,KAAAC,IAAAnnB,KAAAie,SAAA,EAAAje,KAAA2oB,qBAAA,IAEA,MAAA3oB,KAAAmC,IAAA,CACA0V,GACA,MAAAA,EAAA+Q,kBAIA/Q,EAAA+Q,gBAAA7nB,EAGA,IAGA+S,GAHA3R,EAAAnC,KAAAmC,IAEAK,EAAAxC,KAAAwC,MAUA,IAJAsR,EAJAtR,EAAA+lB,SAIA/lB,EAAA+lB,SAAAC,EAAAC,GAAA,GAEAjmB,EAAAN,OAEAsmB,GAAA1U,KAAAiG,OAAAjG,EAAAtQ,SACA,MAAAiZ,GAAA3I,EAAA,SAAAA,GACA,GAAA5R,GAAA,MAAA4R,EAAA/S,EACA,kBAAA+S,GAAA5I,SAAA4I,EAAA5I,SAAA/I,GACA,kBAAA2R,GAAArJ,IAAAqJ,EAAArJ,IAAAtI,GAAA2R,EAAA3R,GAEAiZ,EAAAmG,EAAA9W,IAAAqJ,EAKA,OAJAsH,MAAAjF,UAAAiF,EAAAjF,SAAAsE,QACAW,EAAAjF,SAAAsE,OAAAtY,GAGAD,GAGA,IAAAA,GAAA,MAAA4R,EAAA/S,EACA,kBAAA+S,GAAA5I,SAAA4I,EAAA5I,SAAA/I,GACA,kBAAA2R,GAAArJ,IAAAqJ,EAAArJ,IAAAtI,GAAA2R,EAAA3R,GAEAiZ,EAAAmG,EAAA9W,IAAAqJ,EAKA,OAJAsH,MAAAjF,UAAAiF,EAAAjF,SAAAsE,QACAW,EAAAjF,SAAAsE,OAAAtY,GAGAD,EAEA,GAAAlC,KAAAka,QAAA,CACA,IAAAsO,EAKA,MAAAxoB,MAAAka,OAJArC,KACAA,EAAAgR,gBAAA,GAMA,GAAA3mB,GAAAlC,KAAAkC,KACA,OAAAA,KAAAnB,EACAf,KAAAkC,MACAumB,EAAAzoB,KAAAkC,MAAAZ,EAAA4b,SAAAld,iCAAAyd,WAAAzd,iBAEAsoB,SAAA,SAAAE,EAAAtmB,GACA,GAAA4mB,GAAA9oB,KAAAsiB,iBACAhe,EAAAtE,IACA,IAAA8oB,EAAA,CACA,GAAA5mB,IAAA4mB,EAEA,MAAAN,GAAAtmB,EAAAub,UAAAvb,EAAA6X,MAIAzV,GAAA8W,WACA0N,EAAAhL,aAAAxZ,GAEAA,EAAAge,iBAAA,KAWA,GATApgB,KAAAsB,WACAc,EAAAge,iBAAApgB,EACAoC,EAAA8W,WACAlZ,EAAAsB,SAAAc,GAEAkkB,IACAtmB,IAAAub,aAGA+K,GAAAtmB,KAAA6X,KAAA,CACA,GAAAgP,GAAAlR,CACA,OAAA3V,GAAA6X,KAAA,SAAA7X,GACA,MAAAA,MAAAsb,UACAuL,EACAA,EAAAvK,cAAA,WACA,MAAAjV,GAAA1E,UAAAyjB,SAAA/nB,KAAA+D,EAAAkkB,EAAAtmB,KAGAqH,EAAA1E,UAAAyjB,SAAA/nB,KAAA+D,EAAAkkB,EAAAtmB,GAGAA,IAGA,MAAAA,IAEA8mB,cAAAzf,EACA2B,SAAA,SAAA/I,EAAA6mB,GACA,GAAAC,GAAAjpB,KAAAmC,EAIA,IAHA8mB,KAAAzlB,WACAylB,EAAAjpB,KAAAqiB,aAAAriB,KAAAqiB,YAAAlgB,IAEA8mB,GAiBI,GAAAD,KACJC,YAAAD,IACA,SAAAtf,WAAA,yEAnBA,CAEA,GAAAE,GAAAof,CACApf,KACAA,EAAA5J,KAAAiG,YAAA9D,GACA,kBAAAyH,MAAAsf,kBACAtf,EAAA5J,KAAAgpB,gBAGAC,EAAA,GAAArf,GACAqf,EAAA9mB,MACA8mB,EAAAzmB,OAAAxC,KACAA,KAAAmC,KAAApB,EACAf,KAAAmC,GAAA8mB,GAEAjpB,KAAAqiB,cAAAriB,KAAAqiB,iBAAgDlgB,GAAA8mB,EAOhD,MAAAA,IAEA3X,MAAA,SAAApD,GAKA,MAJAA,MAAAT,SAAAS,EAAAjI,YAAA6D,cAEAoE,IAAAT,QAEAzN,KAAAwC,OACAxC,KAAAwC,OAAAxC,OAAAkO,GAAAhD,SAAAlL,KAAAmC,KAEA,GAAAgnB,IAAAnpB,KAAAkO,GAAAkb,KAEAC,aAAA,SAAAtkB,EAAA0K,GACA,GAAAtN,GAAAnC,KAAAmC,IACAK,EAAAxC,KAAAwC,MACA,KAAAA,EACA,MAAAxC,MAAAoG,IAAAqJ,EAAAoI,EAEA,IAAAvT,GAAAtE,KACA8T,EAAAtR,EAAA+lB,SAAA/lB,EAAA+lB,UAAA,SAAA/lB,EAAAN,KACA,UAAA4R,EAEAtR,EAAA4D,IAAA0N,EAAA,gBAAA3R,cACI,oBAAA2R,GAAA,CAEJ,GAAAwE,GAAA,GAAAxU,OAAA,qCAEA,MADAwU,GAAAgR,WAAA,EACAhR,EAGA,GAAAuH,GAAA,kBAAA/L,GAAArJ,IAAAqJ,EAAArJ,IAAAtI,GAAA2R,EAAA3R,EACA,IAAA0d,IAAApQ,GAAA,gBAAAA,GAEA,MAAA6W,EAEA,mBAAAxS,GAAAnJ,IACAmJ,EAAAnJ,IAAAxI,EAAAsN,GAEA1K,GAAAwhB,GAAA1G,KAAAzZ,MAAAqJ,KAAArJ,IAEAyZ,EAAAzZ,IAAAqJ,GAEAA,KAAAsK,OAAAtK,EAAAjM,SACAiM,EAAAgT,EAAAziB,KAAAyP,EAAA,SAAAvN,GACA4R,EAAA3R,GAAAD,IAGA4R,EAAA3R,GAAAsN,CAKA,IAAAlH,GAAA,GAAAqZ,EACArZ,GAAAsX,WACAtX,EAAAkF,OAAAnJ,EACAA,EAAAiZ,QAAAhV,EAAAjE,EAGA,IAAA8W,GAAAmG,EAAA9W,IAAAqJ,EAGA,IAAAsH,EAAA,CACAA,IAAA3U,MAAA,EACA,QAAAzD,GAAA,EAAAC,EAAAmY,EAAAvY,OAAyCG,EAAAC,EAAOD,IAAA,CAChD,GAAA0V,GAAA0C,EAAApY,EACA0V,KAAAlW,GAEAkW,EAAAmL,gBAAA1hB,EAAA2R,EAAA/O,IAIA,MAAA0K,IAGAoU,gBAAA,SAAA1Z,EAAA2J,EAAA/O,GACA/E,KAAAupB,kBACAvpB,KAAAupB,iBAAApf,EAAA2J,GAEA9T,KAAAud,QAAA,GAAAwE,GAAA5X,EAAA,GAAAyX,GAAA5hB,QAEAwpB,QAAA,SAAAvQ,GACA,OAAAjW,KAAAhD,MAAAqiB,YACApJ,EAAAjW,EAEA,QAAAA,KAAAhD,MACA,GAAAA,KAAA6J,eAAA7G,GAAA,CACA,GAAAd,GAAAlC,KAAAgD,EACAd,MAAAM,QAAAxC,MAAAkC,EAAAkZ,WACAnC,EAAAjW,KAKAlC,MAAA,SAAAmN,EAAAiU,GACA,UAAA8B,IAAA9B,EAAA,GAAAliB,KAAAkiB,IAEA3hB,KAAA,SAAA0N,GACA,MAAAjO,MAAAc,MAAAmN,EAAArK,MAAAiB,UAAA4B,MAAAlG,KAAAkF,UAAA,KAEAgkB,gBAAA,SAAAxQ,GACAjZ,KAAAsiB,kBACArJ,EAAAjZ,KAAAsiB,kBAEAtiB,KAAA0pB,mBACAtH,EAAApiB,UAAAiZ,GAEAjZ,KAAAwC,QACAyW,EAAAjZ,KAAAwC,SAGAmnB,KAAA,WACA,GACAC,GADAtlB,EAAAtE,KACAohB,IAQA,IAPAphB,KAAAypB,gBAAA,SAAAI,GACA,GAAAlM,GAAAkM,EAAArmB,SAAAc,EACAqZ,KAAAkM,IACAD,GAAA,GAEAxI,EAAA9J,KAAAqG,KAEAiM,EAAA,CACA,GAAAjM,GAAA,GAAAwL,GAIA,OAFAxL,GAAAyD,UACAzD,EAAAgM,OACAhM,EAQA,MALA,QAAA3d,KAAA0hB,mBAGA1hB,KAAAyd,UAEAzd,MAEAwO,QAAA,WACAxO,KAAAob,WAAA,CACA,IAAA0O,GAAA9pB,KAAA8pB,OACA,IAAAA,EACA,OAAA9mB,GAAA,EAAmBA,EAAA8mB,EAAAjnB,OAAoBG,IACvC8mB,EAAA9mB,GAAA+X,QAGA/a,MAAA8pB,QAAA,IACA,IACAxlB,IADAtE,KAAAsiB,iBACAtiB,KACAA,MAAAypB,gBAAA,SAAAI,GACAA,EAAA/L,aAAAxZ,MAIA2Z,QAAA,EACA0K,oBAAA,EAEAoB,cAAA,SAAA9L,GACAje,KAAAie,QAAAyI,EAAAQ,KAAAC,IAAA3B,KAAAmB,MAAAD,EAAA,IAGAsD,WAAA,WACA,MAAA9C,MAAAC,IAAAnnB,KAAAie,QACAje,KAAAsiB,kBAAAtiB,KAAAsiB,iBAAA0H,WAAAhqB,KAAAsiB,iBAAA2H,eAAApS,GAAA,EACA7X,KAAAwC,OAAAxC,KAAAwC,OAAAwnB,WAAAnS,GAAA,IAEAoS,eAAA,WACA,MAAA/C,MAAAC,IAAAnnB,KAAA2oB,oBAAA3oB,KAAAgqB,eAGA7K,WAAA,SAAA+K,GACA,MAAAlqB,MAAAkO,SAGAic,WAAA,SAAAC,GACA,GAAAlK,MACAmK,EAAArqB,KAAAqqB,aACA,IAAAA,GAAAD,EACA,KAAAA,EAAAC,EAAA5f,IAAA2f,IACA,YAAAA,EAAArlB,OAEAmb,MAEAA,EAAA5I,KAAA8S,EAGA,OAAAlK,IAGA3C,QAAA,SAAAW,EAAAC,EAAAmM,GAKA,GAJApM,IACAA,EAAA,GAAA0D,GACA1D,EAAAvK,OAAA3T,MAEAke,EAAA2D,QAAAnX,IAAA1K,MAEA,MAAAke,EAEAA,GAAA2D,QAAA0I,IAAAvqB,MACAA,KAAAgoB,SAEAze,EAAA6d,eAAApnB,MAmBAke,YAAA6D,GACA/hB,KAAA2oB,oBAAAzB,KAAAC,IAAA3B,KAAAmB,MAAAD,EAAA,GACI4D,GACJtqB,KAAA+pB,eAGA,IAAA3O,GAAApb,KAAAob,SACA,IAAAA,EAAA,CACA,GAAA9W,GAAAtE,IAEAob,KAAA3U,OACA,QAAAzD,GAAA,EAAAC,EAAAmY,EAAAvY,OAAyCG,EAAAC,EAAOD,IAAA,CAChD,GAAAwnB,GAAApP,EAAApY,EACAkb,aAAA6D,IACAyI,EAAAhoB,OACAgoB,EAAAroB,MAAA+b,EAAA/b,KACAqoB,EAAAjN,QAAAW,EAAA8D,WAAA1d,GAAA,GAGAkmB,EAAAjN,QAAAW,EAAA5Z,GAAA,IAkBA,MAdA4Z,aAAA6D,KACA/hB,KAAAsiB,kBAAAtiB,KAAAyqB,OACAzqB,KAAAsiB,iBAAA/E,QAAAW,EAAAle,MAEAA,KAAAiG,YAAAykB,YACA1qB,KAAAiG,YAAAykB,WAAAnN,QAAAW,EAAAle,OAGAA,KAAAwC,QACAxC,KAAAwC,OAAA+a,QAAA,GAAAwE,GAAA/hB,KAAAmC,IAAA+b,EAAAle,KAAAwC,QAAAxC,MAEAA,KAAA0qB,YACA1qB,KAAA0qB,WAAAnN,QAAAW,EAAAle,MAEAke,GAGAyM,WAAA,WAEA3qB,KAAAud,WAGA/Z,SAAA,SAAAiK,GAEA,IAAAA,EACA,SAAA3J,OAAA,wCAEA,IAAAsX,GAAApb,KAAAob,SACA,KAAAA,IAAApb,KAAA6J,eAAA,cACA,GAAAvF,GAAAtE,KAAA2pB,MAEA,OADArlB,GAAA8W,aAAA3N,GACAnJ,EAIA,MAHI8W,GAAAxC,QAAAnL,SACJ2N,EAAA9D,KAAA7J,GAEAzN,MAEAwd,UAAA,SAAA9E,GAEA,GAAA6E,GACAqN,EACAtmB,EAAAtE,IAEA,sBAAA0Y,GAAA,CAEA,GAAApU,GAAAtE,KACAuI,GACArG,MAAA,WACA,UAAAuG,GAAA,WAAA+V,cAAA,WACA,MAAAla,GAAAmZ,aAIAF,GAAA,WACAqN,GAAA,EACAlS,EAAAnQ,QAEI,KAAAmQ,EAAAc,KAWJ,SAAA1V,OAAA,wGATAyZ,GAAA,WACAqN,GAAA,EACAtmB,EAAAyV,KAAA,SAAA7X,GACAwW,EAAAc,KAAAtX,IACM,SAAAoW,GACNI,EAAAJ,MAAApW,UAMA,GAAA2oB,IACAtN,QAAA,WACAqN,IAGAA,GAAA,EACAtpB,EAAA+G,SAAAkV,KAKA,OAFAA,KACAvd,KAAAwD,SAAAqnB,IAEAC,YAAA,WACAxmB,EAAAwZ,aAAA+M,MAIA/M,aAAA,SAAA0M,GACA,GAAApP,GAAApb,KAAAob,SACA,IAAAA,EAAA,CACA,GAAAsF,GAAAtF,EAAAxC,QAAA4R,EACA9J,QACAtF,EAAAE,OAAAoF,EAAA,GACA,IAAAtF,EAAAvY,QAGA7C,KAAAwO,aAKApI,IAAA,SAAAlE,GACA,GAAAoC,GAAAtE,IACA,IAAAA,KAAAwC,OACA,MAAAxC,MAAAqpB,aAAA9C,EAAArkB,EAEA,IAAA2d,GAAA7f,KAAAuoB,SAAAvoB,KAAAuoB,UAAA,GAAAvoB,KAAAkC,KACA,IAAA2d,IAAA3d,GAAA,gBAAAA,GACA,MAAAokB,EAEA,IAAAzG,KAAAzZ,MAEA9B,EAAAmmB,QAAAvoB,MAAAkE,KACA,IACA,MAAAyZ,GAAAzZ,IAAAlE,GACK,MAAAoW,GACL,IAAAA,EAAAgR,UACA,KAAAhR,GAIApW,KAAA6X,OAAA7X,EAAAsB,SACAtB,EAAAugB,EAAAziB,KAAAkC,GAEAoC,EAAApC,OAEA,IAAAqG,GAAA,GAAAqZ,EAIA,OAHArZ,GAAAsX,WACAtX,EAAAkF,OAAAnJ,EACAA,EAAAiZ,QAAAhV,EAAAjE,GACApC,GAEAuI,IAAA,SAAAtI,GACA,GAAAnC,KAAAmC,IAAAnC,KAAAqiB,aAAAriB,KAAAqiB,YAAAlgB,GACA,MAAAnC,MAAAkL,SAAA/I,GAAAsb,SAEA,IAAA3J,GAAA9T,KAAAuoB,UAAA,EACA,IAAAzU,EAAA,CAGA,qBAAAA,GAAArJ,IACA,MAAAqJ,GAAArJ,IAAAtI,EAEA,IAAAD,GAAA4R,EAAA3R,EACA,OAAAD,MAAAsB,SAEAtB,EAAAub,UAEAvb,IAEAyI,IAAA,SAAAxI,EAAAD,GAEAlC,KAAAkL,SAAA/I,GAAAknB,aAAA7C,EAAAtkB,IAEA6oB,SAAA,SAAA5oB,GACAnC,KAAA2K,IAAAxI,EAAApB,IAEAiqB,GAAA,SAAAC,GACA,GAAAC,GAAAlrB,IAEA,OADAA,MAAAyqB,OAAA,EACAtJ,EAAAnhB,KAAAmrB,SAAAF,GAAA,SAAA/oB,GAEA,MADAgpB,GAAA3N,QAAA,GAAAqE,GAAAsJ,GACAA,KAGAE,MAAA,SAAAH,GACA,MAAAjrB,MAAAgrB,GAAAC,IAEAzR,KAAA,SAAAtX,GAEAlC,KAAAoG,IAAAlE,IAEAoW,MAAA,SAAAA,GAEA,GAAA8C,GAAApb,KAAAob,SACAA,IAEAA,EAAApT,QAAA,SAAAwiB,GAEAA,EAAAlS,YAIA+S,SAAA,SAAAnpB,GAEAlC,KAAAoG,IAAAlE,IAEAipB,SAAA,SAAAjpB,GACA,MAAAlC,MAAAkC,SAEAopB,QAAA,SAAA5S,GACA,MAAA1Y,MAAAwd,UAAA,SAAAjV,GACAkU,EAAAlU,EAAArG,QAAA,SAAAA,GACAwW,EAAAxW,QAIAsZ,OAAA,WACA,MAAAxb,MAAAyd,WAEA8N,SAAA,WACA,MAAAzL,QAAA9f,KAAAyd,YAEAzV,QAAA,SAAAwjB,EAAAvS,GAEA,GAAAuS,EAAAhoB,SACA,MAAAxD,MAAAgI,QAAA,SAAAC,GACA,GAAAL,GAAA4jB,EAAA3jB,KAAAI,EACAgR,GAAA1Y,KAAAP,KAAA4H,IACKiQ,EAEL,IAAA4T,GAAAzrB,KAAAyrB,YACA,IAAAA,EAAA,CACA,GAAAnnB,GAAAtE,IACA,OAAAyc,GAAAzc,KAAAyd,UAAA,SAAAvb,GACAA,KAAA8F,SACA9F,EAAA8F,QAAA,SAAAC,EAAAyY,GACA8K,EAAAjrB,KAAA+D,IAAA4G,SAAAwV,EAAA+K,QAKA,MAAAhP,GAAAzc,KAAAyd,QAAAxE,GAAA,SAAA/W,GACA,GAAAA,KAAA8F,QACA9F,EAAA8F,QAAAwjB,OAEA,QAAAxoB,KAAAd,GACAspB,EAAAjrB,KAAA2B,IAAAc,SAMAwS,GAAA,SAAAkW,EAAAC,GACA,qBAAAD,GAIA,KAHA,gBAAAA,IACA1rB,KAAAwV,GAAAkW,EAAAjhB,IAAAihB,EAAA/gB,KAEA,GAAA7G,OAAA,oCAQA,OANA6nB,KACAD,EAAAC,QAAA,SAAAzpB,EAAAggB,EAAArK,GAEA8T,EAAAprB,KAAAP,KAAAkC,EAAAggB,EAAA,GAAArK,KAGA6T,EAAA7mB,oBAAA0E,GACA,GAAAmiB,GAAA1rB,MAEA,IAAAA,KAAA4rB,YAAA5H,IAAAhkB,KAAA0rB,IAEAnhB,IAAA,SAAAmhB,GACA,MAAA1rB,MAAAwV,GAAA,SAAAtT,GACA,GAAAA,YAAA0B,OACA,SAAAE,OAAA,qBAEA,OAAA4nB,GAAAxpB,MAGAiiB,GAAA,SAAAva,GAEA,UAAAA,GAAA5J,OAEA6rB,aAEA,GAAA7rB,KAAAsiB,iBACA,MAAAtiB,MAAAsiB,iBAAAuJ,MAEA,IAAA7rB,KAAAwC,OAAA,CACA,GAAAspB,GAAA9rB,KAAAwC,OAAAqpB,OAAA/lB,YAAA9F,KAAAwC,OAAAqpB,MACA,OAAAC,MAAA9rB,KAAAmC,KAEA,MAAAnC,MAAAiG,aAEA4lB,cAEArqB,OAAAG,eAAA3B,KAAA,UACAkC,MAAA2pB,KAGAE,SAAA,SAAAte,EAAAoe,GACA,GAAA7rB,KAAAsiB,iBACA,MAAAtiB,MAAAsiB,iBAAAyJ,SAAAte,EAAAoe,EAEA,IAAA7rB,KAAAwC,OACA,MAAAxC,MAAAwC,OAAAupB,SAAAte,EAAAgQ,UAAAoO,EAEA,IAAAA,EAAA,CACA,GAAAA,EAAA9mB,MAAA8mB,EAAA9mB,aAAA0I,GACA,+BAAAA,GAAA,kCAAAoe,EAAA9mB,KAEA,IAAA8mB,EAAAG,WAAA,MAAAve,GAAA,IAAAA,GAAA,gBAAAA,IAAAzI,MAAAyI,IACA,4BAGA,GAAAwe,KAEA,OADAA,GAAAC,SAAA,EACAD,GAGAE,iBACA,GAAAA,GAAA,GAAAC,IAAApsB,KAIA,OAHAwB,QAAAG,eAAA3B,KAAA,cACAkC,MAAAiqB,IAEAA,GAEAA,kBAEA3qB,OAAAG,eAAA3B,KAAA,cACAkC,MAAAiqB,KAGAE,eAAAC,GAIA,OAFAriB,GAAAzI,OAAAyI,KAAAjK,MACA8F,EAAAmE,EAAApH,OAAA,GAAA7C,KAAAqiB,cAAAriB,KAAAqiB,gBACArf,EAAA,EAAAC,EAAAgH,EAAApH,OAAkCG,EAAAC,EAAOD,IAAA,CACzC,GAAAb,GAAA8H,EAAAjH,GACAd,EAAAlC,KAAAmC,EACA,IAAAD,YAAAqH,GAAA,CACA,GAAAL,GAAApD,EAAA3D,EACA,IAAA+G,EACAA,IAAAhH,GAEAgH,EAAA9C,IAAAlE,OAEM,CACN,GAAAA,EAAAM,OAAA,CACA,GAAAN,EAAAM,SAAAxC,KACA,QAGA,IAAAyP,GAAA,GAAAlG,EACAkG,GAAA2b,MAAAlpB,GACAA,EAAAuN,EAGAvN,EAAAC,MACAD,EAAAM,OAAAxC,KACA8F,EAAA3D,GAAAD,MAKAgd,MAAA,WACA,MAAAlf,MAAAK,KAAAL,KAAAK,GAAAkJ,EAAAyU,WAEAuO,cAAA,WACA,GAAAjoB,GAAAtE,IACA,OAAAyc,GAAAzc,KAAAyd,UAAA,SAAA3J,GACA,GAAAsH,GAAAmG,EAAA9W,IAAAqJ,EAIA,IAHAsH,GACAmG,EAAA5W,IAAAmJ,EAAAsH,MAEAA,EAAAoR,cACApR,EAAAoR,oBACK,CACLpR,EAAAoR,cAAA,CACA,IAAArW,GAAAiF,EAAAjF,SAAA7U,EAAA0V,QAAAlD,EAAA,SAAA+E,GACA,OAAA7V,GAAA,EAAAC,EAAAmY,EAAAvY,OAA2CG,EAAAC,EAAOD,IAElD,OADA0V,GAAA0C,EAAApY,GACAuT,EAAA,EAAAkW,EAAA5T,EAAAhW,OAA0C0T,EAAAkW,EAAQlW,IAAA,CAClD,GAAAhO,GAAAsQ,EAAAtC,EACAmC,GAAAmL,gBAAAtb,EAAA9D,KAAAqP,KAIA,IAAAqC,EAAAsE,OACA,OAAAzX,GAAA,EAAAC,EAAAmY,EAAAvY,OAA2CG,EAAAC,EAAOD,IAAA,CAClD,GAAA0V,GAAA0C,EAAApY,EACA0V,GAAA8Q,QAAA,SAAArnB,GACAgU,EAAAsE,OAAAtY,MAMA,MADAmf,GAAAxN,EAAAxP,IAEAyW,OAAA,WACA4G,EAAA7N,EAAAxP,KACA8W,EAAAoR,eACApR,EAAAjF,SAAA4E,UAGAjB,KAAA,WAEAxY,EAAAorB,eAAAvW,GACAnW,KAAA+a,cAKArT,gBAAA,WACA,MAAA1H,MAAAsiB,kBAAAtiB,KAAAsiB,iBAAAmJ,cAAAzrB,KAAAiG,YAAAwlB,cAEAkB,IAAA,SAAAloB,GAGA,MADAzE,MAAAyE,OACAzE,MAEA4sB,aAIA,MAHA5sB,MAAAgoB,UAAAjnB,IACAf,KAAAgoB,QAAAhoB,KAAAyE,OAAAyiB,KAAA2F,SAAA,IAAApmB,MAAA,IAEAzG,KAAAgoB,SAEA4E,cACA5sB,KAAAgoB,QAAA4E,GAEAE,mBACA,UAAAtH,MAAAxlB,KAAAgqB,eAMA,QAAA7nB,KAAAimB,GACA5mB,OAAAG,eAAA4H,EAAApH,EAAAX,OAAAI,yBAAAwmB,EAAAjmB,GAGAoH,GAAA4a,GAAA,SAAAR,GACA,GAAAoJ,GAAA/sB,iBACAyN,EAAAsf,EAAAloB,UACAA,EAAA8e,EAAA9e,SACA,IAEA,OADAmoB,GAAAxrB,OAAA0I,oBAAArF,GACA7B,EAAA,EAAkBA,EAAAgqB,EAAAnqB,OAAkBG,IAAA,CACpC,GAAAyB,GAAAuoB,EAAAhqB,EACAxB,QAAAI,yBAAA6L,EAAAhJ,IACAjD,OAAAG,eAAA8L,EAAAhJ,EAAAjD,OAAAI,yBAAAiD,EAAAJ,IAGAI,EAAAmF,EAAAnF,SACGA,OAAA0E,EAAA1E,UACH,OAAAkoB,IAGAxjB,UAAA,SAAAzD,EAAAmnB,GAEA,GACApoB,GADAmY,EAAAhd,IAmBA,OAjBAwB,QAAAI,yBAAA5B,KAAA,aAAA6G,YAAA,GAEAomB,EAAA3rB,EAAAiL,YAAAvM,MACA6E,EAAAooB,EAAApoB,YAGAooB,KAAA,WACA,MAAAjtB,gBAAAitB,OACAjQ,GAAAlc,MAAAd,KAAAyF,WAEAwnB,UAAAnnB,IAGAjB,EAAAooB,EAAApoB,UAAArD,OAAAC,OAAAzB,KAAA6E,WACAA,EAAAoB,YAAAgnB,EACAliB,EAAAkiB,EAAAjtB,OAEAitB,EAAA5Y,OAAAvO,IAEAyD,EAAA8K,OAAA,SAAAvO,GACA,GAAAjB,GAAA7E,KAAA6E,SACA,QAAA1C,KAAA2D,GAAA,CACA,GAAAiQ,GAAAvU,OAAAI,yBAAAkE,EAAA3D,GACAD,EAAA6T,EAAA7T,KACA,mBAAAA,IAAA,iBAAAC,IACAD,EAAAsB,UAEAuS,EAAA,SAAA5T,EAAAyH,GACA,OACAa,IAAA,WACA,GAAAS,IAAAlL,KAAAqiB,cAAAriB,KAAAqiB,iBAAkElgB,EAUlE,OATA+I,KACAlL,KAAAqiB,YAAAlgB,GAAA+I,EAAA,GAAAtB,GACAsB,EAAA/I,MACA+I,EAAA1I,OAAAxC,KACAkL,EAAAkQ,WAEAlQ,EAAAye,QAGAze,GAEAP,IAAA,SAAAzI,GACAlC,KAAAmC,GAAAknB,aAAA7C,EAAAtkB,IAEAyE,YAAA,IAEMxE,EAAAD,GACNA,IAAAqH,IACArH,EAAAqH,KAEArH,EAAAgnB,iBAAA,GACK1f,EAAAtH,GACL6T,EAAAmX,GAAAhrB,GACKA,EAAAirB,SACLpX,EAAA7T,EAAAirB,SAAAhrB,GAEAD,EAAAyiB,EAAAziB,EAAAC,IAGAX,OAAAG,eAAAkD,EAAA1C,EAAA4T,GACA7T,IAAAnB,EAEAf,KAAAmC,GAAAD,EAGAV,OAAAG,eAAA3B,KAAAmC,EAAA4T,GAMA,MAHAjQ,MAAAK,QACAA,EAAA5F,KAAAP,KAAA8F,EAAAK,QAEAnG,MAGAwB,OAAAG,eAAA4H,EAAA,mBACAkB,IAAA,WACA,MAAAzK,MAAA6J,eAAA,oBACA7J,KAAAotB,kBACAptB,KAAAotB,iBAAA,GAAAptB,MACAA,KAAAotB,iBAAAlf,QAAAkb,GACAppB,KAAAotB,qBAGA7jB,EAAApD,OAAA,SAAAwH,EAAAC,GACA,GAAAE,GAAA,GAAAtD,EACAsD,GAAAF,gBACA,IAAA4J,GAAAxX,KAAAgL,eAAAhL,KAAAgL,aAAA,GAAAR,GACAgN,GAAA7M,IAAAgD,EAAAG,IAiEA,mBAAA6H,UACApM,EAAA1E,UAAA8Q,OAAA4D,UAAA,WACA,GAAAA,GAAAvZ,KAAAyd,UAAA9H,OAAA4D,YACAjV,EAAAtE,KACAyrB,EAAAzrB,KAAAyrB,YACA,IAAAA,EAAA,CACA,GACAzoB,GAAA,CACA,QACAwW,KAAA,WACA,GAAAhR,GAAA+Q,EAAAC,MAIA,OAHAhR,GAAAsR,OACAtR,EAAAtG,MAAAoC,EAAA4G,SAAAlI,IAAAyoB,IAEAjjB,IAIA,MAAA+Q,IAIA,IAAA8T,GAAA9jB,EAAA8jB,KAAA/rB,EAAAiE,QAAAgE,EAAA,SAAArH,GACA,mBAAAA,KACAlC,KAAAkC,WAGAuoB,OAAA,EAEAvf,SAAA,SAAA/I,EAAA6mB,GACA,GAAAljB,GAAA9F,KAAAqiB,cAAAriB,KAAAqiB,YAAA,GAAAyC,MACAmE,EAAAnjB,EAAA2E,IAAAtI,EAYA,OAXA8mB,KAEAA,EAAA,IAAAD,GAAAhpB,KAAAgpB,eACAC,EAAA9mB,MACA8mB,EAAAzmB,OAAAxC,KACAipB,EAAA7N,WAEA6N,EAAAU,OAEA7jB,EAAA6E,IAAAxI,EAAA8mB,IAEAA,KAIAjF,GAAAza,EAAAya,UAAA1iB,EAAAiE,QAAAgE,EAAA,SAAAoK,EAAAoQ,EAAA3C,GAIA,IAHAzN,IAAA5S,GAAAqgB,KACAphB,KAAA2T,UAEAoQ,IACA/jB,KAAA+jB,YACA3C,GACA,OAAApe,GAAA,EAAAC,EAAAme,EAAAve,OAAuCG,EAAAC,EAAOD,IAC9ChD,KAAA,SAAAgD,GAAAoe,EAAApe,KAKAulB,SAAA,SAAAC,GAEA,kBAAAxoB,KAAAstB,WACAttB,KAAAstB,WAAA5G,EAAA6E,eACI,IAAAgC,SAAAvtB,KAAAstB,iBAEA,KAAAttB,KAAAob,WAAA,eAAApb,KAAAstB,YAAAttB,KAAAwtB,eAAAxtB,KAAA8iB,iBAEJ,MAAAjL,KACAA,EAAA4G,WAAAze,KAAA8iB,eACAjL,EAAA+Q,iBAAA5oB,KAAA8iB,gBAAA9iB,KAAAsiB,kBACAmE,EAGA+B,GACAxoB,KAAAka,SAAArC,IACAA,EAAAgR,gBAAA,GAEA7oB,KAAA2iB,aAEA3iB,KAAAka,SAAAla,KAAA2iB,aAGA3iB,KAAA6J,eAAA,YAAAgO,CAOA,IAAAyV,GAAAttB,KAAAstB,WACAtG,EAAAnP,EACA4V,EAAA5V,MAAA6G,aAAA,GAAAjW,GACAyZ,IACA,KACAliB,KAAAie,SAEAwP,EAAAhP,WAAAze,KAAAie,SAEAje,WAAA8iB,eAAA9iB,KAAAie,SAAAje,KAAA8iB,mBAAA9iB,KAAA6J,eAAA,aACA4jB,EAAA7E,gBAAA5oB,KAAA8iB,cAKA,QADA1Z,GAAAskB,EAFA3J,EAAA/jB,KAAA+jB,WAAA/jB,KAAA+jB,UAAAtG,UAGAza,EAAA,GAAmBoG,EAAApJ,KAAA0tB,EAAA1qB,EAAA,WAAAA,EAAA,YAAA0qB,IAAA1tB,MAA2FgD,IAC9Gkf,EAAAlf,GAAAoG,GAAAof,EAAApf,EAAAqU,UAAArU,CAEA,IAAA9E,GAAAtE,IACA,OAAA2c,GAAAuF,EAAA,SAAAxC,GAsEA,QAAAiO,GAAAnlB,EAAAyV,GACA3Z,EAAAgpB,iBACAtG,GACAA,EAAAvI,WAAAR,GAEA3Z,EAAAgpB,WAAAhpB,EAAA8W,WAAA9W,EAAAkpB,cAAAxG,KAAAxjB,SAAA,gBACAc,EAAAwe,cAAA7E,EACA3Z,EAAAqe,YAAAna,GA5EAilB,EAAA7E,kBAAA7nB,IACA0sB,EAAA7E,gBAAA7nB,EAEA,IAAAkd,GAAAwP,EAAAxP,QACA4K,EAAA4E,EAAA5E,cACA,IAAAA,GAGA,GAFA7B,IACAA,EAAA6B,gBAAA,GACAnJ,EAAA,KAAA3e,GAAA,IAAA2e,EAAA7c,OAEA,MADAyB,GAAAgpB,WAAA,cACAhpB,EAAAqe,gBAEM,CACN,GAAAre,EAAAwe,eAAA7E,GAAAyB,EAAA,IAAA+G,EAKA,MAHAO,IACAA,EAAAvI,WAAAR,GAEA+I,KAAA4B,iBAAA3K,IAAA3Z,EAAAge,iBACAmE,EAEA+B,GACAlkB,EAAA4V,SAAA8M,IACAA,EAAA6B,gBAAA,GAEAvkB,EAAAqe,aAEAre,EAAA4V,SAAA5V,EAAAqe,WAGA,IAAAiL,IAAA,EAGA,GAAAplB,GAAAub,IAAAjjB,MAAAwD,EAAAob,KAAA,GACAmO,EAAArlB,KAAAuR,OAAAvR,EAAAhF,QAGA,IAFAya,EAAAwP,EAAAxP,QAEA2P,EACA,GAAAC,EAAA,CACA,GAAA3T,GAAA5V,EAAA4V,QAAA1R,CACAlE,GAAAwe,cAAA7E,EACAzV,IAAAuR,KAAA,SAAA2F,GAKA,MAJAxF,KAAA5V,EAAA4V,UACA5V,EAAA4V,QAAA,KACAyT,EAAAjO,EAAA+N,EAAAxP,UAEAyB,GACQ,SAAApH,GAOR,KANA4B,KAAA5V,EAAA4V,UAEA5V,EAAA4V,QAAA,KACA5V,EAAAwpB,UAAAxV,EACAqV,EAAA,SAEArV,QAGAqV,GAAAnlB,EAAAyV,EAGA,OAAAuK,IAAAqF,GACA7G,IACAA,EAAA6B,gBAAA,GAGAvkB,EAAAqe,aAEAna,IAeK,QACLqP,EAAAmP,IAGAyC,gBAAA,SAAAxQ,GAEA1P,EAAA1E,UAAA4kB,gBAAAlpB,KAAAP,KAAAiZ,EAEA,QADA7P,GAAAskB,EACA1qB,EAAA,GAAkBoG,EAAApJ,KAAA0tB,EAAA1qB,EAAA,WAAAA,EAAA,YAAA0qB,IAAA1tB,MAA2FgD,IAC7GoG,KAAA5F,UACAyV,EAAA7P,IAKAmU,QAAA,SAAAW,EAAAC,EAAAmM,GAKA,GAJAtqB,KAAAstB,WAAA,cACAttB,KAAAka,UACAla,KAAAka,QAAA,MAEAiE,IAAAne,KAAAsiB,kBAAApE,GAAA,YAAAA,EAAAnZ,KAGA,OADAqE,GAAAskB,EACA1qB,EAAA,GAAmBoG,EAAApJ,KAAA0tB,EAAA1qB,EAAA,WAAAA,EAAA,YAAA0qB,IAAA1tB,MAA2FgD,IAC9GoG,IAAA+U,IAEAD,EAAA,GAAA0D,GAKA,OAAArY,GAAA1E,UAAA0Y,QAAAhd,KAAAP,KAAAke,EAAAC,EAAAmM,IAGA9b,QAAA,WACA,eAAAxO,KAAAstB,YAAAttB,KAAAwtB,eACAxtB,KAAAstB,WAAA,IAEA/jB,EAAA1E,UAAA2J,QAAAjO,KAAAP,OAGAmqB,WAAA,SAAAC,GAEA,IAAAA,KAAAnM,QAAA+L,aACA,UAAApI,KAIAmM,aAAA,WAGA,OADA3kB,GAAAskB,EADAxL,KAEAlf,EAAA,GAAkBoG,EAAApJ,KAAA0tB,EAAA1qB,EAAA,WAAAA,EAAA,YAAA0qB,IAAA1tB,MAA2FgD,IAC7Gkf,EAAA5K,KAAAlO,EAEA,OAAA8Y,IAEA9b,IAAA,SAAAlE,GACA,GAAA3B,GAAAP,IACA,OAAAyc,GAAAzc,KAAAyd,UAAA,SAAAuQ,GACA,GAAAA,IAAA9rB,GAAA,gBAAAA,GACA,MAAAokB,EAEA,IAAAvC,GAAAxjB,EAAAwjB,UAAAtG,SACA,KAAAsG,EAAA4H,QAGK,IAAAqC,KAAA5nB,IACL,MAAA4nB,GAAA5nB,IAAAlE,EAEA,IAAAoW,GAAA,GAAAxU,OAAA,oEAEA,MADAwU,GAAAgR,WAAA,EACAhR,EAPAyL,EAAA,QAAAxjB,OAAA2B,EAAA3B,EAAAwtB,gBACAxtB,EAAAgd,aAUA0Q,WAAA,SAAAtC,GAEA,MADA3rB,MAAA+jB,UAAAtG,UAAAkO,UACA3rB,QAIAkuB,GAAA5sB,EAAAiE,QAAAye,GAAA,WACAA,GAAAljB,MAAAd,KAAAyF,aAEA8iB,SAAA,SAAAC,GAEA,GAAA2F,GAAAtW,IAAAF,kBAAA3X,UACA,OAAAmuB,QAAAnuB,KACAmuB,EAAA5F,SAAAC,GAEAxE,GAAAnf,UAAA0jB,SAAAhoB,KAAAP,KAAAwoB,IAEA4F,yBAAA,IAGAzmB,GAAArG,EAAAiE,QAAAgE,EAAA,SAAArH,EAAAgC,GACAlE,KAAAkC,QACAlC,KAAA0qB,WAAAxmB,OAGAilB,GAAA7nB,EAAAiE,QAAAgE,EAAA,SAAA8kB,EAAAngB,GACAlO,KAAAquB,UACAruB,KAAAkO,YAEAuP,QAAA,WAEA,GAAAvP,GAAAlO,KAAAkO,QACA2J,EAAA3J,EAAAyJ,kBAAAzJ,EAAA,GAAAzF,GAAAyF,GACAmgB,EAAAruB,KAAAquB,OACA,OAAAxW,GAAA2G,cAAA,WACA,MAAA6P,GAAA5Q,aAIAgM,gBAAA,SAAAxQ,GACAjZ,KAAAohB,SAAAphB,KAAAohB,QAAApZ,QAAAiR,IAGA+Q,WAAA,WAGA,OAFA/L,GAAA1U,EAAA1E,UAAAmlB,WAAAzpB,KAAAP,MACAohB,EAAAphB,KAAAohB,SAAA,EACApe,EAAA,EAAAC,EAAAme,EAAAve,OAAsCG,EAAAC,EAAOD,IAAA,CAC7C,GAAA2Q,GAAAyN,EAAApe,EACA2Q,GAAAsW,iBACAhM,EAAAiJ,KAAAC,IAAAlJ,EAAAtK,EAAAsW,mBAGA,MAAAhM,IAGA7X,IAAA,SAAAlE,GACA,GAAAgM,GAAAlO,KAAAkO,OACA,OAAAlO,MAAAquB,QAAAjoB,IAAAlE,EAAAgM,EAAAyJ,kBAAAzJ,EAAA,GAAAzF,GAAAyF,OAIAgW,GAAA3a,EAAA2a,OAAA5iB,EAAAiE,QAAAgE,EAAA,QAAA2a,IAAAhiB,GACA,MAAAwhB,GAAA1jB,KAAAkC,EAAAgiB,MAEAoK,gBAAA,EAgBApjB,SAAA,SAAA/I,EAAA6mB,GACA,MAAAzf,GAAA1E,UAAAqG,SAAA3K,KAAAP,KAAAmC,EAAA6mB,GAAA,gBAAA7mB,IAAAnC,KAAAyrB,eAEAnQ,OAAA,SAAA2H,EAAAM,GACA,GAAArB,GAAAzc,SACA,OAAAid,GAAA1iB,KAAA,SAAA4iB,GACAK,EAAA,IACAA,EAAAL,EAAA/f,OAAAogB,EAEA,IAAAJ,GAAAD,EAAAtH,OAAAxa,MAAA8hB,EAAAV,EAGA,OAFAoB,GAAAtjB,KAAA6iB,EAAAI,EAAAM,EAAAX,EAAA/f,QACAkgB,EAAA/iB,QAAAyG,MAAAlG,KAAA2hB,EAAA,GAAAe,EAAAL,EAAA/f,QACAggB,KAGAvL,KAAA,WACA,GAAA4K,GAAAzc,SACA,OAAAid,GAAA1iB,KAAA,SAAA4iB,GACA,GAAAC,GAAAD,EAAAtL,KAAAxW,MAAA8hB,EAAAV,EAEA,OADAa,GAAA/iB,KAAAkiB,EAAAU,EAAA/f,OAAAqf,EAAArf,OAAA+f,EAAA/f,QACAggB,KAGA0L,QAAA,WACA,GAAArM,GAAAzc,SACA,OAAAid,GAAA1iB,KAAA,SAAA4iB,GACA,GAAAC,GAAAD,EAAA2L,QAAAztB,MAAA8hB,EAAAV,EAEA,OADAa,GAAA/iB,KAAAkiB,EAAA,EAAAU,EAAA/f,QACAggB,KAGA2L,IAAA,WACA,MAAA9L,GAAA1iB,KAAA,SAAA4iB,GACA,GAAAC,GAAAD,EAAA4L,KAEA,OADAlL,GAAAtjB,MAAA6iB,GAAAD,EAAA/f,OAAA,GACAggB,KAGA4E,MAAA,WACA,MAAA/E,GAAA1iB,KAAA,SAAA4iB,GACA,GAAAC,GAAAD,EAAA6E,OAEA,OADAnE,GAAAtjB,MAAA6iB,GAAA,IAAAD,EAAA/f,QACAggB,MAIAqB,IAAAyB,GAAA,SAAA8F,GACA,GAAAgD,GAAAvK,IAA2BuH,gBAC3B,OAAAzrB,QAAAkkB,GAEA,GAAAuK,GAEAA,EAmBA,IACArnB,IAAA9F,EAAAiE,QAAAye,GAAA,SAAAvK,GACAzZ,KAAAyZ,cAEAsK,WACAtG,QAAA,WAIA,QAAAjE,KACA,GAAAK,GACA7W,EACA2W,EACAC,CACA,IAAA8U,EAAA,CAKA,GAHA/U,EAAA+U,EAAAnV,SACAvW,EAAA0rB,EAAA1rB,EACA6W,EAAA6U,EAAAxsB,MACA2X,KAAAE,KACA,SAAAjW,OAAA,6CAAA+V,EAEAD,GAAA8U,EAAA9U,eAEA+U,IAEAA,EAAA/f,UAEA5L,EAAA,EACA2W,EAAA3Z,KAAAyZ,WAGA,SACA,GAAAC,GAAAC,EAAAC,EAAA,gBAAAC,EACA,IAAAH,EAAAI,KAAA,CAIA,IAHA,GAAA8U,GAAA5uB,KAAAohB,YACAyN,EAAA7rB,EACA8rB,KACA9uB,KAAA0tB,EAAA1qB,EAAA,WAAAA,EAAA,WAEAhD,KAAA0tB,GAAA3sB,EACAiC,GAEA,KAAAA,EAAA,EAAkBA,EAAA6rB,EAAe7rB,IAAA,CAEjC,GAAA0qB,GAAA1qB,EAAA,WAAAA,EAAA,QACAhD,MAAA0tB,IAAA1tB,KAAA0tB,GAAAlqB,UACAsrB,EAAAxX,KAAAtX,KAAA0tB,IAGA,IAAA1qB,EAAA,EAAkBA,EAAA4rB,EAAA/rB,OAAuBG,IACzC8rB,EAAAlW,QAAAgW,EAAA5rB,SACA4rB,EAAA5rB,GAAA8a,aAAA9d,KAIA,OADAA,MAAAohB,QAAA0N,EACApV,EAAAxX,MAEA2X,EAAAH,EAAAxX,KAGA,KACA,GAAAwrB,GAAA1qB,EAAA,WAAAA,EAAA,QAoBA,IAnBAhD,KAAA0tB,KAAA7T,GAAA7Z,KAAA0tB,KAAA3sB,IAEA8Y,KAAArW,UACAxD,KAAAob,WACAvB,EAAArW,SAAAxD,MAEAA,KAAA0tB,GAAA7T,GACS,kBAAAA,IAAArQ,EAAAqQ,IACT6U,GACA1rB,IACAuW,SAAAM,KAEAL,EAAAjZ,KAAAP,MACAgD,EAAA0rB,EAAA1rB,GAEAhD,KAAA0tB,GAAA,MAGA1qB,IACA6W,KAAAE,KAAA,CAEA,GAAAzV,GAAAtE,IACA0uB,IACA1rB,IACAuW,SAAAI,EAEA,IAAAK,GAAA,KAEAE,EAAAL,EAAAE,KAAA,SAAA7X,GACA,MAAA8X,MAAA,GACAA,GAAA,OACAH,EAAA3X,KAGAwsB,EAAAxsB,QACAysB,EACAA,EAAAnQ,cAAAhF,EAAAnS,KAAA/C,IAEAkV,EAAAjZ,KAAA+D,KACS,SAAAgU,GAGT,MAFAoW,GAAAxsB,MAAAoW,EACAoW,EAAA9U,YAAA,EACA+U,EACAA,EAAAnQ,cAAAhF,EAAAnS,KAAA/C,IAEAkV,EAAAjZ,KAAA+D,IAEA,KAAA0V,EAEA,MADAA,IAAA,EACAE,EAGAN,GAAA,EACO,MAAAtB,GACPsB,GAAA,EACAC,EAAAvB,IAhHA,GACAoW,GADAC,EAAA9W,CAEA,OAAA2B,OAsHA4S,GAAA9qB,EAAAiE,QAAAye,GAAA,SAAArQ,GACA3T,KAAA2T,WAEAoQ,UAAA,SAAAtW,GACA,GAAAA,GAAAzN,KAAA2T,MACA,OAAAlG,MAAAse,SAAAte,IAAAoe,WAsBA5H,IACAnjB,MAAA,SAAAmN,EAAAiU,GACA,MAAAA,KAmFAkH,IACA3kB,KAAA,kBACAsqB,YAAA,sGACA9oB,aACA6D,YAAA,SAAAoE,EAAAtE,GACA,MAAAA,GAAA8N,kBAGAnI,SAAA,WACA,UAiBAhG,GAAAkU,QAAA,WAEA,MAAAoH,GAAA7kB,KAAA6X,GAAA4F,WAEAlU,EAAAwQ,KAAA,SAAAd,EAAAkD,GAEA,MAAA0I,GAAA7kB,KAAA6X,GAAAkC,KAAAd,EAAAkD,IAEA5S,EAAAgf,SAAA,SAAAC,GAEA,MAAA3D,GAAA7kB,KAAA6X,IAEAtO,EAAAnD,IAAA,SAAAlE,GAEA,MAAA2iB,GAAA7kB,KAAA6X,GAAAzR,IAAAlE,IAEAqH,SAAA,SAAA2E,GACA,SAAAA,EAAA,CACAA,EAAAT,SAAAS,EAAAjI,YAAA6D,cAEAoE,IAAAT,OAEA,IAAAQ,EAMA,OALAA,GAAA,GAAAxF,GAAAyF,GAAAiJ,QAAAnX,MACAiO,MAAAC,UACAD,EAAAC,WAGAD,GAAAjO,KAAA0X,gBAEA,MAAA1X,MAAA0X,iBAGAnO,EAAA1B,KAAA,SAAA3F,GACA,GAAAA,GAAA,gBAAAA,GAAA,CAEA,GAAA4L,GAAA9N,KAAA8N,cAAA9N,KAAA8N,YAAA,GAAAtD,IACAyD,EAAAH,EAAArD,IAAAvI,EAIA,OAHA+L,IACAH,EAAAnD,IAAAzI,EAAA+L,EAAA,GAAAjO,MAAAkC,IAEA+L,EAGA,UAAAjO,MAAAkC,IAGAqH,EAAA/F,SAAA,SAAAiK,GACA,GAAAQ,GAAA4W,EAAA7kB,KAAA6X,EAEA,OADA5J,GAAAzK,SAAAiK,GACAQ,GAEA1E,EAAAuU,aAAA,SAAArQ,GACAzN,KAAA0X,gBAAAoG,aAAArQ,IAEAlE,EAAA7B,gBAAA,WACA,MAAA1H,MAAAyrB,cAEAliB,EAAAgU,QAAA,SAAAW,EAAAC,GACA,MAAA0G,GAAA7kB,KAAA6X,GAAA0F,QAAAW,EAAAC,IAEA5U,EAAAqiB,WAAAsC,EACA,IAAAc,KACAvkB,IAAA,SAAAgD,EAAAhJ,GACA,GAAAvC,GAAAuL,EAAAhJ,EACA,OAAAvC,KAAAnB,EAAA0M,EAAAvC,SAAAzG,GAAAvC,GAEAyI,IAAA,SAAA8C,EAAAhJ,EAAAvC,GACA,GAAA2d,GAAApS,EAAAhJ,EAOA,OANAob,MAAAzZ,IAEAyZ,EAAAzZ,IAAAlE,GAEAuL,EAAA9C,IAAAlG,EAAAvC,IAEA,GAEAwI,IAAA,SAAA+C,EAAAhJ,GACA,MAAAA,KAAAgJ,IAAAhJ,IAAAgJ,GAAAgQ,WAEAwR,eAAA,SAAAxhB,EAAAhJ,GACA,MAAAuqB,IAAArkB,IAAA8C,EAAAhJ,EAAA1D,IAEAmuB,QAAA,SAAAzhB,GACA,MAAAjM,QAAA0I,oBAAAuD,EAAAgQ,YAGAlU,GAAA6hB,MAAA,SAAAzX,GAEA,UAAAwb,OAAAxb,YAAA3T,MAAA2T,EAAA3T,KAAA6H,KAAA8L,GAAAqb,KAEAxtB,OAAAG,eAAA4H,EAAA,gBACAkB,IAAA,WACA,MAAAzK,MAAAovB,eAEAzkB,IAAA,SAAAlD,GACAzH,KAAAovB,eAAA3nB,IACAzH,KAAAovB,cAAA3nB,EACAA,EAAAijB,WAAA1qB,SAIAwB,OAAAG,eAAA4H,EAAA,cACAkB,IAAA,WACA,MAAAzK,MAAAqvB,aAEA1kB,IAAA,SAAA2kB,GACAtvB,KAAAqvB,aAAAC,IACAtvB,KAAAqvB,YAAAC,EACAA,EAAA7D,aAAAzrB,SAIAuJ,EAAAmd,YAAAlB,KAAAmB,MACApd,EAAAgmB,WAAA/K,EACAjb,EAAAhJ,KAAAivB,SAAA3qB,UAAAtE;AACAgJ,EAAAzI,MAAA0uB,SAAA3qB,UAAA/D,MAIAikB,EAAAoB,QAAA,SAAAxC,GACA,QAAAoB,MAaA,MAZAA,GAAAoI,SAAA,SAAAvI,GACA,OACA1iB,MAAA,WACA,GAAAggB,GAAAzc,SAGA,WAAAke,GAAA,GAAAK,IAAAhkB,KAAA,SAAAkC,GACA,aAAAA,EAAAnB,EAAAmB,EAAA0iB,GAAA9jB,MAAAoB,EAAAggB,SAKA6C,GAKAC,EAAAmI,SAAA,SAAAvI,GACA,OACA1iB,MAAA,WACA,GAAAggB,GAAAzc,UAGAnB,EAAAtE,IACA,OAAAyc,GAAAzc,KAAAyd,UAAA,SAAAvb,GACA,GAAAutB,GAAAvtB,EAAA0iB,GAAA9jB,MAAAoB,EAAAggB,EACA,OAAAzF,GAAAnY,EAAA8B,IAAAlE,GAAA,WACA,MAAAutB,UAeAxK,EAAA1b,WACAmmB,OAAA3K,EAAAoB,QAAAlB,GACA0K,WAAA5K,EAAAoB,QAAAjB,GACAtM,QAAAmM,EAAAoB,QAAAjB,GACA0K,YAAA7K,EAAAoB,QAAAjB,GACA7Z,MAAA0Z,EAAAoB,QAAAjC,IACAnU,QAAAgV,EAAAoB,QAAAlB,GACA4K,OAAA9K,EAAAoB,QAAAlB,GACAxe,MAAAse,EAAAoB,QAAAlB,GACA6K,YAAA/K,EAAAoB,QAAAlB,GACA7a,YAAA2a,EAAAoB,QAAAlB,GACApiB,OAAAqiB,GACED,GAEFC,EAAA3b,WACAwmB,QAAAhL,EAAAoB,QAAAlB,GACA+K,cAAAjL,EAAAoB,QAAAlB,GACAgL,YAAAlL,EAAAoB,QAAAlB,GACAiL,eAAAnL,EAAAoB,QAAAlB,IACEC,GAKFE,EAAA7b,aAA4B6b,GAK5BE,EAAA/b,WACAmB,IAAAqa,EAAAoB,QAAAf,GACAmF,IAAAvF,EACAmL,MAAAnL,EACAoL,SAAApL,GACEM,GACF9jB,OAAAG,eAAA2jB,EAAAzgB,UAAA,SACA4F,IAAA,WACA,MAAAzK,MAAAqwB,SAAArwB,KAAAqwB,OAAArwB,KAAAwV,GAAAgO,GAAAW,GAAAD,QAOAqB,EAAAhc,WACA+mB,aAAAvL,EAAAoB,QAAAlB,GACAsL,aAAAxL,EAAAoB,QAAAlB,GACAuL,YAAAzL,EAAAoB,QAAAlB,GACAwL,YAAA1L,EAAAoB,QAAAlB,GACAyL,QAAA3L,EAAAoB,QAAAjB,GACAyL,QAAA3L,GACEO,EAEF,IAAAqL,IAAAtvB,EAAAiE,QAAAgE,EAAA,QAAAqnB,IAAA1uB,GACA,MAAAwhB,GAAA1jB,KAAAkC,EAAA0uB,MAEAnT,QAAA,WACA,MAAAzd,MAAA+Z,UAGA2L,IACAmL,OAAA5L,EACA6L,OAAA5L,EACA6L,UAAA3L,GAiBAxlB,IACAoxB,YAAA,EACAznB,WACA2a,UACA+M,UAAA1nB,EACA0b,UACAC,UACAE,WACAwL,YACArL,QACAD,OACA+H,OACArJ,aACAtb,OACA4d,WACA7d,UACArB,qBACAO,QACA0Z,mBACAyC,MACAF,gBACAiC,WACAY,eAEAjlB,QAAAG,eAAA/B,GAAA,kBACA6K,IAAA,WACA,MAAAoN,KAGA,IAAAoO,IAAA,GAAAnB,IACAmB,IAAAtb,IAAA/G,MAAAsgB,IACA+B,GAAAtb,IAAAmV,OAAAmF,GACAgB,GAAAtb,IAAAwa,OAAAD,GACAe,GAAAtb,IAAA0a,QAAAD,GAiBAS,EAAApb,IAAA,SAAAgD,EAAAtL,EAAAwhB,GACA,GAAAzY,IAAAuC,EAAA4U,cAAA5U,EAAA4U,iBAAgElgB,EAYhE,OAXA+I,KACAuC,EAAA4U,YAAAlgB,GAAA+I,EAAA,IAAAua,EAAA9B,IACAlW,EAAA8a,WACArd,EAAA/I,MACA+I,EAAA1I,OAAAiL,EACAvC,EAAAkQ,WAEAlQ,EAAAye,SAIAze,GAEA2a,EAAAlb,IAAA,SAAA8C,EAAAtL,EAAAD,GACA,GAAAgJ,GAAAuC,EAAAtL,EACA+I,GAAA1I,OAAA0I,EAAAme,aAAA7C,EAAAtkB,GAAAgJ,EAAA9E,IAAAlE,GAIA,IAAAmkB,IAAA/kB,EAAAiE,QAAAye,GAAA,SAAArQ,EAAAiR,EAAA1C,GACAliB,KAAA2T,SAEA3T,KAAA4kB,SACA5kB,KAAAyF,UAAAyc,IAEA6B,UAAA,SAAAnB,GACA,GAAAgC,GAAA5kB,KAAA4kB,OACAsM,EAAAlxB,KAAA2T,QAAA3T,KAAA2T,OAAA2a,cAUA,OATA1L,MAAA5a,UAIA4a,EADIsO,MAIJtO,IAEA,gBAAAgC,GAEAhC,EAAAgC,GAAA9jB,MAAA8hB,EAAA5iB,KAAAyF,WAEAmf,EAAAhC,EAAA5iB,KAAAyF,YAGA0rB,aAAA,SAAAvO,GACA,GAAAjP,GAAA3T,KAAA2T,OACA8X,EAAA9X,KAAA8X,YACA,OAAAA,GAAA7I,EAAArY,IAAA,SAAAtC,EAAAjF,GACA,GAAAouB,GAAA3F,EAAA5jB,KAAAI,EAEA,OADAmpB,GAAA1G,WAAA/W,EACAyd,IACIxO,GAGJlb,gBAAA,WACA,MAAA1H,MAAA2T,OAAAjM,mBAEA4mB,gBAAA,GAeApI,GAAA,uBACA3I,QAAA,SAAAhV,EAAA4V,EAAAmM,GACA,IAAA/hB,KAAA8a,WAAArjB,MAAAuI,EAAA8a,UAAA9a,EAAA8a,SAAApd,cAAAjG,KACA,MAAAgkB,IAAAnf,UAAA0Y,QAAAhd,KAAAP,KAAAuI,EAAA4V,EAEA,IAAAgQ,GAAAtW,KAAAF,kBAAA3X,WACA,eAAAuI,EAAAxD,KAAA,CACA,GAAA2b,GAAAyN,EAAAxL,YAAA/J,QAAArQ,EAAAsX,SACAa,OACAyN,EAAA7S,OAAAoF,EAAA,OAEI,YAAAnY,EAAAxD,KAIA,eAAAwD,EAAAxD,KAAA,CACJ,GAAA+O,GAAAvL,EAAA/F,OAAAib,UACAiD,EAAAyN,EAAAxL,YAAA/J,QAAA9E,GACAgE,GAAAhE,GAAAud,OAAArxB,KAAAyF,UAAA,IAAA5C,OAAA,CACA,IAAA6d,KAAA,CACA,GAAA5I,EACA,UAAAiK,GAAArB,EAAAnY,EAAA4lB,EAAAxL,YAEA7O,EAEAqa,GAAA7S,OAAAoF,EAAA,OAGA5I,IACAqW,EAAA7W,KAAAxD,EAIA,QAEA,MAAAkQ,IAAAnf,UAAA0Y,QAAAhd,KAAAP,KAAAuI,EAAA4V,EAAAmM,IAvBA/hB,EAAArG,OAAAmvB,OAAArxB,KAAAyF,UAAA,IAAA5C,OAAA,GACAsrB,EAAA7W,KAAA/O,EAAArG,UAyBEgiB,IACFgC,EAAA,eAAAvS,GACA3T,KAAAsuB,eAAA3a,EAAA2a,iBAEAvK,UAAA,SAAAnB,GACA,GAAAsO,GAAAlxB,KAAA2T,QAAA3T,KAAA2T,OAAA2a,eACAgD,EAAAtxB,KAAAyF,UAAA,EACA,IAAAmd,KAAArY,IAAA,CACA,GAAAoJ,GAAA3T,KAAA2T,OACA8X,EAAA9X,KAAA8X,YACA,OAAA7I,GAAArY,IAAAkhB,EAAA,SAAAxjB,EAAAjF,GACA,MAAAsuB,GAAA3d,EAAAzI,SAAAlI,OACKsuB,GACD,MAAAJ,IACJ,QAAAtM,OAKAyB,GAAAxhB,UAAAkf,UAAAxjB,KAAAP,KAAA4iB,GAHA0O,EAAA1O,IAKArF,QAAA,SAAAhV,EAAA4V,EAAAmM,GACA,IAAA/hB,KAAA8a,WAAArjB,MAAAuI,EAAA8a,UAAA9a,EAAA8a,SAAApd,cAAAjG,KACA,MAAAuJ,GAAA1E,UAAA0Y,QAAAhd,KAAAP,KAAAuI,EAAA4V,EAEA,IAAAgQ,GAAAtW,KAAAF,kBAAA3X,WACA,eAAAuI,EAAAxD,KACAopB,EAAA7S,OAAA/S,EAAAkY,cAAA,OACI,YAAAlY,EAAAxD,KAAA,CACJ,GAAA6d,GAAAuL,EAAAxL,WACAwL,GAAA7W,KAAAtX,KAAAyF,UAAA,GAAAlF,KAAAP,KAAAyF,UAAA,GAAAzF,KAAA2T,OAAAzI,SAAA0X,KAAA/f,cACI,eAAA0F,EAAAxD,KAqBJ,MAAAif,IAAAnf,UAAA0Y,QAAAhd,KAAAP,KAAAuI,EAAA4V,EAAAmM,EApBA,IAAAtqB,KAAA0H,kBACA,MAEA,IAAAoM,GAAAvL,EAAA/F,OAAAib,UACAmF,EAAAuL,EAAAxL,YACAjC,EAAAnY,EAAApG,IACAD,EAAAqG,EAAArG,KAQA,IAPAwe,KAEAxe,EAAA4R,EAAA4M,GAGAA,EAAAkC,KAAArY,KAAAqY,EAAAhK,QAAA9E,KAEA4M,MAGA,MAAAsD,IAAAnf,UAAA0Y,QAAAhd,KAAAP,KAAAuI,EAAA4V,EAAAmM,EAFA6D,GAAA7S,OAAAoF,EAAA,EAAA1gB,KAAAyF,UAAA,GAAAlF,KAAAP,KAAAyF,UAAA,GAAAzF,KAAA2T,OAAAzI,SAAAwV,QAQEwD,IACFgC,EAAA,uBACAA,EAAA,4BACAA,EAAA,uBAAuDd,GACvDc,EAAA,wBAAwDd,GACxDc,EAAA,wBAAwDhC,IACxDgC,EAAA,iBAAAvS,EAAAuO,MACAhX,SAAAmiB,EAAAxoB,UAAAqG,SACA0Z,OAAA,SAAAhC,EAAAV,GAcA,QAAAqP,GAAApvB,EAAAD,GACAwe,EAAA/V,IAAAxI,EAAAD,GARA,OANAwe,GAAA,GAAAoE,KACA0M,EAAAtP,EAAA,GACAuP,EAAAvP,EAAA,GACAwP,EAAA,kBAAAF,GACAG,EAAA,kBAAAF,GACAG,IAAAJ,EACAxuB,EAAA,EAAAC,EAAA2f,EAAA/f,OAAoCG,EAAAC,EAAOD,IAAA,CAC3C,GAAAf,GAAA2gB,EAAA5f,EACA0d,GAAA/V,IACA+mB,EAAAF,EAAAvvB,EAAAsvB,GACAK,EAAA3vB,EAAAuvB,GAAAvvB,EACA0vB,EAAAF,EAAAxvB,MAKA,MAAAye,MAIAwF,EAAA,mBAAAvS,EAAAuO,MACAhX,SAAAmiB,EAAAxoB,UAAAqG,SACA0Z,OAAA,SAAAhC,EAAAV,GAOA,OANAxB,GAAA,GAAAoE,KACA0M,EAAAtP,EAAA,GACAuP,EAAAvP,EAAA,GACAwP,EAAA,kBAAAF,GACAG,EAAA,kBAAAF,GACAG,IAAAJ,EACAxuB,EAAA,EAAAC,EAAA2f,EAAA/f,OAAoCG,EAAAC,EAAOD,IAAA,CAC3C,GAAAf,GAAA2gB,EAAA5f,GACAb,EAAAuvB,EAAAF,EAAAvvB,GACA2vB,EAAA3vB,EAAAuvB,GAAAvvB,EACA4vB,EAAAnR,EAAAjW,IAAAtI,EACA0vB,IACAnR,EAAA/V,IAAAxI,EAAA0vB,MAEAA,EAAAva,KAAAqa,EAAAF,EAAAxvB,MASA,MAAAye,KAIA,IAAAwM,IAAA3jB,EAAA2jB,uBAAA,SAAAhrB,GACA,GAAA4vB,EACA,QACArnB,IAAA,WACAqnB,IACAA,EAAA,GAAAtnB,GAEA,IAAAlG,GAAAwtB,EAAArnB,IAAAzK,KAIA,OAHAsE,IACAwtB,EAAAnnB,IAAA3K,KAAAsE,EAAA,GAAA8C,IAAAlF,EAAAmF,KAAArH,QAEAsE,GAEAqC,YAAA,GAOA,OAHA4C,GAAAua,MACAva,EAAAd,UAEA7I,MNolFM,SAASC,EAAQD,EAASM,GO/lKhC,GAAAS,GAAAC,EAAAC,GAAA,SAAAnB,EAAAC,GACAiB,GAAAV,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAS,EAAA,EAAAE,EAAA,kBAAAF,KAAAG,MAAAlB,EAAAgB,GAAAD,IAAAI,SAAAF,IAAAhB,EAAAD,QAAAiB,KAEEb,KAAA,SAAAsB,EAAAF,EAAAC,GAaF,QAAA0wB,GAAA3Q,GACA,OAAApe,GAAA,EAAAC,EAAAme,EAAAve,OAAuCG,EAAAC,EAAOD,IAAA,CAC9C,GAAA2Q,GAAAyN,EAAApe,EACA2Q,MAAAqe,eACA5Q,EAAApe,GAAA2Q,EAAAqe,gBAGA,MAAA5Q,GAEA,QAAAlgB,GAAAuY,EAAAzX,GACA,qBAAAyX,GACA,SAAA3V,OAAA,4IAKA,OAHA9B,MAAA2pB,UACAlS,EAAAkS,QAAA3pB,EAAA2pB,SAEA,GAAAtqB,GAAA+F,kBAAAqS,GA3BA,GAAAuK,GAAA3iB,EAAA2iB,UACAza,EAAAlI,EAAAkI,SACAC,EAAAlI,EAAAkI,YACAyoB,EAAA3wB,EAAAiE,QAAAye,EAAA,SAAArQ,EAAAoQ,EAAA3C,GACAphB,KAAAohB,UACA4C,EAAAljB,MAAAd,KAAAyF,aAEAusB,aAAA,WACA,MAAAhyB,MAAA+jB,UAAAjjB,MAAAd,KAAA+xB,EAAA/xB,KAAAohB,YAyEA,OApDA9f,GAAAI,KAAAR,EAAAE,GACAF,EAAA2G,KAAA,SAAA3F,EAAAF,GACA,MAAAE,MAAAgJ,SACAhJ,EAEA,kBAAAA,IAAAsH,EAAAtH,GACAhB,EAAAgB,EAAAF,GAEAuH,EAAA1B,KAAA3F,IAEAhB,EAAAgxB,KAAA,SAAApe,EAAA5I,GACA,GAAA4I,EAAA,CAEA,GAAAA,EAAA5I,SAAA,CAEA,GAAAinB,GAAAre,EAAA5I,EACA,OAAAnK,UAAAoxB,IAAAre,EAAA5I,YAEA,MAAA4I,GAAA5I,KAIAhK,EAAAkxB,KAAA,SAAA5K,EAAA6K,EAAAC,GACA,MAAAlxB,SAAAomB,EAAApmB,EAAAmxB,OAAAF,EAAAC,KAEApxB,EAAAsxB,MAAA,SAAA/kB,EAAAyU,GACA,MAAAzU,GAAAvC,UAAA,kBAAAuC,GACAA,EAAA3M,MAAA,KAAAixB,EAAA7P,IAEA,GAAA8B,GAAA9B,EAAA,GAAAzU,EAAAyU,IAEAhhB,EAAAuxB,MAAA,SAAAhlB,EAAAtL,EAAA+f,GACA,GAAA0C,GAAAnX,EAAAtL,EACA,yBAAAyiB,MAAA1Z,UAAA,SAAA/I,EAEAyiB,EAAA9jB,MAAA2M,EAAAskB,EAAA7P,IAEA,GAAA8B,GAAA9B,EAAA,GAAAzU,EAAAtL,GAAAkF,KAAAoG,GAAAyU,IAEAhhB,EAAAwxB,MAAA,SAAAjlB,EAAAyU,GACA,MAAAzU,GAAAvC,UAAA,kBAAAuC,GACA,IAAAA,EAAApG,KAAAvG,MAAA2M,GAAA,MAAAklB,OAAAZ,EAAA7P,MAEA,GAAA8B,GAAA9B,EAAA,cACA,WAAAzU,EAAApG,KAAAvG,MAAA2M,GAAA,MAAAklB,OAAAltB,cACKyc,IAGLhhB,EAAA0xB,IAAA,SAAA7O,EAAA3C,GACA,UAAA6Q,GAAA7Q,EAAA,GAAA2C,EAAA3C,IAGAlgB,KPsmKM,SAASrB,EAAQD,EAASM,GQ5rKhC,GAAAS,GAAAC,EAAAC,GAAA,SAAAnB,EAAAC,GACAiB,GAAAV,EAAA,IAAAS,EAAA,EAAAE,EAAA,kBAAAF,KAAAG,MAAAlB,EAAAgB,GAAAD,IAAAI,SAAAF,IAAAhB,EAAAD,QAAAiB,KAEEb,KAAA,SAAAqB,GAMF,QAAAwxB,GAAAC,GAEA,MAAAC,GAAAD,KACAC,EAAAD,GACA,GAAAtD,UAAA,kBAAAsD,IAEA,QAAAvnB,KAAAxG,EAAAN,EAAAuuB,EAAAC,EAAAC,EAAAC,GAsCA,QAAAC,GAAAC,GACAA,EAAAL,aACAK,EAAAC,MAAAH,KAAA,EAtCA,GAAAxH,GAAA,SAAA5Y,EAAArO,GACA,GAEA6uB,GAFAphB,EAAAzN,EAAA,GACA8uB,EAAA9uB,EAAA,EAEA,IAAAyN,KAAA/L,IACA,IACA,MAAA+L,GAAA/L,IAAA8sB,EAAAngB,EAAAygB,KAAA/V,YACK,MAAAnF,GACL,IAAAA,EAAAgR,UAGA,KAAAhR,EAFAib,GAAAjb,EAMA,IAAAkb,MAAAptB,IAGA,KAAAmtB,MAAAE,QAAAF,EAAA,GAAAzvB,OAAA,oDAFA0vB,GAAAptB,IAAA+sB,EAAApgB,EAAAZ,KAAAsL,aAOA4V,GACAvyB,MAAA,SAAAmN,EAAAiU,GASA,MARA+Q,GAAAJ,EAAAI,GACAC,KAAAL,EAAAK,GACAC,KAAAN,EAAAM,GACAF,EAAAtH,UACAvqB,EAAAmK,GAAA8nB,EAAA,GAAAhyB,GAAAkI,SAAA0pB,GAEAG,EAAAC,GACAnR,EAAAte,MAAAiB,UAAA4B,MAAAlG,KAAA2hB,GACAmR,EAAAvyB,MAAAmN,EAAAiU,IAOAkR,GAAAC,GACAjyB,EAAAmK,GAAA8nB,EACAjyB,EAAAqD,GAAA,WACA,GAAA+D,GAAA6qB,EAAAvyB,MAAA,KAAA2E,UACA,OAAAV,GAAAyD,EAAA2b,GAAApf,GAAAyD,GAxDA,GAAA4c,GAAA/jB,EAAA+jB,SACAF,EAAA7jB,EAAA6jB,QACA6N,KACA3xB,IA4EA,OAlBAmK,GAAA,IAAA2Z,EAAA,2BACA3Z,EAAA,IAAA2Z,EAAA,gCACA3Z,EAAA,IAAA2Z,EAAA,gCACA3Z,EAAA,IAAA2Z,EAAA,8BAEA3Z,EAAA,2FAAoG,SACpGA,EAAA,2EAAqF,QACrFA,EAAA,IAAA6Z,EAAA,sBACA7Z,EAAA,IAAA2Z,EAAA,qBACA3Z,EAAA,IAAA6Z,EAAA,mBACA7Z,EAAA,KAAA6Z,EAAA,2BACA7Z,EAAA,IAAA6Z,EAAA,gBACA7Z,EAAA,KAAA6Z,EAAA,wBACA7Z,EAAA,MAAA6Z,EAAA,yBACA7Z,EAAA,KAAA6Z,EAAA,kBACA7Z,EAAA,IAAA6Z,EAAA,gBACA7Z,EAAA,IAAA6Z,EAAA,eACA7Z,EAAA,+EACAnK,KRmsKM,SAASvB,EAAQD,EAASM,GSvxKhC,GAAAS,GAAAC,EAAAC,GAAA,SAAAnB,EAAAC,GACAiB,GAAAV,EAAA,GAAAA,EAAA,IAAAS,EAAA,EAAAE,EAAA,kBAAAF,KAAAG,MAAAlB,EAAAgB,GAAAD,IAAAI,SAAAF,IAAAhB,EAAAD,QAAAiB,KAEEb,KAAA,SAAAsB,EAAAD,GAGF,QAAA6b,GAAAvJ,EAAAlG,EAAAimB,GACA,GAAA/f,GAAA,gBAAAA,GAAA,CACA,GAAAA,YAAA/P,OAAA,CACA6J,IACA,QAAAzK,GAAA,EAAAC,EAAA0Q,EAAA9Q,OAAqCG,EAAAC,EAAOD,IAC5CyK,EAAAzK,GAAAka,EAAAvJ,EAAA3Q,GAAA,KAAA0wB,OAEI,CACJjmB,GAAA,gBAAAA,KACAA,EAAAimB,KAAAjpB,IAAAkJ,GACAlG,IACAA,KACAimB,KAAA/oB,IAAAgJ,EAAAlG,IAGA,QAAAzK,KAAA2Q,GACAlG,EAAAzK,GAAAka,EAAAvJ,EAAA3Q,GAAAyK,EAAAzK,GAAA0wB,GAGA,MAAAjmB,GAEA,MAAAkG,GAvBA,GAAApK,GAAAlI,EAAAkI,SA0BApI,EAAAG,EAAAiE,QAAAgE,EAAA,SAAAoqB,GAEA3zB,KAAA2zB,aACA3zB,KAAA0zB,cAAA,GAAApyB,GAAAkJ,QAAA,mBACAxK,KAAA4zB,QAAA,GAAArqB,KAAA,MAEAgf,SAAA,SAAAC,EAAA3Q,GACA7X,KAAAmP,QACAnP,KAAAmP,MAAA,KAEA,IAAAjN,GAAAlC,KAAA2zB,WAAAlW,QAAA5F,EACA,IAAA3V,GAAA,gBAAAA,GAAA,CACA,GAAA2xB,GAAA7zB,KAAA0zB,cAAAjpB,IAAAvI,EAKA,OAJA,OAAA2xB,IACA7zB,KAAA0zB,cAAA/oB,IAAAzI,EAAA2xB,EAAA3W,EAAAhb,EAAAnB,OAAAf,KAAA0zB,gBACA1zB,KAAAmrB,SAAA0I,EAAAhc,IAEAgc,EAEA,MAAA9yB,UAAAf,KAAAkC,MACAA,EAEAlC,KAAAkC,OAEA4xB,UAAA,SAAA5xB,GACA,GAAA2xB,GAAA7zB,KAAA0zB,cAAAjpB,IAAAvI,EAIA,OAHA,OAAA2xB,GACA7zB,KAAA0zB,cAAA/oB,IAAAzI,EAAA2xB,EAAA3W,EAAAhb,EAAAnB,OAAAf,KAAA0zB,gBAEAG,GAEAE,KAAA,WAEA,GAAAC,GAAAh0B,KAAA2zB,WAAAlW,UACAwW,EAAA/W,EAAAld,KAAAyd,UAAAuW,EACAh0B,MAAA2zB,WAAAvtB,KAEApG,KAAA2zB,WAAAvtB,IAAA6tB,GAEAj0B,KAAA4zB,QAAAxtB,KAAA,GACApG,KAAAk0B,QAAAl0B,KAAAk0B,UAEAC,OAAA,WACA,GAAAH,GAAAh0B,KAAA2zB,WAAAlW,SACAzd,MAAA0zB,cAAA,GAAApyB,GAAAkJ,QAAA,mBACAxK,KAAAoG,IAAA8W,EAAA8W,EAAAjzB,OAAAf,KAAA0zB,gBACA1zB,KAAA4zB,QAAAxtB,KAAA,IAEAmX,QAAA,WAEA,MADAvd,MAAA4zB,QAAAxtB,KAAA,GACAmD,EAAA1E,UAAA0Y,QAAAzc,MAAAd,KAAAyF,aAGA,OAAAtE","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"alkali\"] = factory();\n\telse\n\t\troot[\"alkali\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"alkali\"] = factory();\n\telse\n\t\troot[\"alkali\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/// <reference path=\"./typings.d.ts\" />\r\n\t(function (root, factory) { if (true) {\r\n\t  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1), __webpack_require__(3), __webpack_require__(5), __webpack_require__(7), __webpack_require__(6), __webpack_require__(4), __webpack_require__(2)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) } else if (typeof module === 'object' && module.exports) {        \r\n\t  module.exports = factory(require('./Element'), require('./Renderer'), require('./react'), require('./Copy'), require('./operators'), require('./Variable'), require('./util/lang')) // Node\r\n\t}}(this, function (Element, Renderer, react, Copy, operators, VariableExports, lang) {\r\n\t\r\n\t\tvar main = Object.create(Element)\r\n\t\tmain.Copy = Copy\r\n\t\tmain.Element = Element\r\n\t\tlang.copy(main, VariableExports)\r\n\t\tObject.defineProperty(main, 'currentContext', Object.getOwnPropertyDescriptor(VariableExports, 'currentContext'))\r\n\t\tmain.react = react\r\n\t\tmain.spawn = lang.spawn\r\n\t\tmain.Renderer = Renderer.ElementRenderer\r\n\t\tlang.copy(main, Renderer)\r\n\t\tlang.copy(main, operators)\r\n\t\tmain.default = undefined // no default export\r\n\t\treturn main\r\n\t}))\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) { if (true) {\r\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2), __webpack_require__(3), __webpack_require__(4)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) } else if (typeof module === 'object' && module.exports) {\t\t\t\t\r\n\t\tmodule.exports = factory(require('./util/lang'), require('./Renderer'), require('./Variable')) // Node\r\n\t}}(this, function (lang, Renderer, VariableExports) {\r\n\t\tvar Variable = VariableExports.Variable\r\n\t\tvar knownElementProperties = [\r\n\t\t\t'textContent', // Node\r\n\t\t\t'id', 'className', 'innerHTML', // Element\r\n\t\t\t'title', 'lang', 'translate', 'dir', 'tabIndex', 'accessKey', 'draggable', 'spellcheck', 'contentEditable', 'innerText', 'webkitdropzone'] // HTMLElement\r\n\t\r\n\t\tvar SELECTOR_REGEX = /^(\\.|#)([-\\w]+)(.+)?/\r\n\t\tvar isGenerator = lang.isGenerator\r\n\t\tvar Context = VariableExports.Context\r\n\t\tvar PropertyRenderer = Renderer.PropertyRenderer\r\n\t\tvar InputPropertyRenderer = Renderer.InputPropertyRenderer\r\n\t\tvar AttributeRenderer = Renderer.AttributeRenderer\r\n\t\tvar StyleRenderer = lang.compose(Renderer.StyleRenderer, function StyleRenderer() {\r\n\t\t\tRenderer.StyleRenderer.apply(this, arguments)\r\n\t\t}, {\r\n\t\t\trenderUpdate: function(newValue, element) {\r\n\t\t\t\tvar definition = styleDefinitions[this.name]\r\n\t\t\t\tif (definition) {\r\n\t\t\t\t\tdefinition(element, newValue, this.name)\r\n\t\t\t\t} else {\r\n\t\t\t\t\telement.style[this.name] = newValue\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\tvar ClassNameRenderer = lang.compose(Renderer.ElementRenderer, function ClassNameRenderer(options) {\r\n\t\t\tthis.className = options.className\r\n\t\t\tRenderer.apply(this, arguments)\r\n\t\t}, {\r\n\t\t\trenderUpdate: function(newValue, element) {\r\n\t\t\t\tvar currentClassName = element.className\r\n\t\t\t\tvar changingClassName = this.className\r\n\t\t\t\t// remove the className (needed for addition or removal)\r\n\t\t\t\t// see http://jsperf.com/remove-class-name-algorithm/2 for some tests on this\r\n\t\t\t\tvar removed = currentClassName && (' ' + currentClassName + ' ').replace(' ' + changingClassName + ' ', ' ')\r\n\t\t\t\tif (newValue) {\r\n\t\t\t\t\t// addition, add the className\r\n\t\t\t\t\tchangingClassName = currentClassName ? (removed + changingClassName).slice(1) : changingClassName;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// we already have removed the class, just need to trim\r\n\t\t\t\t\tchangingClassName = removed.slice(1, removed.length - 1)\r\n\t\t\t\t}\r\n\t\t\t\t// only assign if it changed, this can save a lot of time\r\n\t\t\t\tif (changingClassName != currentClassName) {\r\n\t\t\t\t\telement.className = changingClassName\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\t// TODO: check for renderContent with text updater\r\n\t\tvar TextRenderer = Renderer.TextRenderer\r\n\t\tvar ListRenderer = Renderer.ListRenderer\r\n\t\r\n\t\tvar doc = typeof document !== 'undefined' ? document : {\r\n\t\t\tcreateElement: function(tag) {\r\n\t\t\t\treturn {}\r\n\t\t\t},\r\n\t\t\taddEventListener: function() {\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tvar inputs = {\r\n\t\t\tINPUT: 1,\r\n\t\t\tTEXTAREA: 1\r\n\t\t\t// SELECT: 1, we exclude this, so the default \"content\" of the element can be the options\r\n\t\t}\r\n\t\r\n\t\tvar buggyConstructorSetter = false\r\n\t\tvar testElement = doc.createElement('font')\r\n\t\tvar originalConstructor = testElement.constructor\r\n\t\ttestElement.constructor = function(){}\r\n\t\tif (doc.createElement('font').constructor == testElement.constructor) {\r\n\t\t\t// In safari, setting the constructor can actually assign it at the prototype level, instead of at the instance\r\n\t\t\ttestElement.__proto__.constructor = originalConstructor // restore the original constructor\r\n\t\t\tbuggyConstructorSetter = true\r\n\t\t}\r\n\t\r\n\t\r\n\t\tfunction booleanStyle(options) {\r\n\t\t\treturn function(element, value, key) {\r\n\t\t\t\tif (typeof value !== 'string') {\r\n\t\t\t\t\t// use the boolean conversion\r\n\t\t\t\t\tvalue = options[value ? 0 : 1]\r\n\t\t\t\t}\r\n\t\t\t\telement.style[key] = value\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction defaultStyle(element, value, key) {\r\n\t\t\tif (typeof value === 'number') {\r\n\t\t\t\tvalue = value + 'px'\r\n\t\t\t}\r\n\t\t\telement.style[key] = value\r\n\t\t}\r\n\t\tfunction directStyle(element, value, key) {\r\n\t\t\telement.style[key] = value\r\n\t\t}\r\n\t\r\n\t\tvar styleDefinitions = {\r\n\t\t\tdisplay: booleanStyle(['', 'none']),\r\n\t\t\tvisibility: booleanStyle(['visible', 'hidden']),\r\n\t\t\tcolor: directStyle,\r\n\t\t\topacity: directStyle,\r\n\t\t\tzoom: directStyle,\r\n\t\t\tminZoom: directStyle,\r\n\t\t\tmaxZoom: directStyle,\r\n\t\t\tfontWeight: directStyle,\r\n\t\t\tposition: booleanStyle(['absolute', '']),\r\n\t\t\ttextDecoration: booleanStyle(['underline', '']),\r\n\t\t\tfontWeight: directStyle // numbers are allowed here (TODO: eventually allow booleans too)\r\n\t\t}\r\n\t\t;[\"alignContent\",\"alignItems\",\"alignSelf\",\"animation\",\"animationDelay\",\"animationDirection\",\"animationDuration\",\"animationFillMode\",\"animationIterationCount\",\"animationName\",\"animationPlayState\",\"animationTimingFunction\",\"backfaceVisibility\",\"background\",\"backgroundAttachment\",\"backgroundBlendMode\",\"backgroundClip\",\"backgroundColor\",\"backgroundImage\",\"backgroundOrigin\",\"backgroundPosition\",\"backgroundPositionX\",\"backgroundPositionY\",\"backgroundRepeat\",\"backgroundRepeatX\",\"backgroundRepeatY\",\"backgroundSize\",\"baselineShift\",\"border\",\"borderBottom\",\"borderBottomColor\",\"borderBottomLeftRadius\",\"borderBottomRightRadius\",\"borderBottomStyle\",\"borderBottomWidth\",\"borderCollapse\",\"borderColor\",\"borderImage\",\"borderImageOutset\",\"borderImageRepeat\",\"borderImageSlice\",\"borderImageSource\",\"borderImageWidth\",\"borderLeft\",\"borderLeftColor\",\"borderLeftStyle\",\"borderLeftWidth\",\"borderRadius\",\"borderRight\",\"borderRightColor\",\"borderRightStyle\",\"borderRightWidth\",\"borderSpacing\",\"borderStyle\",\"borderTop\",\"borderTopColor\",\"borderTopLeftRadius\",\"borderTopRightRadius\",\"borderTopStyle\",\"borderTopWidth\",\"borderWidth\",\"bottom\",\"boxShadow\",\"boxSizing\",\"bufferedRendering\",\"captionSide\",\"clear\",\"clip\",\"clipPath\",\"clipRule\",\"color\",\"colorInterpolation\",\"colorInterpolationFilters\",\"colorRendering\",\"counterIncrement\",\"counterReset\",\"cursor\",\"direction\",\"display\",\"emptyCells\",\"fill\",\"fillOpacity\",\"fillRule\",\"filter\",\"flex\",\"flexBasis\",\"flexDirection\",\"flexFlow\",\"flexGrow\",\"flexShrink\",\"flexWrap\",\"float\",\"floodColor\",\"floodOpacity\",\"font\",\"fontFamily\",\"fontFeatureSettings\",\"fontKerning\",\"fontSize\",\"fontStretch\",\"fontStyle\",\"fontVariant\",\"fontVariantLigatures\",\"fontWeight\",\"height\",\"imageRendering\",\"isolation\",\"justifyContent\",\"left\",\"letterSpacing\",\"lightingColor\",\"lineHeight\",\"listStyle\",\"listStyleImage\",\"listStylePosition\",\"listStyleType\",\"margin\",\"marginBottom\",\"marginLeft\",\"marginRight\",\"marginTop\",\"marker\",\"markerEnd\",\"markerMid\",\"markerStart\",\"mask\",\"maskType\",\"maxHeight\",\"maxWidth\",\"maxZoom\",\"minHeight\",\"minWidth\",\"minZoom\",\"mixBlendMode\",\"motion\",\"motionOffset\",\"motionPath\",\"motionRotation\",\"objectFit\",\"objectPosition\",\"opacity\",\"order\",\"orientation\",\"orphans\",\"outline\",\"outlineColor\",\"outlineOffset\",\"outlineStyle\",\"outlineWidth\",\"overflow\",\"overflowWrap\",\"overflowX\",\"overflowY\",\"padding\",\"paddingBottom\",\"paddingLeft\",\"paddingRight\",\"paddingTop\",\"page\",\"pageBreakAfter\",\"pageBreakBefore\",\"pageBreakInside\",\"paintOrder\",\"perspective\",\"perspectiveOrigin\",\"pointerEvents\",\"position\",\"quotes\",\"resize\",\"right\",\"shapeImageThreshold\",\"shapeMargin\",\"shapeOutside\",\"shapeRendering\",\"size\",\"speak\",\"src\",\"stopColor\",\"stopOpacity\",\"stroke\",\"strokeDasharray\",\"strokeDashoffset\",\"strokeLinecap\",\"strokeLinejoin\",\"strokeMiterlimit\",\"strokeOpacity\",\"strokeWidth\",\"tabSize\",\"tableLayout\",\"textAlign\",\"textAlignLast\",\"textAnchor\",\"textCombineUpright\",\"textDecoration\",\"textIndent\",\"textOrientation\",\"textOverflow\",\"textRendering\",\"textShadow\",\"textTransform\",\"top\",\"touchAction\",\"transform\",\"transformOrigin\",\"transformStyle\",\"transition\",\"transitionDelay\",\"transitionDuration\",\"transitionProperty\",\"transitionTimingFunction\",\"unicodeBidi\",\"unicodeRange\",\"userZoom\",\"vectorEffect\",\"verticalAlign\",\"visibility\",\"whiteSpace\",\"widows\",\"width\",\"willChange\",\"wordBreak\",\"wordSpacing\",\"wordWrap\",\"writingMode\",\"zIndex\",\"zoom\"].forEach(function(property) {\r\n\t\t\tstyleDefinitions[property] = styleDefinitions[property] || defaultStyle\r\n\t\t})\r\n\t\tvar styleSheet\r\n\t\tvar presumptiveParentMap = new WeakMap()\r\n\t\r\n\t\tvar setPrototypeOf = Object.setPrototypeOf || (function(base, proto) { base.__proto__ = proto})\r\n\t\tvar getPrototypeOf = Object.getPrototypeOf || (function(base) { return base.__proto__ })\r\n\t\tfunction createCssRule(selector) {\r\n\t\t\tif (!styleSheet) {\r\n\t\t\t\tvar styleSheetElement = doc.createElement(\"style\")\r\n\t\t\t\tstyleSheetElement.setAttribute(\"type\", \"text/css\")\r\n\t//\t\t\tstyleSheet.appendChild(doc.createTextNode(css))\r\n\t\t\t\tdoc.head.insertBefore(styleSheetElement, doc.head.firstChild)\r\n\t\t\t\tstyleSheet = styleSheetElement.sheet\r\n\t\t\t}\r\n\t\t\tvar cssRules = styleSheet.cssRules || styleSheet.rules\r\n\t\t\treturn cssRules[styleSheet.addRule(selector, ' ', cssRules.length)]\r\n\t\t}\r\n\t\r\n\t\t// TODO: Need to do some more testing to see if that would improve performance:\r\n\t\t// var fragmentThresholdHeuristic = (typeof navigator !== 'undefined' && navigator.userAgent.indexOf('Chrome') > 0) ? 1 : 3\r\n\t\r\n\t\tfunction layoutChildren(parent, children, container, prepend) {\r\n\t\t\tvar fragment = (children.length > 1 || prepend) ? doc.createDocumentFragment() : parent\r\n\t\t\tfor(var i = 0, l = children.length; i < l; i++) {\r\n\t\t\t\tvar child = children[i]\r\n\t\t\t\tvar childNode\r\n\t\t\t\tif (child != null) { // we just skip nulls and undefined, helps make it easier to write conditional element logic\r\n\t\t\t\t\tif (child.create) {\r\n\t\t\t\t\t\t// an element constructor\r\n\t\t\t\t\t\tcurrentParent = parent\r\n\t\t\t\t\t\tchildNode = child.create()\r\n\t\t\t\t\t\tfragment.appendChild(childNode)\r\n\t\t\t\t\t\tif (child.isContentNode) {\r\n\t\t\t\t\t\t\tcontainer.contentNode = childNode\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (child.notifies) {\r\n\t\t\t\t\t\t// a variable\r\n\t\t\t\t\t\tvar ref = child.isIterable ? fragment : parent\r\n\t\t\t\t\t\tfragment.appendChild(childNode = variableAsContent(ref, child))\r\n\t\t\t\t\t} else if (typeof child == 'object') {\r\n\t\t\t\t\t\tif (child instanceof Array) {\r\n\t\t\t\t\t\t\t// array of sub-children\r\n\t\t\t\t\t\t\tcontainer = container || parent\r\n\t\t\t\t\t\t\tchildNode = childNode || parent\r\n\t\t\t\t\t\t\tlayoutChildren(childNode.contentNode || childNode, child, container)\r\n\t\t\t\t\t\t} else if (child.nodeType) {\r\n\t\t\t\t\t\t\t// an element itself\r\n\t\t\t\t\t\t\tfragment.appendChild(childNode = child)\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// TODO: apply properties to last child, but with binding to the parent (for events)\r\n\t\t\t\t\t\t\tthrow new Error('Unknown child type ' + child)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// a primitive value\r\n\t\t\t\t\t\tchildNode = doc.createTextNode(child)\r\n\t\t\t\t\t\tfragment.appendChild(childNode)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (fragment != parent) {\r\n\t\t\t\tif (prepend) {\r\n\t\t\t\t\tparent.insertBefore(fragment, parent.firstChild)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tparent.appendChild(fragment)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn childNode\r\n\t\t}\r\n\t\tfunction variableAsContent(parent, content) {\r\n\t\t\tif (content == null) {\r\n\t\t\t\treturn doc.createTextNode('')\r\n\t\t\t}\r\n\t\t\tvar textNode\r\n\t\t\tif (content.notifies) {\r\n\t\t\t\ttextNode = doc.createTextNode('')\r\n\t\t\t\tvar renderer = new TextRenderer({\r\n\t\t\t\t\telement: parent,\r\n\t\t\t\t\ttextNode: textNode,\r\n\t\t\t\t\tvariable: content\r\n\t\t\t\t})\r\n\t\t\t\ttextNode = renderer.textNode // it can be swapped for another node\r\n\t\t\t} else {\r\n\t\t\t\ttextNode = doc.createTextNode(content)\r\n\t\t\t}\r\n\t\t\treturn textNode\r\n\t\t}\r\n\t\r\n\t\tfunction bidirectionalHandler(element, value, key) {\r\n\t\t\tif (value && value.notifies) {\r\n\t\t\t\tnew InputPropertyRenderer({\r\n\t\t\t\t\tname: key,\r\n\t\t\t\t\tvariable: value,\r\n\t\t\t\t\telement: element\r\n\t\t\t\t})\r\n\t\t\t\tif (inputs[element.tagName] || element.tagName === 'SELECT') {\r\n\t\t\t\t\tbindChanges(element, value, key)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (element.tagName === 'SELECT' && key === 'value') {\r\n\t\t\t\t\t// use the deferred <select> value assignment\r\n\t\t\t\t\tInputPropertyRenderer.prototype.renderSelectValueUpdate(value, element)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (element.type === 'number') {\r\n\t\t\t\t\t\tif (isNaN(value)) {\r\n\t\t\t\t\t\t\tvalue = ''\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telement[key] = value\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction noop() {}\r\n\t\tvar propertyHandlers = {\r\n\t\t\tchildren: noop,\r\n\t\t\ttagName: noop,\r\n\t\t\t_generators: noop,\r\n\t\t\tclasses: function(element, classes) {\r\n\t\t\t\tif (!(classes.length > -1)) {\r\n\t\t\t\t\t// index the classes, if necessary\r\n\t\t\t\t\tvar i = 0\r\n\t\t\t\t\tfor (var key in classes) {\r\n\t\t\t\t\t\tif (!classes[i]) {\r\n\t\t\t\t\t\t\tclasses[i] = key\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ti++\r\n\t\t\t\t\t}\r\n\t\t\t\t\tclasses.length = i\r\n\t\t\t\t}\r\n\t\t\t\tfor (var i = 0, l = classes.length; i < l; i++) {\r\n\t\t\t\t\t// find each class name\r\n\t\t\t\t\tvar className = classes[i]\r\n\t\t\t\t\tvar flag = classes[className]\r\n\t\t\t\t\tif (flag && flag.notifies) {\r\n\t\t\t\t\t\t// if it is a variable, we react to it\r\n\t\t\t\t\t\tnew ClassNameRenderer({\r\n\t\t\t\t\t\t\telement: element,\r\n\t\t\t\t\t\t\tclassName: className,\r\n\t\t\t\t\t\t\tvariable: flag\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} else if (flag || flag === undefined) {\r\n\t\t\t\t\t\telement.className += ' ' + className\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tclass: applyAttribute,\r\n\t\t\tfor: applyAttribute, // TODO: move to label?\r\n\t\t\trole: applyAttribute,\r\n\t\t\trender: function(element, value, key, properties) {\r\n\t\t\t\t// TODO: This doesn't need to be a property updater (is in place for *render())\r\n\t\t\t\t// we should also verify it is a generator\r\n\t\t\t\t// and maybe, at some point, find an optimization to eliminate the bind()\r\n\t\t\t\tnew PropertyRenderer({\r\n\t\t\t\t\tname: key,\r\n\t\t\t\t\tvariable: new VariableExports.GeneratorVariable(value.bind(element, properties)),\r\n\t\t\t\t\telement: element\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tdataset: applySubProperties(function(newValue, element, key) {\r\n\t\t\t\telement.dataset[key || this.name] = newValue\r\n\t\t\t}),\r\n\t\t\tattributes: applySubProperties(function(newValue, element, key) {\r\n\t\t\t\telement.setAttribute(key || this.name, newValue)\r\n\t\t\t}),\r\n\t\t\tstyle: function(element, value, key) {\r\n\t\t\t\tif (typeof value === 'string') {\r\n\t\t\t\t\telement.setAttribute('style', value)\r\n\t\t\t\t} else if (value && value.notifies) {\r\n\t\t\t\t\tnew AttributeRenderer({\r\n\t\t\t\t\t\tname: 'style',\r\n\t\t\t\t\t\tvariable: value,\r\n\t\t\t\t\t\telement: element\r\n\t\t\t\t\t})\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstyleObjectHandler(element, value, key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tknownElementProperties.forEach(function(property) {\r\n\t\t\tpropertyHandlers[property] = true\r\n\t\t})\r\n\t\tif (typeof HTMLElement !== 'undefined') {\r\n\t\t\tHTMLElement.prototype._propertyHandlers = propertyHandlers // inherit this, at least for now\r\n\t\t}\r\n\t\tvar elementPropertyHandlers = {\r\n\t\t\tinput: lang.copy(['accept', 'alt', 'autocomplete', 'autofocus', 'capture', 'defaultChecked', 'dirName', 'disabled', 'form', 'files', 'formAction', 'formEnctype', 'formMethod', 'formNoValidate', 'formTarget', 'indeterminate', 'inputMode', 'list', 'max', 'maxLength', 'min', 'minLength', 'multiple', 'name', 'pattern', 'placeholder', 'readOnly', 'required', 'size', 'src', 'step', 'type', 'defaultValue', 'willValidate', 'validity', 'validationMessage', 'useMap', 'autocapitalize', 'webkitdirectory', 'incremental', 'stepUp', 'stepDown'], {\r\n\t\t\t\tvalue: bidirectionalHandler,\r\n\t\t\t\tvalueAsNumber: bidirectionalHandler,\r\n\t\t\t\tvalueAsDate: bidirectionalHandler,\r\n\t\t\t\tchecked: bidirectionalHandler,\r\n\t\t\t\ttype: function(element, value) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\telement.type = value\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\t// IE 11 will throw an error here\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}),\r\n\t\t\tselect: lang.copy(['name', 'size', 'type', 'selectedIndex', 'validationMessage'], {\r\n\t\t\t\tvalue: bidirectionalHandler\r\n\t\t\t}),\r\n\t\t\ttextarea: lang.copy(['cols', 'dirName', 'maxLength', 'minLength', 'name', 'placeholder', 'rows', 'wrap', 'type', 'defaultValue', 'textLength', 'validationMessage', 'autocapitalize'], {\r\n\t\t\t\tvalue: bidirectionalHandler\r\n\t\t\t}),\r\n\t\t\ta: ['target', 'download', 'ping', 'rel', 'hreflang', 'type', 'referrerPolicy', 'href', 'media'],\r\n\t\t\tarea: ['target', 'download', 'coords', 'rel', 'hreflang', 'type', 'referrerPolicy', 'href', 'media', 'alt', 'shape'],\r\n\t\t\tbutton: ['disabled', 'formAction', 'formEnctype', 'formMethod', 'formTarget', 'name', 'type', 'value', 'validationMessage'],\r\n\t\t\tdialog: ['open'],\r\n\t\t\tembed: ['src', 'type', 'name'],\r\n\t\t\tform: ['acceptCharset', 'action', 'autocomplete', 'enctype', 'encoding', 'method', 'name', 'target', 'novalidate'],\r\n\t\t\tframe: ['name', 'scrolling', 'src', 'frameBorder'],\r\n\t\t\tframeset: ['cols', 'rows'],\r\n\t\t\tiframe: ['src', 'srcdoc', 'name', 'referrerPolicy', 'align', 'scrolling', 'frameBorder', 'longDesc'],\r\n\t\t\timg: ['src', 'alt', 'crossorigin', 'ismap', 'longdesc', 'sizes', 'srcset', 'usemap', 'referrerpolicy'],\r\n\t\t\toption: ['label', 'value', 'text', 'index'],\r\n\t\t\toptgroup: ['label'],\r\n\t\t\toutput: ['name', 'type', 'defaultValue', 'value', 'validationMessage'],\r\n\t\t\tlabel: ['htmlFor'],\r\n\t\t\ttd: ['colSpan', 'rowSpan'],\r\n\t\t\tth: ['colSpan', 'rowSpan'],\r\n\t\t\tscript: ['src', 'type', 'charset', 'text', 'event', 'htmlFor', 'integrity'],\r\n\t\t\tstyle: ['media', 'type'],\r\n\t\t\ttrack: ['kind', 'src', 'srclang', 'label'],\r\n\t\t\tlink: ['href', 'rel', 'media', 'hreflang', 'type', 'charset', 'rev', 'target', 'integrity', 'as'],\r\n\t\t\tmeta: ['name', 'httpEquiv', 'content', 'scheme'],\r\n\t\t\tmeter: ['value', 'min', 'max', 'low', 'high', 'optimum'],\r\n\t\t\tprogress: ['value', 'max', 'position'],\r\n\t\t\tdel: ['cite', 'dateTime'],\r\n\t\t\tins: ['cite', 'dateTime'],\r\n\t\t\tsource: ['src', 'type', 'srcset', 'sizes', 'media'],\r\n\t\t\tvideo: ['videoWidth', 'videoHeight', 'poster', 'webkitDecodedFrameCount', 'webkitDroppedFrameCount'],\r\n\t\t\tkeygen: ['challenge', 'keytype', 'name', 'type', 'validationMessage'],\r\n\t\t\tobject: ['data', 'type', 'name', 'useMap', 'validationMessage', 'archive', 'code', 'hspace', 'standby', 'vspace', 'codeBase', 'codeType'],\r\n\t\t\tparam: ['name', 'value', 'type', 'valueType']\r\n\t\t}\r\n\t\r\n\t\tfunction applyAttribute(element, value, key) {\r\n\t\t\tif (value && value.notifies) {\r\n\t\t\t\tnew AttributeRenderer({\r\n\t\t\t\t\tname: key,\r\n\t\t\t\t\tvariable: value,\r\n\t\t\t\t\telement: element\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\telement.setAttribute(key, value)\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tvar styleObjectHandler = applySubProperties(function(newValue, element, key) {\r\n\t\t\telement.style[key || this.name] = newValue\r\n\t\t})\r\n\t\r\n\t\tfunction applySubProperties(renderer) {\r\n\t\t\tvar SubPropertyRenderer = lang.compose(PropertyRenderer, function SubPropertyRenderer(options) {\r\n\t\t\t\tPropertyRenderer.apply(this, arguments)\r\n\t\t\t}, {\r\n\t\t\t\trenderUpdate: renderer\r\n\t\t\t})\r\n\t\t\treturn function(element, value, key) {\r\n\t\t\t\tfor (var subKey in value) {\r\n\t\t\t\t\tvar subValue = value[subKey]\r\n\t\t\t\t\tif (subValue && subValue.notifies) {\r\n\t\t\t\t\t\tnew SubPropertyRenderer({\r\n\t\t\t\t\t\t\tname: subKey,\r\n\t\t\t\t\t\t\tvariable: subValue,\r\n\t\t\t\t\t\t\telement: element\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\trenderer(subValue, element, subKey)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction assignProperties(element, properties) {\r\n\t\t\tvar propertyHandlers = element._propertyHandlers\r\n\t\t\tvar Element = element.constructor\r\n\t\t\tfor (var key in properties) {\r\n\t\t\t\tvar value = properties[key]\r\n\t\t\t\tvar VariableClass = Element[key]\r\n\t\t\t\tif (typeof VariableClass === 'function' && VariableClass.notifies && VariableClass !== value) {\r\n\t\t\t\t\thasOwn(Element, VariableClass)\r\n\t\t\t\t\t// if (value instanceof VariableClass) { TODO: assign the value as the owned instance\r\n\t\t\t\t\tVariableClass.for(element).put(value)\r\n\t\t\t\t}\r\n\t\t\t\tvar styleDefinition\r\n\t\t\t\tvar propertyHandler = propertyHandlers[key]\r\n\t\t\t\tif (propertyHandler) {\r\n\t\t\t\t\tif (propertyHandler === true) {\r\n\t\t\t\t\t\tif (value && value.notifies) {\r\n\t\t\t\t\t\t// a standard, known element property\r\n\t\t\t\t\t\t\tnew PropertyRenderer({\r\n\t\t\t\t\t\t\t\tname: key,\r\n\t\t\t\t\t\t\t\tvariable: value,\r\n\t\t\t\t\t\t\t\telement: element\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\telement[key] = value\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpropertyHandler(element, value, key, properties)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if ((styleDefinition = styleDefinitions[key])) {\r\n\t\t\t\t\tif (value && value.notifies) {\r\n\t\t\t\t\t\tnew StyleRenderer({\r\n\t\t\t\t\t\t\tname: key,\r\n\t\t\t\t\t\t\tvariable: value,\r\n\t\t\t\t\t\t\telement: element\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tstyleDefinition(element, value, key)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (element[key] == null) {\r\n\t\t\t\t\t// we are working an unknown/unstandard property (or an event listener)\r\n\t\t\t\t\t// undefined or null means we can safely set\r\n\t\t\t\t\t// TODO: we may want to do the event listener check first so we can handle oncustomevent (that needs an addEventListener call to work)\r\n\t\t\t\t\telement[key] = value\r\n\t\t\t\t} else if (typeof value === 'function' && key.slice(0, 2) === 'on') {\r\n\t\t\t\t\t// event listener with one already defined on the prototype\r\n\t\t\t\t\telement.addEventListener(key.slice(2), value)\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// otherwise bypass/override the native getter/setter\r\n\t\t\t\t\tObject.defineProperty(element, key, {\r\n\t\t\t\t\t\tvalue: value,\r\n\t\t\t\t\t\tenumerable: true,\r\n\t\t\t\t\t\tconfigurable: true,\r\n\t\t\t\t\t\twritable: true\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction assignGenerators(element, properties) {\r\n\t\t\tvar generators = properties._generators\r\n\t\t\tvar customGenerators\r\n\t\t\tvar styleGenerators\r\n\t\t\tvar nativeGenerators\r\n\t\t\tvar propertyHandlers = element._propertyHandlers\r\n\t\t\tfor (var key in generators) {\r\n\t\t\t\tvar variable = new VariableExports.GeneratorVariable(generators[key].bind(element, properties))\r\n\t\t\t\tif (propertyHandlers[key]) {\r\n\t\t\t\t\t(nativeGenerators || (nativeGenerators = {}))[key] = variable\r\n\t\t\t\t} else if (styleDefinitions[key]) {\r\n\t\t\t\t\t(styleGenerators || (styleGenerators = {}))[key] = variable\r\n\t\t\t\t} else {\r\n\t\t\t\t\t(customGenerators || (customGenerators = {}))[key] = variable\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (customGenerators) {\r\n\t\t\t\t// custom ones must go first\r\n\t\t\t\tassignProperties(element, customGenerators)\r\n\t\t\t}\r\n\t\t\tif (styleGenerators) {\r\n\t\t\t\tassignProperties(element, styleGenerators)\r\n\t\t\t}\r\n\t\t\tif (nativeGenerators) {\r\n\t\t\t\t// native ones must come last so they can access custom ones\r\n\t\t\t\tassignProperties(element, nativeGenerators)\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction buildContent(element, content, key, properties) {\r\n\t\t\tvar each = element.each || properties.each\r\n\t\t\tif (each && content) {\r\n\t\t\t\t// render as list\r\n\t\t\t\tif (each.create) {\r\n\t\t\t\t\teach.defineHasOwn = function () {\r\n\t\t\t\t\t\tvar ItemClass = content.getCollectionOf && content.getCollectionOf() || Item\r\n\t\t\t\t\t\thasOwn(each, ItemClass, function (element) {\r\n\t\t\t\t\t\t\tvar itemVariable = ItemClass.from(element._item)\r\n\t\t\t\t\t\t\treturn itemVariable\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (content.notifies) {\r\n\t\t\t\t\tnew ListRenderer({\r\n\t\t\t\t\t\teach: each,\r\n\t\t\t\t\t\tvariable: content,\r\n\t\t\t\t\t\telement: element\r\n\t\t\t\t\t})\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar fragment = doc.createDocumentFragment()\r\n\t\t\t\t\tif (each.defineHasOwn) {\r\n\t\t\t\t\t\teach.defineHasOwn()\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontent.forEach(function(item) {\r\n\t\t\t\t\t\tif (each.create) {\r\n\t\t\t\t\t\t\tchildElement = each.create({parent: element, _item: item}) // TODO: make a faster object here potentially\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tchildElement = each(item, element)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfragment.appendChild(childElement)\r\n\t\t\t\t\t})\r\n\t\t\t\t\telement.appendChild(fragment)\r\n\t\t\t\t}\r\n\t\t\t} else if (inputs[element.tagName]) {\r\n\t\t\t\t// render into input\r\n\t\t\t\tbuildInputContent(element, content)\r\n\t\t\t} else if (content instanceof Array) {\r\n\t\t\t\t// treat array as children (potentially of the content node)\r\n\t\t\t\telement = element.contentNode || element\r\n\t\t\t\tlayoutChildren(element, content, element)\r\n\t\t\t} else {\r\n\t\t\t\t// render as string\r\n\t\t\t\telement.appendChild(variableAsContent(element, content))\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction bindChanges(element, variable, key, conversion) {\r\n\t\t\tlang.nextTurn(function() { // wait for next turn in case inputChanges isn't set yet\r\n\t\t\t\tvar inputEvents = element.inputEvents || ['change', 'alkali-change']\r\n\t\t\t\tfor (var i = 0, l = inputEvents.length; i < l; i++) {\r\n\t\t\t\t\telement.addEventListener(inputEvents[i], function (event) {\r\n\t\t\t\t\t\tvar value = element[key]\r\n\t\t\t\t\t\tvar result = variable.put(conversion ? conversion(value, element) : value, new Context(element))\r\n\t\t\t\t\t\tif (result === VariableExports.deny) {\r\n\t\t\t\t\t\t\tthrow new Error('Variable change denied')\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\r\n\t\tdoc.addEventListener('click', function(event) {\r\n\t\t\tvar target = event.target\r\n\t\t\tif (target.type === 'radio') {\r\n\t\t\t\tvar radios = doc.querySelectorAll('input[type=radio]')\r\n\t\t\t\tfor (var i = 0, l = radios.length; i < l; i++) {\r\n\t\t\t\t\tvar radio = radios[i]\r\n\t\t\t\t\tif (radio.name === target.name && radio !== target) {\r\n\t\t\t\t\t\tradio.dispatchEvent(new Event('alkali-change', {}))\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\tfunction conversion(value, element) {\r\n\t\t\tif (element.type == 'number') {\r\n\t\t\t\treturn parseFloat(value)\r\n\t\t\t}\r\n\t\t\treturn value\r\n\t\t}\r\n\t\r\n\t\tfunction buildInputContent(element, content) {\r\n\t\t\tvar inputType = element.type\r\n\t\t\tvar inputProperty = inputType in {date: 1, datetime: 1, time: 1} ?\r\n\t\t\t\t\t'valueAsDate' : (inputType === 'checkbox' || inputType === 'radio') ?\r\n\t\t\t\t\t\t'checked' : 'value'\r\n\t\r\n\t\t\tif (content && content.notifies) {\r\n\t\t\t\t// a variable, respond to changes\r\n\t\t\t\tnew InputPropertyRenderer({\r\n\t\t\t\t\tvariable: content,\r\n\t\t\t\t\tname: inputProperty,\r\n\t\t\t\t\telement: element\r\n\t\t\t\t})\r\n\t\t\t\t// and bind the other way as well, updating the variable in response to input changes\r\n\t\t\t\tbindChanges(element, content, inputProperty, conversion)\r\n\t\t\t} else {\r\n\t\t\t\t// primitive\r\n\t\t\t\telement[inputProperty] = content\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction mergeObject(Element, value, key, properties) {\r\n\t\t\tvar existing = properties[key]\r\n\t\t\tif (existing) {\r\n\t\t\t\tfor (var subKey in value) {\r\n\t\t\t\t\texisting[subKey] = value[subKey]\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tproperties[key] = value\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tvar classHandlers = {\r\n\t\t\tclasses: mergeObject,\r\n\t\t\t_generators: mergeObject,\r\n\t\t\tdataset: mergeObject,\r\n\t\t\tattributes: mergeObject,\r\n\t\t\tstyle: mergeObject,\r\n\t\t\thasOwn: function(Element, value) {\r\n\t\t\t\thasOwn(Element, value)\r\n\t\t\t},\r\n\t\t\tchildren: function(Element, value) {\r\n\t\t\t\tElement.children = value\r\n\t\t\t},\r\n\t\t\tshadow: function(Element, value) {\r\n\t\t\t\tElement.shadow = value\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction applyToConstructor(argument, Element) {\r\n\t\t\tvar applyOnCreate = Element._applyOnCreate\r\n\t\t\tif (argument && typeof argument === 'object') {\r\n\t\t\t\tif (argument instanceof Array || argument.notifies) {\r\n\t\t\t\t\tapplyOnCreate.content = argument\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (var key in argument) {\r\n\t\t\t\t\t// TODO: eventually we want to be able to set these as rules statically per element\r\n\t\t\t\t\t/*if (styleDefinitions[key]) {\r\n\t\t\t\t\t\tvar styles = Element.styles || (Element.styles = [])\r\n\t\t\t\t\t\tstyles.push(key)\r\n\t\t\t\t\t\tstyles[key] = descriptor.value\r\n\t\t\t\t\t} else {*/\r\n\t\t\t\t\t\tvar value = argument[key]\r\n\t\t\t\t\t\tvar VariableClass = Element[key]\r\n\t\t\t\t\t\tif (typeof value === 'function') {\r\n\t\t\t\t\t\t\tif (value.notifies) {\r\n\t\t\t\t\t\t\t\tif (value === Variable) {\r\n\t\t\t\t\t\t\t\t\tvalue = Variable() // create a branded variable if we are using a generic one\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// for Variable classes we make them statically available on the element\r\n\t\t\t\t\t\t\t\tElement[key] = value\r\n\t\t\t\t\t\t\t} else if (isGenerator(value)) {\r\n\t\t\t\t\t\t\t\tif (key.slice(0, 4) === 'get_') {\r\n\t\t\t\t\t\t\t\t\tkey = key.slice(4)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t(applyOnCreate._generators || (applyOnCreate._generators = {}))[key] = value\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if (value && value.notifies) {\r\n\t\t\t\t\t\t\t// also store any variables as statically available properties\r\n\t\t\t\t\t\t\tElement[key] = value\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (classHandlers[key]) { // Could eliminate this if we got rid of hasOwn\r\n\t\t\t\t\t\t\tclassHandlers[key](Element, value, key, applyOnCreate)\r\n\t\t\t\t\t\t} else if (typeof VariableClass === 'function' && VariableClass.notifies) {\r\n\t\t\t\t\t\t\tapplyOnCreate[key] = new VariableClass(value)\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tapplyOnCreate[key] = value\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (typeof argument === 'function' && !argument.for) {\r\n\t\t\t\tthrow new TypeError('Function as argument not supported')\r\n\t\t\t} else {\r\n\t\t\t\tapplyOnCreate.content = argument\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction getApplySet(Class) {\r\n\t\t\tif (Class.hasOwnProperty('_applyOnCreate')) {\r\n\t\t\t\treturn Class._applyOnCreate\r\n\t\t\t}\r\n\t\t\t// this means we didn't extend and evaluate the prototype yet\r\n\t\t\tif (Class.getForClass) {\r\n\t\t\t\t// we are extending an alkali constructor\r\n\t\t\t\t// if this class is inheriting from an alkali constructor, work our way up the chain\r\n\t\t\t\tvar applyOnCreate = Class._applyOnCreate = {}\r\n\t\t\t\tvar parentApplySet = getApplySet(getPrototypeOf(Class))\r\n\t\t\t\tfor (var key in parentApplySet) {\r\n\t\t\t\t\tapplyOnCreate[key] = classHandlers[key] ? Object.create(parentApplySet[key]) : parentApplySet[key]\r\n\t\t\t\t}\r\n\t\t\t\t// we need to check the prototype for event handlers\r\n\t\t\t\tvar prototype = Class.prototype\r\n\t\t\t\tvar propertyHandlers\r\n\t\t\t\tvar keys = Object.getOwnPropertyNames(prototype)\r\n\t\t\t\tfor (var i = 0, l = keys.length; i < l; i++) {\r\n\t\t\t\t\tvar key = keys[i]\r\n\t\t\t\t\tif (key.slice(0, 2) === 'on' || (key === 'render' && isGenerator(prototype[key]))) {\r\n\t\t\t\t\t\tapplyOnCreate[key] = prototype[key]\r\n\t\t\t\t\t} else if (key.slice(0, 6) === 'render') {\r\n\t\t\t\t\t\tvar propertyName = key[6].toLowerCase() + key.slice(7)\r\n\t\t\t\t\t\tif (!propertyHandlers) {\r\n\t\t\t\t\t\t\tpropertyHandlers = prototype._propertyHandlers = Object.create(prototype._propertyHandlers)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tpropertyHandlers[propertyName] = true // TODO: is it better to implement this with property handlers?\r\n\t\t\t\t\t\tObject.defineProperty(prototype, propertyName, renderDescriptor(key))\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn applyOnCreate\r\n\t\t\t}\r\n\t\t\treturn null\r\n\t\t}\r\n\t\r\n\t\tfunction renderDescriptor(renderMethod) {\r\n\t\t\tvar map = new WeakMap()\r\n\t\t\treturn {\r\n\t\t\t\tget: function() {\r\n\t\t\t\t\treturn map.has(this) ? map.get(this) : null\r\n\t\t\t\t},\r\n\t\t\t\tset: function(value) {\r\n\t\t\t\t\tmap.set(this, value)\r\n\t\t\t\t\tthis[renderMethod](value)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction makeElementConstructor() {\r\n\t\t\tfunction Element(selector, properties) {\r\n\t\t\t\tif (this instanceof Element){\r\n\t\t\t\t\t// create DOM element\r\n\t\t\t\t\t// Need to detect if we have registered the element and `this` is actually already the correct instance\r\n\t\t\t\t\treturn create.apply(Element.prototype === getPrototypeOf(this) ? Element :// this means it is from this constructor\r\n\t\t\t\t\t\tthis.constructor, // this means it was constructed from a subclass\r\n\t\t\t\t\t\targuments)\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// extend to create new class\r\n\t\t\t\t\treturn withProperties.apply(Element, arguments)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn Element\r\n\t\t}\r\n\t\r\n\t\tfunction withProperties(selector, properties) {\r\n\t\t\tvar Element = makeElementConstructor()\r\n\t\t\tif (this.with) {\r\n\t\t\t\t// TODO: Might consider only doing this for derivatives of derivatives, since we don't need to inherit from base constructors\r\n\t\t\t\t// or only doing this in the case of element having custom properties (could mark it with a flag)\r\n\t\t\t\tsetPrototypeOf(Element, this)\r\n\t\t\t\tElement.ownedClasses = null\r\n\t\t\t} else {\r\n\t\t\t\tElement.create = create\r\n\t\t\t\tElement.with = withProperties\r\n\t\t\t\tElement.for = forTarget\r\n\t\t\t\tElement.property = propertyForElement\r\n\t\t\t\tElement.getForClass = getForClass\r\n\t\t\t}\r\n\t\t\tElement.prototype = this.prototype\r\n\t\r\n\t\t\tvar applyOnCreate = Element._applyOnCreate = {}\r\n\t\t\tvar parentApplySet = getApplySet(this)\r\n\t\t\t// copy parent properties\r\n\t\t\tfor (var key in parentApplySet) {\r\n\t\t\t\tapplyOnCreate[key] = classHandlers[key] ? Object.create(parentApplySet[key]) : parentApplySet[key]\r\n\t\t\t}\r\n\t\r\n\t\t\tvar i = 0 // for arguments\r\n\t\t\tif (typeof selector === 'string') {\r\n\t\t\t\tvar selectorMatch = selector.match(SELECTOR_REGEX)\r\n\t\t\t\tif (selectorMatch) {\r\n\t\t\t\t\tdo {\r\n\t\t\t\t\t\tvar operator = selectorMatch[1]\r\n\t\t\t\t\t\tvar name = selectorMatch[2]\r\n\t\t\t\t\t\tif (operator == '.') {\r\n\t\t\t\t\t\t\tif (applyOnCreate.className) {\r\n\t\t\t\t\t\t\t\tapplyOnCreate.className += ' ' + name\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tapplyOnCreate.className = name\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tapplyOnCreate.id = name\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar remaining = selectorMatch[3]\r\n\t\t\t\t\t\tselectorMatch = remaining && remaining.match(SELECTOR_REGEX)\r\n\t\t\t\t\t} while (selectorMatch)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tapplyOnCreate.content = selector\r\n\t\t\t\t}\r\n\t\t\t\ti++ // skip the first argument\r\n\t\t\t}\r\n\t\r\n\t\t\tfor (var l = arguments.length; i < l; i++) {\r\n\t\t\t\tapplyToConstructor(arguments[i], Element)\r\n\t\t\t}\r\n\t\t\treturn Element\r\n\t\t}\r\n\t\tvar currentParent\r\n\t\tfunction create(selector, properties) {\r\n\t\t\t// TODO: make this a symbol\r\n\t\t\tvar applyOnCreate = getApplySet(this)\r\n\t\t\tif (currentParent) {\r\n\t\t\t\tvar parent = currentParent\r\n\t\t\t\tcurrentParent = null\r\n\t\t\t}\r\n\t/*\t\tif (this._initialized != this) {\r\n\t\t\t\tthis._initialized = this\r\n\t\t\t\tthis.initialize && this.initialize()\r\n\t\t\t\tvar styles = this.styles\r\n\t\t\t\tif (styles) {\r\n\t\t\t\t\tvar rule = createCssRule(getUniqueSelector(this))\r\n\t\t\t\t\tfor (var i = 0, l = styles.length; i < l; i++) {\r\n\t\t\t\t\t\tvar key = styles[i]\r\n\t\t\t\t\t\tvar value = styles[key]\r\n\t\t\t\t\t\t// TODO: if it is a contextualized variable, do this on the element\r\n\t\t\t\t\t\tvar styleDefinition = styleDefinitions[key]\r\n\t\t\t\t\t\tif (styleDefinition) {\r\n\t\t\t\t\t\t\tstyleDefinition(rule, value, key)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!this.hasOwnProperty('_applyOnCreate')) {\r\n\t\t\t\t\tapplyOnCreate = getApplySet(this)\r\n\t\t\t\t}\r\n\t\t\t}*/\r\n\t\t\tvar element = doc.createElement(this.tagName)\r\n\t\t\tif (selector && selector.parent) {\r\n\t\t\t\tparent = selector.parent\r\n\t\t\t}\r\n\t\t\tif (parent) {\r\n\t\t\t\tpresumptiveParentMap.set(element, parent)\r\n\t\t\t}\r\n\t\t\tif (!(element instanceof this)) {\r\n\t\t\t\t// ideally we want to avoid this call, as it is expensive, but for classes that\r\n\t\t\t\t// don't register a tag name, we have to make sure the prototype chain is correct\r\n\t\t\t\tsetPrototypeOf(element, this.prototype)\r\n\t\t\t}\r\n\t\t\tif (element.constructor != this) {\r\n\t\t\t\tif (buggyConstructorSetter) {\r\n\t\t\t\t\t// in safari, directly setting the constructor messes up the native prototype\r\n\t\t\t\t\tObject.defineProperty(element, 'constructor', { value: this })\r\n\t\t\t\t} else {\r\n\t\t\t\t\telement.constructor = this // need to do this for hasOwn contextualization to work\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (arguments.length > 0) {\r\n\t\t\t\t// copy applyOnCreate when we have arguments\r\n\t\t\t\tvar ElementApplyOnCreate = applyOnCreate\r\n\t\t\t\tapplyOnCreate = {}\r\n\t\t\t\tfor (var key in ElementApplyOnCreate) {\r\n\t\t\t\t\tapplyOnCreate[key] = classHandlers[key] ? Object.create(ElementApplyOnCreate[key]) : ElementApplyOnCreate[key]\r\n\t\t\t\t}\r\n\t\t\t\tvar i = 0\r\n\t\t\t\tif (typeof selector == 'string') {\r\n\t\t\t\t\ti++\r\n\t\t\t\t\tvar selectorMatch = selector.match(SELECTOR_REGEX)\r\n\t\t\t\t\tif (selectorMatch) {\r\n\t\t\t\t\t\tdo {\r\n\t\t\t\t\t\t\tvar operator = selectorMatch[1]\r\n\t\t\t\t\t\t\tvar name = selectorMatch[2]\r\n\t\t\t\t\t\t\tif (operator == '.') {\r\n\t\t\t\t\t\t\t\tif (applyOnCreate.className) {\r\n\t\t\t\t\t\t\t\t\tapplyOnCreate.className += ' ' + name\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tif (element.className) {\r\n\t\t\t\t\t\t\t\t\t\t\telement.className += ' ' + name\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\telement.className = name\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tif (applyOnCreate.id) {\r\n\t\t\t\t\t\t\t\t\tapplyOnCreate.id = name\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// just skip right to the element\r\n\t\t\t\t\t\t\t\t\telement.id = name\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar remaining = selectorMatch[3]\r\n\t\t\t\t\t\t\tselectorMatch = remaining && remaining.match(SELECTOR_REGEX)\r\n\t\t\t\t\t\t} while (selectorMatch)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tapplyOnCreate.content = selector\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (selector && selector._item) {\r\n\t\t\t\t\t// this is kind of hack, to get the Item available before the properties, eventually we may want to\r\n\t\t\t\t\t// order static properties before variable binding applications, but for now.\r\n\t\t\t\t\telement._item = selector._item\r\n\t\t\t\t}\r\n\t\t\t\tfor (var l = arguments.length; i < l; i++) {\r\n\t\t\t\t\tvar argument = arguments[i]\r\n\t\t\t\t\tif (argument && typeof argument === 'object') {\r\n\t\t\t\t\t\tif (argument instanceof Array || argument.notifies) {\r\n\t\t\t\t\t\t\tapplyOnCreate.content = argument\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tfor (var key in argument) {\r\n\t\t\t\t\t\t\t\tif (classHandlers[key]) {\r\n\t\t\t\t\t\t\t\t\tclassHandlers[key](this, argument[key], key, applyOnCreate)\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tapplyOnCreate[key] = argument[key]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (typeof argument === 'function' && argument.for) {\r\n\t\t\t\t\t\tapplyOnCreate.content = argument.for(element)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tapplyOnCreate.content = argument\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (element.created) {\r\n\t\t\t\tapplyOnCreate = element.created(applyOnCreate) || applyOnCreate\r\n\t\t\t} else if (applyOnCreate.created) {\r\n\t\t\t\tapplyOnCreate = applyOnCreate.created.call(element, applyOnCreate) || applyOnCreate\r\n\t\t\t}\r\n\t\t\t// TODO: inline this for better performance, possibly\r\n\t\t\tassignProperties(element, applyOnCreate)\r\n\t\r\n\t\t\tif (applyOnCreate._generators) {\r\n\t\t\t\tassignGenerators(element, applyOnCreate)\r\n\t\t\t}\r\n\t\r\n\t\t\tif (this.children) {\r\n\t\t\t\tlayoutChildren(element, this.children, element)\r\n\t\t\t}\r\n\t\t\tif (this.shadow) {\r\n\t\t\t\tlayoutChildren(element.attachShadow({mode: 'open'}), this.shadow, element)\r\n\t\t\t}\r\n\t\t\t// always do this last, so it can be properly inserted inside the children\r\n\t\t\tif (element.content != null) {\r\n\t\t\t\tbuildContent(element, element.content, 'content', applyOnCreate)\r\n\t\t\t}\r\n\t\t\telement.ready && element.ready(applyOnCreate)\r\n\t\t\treturn element\r\n\t\t}\r\n\t\r\n\t\tvar slice = [].slice\r\n\t\tfunction append(parent){\r\n\t\t\treturn this.nodeType ?\r\n\t\t\t\tlayoutChildren(this, arguments, this) : // called as a method\r\n\t\t\t\tlayoutChildren(parent, slice.call(arguments, 1), parent) // called as a function\r\n\t\t}\r\n\t\r\n\t\tfunction prepend(parent){\r\n\t\t\treturn this.nodeType ?\r\n\t\t\t\tlayoutChildren(this, arguments, this, true) : // called as a method\r\n\t\t\t\tlayoutChildren(parent, slice.call(arguments, 1), parent, true) // called as a function\r\n\t\t}\r\n\t\r\n\t\tfunction defineTag(tagName, Element) {\r\n\t\t\tvar extendElement = Element.tagName\r\n\t\t\tElement.tagName = tagName\r\n\t\t\tif (typeof customElements === 'object') {\r\n\t\t\t\tcustomElements.define(tagName, lang.extendClass(HTMLElement), { extends: extendElement })\r\n\t\t\t} else {\r\n\t\t\t\tconsole.warn('This browser does not support customElements, ensure that the constructor is used to create new elements')\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tvar Element = withProperties.call(typeof HTMLElement !== 'undefined' ? HTMLElement : function() {})\r\n\t\r\n\t\tElement.defineTag = defineTag\r\n\t\tElement.assign = function(target, properties) {\r\n\t\t\tif (typeof target === 'function') {\r\n\t\t\t\t// assign properties to an existing constructor/class\r\n\t\t\t\tgetApplySet(target) // make sure we have our own applyOnCreate first\r\n\t\t\t\tapplyToConstructor(properties, target)\r\n\t\t\t} else {\r\n\t\t\t\t// assign to an element\r\n\t\t\t\t// TODO: Handle content property separately\r\n\t\t\t\treturn assignProperties(target, properties)\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tElement.within = function(element){\r\n\t\t\t// find closest child\r\n\t\t}\r\n\t\r\n\t\tgenerate([\r\n\t\t\t'Video',\r\n\t\t\t'Source',\r\n\t\t\t'Media',\r\n\t\t\t'Audio',\r\n\t\t\t'UL',\r\n\t\t\t'U',\r\n\t\t\t'Track',\r\n\t\t\t'Title',\r\n\t\t\t'TextArea',\r\n\t\t\t'Template',\r\n\t\t\t'TBody',\r\n\t\t\t'THead',\r\n\t\t\t'TFoot',\r\n\t\t\t'TR',\r\n\t\t\t'Table',\r\n\t\t\t'Col',\r\n\t\t\t'ColGroup',\r\n\t\t\t'TH',\r\n\t\t\t'TD',\r\n\t\t\t'Caption',\r\n\t\t\t'Sup',\r\n\t\t\t'Sub',\r\n\t\t\t'Style',\r\n\t\t\t'Strong',\r\n\t\t\t'Span',\r\n\t\t\t'Small',\r\n\t\t\t'Shadow',\r\n\t\t\t'Select',\r\n\t\t\t'Script',\r\n\t\t\t'S',\r\n\t\t\t'Quote',\r\n\t\t\t'Progress',\r\n\t\t\t'Pre',\r\n\t\t\t'Picture',\r\n\t\t\t'Param',\r\n\t\t\t'P',\r\n\t\t\t'Output',\r\n\t\t\t'Option',\r\n\t\t\t'Optgroup',\r\n\t\t\t'Object',\r\n\t\t\t'OL',\r\n\t\t\t'Ins',\r\n\t\t\t'I',\r\n\t\t\t'Del',\r\n\t\t\t'Meter',\r\n\t\t\t'Meta',\r\n\t\t\t'Menu',\r\n\t\t\t'Map',\r\n\t\t\t'Link',\r\n\t\t\t'Legend',\r\n\t\t\t'Label',\r\n\t\t\t'LI',\r\n\t\t\t'KeyGen',\r\n\t\t\t'Input',\r\n\t\t\t'Img',\r\n\t\t\t'IFrame',\r\n\t\t\t'H1',\r\n\t\t\t'H2',\r\n\t\t\t'H3',\r\n\t\t\t'H4',\r\n\t\t\t'H5',\r\n\t\t\t'H6',\r\n\t\t\t'Hr',\r\n\t\t\t'FrameSet',\r\n\t\t\t'Frame',\r\n\t\t\t'Form',\r\n\t\t\t'Font',\r\n\t\t\t'Embed',\r\n\t\t\t'Em',\r\n\t\t\t'Code',\r\n\t\t\t'Cite',\r\n\t\t\t'Dfn',\r\n\t\t\t'B',\r\n\t\t\t'Article',\r\n\t\t\t'Aside',\r\n\t\t\t'Abbr',\r\n\t\t\t'Footer',\r\n\t\t\t'Figure',\r\n\t\t\t'FigCaption',\r\n\t\t\t'Header',\r\n\t\t\t'Main',\r\n\t\t\t'Mark',\r\n\t\t\t'MenuItem',\r\n\t\t\t'Nav',\r\n\t\t\t'Section',\r\n\t\t\t'Slot',\r\n\t\t\t'Summary',\r\n\t\t\t'WBr',\r\n\t\t\t'Div',\r\n\t\t\t'Dialog',\r\n\t\t\t'Details',\r\n\t\t\t'DataList',\r\n\t\t\t'DL',\r\n\t\t\t'Canvas',\r\n\t\t\t'Button',\r\n\t\t\t'Base',\r\n\t\t\t'Br',\r\n\t\t\t'Area',\r\n\t\t\t'A'\r\n\t\t])\r\n\t\tgenerateInputs([\r\n\t\t\t'Checkbox',\r\n\t\t\t'Password',\r\n\t\t\t'Submit',\r\n\t\t\t'Radio',\r\n\t\t\t'Color',\r\n\t\t\t'Date',\r\n\t\t\t'DateTime',\r\n\t\t\t'Email',\r\n\t\t\t'Month',\r\n\t\t\t'Number',\r\n\t\t\t'Range',\r\n\t\t\t'Search',\r\n\t\t\t'Tel',\r\n\t\t\t'Time',\r\n\t\t\t'Url',\r\n\t\t\t'Week'])\r\n\t\r\n\t\tvar tags = {}\r\n\t\tfunction getConstructor(tagName) {\r\n\t\t\ttagName = tagName.toLowerCase()\r\n\t\t\treturn tags[tagName] ||\r\n\t\t\t\t(tags[tagName] =\r\n\t\t\t\t\tsetupElement(withProperties.call(doc.createElement(tagName).constructor), tagName))\r\n\t\t}\r\n\t\r\n\t\tfunction setupElement(Element, tagName) {\r\n\t\t\tvar props = elementPropertyHandlers[tagName]\r\n\t\t\tif (props && !props.assigned) {\r\n\t\t\t\tvar handlers = Element.prototype._propertyHandlers = Object.create(propertyHandlers)\r\n\t\t\t\tfor (var i = 0, l = props.length; i < l; i++) {\r\n\t\t\t\t\thandlers[props[i]] = true\r\n\t\t\t\t}\r\n\t\t\t\tif (props.value) {\r\n\t\t\t\t\tfor (var i in props) {\r\n\t\t\t\t\t\tif (!(i > -1)) { // assign any string properties if necessary\r\n\t\t\t\t\t\t\thandlers[i] = props[i]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tprops.assigned = true\r\n\t\t\t}\r\n\t\t\tElement.tagName = tagName\r\n\t\t\treturn Element\r\n\t\t}\r\n\t\tfunction generate(elements) {\r\n\t\t\telements.forEach(function(elementName) {\r\n\t\t\t\tvar ElementClass\r\n\t\t\t\tObject.defineProperty(Element, elementName, {\r\n\t\t\t\t\tget: function() {\r\n\t\t\t\t\t\treturn ElementClass || (ElementClass = getConstructor(elementName))\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\t\tfunction generateInputs(elements) {\r\n\t\t\telements.forEach(function(inputType) {\r\n\t\t\t\tvar ElementClass\r\n\t\t\t\tObject.defineProperty(Element, inputType, {\r\n\t\t\t\t\tget: function() {\r\n\t\t\t\t\t\t// TODO: make all inputs extend from input generated from generate\r\n\t\t\t\t\t\treturn ElementClass || (ElementClass = setupElement(withProperties.call(HTMLInputElement, {\r\n\t\t\t\t\t\t\ttype: inputType.toLowerCase()\r\n\t\t\t\t\t\t}), 'input'))\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t// alias all the inputs with an Input suffix\r\n\t\t\t\tObject.defineProperty(Element, inputType + 'Input', {\r\n\t\t\t\t\tget: function() {\r\n\t\t\t\t\t\treturn this[inputType]\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\t\r\n\t\tvar aliases = {\r\n\t\t\tAnchor: 'A',\r\n\t\t\tImage: 'Img',\r\n\t\t\tParagraph: 'P',\r\n\t\t\tTextarea: 'TextArea',\r\n\t\t\tDList: 'DL',\r\n\t\t\tUList: 'UL',\r\n\t\t\tOList: 'OL',\r\n\t\t\tListItem: 'LI',\r\n\t\t\tText: 'Input',\r\n\t\t\tTextInput: 'Input',\r\n\t\t\tTableRow: 'TR',\r\n\t\t\tTableCell: 'TD',\r\n\t\t\tTableHeaderCell: 'TH',\r\n\t\t\tTableHeader: 'THead',\r\n\t\t\tTableBody: 'TBody'\r\n\t\t}\r\n\t\tfor (var alias in aliases) {\r\n\t\t\t(function(alias, to) {\r\n\t\t\t\tObject.defineProperty(Element, alias, {\r\n\t\t\t\t\tget: function() {\r\n\t\t\t\t\t\treturn this[to]\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t})(alias, aliases[alias])\r\n\t\t}\r\n\t\r\n\t\tElement.append = append\r\n\t\tRenderer.append = append // make it available to the renderer\r\n\t\tElement.prepend = prepend\r\n\t\tElement.refresh = Renderer.refresh\r\n\t\tElement.options = {\r\n\t\t\tmoveLiveElementsEnabled: true,\r\n\t\t}\r\n\t\tElement.content = function(element){\r\n\t\t\t// container marker\r\n\t\t\treturn {\r\n\t\t\t\tisContentNode: true,\r\n\t\t\t\tcreate: element.create.bind(element)\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tElement.ElementClass = function() {}\r\n\t\tif (typeof Symbol !== 'undefined') {\r\n\t\t\t// make instanceof work for Element\r\n\t\t\tObject.defineProperty(Element.ElementClass, Symbol.hasInstance, { value: function(target) {\r\n\t\t\t\treturn target && (target.create && target.with)\r\n\t\t\t}})\r\n\t\t}\r\n\t\r\n\t\t// TODO: unify this in lang\r\n\t\tElement.extend = function(Class, properties) {\r\n\t\t\tfunction ExtendedElement() {\r\n\t\t\t\treturn Class.apply(this, arguments)\r\n\t\t\t}\r\n\t\t\tsetPrototypeOf(ExtendedElement, Class)\r\n\t\t\tvar prototype = ExtendedElement.prototype = Object.create(Class.prototype, {\r\n\t\t\t\tconstructor: { value: ExtendedElement }\r\n\t\t\t})\r\n\t\t\tObject.getOwnPropertyNames(properties).forEach(function(key) {\r\n\t\t\t\tvar descriptor = Object.getOwnPropertyDescriptor(properties, key)\r\n\t\t\t\tif (classHandlers[key]) {\r\n\t\t\t\t\tclassHandlers[key](ExtendedElement, descriptor.value, key, properties)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tObject.defineProperty(prototype, key, descriptor)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\treturn ExtendedElement\r\n\t\t}\r\n\t\r\n\t\tfunction forTarget(target) {\r\n\t\t\treturn target.constructor.getForClass(target, this)\r\n\t\t}\r\n\t\r\n\t\tfunction hasOwn(From, Target, createInstance) {\r\n\t\t\tif (typeof Target === 'object') {\r\n\t\t\t\t// we were given an actual instance, use that\r\n\t\t\t\tvar elementMap = From.ownedClasses || (From.ownedClasses = new WeakMap())\r\n\t\t\t\tvar instanceMap = {get: function () {\r\n\t\t\t\t\treturn Target\r\n\t\t\t\t}}\r\n\t\t\t\telementMap.set(Target.constructor, instanceMap)\r\n\t\t\t\treturn hasOwn(From, Target.Class, Target.createInstance)\r\n\t\t\t}\r\n\t\t\tif (Target instanceof Array) {\r\n\t\t\t\treturn Target.forEach(function(Target) {\r\n\t\t\t\t\thasOwn(From, Target)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tvar elementMap = From.ownedClasses || (From.ownedClasses = new WeakMap())\r\n\t\t\t// TODO: Go up through prototype chain of Target and set each one\r\n\t\t\tif (!elementMap.has(Target)) {\r\n\t\t\t\tvar instanceMap = new WeakMap()\r\n\t\t\t\tinstanceMap.createInstance = createInstance\r\n\t\t\t\telementMap.set(Target, instanceMap)\r\n\t\t\t}\r\n\t\t\treturn From\r\n\t\t}\r\n\t\r\n\t\tfunction getForClass(element, Target) {\r\n\t\t\tvar createInstance\r\n\t\t\twhile (element && !(createInstance = element.constructor.ownedClasses && element.constructor.ownedClasses.get(Target))) {\r\n\t\t\t\telement = element.parentNode || presumptiveParentMap.get(element)\r\n\t\t\t}\r\n\t\t\tif (createInstance) {\r\n\t\t\t\tvar ownedInstances = element.ownedInstances || (element.ownedInstances = new WeakMap())\r\n\t\t\t\tvar instance = ownedInstances.get(Target)\r\n\t\t\t\tif (instance === undefined) {\r\n\t\t\t\t\townedInstances.set(Target, instance = createInstance(element))\r\n\t\t\t\t\tinstance.subject = element\r\n\t\t\t\t}\r\n\t\t\t\treturn instance\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction propertyForElement(key) {\r\n\t\t\t// we just need to establish one Variable class for each element, so we cache it\r\n\t\t\tThisElementVariable = this._Variable\r\n\t\t\tif (!ThisElementVariable) {\r\n\t\t\t\t// need our own branded variable class for this element class\r\n\t\t\t\tThisElementVariable = this._Variable = Variable()\r\n\t\r\n\t\t\t\thasOwn(this, ThisElementVariable, function(element) {\r\n\t\t\t\t\t// TODO: we might want to do this in init instead\r\n\t\t\t\t\tvar elementOverlay\r\n\t\t\t\t\tif (element.alkaliRenderers) {\r\n\t\t\t\t\t\tvar variableProperties = {}\r\n\t\t\t\t\t\tfor (var i = 0; i < element.alkaliRenderers.length; i++){\r\n\t\t\t\t\t\t\tvar renderer = element.alkaliRenderers[i]\r\n\t\t\t\t\t\t\tif (renderer.name) {\r\n\t\t\t\t\t\t\t\tvariableProperties[renderer.name] = {value: renderer.variable}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telementOverlay = Object.create(element, variableProperties)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\telementOverlay = element\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar instance = new ThisElementVariable(elementOverlay)\r\n\t\t\t\t\t// we are not observing, because you can't delegate getters and setters in safari\r\n\t\t\t\t\t// instance.observeObject()\r\n\t\t\t\t\treturn instance\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\t// now actually get the property class\r\n\t\t\treturn ThisElementVariable.property(key)\r\n\t\t}\r\n\t\r\n\t\tvar Item = Element.Item = VariableExports.Item\r\n\t\r\n\t\tfunction enterRenderer(Renderer, options/*, target*/) {\r\n\t\t\t// this will be used for optimized class-level variables\r\n\t\t\t/*if (target.started) { // TODO: Might want to pass in started as a parameter\r\n\t\t\t\t// this means that the renderer has already been created, so we just need to add this instance\r\n\t\t\t\tRenderer.prototype.renderUpdate.call(options, element)\r\n\t\t\t} else {*/\r\n\t\t\tnew Renderer(options)\r\n\t\t\t//}\r\n\t\t}\r\n\t\r\n\t\tfunction cleanup(target) {\r\n\t\t\tvar renderers = target.alkaliRenderers\r\n\t\t\tif (renderers) {\r\n\t\t\t\tfor (var i = 0, l = renderers.length; i < l; i++) {\r\n\t\t\t\t\trenderers[i].stop()\r\n\t\t\t\t}\r\n\t\t\t\ttarget.needsRestart = true\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction restart(target) {\r\n\t\t\tvar renderers = target.alkaliRenderers\r\n\t\t\tif (renderers) {\r\n\t\t\t\tfor (var i = 0, l = renderers.length; i < l; i++) {\r\n\t//\t\t\t\tupdaters[i].start()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// setup the mutation observer so we can be notified of attachments and removals\r\n\t\tfunction elementAttached(element) {\r\n\t\t\tvar Class = element.constructor\r\n\t\t\tif (Class.create) {\r\n\t/*\t\t\tif (Class.attachedInstances) {\r\n\t\t\t\t\tClass.attachedInstances.push(element)\r\n\t\t\t\t\tif (Class.attachedInstances.length === 1 && Class.needsRestart) {\r\n\t\t\t\t\t\trestart(Class)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tClass.attachedInstances = [element]\r\n\t\t\t\t}*/\r\n\t\t\t\tif (element.attached) {\r\n\t\t\t\t\telement.attached()\r\n\t\t\t\t}\r\n\t\t\t\tif (element.needsRestart) {\r\n\t\t\t\t\trestart(element)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction elementDetached(element) {\r\n\t\t\t/*var attachedInstances = element.constructor.attachedInstances\r\n\t\t\tif (attachedInstances) {\r\n\t\t\t\tvar index = attachedInstances.indexOf(element)\r\n\t\t\t\tif (index > -1) {\r\n\t\t\t\t\tattachedInstances.splice(index, 1)\r\n\t\t\t\t\tif (attachedInstances.length === 0) {\r\n\t\t\t\t\t\tcleanup(Class)\r\n\t\t\t\t\t}\r\n\t\t\t\t}*/\r\n\t\t\t\tif (element.detached) {\r\n\t\t\t\t\telement.detached()\r\n\t\t\t\t}\r\n\t\t\t\tcleanup(element)\r\n\t\t\t//}\r\n\t\t}\r\n\t\tif (typeof MutationObserver === 'function') {\r\n\t\t\tvar lifeStates = [{\r\n\t\t\t\tname: 'detached',\r\n\t\t\t\tnodes: 'removedNodes',\r\n\t\t\t\taction: elementDetached\r\n\t\t\t}, {\r\n\t\t\t\tname: 'attached',\r\n\t\t\t\tnodes: 'addedNodes',\r\n\t\t\t\taction: elementAttached\r\n\t\t\t}]\r\n\t\t\tfunction firstVisit(node, state) {\r\n\t\t\t\tif (state.name === 'attached') {\r\n\t\t\t\t\tif (node.__alkaliAttached__) {\r\n\t\t\t\t\t\treturn false\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnode.__alkaliAttached__ = true\r\n\t\t\t\t\t\tstate.action(node)\r\n\t\t\t\t\t\treturn true\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (node.__alkaliAttached__) {\r\n\t\t\t\t\tif (doc.body.contains(node)) {\r\n\t\t\t\t\t\t// detached event, but it is actually still attached (will get attached in a later mutation record)\r\n\t\t\t\t\t\t// so don't get through the detached/attached lifecycle\r\n\t\t\t\t\t\treturn false\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnode.__alkaliAttached__ = false\r\n\t\t\t\t\tstate.action(node)\r\n\t\t\t\t}\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t\tvar observer = new MutationObserver(function(mutations) {\r\n\t\t\t\tfor (var i = 0, il = mutations.length; i < il; i++) {\r\n\t\t\t\t\tvar mutation = mutations[i]\r\n\t\t\t\t\t// invoke action on element if we haven't already\r\n\t\t\t\t\tactionIteration:\r\n\t\t\t\t\tfor (var j = 0, jl = lifeStates.length; j < jl; j++) { // two steps, removed nodes and added nodes\r\n\t\t\t\t\t\tvar state = lifeStates[j]\r\n\t\t\t\t\t\tvar nodes = mutation[state.nodes]\r\n\t\t\t\t\t\t// iterate over node list\r\n\t\t\t\t\t\tnodeIteration:\r\n\t\t\t\t\t\tfor (var k = 0, kl = nodes.length; k < kl; k++) {\r\n\t\t\t\t\t\t\tvar baseNode = nodes[k]\r\n\t\t\t\t\t\t\tif (firstVisit(baseNode, state)) {\r\n\t\t\t\t\t\t\t\t// start traversal with child, if it exists\r\n\t\t\t\t\t\t\t\tvar currentNode = baseNode.firstChild\r\n\t\t\t\t\t\t\t\tif (currentNode) {\r\n\t\t\t\t\t\t\t\t\tdo {\r\n\t\t\t\t\t\t\t\t\t\tvar nextNode\r\n\t\t\t\t\t\t\t\t\t\tif (currentNode.nodeType === 1 && firstVisit(currentNode, state)) {\r\n\t\t\t\t\t\t\t\t\t\t\t// depth-first search\r\n\t\t\t\t\t\t\t\t\t\t\tnextNode = currentNode.firstChild\r\n\t\t\t\t\t\t\t\t\t\t\tif (!nextNode) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tnextNode = currentNode.nextSibling\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tnextNode = currentNode.nextSibling\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tif (!nextNode) {\r\n\t\t\t\t\t\t\t\t\t\t\t// come back out to parents\r\n\t\t\t\t\t\t\t\t\t\t\t// TODO: try keeping a stack to make this faster\r\n\t\t\t\t\t\t\t\t\t\t\tdo {\r\n\t\t\t\t\t\t\t\t\t\t\t\tcurrentNode = currentNode.parentNode\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (currentNode === baseNode) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontinue nodeIteration\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t} while (!(nextNode = currentNode.nextSibling))\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tcurrentNode = nextNode\r\n\t\t\t\t\t\t\t\t\t} while (true)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// if (options.moveLiveElementsEnabled) {\r\n\t\t\t\t\t\t\t// TODO: any options that we can really do here?\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tobserver.observe(doc.body || doc, {\r\n\t\t\t\tchildList: true,\r\n\t\t\t\tsubtree: true\r\n\t\t\t})\r\n\t\t}\r\n\t\r\n\t\tlang.copy(VariableExports.Context.prototype, {\r\n\t\t\tspecify: function(Variable) {\r\n\t\t\t\tvar element = this.subject\r\n\t\t\t\tvar distinctive = true\r\n\t\t\t\t;(this.generics || (this.generics = [])).push(Variable)\r\n\t\t\t\tdo {\r\n\t\t\t\t\tif (this.distinctSubject === element) {\r\n\t\t\t\t\t\tdistinctive = false\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar subjectMap = element.constructor.ownedClasses\r\n\t\t\t\t\tif (subjectMap) {\r\n\t\t\t\t\t\tvar instanceMap = subjectMap.get(Variable)\r\n\t\t\t\t\t\tif (instanceMap) {\r\n\t\t\t\t\t\t\tif (distinctive) {\r\n\t\t\t\t\t\t\t\tthis.distinctSubject = element\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tspecifiedInstance = instanceMap.get(element)\r\n\t\t\t\t\t\t\tif (!specifiedInstance) {\r\n\t\t\t\t\t\t\t\tinstanceMap.set(element, specifiedInstance = instanceMap.createInstance ?\r\n\t\t\t\t\t\t\t\t\tinstanceMap.createInstance(element) : new Variable())\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn specifiedInstance\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} while ((element = element.parentNode || presumptiveParentMap.get(element)))\r\n\t\t\t\t// else if no specific context is found, return default instance\r\n\t\t\t\treturn Variable.defaultInstance\r\n\t\t\t},\r\n\t\r\n\t\t\tgetContextualized: function(variable) {\r\n\t\t\t\t// returns a variable that has already been contextualized\r\n\t\t\t\tvar element = this.subject\r\n\t\t\t\tif (!element) {\r\n\t\t\t\t\t// no element, just use the default variable\r\n\t\t\t\t\treturn variable\r\n\t\t\t\t}\r\n\t\t\t\tif (variable._contextMap) {\r\n\t\t\t\t\tdo {\r\n\t\t\t\t\t\tvar instance = variable._contextMap.get(element)\r\n\t\t\t\t\t\tif (instance && instance.context.matches(element)) {\r\n\t\t\t\t\t\t\treturn instance\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} while ((element = element.parentNode || presumptiveParentMap.get(element)))\r\n\t\t\t\t}\r\n\t\t\t\tif (variable.context && variable.context.matches(this.subject)) {\r\n\t\t\t\t\t// check if the default variable is allowed\r\n\t\t\t\t\treturn variable\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\tmerge: function(childContext) {\r\n\t\t\t\tif (!this.distinctSubject ||\r\n\t\t\t\t\t\t(this.distinctSubject !== childContext.distinctSubject && this.distinctSubject.contains(childContext.distinctSubject))) {\r\n\t\t\t\t\tthis.distinctSubject = childContext.distinctSubject\r\n\t\t\t\t}\r\n\t\t\t\t[].push.apply(this.generics || (this.generics = []), childContext.generics)\r\n\t\t\t},\r\n\t\t\tgetDistinctElement: function(Variable, element) {\r\n\t\t\t\tdo {\r\n\t\t\t\t\tvar subjectMap = element.constructor.ownedClasses\r\n\t\t\t\t\tif (subjectMap) {\r\n\t\t\t\t\t\tvar instanceMap = subjectMap.get(Variable)\r\n\t\t\t\t\t\tif (instanceMap && instanceMap.has(element)) {\r\n\t\t\t\t\t\t\treturn element\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} while ((element = element.parentNode || presumptiveParentMap.get(element)))\r\n\t\t\t},\r\n\t\t\tmatches: function(element) {\r\n\t\t\t\tvar generics = this.generics\r\n\t\t\t\tif (generics) {\r\n\t\t\t\t\tfor (var i = 0, l = generics.length; i < l; i++) {\r\n\t\t\t\t\t\tif (this.getDistinctElement(generics[i], element) !== this.distinctSubject) {\r\n\t\t\t\t\t\t\treturn false\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\r\n\t\r\n\t\treturn Element\r\n\t}))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) { if (true) {\r\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) } else if (typeof module === 'object' && module.exports) {\t\t\t\t\r\n\t\tmodule.exports = factory() // Node\r\n\t}}(this, function () {\r\n\t\tvar getPrototypeOf = Object.getPrototypeOf || (function(base) { return base.__proto__ })\r\n\t\tvar setPrototypeOf = Object.setPrototypeOf || (function(base, proto) { base.__proto__ = proto})\r\n\t\tvar hasFeatures = {\r\n\t\t\trequestAnimationFrame: typeof requestAnimationFrame != 'undefined',\r\n\t\t\tdefineProperty: Object.defineProperty && (function() {\r\n\t\t\t\ttry{\r\n\t\t\t\t\tObject.defineProperty({}, 't', {})\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}catch(e) {\r\n\t\t\t\t}\r\n\t\t\t})(),\r\n\t\t\tpromise: typeof Promise !== 'undefined',\r\n\t\t\tMutationObserver: typeof MutationObserver !== 'undefined',\r\n\t\t\t'WeakMap': typeof WeakMap === 'function'\r\n\t\t}\r\n\t\tfunction has(feature) {\r\n\t\t\treturn hasFeatures[feature]\r\n\t\t}\r\n\t\r\n\t\tfunction SyncPromise(value) {\r\n\t\t\tthis.value = value\r\n\t\t}\r\n\t\tSyncPromise.prototype = {\r\n\t\t\tthen: function(onFulfilled, onRejected) {\r\n\t\t\t\tif (!onFulfilled) {\r\n\t\t\t\t\treturn new SyncPromise(this.value)\r\n\t\t\t\t}\r\n\t\t\t\ttry {\r\n\t\t\t\t\tvar result = onFulfilled(this.value)\r\n\t\t\t\t\treturn (result && result.then) ? result : new SyncPromise(result)\r\n\t\t\t\t} catch(error) {\r\n\t\t\t\t\treturn new SyncErrorPromise(error)\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcatch: function(handler) {\r\n\t\t\t\treturn this.then(null, handler)\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction SyncErrorPromise(error) {\r\n\t\t\tthis.value = error\r\n\t\t\tthis.unhandledTimeout = setTimeout(function() {\r\n\t\t\t\tconsole.error('Uncaught (in promise)', error)\r\n\t\t\t})\r\n\t\t}\r\n\t\tSyncErrorPromise.prototype = new SyncPromise()\r\n\t\tSyncErrorPromise.prototype.then = function(onFulfilled, onRejected) {\r\n\t\t\tclearTimeout(this.unhandledTimeout)\r\n\t\t\tif (!onRejected) {\r\n\t\t\t\treturn new SyncErrorPromise(this.value)\r\n\t\t\t}\r\n\t\t\treturn SyncPromise.prototype.then.call(this, onRejected)\r\n\t\t}\r\n\t\t// This is an polyfill for Object.observe with just enough functionality\r\n\t\t// for what Variables need\r\n\t\t// An observe function, with polyfile\r\n\t\tvar observe =\r\n\t\t\thas('defineProperty') ? \r\n\t\t\tfunction observe(target, listener) {\r\n\t\t\t\t/*for(var i in target) {\r\n\t\t\t\t\taddKey(i)\r\n\t\t\t\t}*/\r\n\t\t\t\tlistener.addKey = addKey\r\n\t\t\t\tlistener.remove = function() {\r\n\t\t\t\t\tlistener = null\r\n\t\t\t\t}\r\n\t\t\t\treturn listener\r\n\t\t\t\tfunction addKey(key) {\r\n\t\t\t\t\tvar keyFlag = 'key' + key\r\n\t\t\t\t\tif(this[keyFlag]) {\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis[keyFlag] = true\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar currentValue = target[key]\r\n\t\t\t\t\tvar targetAncestor = target\r\n\t\t\t\t\tvar descriptor\r\n\t\t\t\t\tdo {\r\n\t\t\t\t\t\tdescriptor = Object.getOwnPropertyDescriptor(targetAncestor, key)\r\n\t\t\t\t\t} while(!descriptor && (targetAncestor = getPrototypeOf(targetAncestor)))\r\n\t\r\n\t\t\t\t\tif(descriptor && descriptor.set) {\r\n\t\t\t\t\t\tvar previousSet = descriptor.set\r\n\t\t\t\t\t\tvar previousGet = descriptor.get\r\n\t\t\t\t\t\tObject.defineProperty(target, key, {\r\n\t\t\t\t\t\t\tget: function() {\r\n\t\t\t\t\t\t\t\treturn (currentValue = previousGet.call(this))\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tset: function(value) {\r\n\t\t\t\t\t\t\t\tpreviousSet.call(this, value)\r\n\t\t\t\t\t\t\t\tif(currentValue !== value) {\r\n\t\t\t\t\t\t\t\t\tcurrentValue = value\r\n\t\t\t\t\t\t\t\t\tif(listener) {\r\n\t\t\t\t\t\t\t\t\t\tlistener([{target: this, name: key}])\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tenumerable: descriptor.enumerable\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tObject.defineProperty(target, key, {\r\n\t\t\t\t\t\t\tget: function() {\r\n\t\t\t\t\t\t\t\treturn currentValue\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tset: function(value) {\r\n\t\t\t\t\t\t\t\tif(currentValue !== value) {\r\n\t\t\t\t\t\t\t\t\tcurrentValue = value\r\n\t\t\t\t\t\t\t\t\tif(listener) {\r\n\t\t\t\t\t\t\t\t\t\tlistener([{target: this, name: key}])\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tenumerable: !descriptor || descriptor.enumerable\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} :\r\n\t\t\t// and finally a polling-based solution, for the really old browsers\r\n\t\t\tfunction(target, listener) {\r\n\t\t\t\tif(!timerStarted) {\r\n\t\t\t\t\ttimerStarted = true\r\n\t\t\t\t\tsetInterval(function() {\r\n\t\t\t\t\t\tfor(var i = 0, l = watchedObjects.length; i < l; i++) {\r\n\t\t\t\t\t\t\tdiff(watchedCopies[i], watchedObjects[i], listeners[i])\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, 20)\r\n\t\t\t\t}\r\n\t\t\t\tvar copy = {}\r\n\t\t\t\tfor(var i in target) {\r\n\t\t\t\t\tif(target.hasOwnProperty(i)) {\r\n\t\t\t\t\t\tcopy[i] = target[i]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\twatchedObjects.push(target)\r\n\t\t\t\twatchedCopies.push(copy)\r\n\t\t\t\tlisteners.push(listener)\r\n\t\t\t}\r\n\t\tvar queuedListeners\r\n\t\tfunction queue(listener, object, name) {\r\n\t\t\tif(queuedListeners) {\r\n\t\t\t\tif(queuedListeners.indexOf(listener) === -1) {\r\n\t\t\t\t\tqueuedListeners.push(listener)\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tqueuedListeners = [listener]\r\n\t\t\t\tlang.nextTurn(function() {\r\n\t\t\t\t\tqueuedListeners.forEach(function(listener) {\r\n\t\t\t\t\t\tvar events = []\r\n\t\t\t\t\t\tlistener.properties.forEach(function(property) {\r\n\t\t\t\t\t\t\tevents.push({target: listener.object, name: property})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tlistener(events)\r\n\t\t\t\t\t\tlistener.object = null\r\n\t\t\t\t\t\tlistener.properties = null\r\n\t\t\t\t\t})\r\n\t\t\t\t\tqueuedListeners = null\r\n\t\t\t\t}, 0)\r\n\t\t\t}\r\n\t\t\tlistener.object = object\r\n\t\t\tvar properties = listener.properties || (listener.properties = [])\r\n\t\t\tif(properties.indexOf(name) === -1) {\r\n\t\t\t\tproperties.push(name)\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar unobserve = has('observe') ? Object.unobserve :\r\n\t\t\tfunction(target, listener) {\r\n\t\t\t\tif(listener.remove) {\r\n\t\t\t\t\tlistener.remove()\r\n\t\t\t\t}\r\n\t\t\t\tfor(var i = 0, l = watchedObjects.length; i < l; i++) {\r\n\t\t\t\t\tif(watchedObjects[i] === target && listeners[i] === listener) {\r\n\t\t\t\t\t\twatchedObjects.splice(i, 1)\r\n\t\t\t\t\t\twatchedCopies.splice(i, 1)\r\n\t\t\t\t\t\tlisteners.splice(i, 1)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\tvar watchedObjects = []\r\n\t\tvar watchedCopies = []\r\n\t\tvar listeners = []\r\n\t\tvar timerStarted = false\r\n\t\tfunction diff(previous, current, callback) {\r\n\t\t\t// TODO: keep an array of properties for each watch for faster iteration\r\n\t\t\tvar queued\r\n\t\t\tfor(var i in previous) {\r\n\t\t\t\tif(previous.hasOwnProperty(i) && previous[i] !== current[i]) {\r\n\t\t\t\t\t// a property has changed\r\n\t\t\t\t\tprevious[i] = current[i]\r\n\t\t\t\t\t(queued || (queued = [])).push({name: i})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor(var i in current) {\r\n\t\t\t\tif(current.hasOwnProperty(i) && !previous.hasOwnProperty(i)) {\r\n\t\t\t\t\t// a property has been added\r\n\t\t\t\t\tprevious[i] = current[i]\r\n\t\t\t\t\t(queued || (queued = [])).push({name: i})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(queued) {\r\n\t\t\t\tcallback(queued)\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tvar id = 1\r\n\t\t// a function that returns a function, to stop JSON serialization of an\r\n\t\t// object\r\n\t\tfunction toJSONHidden() {\r\n\t\t\treturn toJSONHidden\r\n\t\t}\r\n\t\t// An object that will be hidden from JSON serialization\r\n\t\tvar Hidden = function () {\r\n\t\t}\r\n\t\tHidden.prototype.toJSON = toJSONHidden\r\n\t\r\n\t\tvar extendClass\r\n\t\ttry {\r\n\t\t\textendClass = eval('(function(Base){ return class extends Base {}})')\r\n\t\t} catch(e) {}\r\n\t\r\n\t\tvar lang = {\r\n\t\t\trequestAnimationFrame: has('requestAnimationFrame') ? requestAnimationFrame :\r\n\t\t\t\t(function() {\r\n\t\t\t\t\tvar toRender = []\r\n\t\t\t\t\tvar queued = false\r\n\t\t\t\t\tfunction processAnimationFrame() {\r\n\t\t\t\t\t\tfor (var i = 0; i < toRender.length; i++) {\r\n\t\t\t\t\t\t\ttoRender[i]()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttoRender = []\r\n\t\t\t\t\t\tqueued = false\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfunction requestAnimationFrame(renderer) {\r\n\t\t\t\t\t \tif (!queued) {\r\n\t\t\t\t\t\t\tsetTimeout(processAnimationFrame)\r\n\t\t\t\t\t\t\tqueued = true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttoRender.push(renderer)\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn requestAnimationFrame\r\n\t\t\t\t})(),\r\n\t\t\tSyncPromise: SyncPromise,\r\n\t\t\tPromise: has('promise') ? Promise : (function() {\r\n\t\t\t\tfunction Promise(execute) {\r\n\t\t\t\t\tvar isResolved, resolution, errorResolution\r\n\t\t\t\t\tvar queue = 0\r\n\t\t\t\t\tfunction resolve(value) {\r\n\t\t\t\t\t\t// resolve function\r\n\t\t\t\t\t\tif(value && value.then) {\r\n\t\t\t\t\t\t\t// received a promise, wait for it\r\n\t\t\t\t\t\t\tvalue.then(resolve, reject)\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tresolution = value\r\n\t\t\t\t\t\t\tfinished()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfunction reject(error) {\r\n\t\t\t\t\t\t// reject function\r\n\t\t\t\t\t\terrorResolution = error\r\n\t\t\t\t\t\tfinished()\r\n\t\t\t\t\t}\r\n\t\t\t\t\texecute(resolve, reject)\r\n\t\t\t\t\tfunction finished() {\r\n\t\t\t\t\t\tisResolved = true\r\n\t\t\t\t\t\tfor(var i = 0, l = queue.length; i < l; i++) {\r\n\t\t\t\t\t\t\tqueue[i]()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// clean out the memory\r\n\t\t\t\t\t\tqueue = 0\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tthen: function(callback, errback) {\r\n\t\t\t\t\t\t\treturn new Promise(function(resolve, reject) {\r\n\t\t\t\t\t\t\t\tfunction handle() {\r\n\t\t\t\t\t\t\t\t\t// promise fulfilled, call the appropriate callback\r\n\t\t\t\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\t\t\t\tif(errorResolution && !errback) {\r\n\t\t\t\t\t\t\t\t\t\t\t// errors without a handler flow through\r\n\t\t\t\t\t\t\t\t\t\t\treject(errorResolution)\r\n\t\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\t\t// resolve to the callback's result\r\n\t\t\t\t\t\t\t\t\t\t\tresolve(errorResolution ?\r\n\t\t\t\t\t\t\t\t\t\t\t\terrback(errorResolution) :\r\n\t\t\t\t\t\t\t\t\t\t\t\tcallback ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcallback(resolution) : resolution)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}catch(newError) {\r\n\t\t\t\t\t\t\t\t\t\t// caught an error, reject the returned promise\r\n\t\t\t\t\t\t\t\t\t\treject(newError)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif(isResolved) {\r\n\t\t\t\t\t\t\t\t\t// already resolved, immediately handle\r\n\t\t\t\t\t\t\t\t\thandle()\r\n\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t(queue || (queue = [])).push(handle)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn Promise\r\n\t\t\t}()),\r\n\t\r\n\t\t\tWeakMap: has('WeakMap') ? WeakMap :\r\n\t\t \tfunction (values, name) {\r\n\t\t \t\tvar mapProperty = '__' + (name || '') + id++\r\n\t\t \t\treturn has('defineProperty') ?\r\n\t\t \t\t{\r\n\t\t \t\t\tget: function (key) {\r\n\t\t \t\t\t\treturn key[mapProperty]\r\n\t\t \t\t\t},\r\n\t\t \t\t\tset: function (key, value) {\r\n\t\t \t\t\t\tObject.defineProperty(key, mapProperty, {\r\n\t\t \t\t\t\t\tvalue: value,\r\n\t\t \t\t\t\t\tenumerable: false\r\n\t\t \t\t\t\t})\r\n\t\t \t\t\t}\r\n\t\t \t\t} :\r\n\t\t \t\t{\r\n\t\t \t\t\tget: function (key) {\r\n\t\t \t\t\t\tvar intermediary = key[mapProperty]\r\n\t\t \t\t\t\treturn intermediary && intermediary.value\r\n\t\t \t\t\t},\r\n\t\t \t\t\tset: function (key, value) {\r\n\t\t \t\t\t\t// we use an intermediary that is hidden from JSON serialization, at least\r\n\t\t \t\t\t\tvar intermediary = key[mapProperty] || (key[mapProperty] = new Hidden())\r\n\t\t \t\t\t\tintermediary.value = value\r\n\t\t \t\t\t}\r\n\t\t \t\t}\r\n\t\t \t},\r\n\t\r\n\t\t\tobserve: observe,\r\n\t\t\tunobserve: unobserve,\r\n\t\t\textendClass: extendClass,\r\n\t\t\twhen: function(value, callback, errorHandler) {\r\n\t\t\t\treturn value && value.then ?\r\n\t\t\t\t\t(value.then(callback, errorHandler) || value) : callback(value)\r\n\t\t\t},\r\n\t\t\twhenAll: function(inputs, callback) {\r\n\t\t\t\tvar promiseInvolved\r\n\t\t\t\tvar readyInputs = []\r\n\t\t\t\tvar remaining = 1\r\n\t\t\t\tvar result\r\n\t\t\t\tvar lastPromiseResult\r\n\t\t\t\tfor(var i = 0, l = inputs.length; i < l; i++) {\r\n\t\t\t\t\tvar input = inputs[i]\r\n\t\t\t\t\tif(input && input.then) {\r\n\t\t\t\t\t\tremaining++\r\n\t\t\t\t\t\t(function(i, previousPromiseResult) {\r\n\t\t\t\t\t\t\tlastPromiseResult = input.then(function(value) {\r\n\t\t\t\t\t\t\t\treadyInputs[i] = value\r\n\t\t\t\t\t\t\t\tonEach()\r\n\t\t\t\t\t\t\t\tif(!remaining) {\r\n\t\t\t\t\t\t\t\t\treturn result\r\n\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\treturn previousPromiseResult\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t})(i, lastPromiseResult)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treadyInputs[i] = input\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tonEach()\r\n\t\t\t\tif (remaining > 0) {\r\n\t\t\t\t\treturn lastPromiseResult\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn result\r\n\t\t\t\t}\r\n\t\t\t\tfunction onEach() {\r\n\t\t\t\t\tremaining--\r\n\t\t\t\t\tif (!remaining) {\r\n\t\t\t\t\t\t result = callback(readyInputs)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcompose: function(Base, constructor, properties) {\r\n\t\t\t\tvar prototype = constructor.prototype = Object.create(Base.prototype)\r\n\t\t\t\tsetPrototypeOf(constructor, Base)\r\n\t\t\t\tfor(var i in properties) {\r\n\t\t\t\t\tprototype[i] = properties[i]\r\n\t\t\t\t}\r\n\t\t\t\tprototype.constructor = constructor\r\n\t\t\t\treturn constructor\r\n\t\t\t},\r\n\t\t\tnextTurn: has('MutationObserver') ?\r\n\t\t\t\tfunction (callback) {\r\n\t\t\t\t\t// promises don't resolve consistently on the next micro turn (Edge doesn't do it right),\r\n\t\t\t\t\t// so use mutation observer\r\n\t\t\t\t\t// TODO: make a faster mode that doesn't recreate each time\r\n\t\t\t\t\tvar div = document.createElement('div')\r\n\t\t\t\t\tvar observer = new MutationObserver(callback)\r\n\t\t\t\t\tobserver.observe(div, {\r\n\t\t\t\t\t\tattributes: true\r\n\t\t\t\t\t})\r\n\t\t\t\t\tdiv.setAttribute('a', id++)\r\n\t\t\t\t} :\r\n\t\t\t\tfunction (callback) {\r\n\t\t\t\t\t// TODO: we can do better for other, older browsers\r\n\t\t\t\t\tsetTimeout(callback, 0)\r\n\t\t\t\t},\r\n\t\t\tcopy: Object.assign || function(target, source) {\r\n\t\t\t\tfor(var i in source) {\r\n\t\t\t\t\ttarget[i] = source[i]\r\n\t\t\t\t}\r\n\t\t\t\treturn target\r\n\t\t\t},\r\n\t\t\tdeepCopy: function(source) {\r\n\t\t\t\tif (source && typeof source == 'object') {\r\n\t\t\t\t\tif (source instanceof Array) {\r\n\t\t\t\t\t\tvar target = [] // always create a new array for array targets\r\n\t\t\t\t\t\tfor(var i = 0, l = source.length; i < l; i++) {\r\n\t\t\t\t\t\t\ttarget[i] = lang.deepCopy(source[i])\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar target = {}\r\n\t\t\t\t\t\tfor (var i in source) {\r\n\t\t\t\t\t\t\ttarget[i] = lang.deepCopy(source[i])\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn target\r\n\t\t\t\t}\r\n\t\t\t\treturn source\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction isGenerator(func) {\r\n\t\t\tif (typeof func === 'function') {\r\n\t\t\t\tvar constructor = func.constructor\r\n\t\t\t\t// this is used to handle both native generators and transpiled generators\r\n\t\t\t\treturn (constructor.displayName || constructor.name) === 'GeneratorFunction'\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction isGeneratorIterator(iterator) {\r\n\t\t\tif (iterator && iterator.next) {\r\n\t\t\t\tvar constructor = iterator.constructor.constructor\r\n\t\t\t\treturn (constructor.displayName || constructor.name) === 'GeneratorFunction'\r\n\t\t\t}\r\n\t\t}\r\n\t\tlang.isGenerator = isGenerator\r\n\t\r\n\t\tfunction spawn(generator) {\r\n\t\t\tvar generatorIterator = typeof generator === 'function' ? generator() : generator\r\n\t\t\tvar resuming\r\n\t\t\tvar nextValue\r\n\t\t\tvar isThrowing\r\n\t\t\treturn next()\r\n\t\t\tfunction next() {\r\n\t\t\t\tdo {\r\n\t\t\t\t\tvar stepReturn = generatorIterator[isThrowing ? 'throw' : 'next'](nextValue)\r\n\t\t\t\t\tif (stepReturn.done) {\r\n\t\t\t\t\t\treturn stepReturn.value\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnextValue = stepReturn.value\r\n\t\t\t\t\t// if the return value is a (generator) iterator, execute it\r\n\t\t\t\t\tif (nextValue && nextValue.next && isGeneratorIterator(nextValue)) {\r\n\t\t\t\t\t\tnextValue = spawn(nextValue)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (nextValue && nextValue.then) {\r\n\t\t\t\t\t\t// if it is a promise, we will wait on it\r\n\t\t\t\t\t\t// and return the promise so that the next caller can wait on this\r\n\t\t\t\t\t\tvar resolved\r\n\t\t\t\t\t\tvar isSync = null\r\n\t\t\t\t\t\tvar result = nextValue.then(function(value) {\r\n\t\t\t\t\t\t\tnextValue = value\r\n\t\t\t\t\t\t\tif (isSync === false) {\r\n\t\t\t\t\t\t\t\treturn next()\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tisSync = true\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, function(error) {\r\n\t\t\t\t\t\t\tnextValue = error\r\n\t\t\t\t\t\t\tisThrowing = true\r\n\t\t\t\t\t\t\treturn next()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tif (!isSync) {\r\n\t\t\t\t\t\t\tisSync = false\r\n\t\t\t\t\t\t\treturn result\r\n\t\t\t\t\t\t} // else keeping looping to avoid recursion\r\n\t\t\t\t\t}\r\n\t\t\t\t\tisThrowing = false\r\n\t\t\t\t} while(true)\r\n\t\t\t}\r\n\t\t}\r\n\t\tlang.spawn = spawn\r\n\t\treturn lang\r\n\t}))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) { if (true) {\r\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2), __webpack_require__(4)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) } else if (typeof module === 'object' && module.exports) {        \r\n\t  module.exports = factory(require('./util/lang'), require('./Variable')) // Node\r\n\t}}(this, function (lang, VariableExports) {\r\n\t\tvar doc = typeof document !== 'undefined' && document\r\n\t\tvar invalidatedElements\r\n\t\tvar queued\r\n\t\tvar toRender = []\r\n\t\tvar nextId = 1\r\n\t\tvar requestAnimationFrame = lang.requestAnimationFrame\r\n\t\tvar Context = VariableExports.Context\r\n\t\r\n\t\tfunction Renderer(options) {\r\n\t\t\tvar variable = options.variable\r\n\t\r\n\t\t\tthis.variable = variable\r\n\t\t\tif (options.selector) {\r\n\t\t\t\tthis.selector = options.selector\r\n\t\t\t}\r\n\t\t\tif (options.elements) {\r\n\t\t\t\tthis.elements = options.elements\r\n\t\t\t\tthis.element = this.elements[0]\r\n\t\t\t\tfor(var i = 0, l = this.elements.length; i < l; i++) {\r\n\t\t\t\t\t(this.elements[i].alkaliRenderers || (this.elements[i].alkaliRenderers = [])).push(this)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (options.element) {\r\n\t\t\t\tvar element = this.element = options.element;\r\n\t\t\t\t(element.alkaliRenderers || (element.alkaliRenderers = [])).push(this)\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error('No element provided to Renderer')\r\n\t\t\t}\r\n\t\t\tif (options.update) {\r\n\t\t\t\tthis.updateRendering = options.update\r\n\t\t\t}\r\n\t\t\tif (options.shouldRender) {\r\n\t\t\t\tthis.shouldRender = options.shouldRender\r\n\t\t\t}\r\n\t\t\tif (options.renderUpdate) {\r\n\t\t\t\tthis.renderUpdate = options.renderUpdate\r\n\t\t\t}\r\n\t\t\tif (options.alwaysUpdate) {\r\n\t\t\t\tthis.alwaysUpdate = options.alwaysUpdate\r\n\t\t\t}\r\n\t\t\tif (!variable.updated) {\r\n\t\t\t\t// baconjs-esqe API\r\n\t\t\t\tvar renderer = this\r\n\t\t\t\tvariable.subscribe(function (event) {\r\n\t\t\t\t\t// replace the variable with an object\r\n\t\t\t\t\t// that returns the value from the event\r\n\t\t\t\t\trenderer.variable = {\r\n\t\t\t\t\t\tvalueOf: function () {\r\n\t\t\t\t\t\t\treturn event.value()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\trenderer.updated()\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tif (options.updateOnStart === false){\r\n\t\t\t\tvar contextualized = this.contextualized || this.variable\r\n\t\t\t\tthis.variable.valueOf(this)\r\n\t\t\t\t// even if we don't render on start, we still need to compute the value so we can depend on the computed \r\n\t\t\t\t// TODO: we may need to handle recontextualization if it returns a promise\r\n\t\t\t\tcontextualized.notifies(this)\r\n\t\t\t} else {\r\n\t\t\t\tthis.updateRendering(true)\r\n\t\t\t}\r\n\t\t}\r\n\t\tRenderer.prototype = {\r\n\t\t\tconstructor: Renderer,\r\n\t\t\tversion: 0,\r\n\t\t\tnotifies: true,\r\n\t\t\tupdateRendering: function () {\r\n\t\t\t\tthrow new Error ('updateRendering must be implemented by sub class of Renderer')\r\n\t\t\t},\r\n\t\t\tupdated: function (updateEvent, by, context) {\r\n\t\t\t\tif (!this.invalidated) {\r\n\t\t\t\t\tif (!context || this.contextMatches(context)) {\r\n\t\t\t\t\t\t// do this only once, until we render again\r\n\t\t\t\t\t\tthis.invalidated = true\r\n\t\t\t\t\t\tif (this.deferredRender) {\r\n\t\t\t\t\t\t\tthis.deferredRender.isCanceled = true\r\n\t\t\t\t\t\t\tthis.deferredRender = null\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar renderer = this\r\n\t\t\t\t\t\trequestAnimationFrame(function(){\r\n\t\t\t\t\t\t\tinvalidatedElements = null\r\n\t\t\t\t\t\t\trenderer.updateRendering(renderer.alwaysUpdate)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\texecuteWithin: Context.prototype.executeWithin,\r\n\t\t\tsetVersion: function(){\r\n\t\t\t\t// this doesn't need its own version/hash\r\n\t\t\t},\r\n\t\t\tnewContext: function() {\r\n\t\t\t\treturn new Context(this.element, true)\r\n\t\t\t},\r\n\t\t\tintegrate: function(context, contextualized) {\r\n\t\t\t\tthis.addInput(contextualized)\r\n\t\t\t},\r\n\t\t\taddInput: function(contextualized) {\r\n\t\t\t\tif (this.variable !== contextualized) {\r\n\t\t\t\t\tthis.contextualized = contextualized\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tgetContextualized: function(Variable) {\r\n\t\t\t\treturn Context.prototype.getContextualized.call(this, Variable)\r\n\t\t\t\t//return this.contextualized || this.variable\r\n\t\t\t},\r\n\t\t\tspecify: function(Variable) {\r\n\t\t\t\treturn this.contextualized = Context.prototype.specify.call(this, Variable)\r\n\t\t\t\t// a new context to get this\r\n\t\t\t\tthis.contextualized = this.newContext(null, true).specify(Variable)\r\n\t\r\n\t\t\t},\r\n\t\t\tmerge: function(){\r\n\t\t\t\t// noop\r\n\t\t\t},\r\n\t\t\tcontextMatches: function(context) {\r\n\t\t\t\treturn true\r\n\t\t\t},\r\n\t\t\tinvalidateElement: function(element) {\r\n\t\t\t\tif(!invalidatedElements){\r\n\t\t\t\t\tinvalidatedElements = new WeakMap(null, 'invalidated')\r\n\t\t\t\t}\r\n\t\t\t\tvar invalidatedParts = invalidatedElements.get(element)\r\n\t\t\t\tinvalidatedElements.set(element, invalidatedParts = {})\r\n\t\t\t\tif (!invalidatedParts[id]) {\r\n\t\t\t\t\tinvalidatedParts[id] = true\r\n\t\t\t\t}\r\n\t\t\t\tif (!queued) {\r\n\t\t\t\t\tlang.queueTask(processQueue)\r\n\t\t\t\t\tqueued = true\r\n\t\t\t\t}\r\n\t\t\t\tvar renderer = this\r\n\t\t\t\ttoRender.push(function(){\r\n\t\t\t\t\trenderer.invalidated = false\r\n\t\t\t\t\trenderer.updateElement(element)\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tgetId: function(){\r\n\t\t\t\treturn this.id || (this.id = nextId++)\r\n\t\t\t},\r\n\t\t\tstop: function() {\r\n\t\t\t\tvar contextualized = this.contextualized || this.variable\r\n\t\t\t\tcontextualized.stopNotifies(this)\r\n\t\t\t}\r\n\t\t}\r\n\t\tObject.defineProperty(Renderer.prototype, 'subject', {\r\n\t\t\tget: function() {\r\n\t\t\t\treturn this.element\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\tfunction ElementRenderer(options) {\r\n\t\t\tRenderer.call(this, options)\r\n\t\t}\r\n\t\tElementRenderer.prototype = Object.create(Renderer.prototype)\r\n\t\tElementRenderer.prototype.shouldRender = function (element) {\r\n\t\t\treturn document.body.contains(element)\r\n\t\t}\r\n\t\tElementRenderer.prototype.getSubject = function () {\r\n\t\t\treturn this.element\r\n\t\t}\r\n\t\tElementRenderer.prototype.updateRendering = function (always, element) {\r\n\t\t\tif (!element && this.elements) {\r\n\t\t\t\tvar elements = this.elements\r\n\t\t\t\tif(!elements.length){\r\n\t\t\t\t\tif(this.selector){\r\n\t\t\t\t\t\telements = document.querySelectorAll(this.selector)\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthrow new Error('No element or selector was provided to the Renderer')\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tfor(var i = 0, l = elements.length; i < l; i++){\r\n\t\t\t\t\tthis.updateRendering(always, elements[i])\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar thisElement = element || this.element\r\n\t\r\n\t\t\t\tif(always || this.shouldRender(thisElement)){\r\n\t\t\t\t\t// it is connected\r\n\t\t\t\t\tthis.updateElement(thisElement)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar id = this.getId()\r\n\t\t\t\t\tvar renderers = thisElement.renderersOnShow\r\n\t\t\t\t\tif(!renderers){\r\n\t\t\t\t\t\trenderers = thisElement.renderersOnShow = []\r\n\t\t\t\t\t\tthisElement.className += ' needs-rerendering'\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!renderers[id]) {\r\n\t\t\t\t\t\trenderers[id] = this\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tElementRenderer.prototype.addElement = function (element) {\r\n\t\t\tif (this.selector) {\r\n\t\t\t\telement.renderersOnShow = [this]\r\n\t\t\t} else {\r\n\t\t\t\tthis.elements.push(element)\r\n\t\t\t}\r\n\t\t\t// and immediately do an update\r\n\t\t\tthis.updateElement(element)\r\n\t\t}\r\n\t\tElementRenderer.prototype.updateElement = function(element) {\r\n\t\t\tthis.invalidated = false\r\n\t\t\tif (this.omitValueOf) {\r\n\t\t\t\tthis.started = true\r\n\t\t\t\tthis.renderUpdate(undefined, element)\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tvar resolved\r\n\t\t\tvar renderer = this\r\n\t\t\tvar deferredRender = this.executeWithin(function() {\r\n\t\t\t\treturn renderer.variable.then()\r\n\t\t\t})\r\n\t\t\tdeferredRender.then(function(value) {\r\n\t\t\t\tresolved = true\r\n\t\t\t\tif (!deferredRender.isCanceled) {\r\n\t\t\t\t\tif (deferredRender === renderer.deferredRender) {\r\n\t\t\t\t\t\trenderer.deferredRender = null\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (renderer.contextualized && renderer.contextualized !== renderer.variable) {\r\n\t\t\t\t\t\trenderer.contextualized.stopNotifies(renderer)\r\n\t\t\t\t\t}\r\n\t\t\t\t\trenderer.executeWithin(function() {\r\n\t\t\t\t\t\trenderer.variable.notifies(renderer)\r\n\t\t\t\t\t})\r\n\t\t\t\t\tif(value !== undefined || renderer.started){\r\n\t\t\t\t\t\trenderer.started = true\r\n\t\t\t\t\t\trenderer.renderUpdate(value, element)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, function(error) {\r\n\t\t\t\tconsole.error('Error rendering', renderer, error)\r\n\t\t\t})\r\n\t\t\tif(!resolved){\r\n\t\t\t\t// start listening for changes immediately\r\n\t\t\t\tthis.executeWithin(function() {\r\n\t\t\t\t\trenderer.contextualized = renderer.variable.notifies(renderer)\r\n\t\t\t\t})\r\n\t\t\t\tthis.deferredRender = deferredRender\r\n\t\t\t\tif (this.renderLoading) {\r\n\t\t\t\t\t// if we have loading renderer call it\r\n\t\t\t\t\tthis.renderLoading(deferredRender, element)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tElementRenderer.prototype.renderUpdate = function (newValue, element) {\r\n\t\t\tthrow new Error('renderUpdate(newValue) must be implemented')\r\n\t\t}\r\n\t\tRenderer.Renderer = Renderer\r\n\t\tRenderer.ElementRenderer = ElementRenderer\r\n\t\r\n\t\tfunction AttributeRenderer(options) {\r\n\t\t\tif(options.name){\r\n\t\t\t\tthis.name = options.name\r\n\t\t\t}\r\n\t\t\tElementRenderer.apply(this, arguments)\r\n\t\t}\r\n\t\tAttributeRenderer.prototype = Object.create(ElementRenderer.prototype)\r\n\t\tAttributeRenderer.prototype.type = 'AttributeRenderer'\r\n\t\tAttributeRenderer.prototype.renderUpdate = function (newValue, element) {\r\n\t\t\tif (typeof newValue == 'boolean' || newValue == null) {\r\n\t\t\t\t// for booleans or null/undefined, treat the attribute boolean-like, setting and removing\r\n\t\t\t\tif (newValue) {\r\n\t\t\t\t\telement.setAttribute(this.name, '') // \"set\" the attribute to enabled\r\n\t\t\t\t} else {\r\n\t\t\t\t\telement.removeAttribute(this.name) // disable the attribute, removing it\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// otherwise, assign value as string\r\n\t\t\t\telement.setAttribute(this.name, newValue)\r\n\t\t\t}\r\n\t\t}\r\n\t\tRenderer.AttributeRenderer = AttributeRenderer\r\n\t\r\n\t\tfunction PropertyRenderer(options) {\r\n\t\t\tif (options.name) {\r\n\t\t\t\tthis.name = options.name\r\n\t\t\t}\r\n\t\t\tElementRenderer.apply(this, arguments)\r\n\t\t}\r\n\t\tPropertyRenderer.prototype = Object.create(ElementRenderer.prototype)\r\n\t\tPropertyRenderer.prototype.type = 'PropertyRenderer'\r\n\t\tPropertyRenderer.prototype.renderUpdate = function (newValue, element) {\r\n\t\t\telement[this.name] = newValue\r\n\t\t}\r\n\t\tRenderer.PropertyRenderer = PropertyRenderer\r\n\t\r\n\t\tfunction InputPropertyRenderer(options) {\r\n\t\t\tif (options.element && options.element.tagName === 'SELECT' && options.name === 'value') {\r\n\t\t\t\t// use the deferred value assignment for <select>\r\n\t\t\t\tthis.renderUpdate = this.renderSelectValueUpdate\r\n\t\t\t}\r\n\t\t\tPropertyRenderer.apply(this, arguments)\r\n\t\t}\r\n\t\tInputPropertyRenderer.prototype = Object.create(PropertyRenderer.prototype)\r\n\t\tInputPropertyRenderer.prototype.type = 'InputPropertyRenderer'\r\n\t\tInputPropertyRenderer.prototype.renderUpdate = function(newValue, element) {\r\n\t\t\tif (newValue == null || (element.type === 'number' && isNaN(newValue))) {\r\n\t\t\t\tnewValue = ''\r\n\t\t\t}\r\n\t\t\tvar oldValue = element[this.name]\r\n\t\t\tif (typeof oldValue === 'string' && typeof newValue !== 'string') {\r\n\t\t\t\tnewValue = newValue == null ? '' : String(newValue)\r\n\t\t\t}\r\n\t\t\tif (oldValue != newValue) {\r\n\t\t\t\telement[this.name] = newValue\r\n\t\t\t}\r\n\t\t}\r\n\t\tInputPropertyRenderer.prototype.renderSelectValueUpdate = function (newValue, element) {\r\n\t\t\telement.value = newValue\r\n\t\t\tif (element.value != newValue && !element.value) {\r\n\t\t\t\t// if we didn't successfully set the value of a <select>, we may need to wait until the children are constructed\r\n\t\t\t\telement.eventualValue = newValue\r\n\t\t\t\tlang.nextTurn(function() {\r\n\t\t\t\t\tif (element.eventualValue) {\r\n\t\t\t\t\t\telement.value = element.eventualValue\r\n\t\t\t\t\t\telement.eventualValue = undefined\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\telement.eventualValue = undefined\r\n\t\t\t}\r\n\t\t}\r\n\t\tRenderer.InputPropertyRenderer = InputPropertyRenderer\r\n\t\r\n\t\tfunction StyleRenderer(options) {\r\n\t\t\tif(options.name){\r\n\t\t\t\tthis.name = options.name\r\n\t\t\t}\r\n\t\t\tElementRenderer.apply(this, arguments)\r\n\t\t}\r\n\t\tStyleRenderer.prototype = Object.create(ElementRenderer.prototype)\r\n\t\tStyleRenderer.prototype.type = 'StyleRenderer'\r\n\t\tStyleRenderer.prototype.renderUpdate = function (newValue, element) {\r\n\t\t\telement.style[this.name] = newValue\r\n\t\t}\r\n\t\tRenderer.StyleRenderer = StyleRenderer\r\n\t\r\n\t\tfunction ContentRenderer(options) {\r\n\t\t\tElementRenderer.apply(this, arguments)\r\n\t\t}\r\n\t\tContentRenderer.prototype = Object.create(ElementRenderer.prototype)\r\n\t\tContentRenderer.prototype.type = 'ContentRenderer'\r\n\t\tContentRenderer.prototype.renderUpdate = function (newValue, element) {\r\n\t\t\telement.innerHTML = ''\r\n\t\t\tif (newValue === undefined){\r\n\t\t\t\tnewValue = ''\r\n\t\t\t}\r\n\t\t\telement.appendChild(document.createTextNode(newValue))\r\n\t\t}\r\n\t\tRenderer.ContentRenderer = ContentRenderer\r\n\t\r\n\t\tfunction TextRenderer(options) {\r\n\t\t\tthis.position = options.position\r\n\t\t\tthis.textNode = options.textNode\r\n\t\t\tElementRenderer.apply(this, arguments)\r\n\t\t}\r\n\t\tTextRenderer.prototype = Object.create(ElementRenderer.prototype)\r\n\t\tTextRenderer.prototype.type = 'TextRenderer'\r\n\t\tTextRenderer.prototype.updated = function (updateEvent, context) {\r\n\t\t\tif (this.builtList) {\r\n\t\t\t\tif (updateEvent.type === 'refresh') {\r\n\t\t\t\t\tthis.builtList = false\r\n\t\t\t\t\tthis.omitValueOf = false\r\n\t\t\t\t} else {\r\n\t\t\t\t\t(this.updates || (this.updates = [])).push(updateEvent)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tElementRenderer.prototype.updated.call(this, updateEvent, context)\r\n\t\t}\r\n\t\tTextRenderer.prototype.renderUpdate = function (newValue, element) {\r\n\t\t\tif (newValue == null){\r\n\t\t\t\tnewValue = ''\r\n\t\t\t}\r\n\t\t\tif (newValue.create) {\r\n\t\t\t\tnewValue = newValue.create({parent: element})\r\n\t\t\t}\r\n\t\t\tif (newValue.nodeType) {\r\n\t\t\t\tif (this.textNode && this.textNode.parentNode == element) {\r\n\t\t\t\t\t// text node is attached, we can replace it with the node\r\n\t\t\t\t\telement.replaceChild(newValue, this.textNode)\r\n\t\t\t\t} else {\r\n\t\t\t\t\telement.appendChild(newValue)\r\n\t\t\t\t}\r\n\t\t\t\tthis.textNode = newValue\r\n\t\t\t} else if (newValue instanceof Array) {\r\n\t\t\t\tthis.renderUpdate = ListRenderer.prototype.renderUpdate\r\n\t\t\t\tthis.omitValueOf = true\r\n\t\t\t\tthis.renderUpdate(newValue, element)\r\n\t\t\t} else {\r\n\t\t\t\t(this.textNode || element.childNodes[this.position]).nodeValue = newValue\r\n\t\t\t}\r\n\t\t}\r\n\t\tRenderer.TextRenderer = TextRenderer\r\n\t\r\n\t\tfunction ListRenderer(options) {\r\n\t\t\tif (options.each) {\r\n\t\t\t\tthis.each = options.each\r\n\t\t\t}\r\n\t\t\tElementRenderer.apply(this, arguments)\r\n\t\t}\r\n\t\tListRenderer.prototype = Object.create(ElementRenderer.prototype)\r\n\t\tListRenderer.prototype.updated = function (updateEvent, context) {\r\n\t\t\tif (this.builtList) {\r\n\t\t\t\tif (updateEvent.type === 'refresh') {\r\n\t\t\t\t\tthis.builtList = false\r\n\t\t\t\t\tthis.omitValueOf = false\r\n\t\t\t\t} else {\r\n\t\t\t\t\t(this.updates || (this.updates = [])).push(updateEvent)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tElementRenderer.prototype.updated.call(this, updateEvent, context)\r\n\t\t}\r\n\t\tListRenderer.prototype.type = 'ListRenderer'\r\n\t\tListRenderer.prototype.renderUpdate = function (newValue, element) {\r\n\t\t\tvar container\r\n\t\t\tvar each = this.each || function(item) { // TODO: make a single identity function\r\n\t\t\t\treturn item\r\n\t\t\t}\r\n\t\t\tvar thisElement = this.element\r\n\t\t\tvar renderer = this\r\n\t\t\tif (!this.builtList) {\r\n\t\t\t\tthis.builtList = true\r\n\t\t\t\tthis.omitValueOf = true\r\n\t\t\t\telement.innerHTML = ''\r\n\t\t\t\tvar childElements = this.childElements = []\r\n\t\t\t\tif (each.defineHasOwn) {\r\n\t\t\t\t\teach.defineHasOwn()\r\n\t\t\t\t}\r\n\t\t\t\tif (newValue) {\r\n\t\t\t\t\tnewValue.forEach(function(item) {\r\n\t\t\t\t\t\tchildElements.push(Renderer.append(thisElement, eachItem(item)))\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tvar contextualized = this.contextualized || this.variable\r\n\t\t\t\tcontextualized.notifies(this)\r\n\t\r\n\t\t\t\t// TODO: restore using a doc fragment to add these items:\r\n\t\t\t\t// thisElement.appendChild(container)\r\n\t\t\t} else {\r\n\t\t\t\tvar childElements = this.childElements\r\n\t\t\t\tvar updates = this.updates\r\n\t\t\t\tcontainer = thisElement\r\n\t\t\t\tupdates.forEach(function(update) {\r\n\t\t\t\t\tif (update.type === 'refresh') {\r\n\t\t\t\t\t\trenderer.builtList = false\r\n\t\t\t\t\t\tfor (var i = 0, l = childElements.length; i < l; i++) {\r\n\t\t\t\t\t\t\tthisElement.removeChild(childElements[i])\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\trenderer.renderUpdate()\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (update.previousIndex > -1) {\r\n\t\t\t\t\t\t\tthisElement.removeChild(childElements[update.previousIndex])\r\n\t\t\t\t\t\t\tchildElements.splice(update.previousIndex, 1)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (update.index > -1) {\r\n\t\t\t\t\t\t\tvar nextChild = childElements[update.index]\r\n\t\t\t\t\t\t\tvar newElement = Renderer.append(thisElement, eachItem(update.value))\r\n\t\t\t\t\t\t\tif (nextChild) {\r\n\t\t\t\t\t\t\t\tthisElement.insertBefore(newElement, nextChild)\r\n\t\t\t\t\t\t\t\tchildElements.splice(update.index, 0, newElement)\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tchildElements.push(newElement)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tthis.updates = [] // clear the updates\r\n\t\t\t}\r\n\t\t\tfunction eachItem(item) {\r\n\t\t\t\tvar childElement\r\n\t\t\t\tif (each.create) {\r\n\t\t\t\t\tchildElement = each.create({parent: thisElement, _item: item}) // TODO: make a faster object here potentially\r\n\t\t\t\t} else {\r\n\t\t\t\t\tchildElement = each(item, thisElement)\r\n\t\t\t\t\tif (childElement.create) {\r\n\t\t\t\t\t\tchildElement = childElement.create({parent: thisElement, _item: item})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn childElement\r\n\t\t\t}\r\n\t\t}\r\n\t\tRenderer.ListRenderer = ListRenderer\r\n\t\r\n\t\tRenderer.onShowElement = function(shownElement){\r\n\t\t\trequestAnimationFrame(function(){\r\n\t\t\t\tinvalidatedElements = null\r\n\t\t\t\tvar elements = [].slice.call(shownElement.getElementsByClassName('needs-rerendering'))\r\n\t\t\t\tif (shownElement.className.indexOf('needs-rerendering') > 0){\r\n\t\t\t\t\tvar includingTop = [shownElement]\r\n\t\t\t\t\tincludingTop.push.apply(includingTop, elements)\r\n\t\t\t\t\telements = includingTop\r\n\t\t\t\t}\r\n\t\t\t\tfor (var i = 0, l = elements.length; i < l; i++){\r\n\t\t\t\t\tvar element = elements[i]\r\n\t\t\t\t\tvar renderers = element.renderersOnShow\r\n\t\t\t\t\tif(renderers){\r\n\t\t\t\t\t\telement.renderersOnShow = null\r\n\t\t\t\t\t\t// remove needs-rerendering class\r\n\t\t\t\t\t\telement.className = element.className.replace(/\\s?needs\\-rerendering\\s?/g, '')\r\n\t\t\t\t\t\tfor (var id in renderers) {\r\n\t\t\t\t\t\t\tvar renderer = renderers[id]\r\n\t\t\t\t\t\t\trenderer.updateElement(element)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\r\n\t\tfunction onElementRemoval(element){\r\n\t\t\t// cleanup element renderers\r\n\t\t\tif(element.alkaliRenderers){\r\n\t\t\t\tvar renderers = element.alkaliRenderers\r\n\t\t\t\tfor(var i = 0; i < renderers.length; i++){\r\n\t\t\t\t\tvar renderer = renderers[i]\r\n\t\t\t\t\trenderer.variable.stopNotifies(renderer)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tRenderer.onElementRemoval = function(element, onlyChildren){\r\n\t\t\tif(!onlyChildren){\r\n\t\t\t\tonElementRemoval(element)\r\n\t\t\t}\r\n\t\t\tvar children = element.getElementsByTagName('*')\r\n\t\t\tfor(var i = 0, l = children.length; i < l; i++){\r\n\t\t\t\tvar child = children[i]\r\n\t\t\t\tif(child.alkaliRenderers){\r\n\t\t\t\t\tonElementRemoval(child)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn Renderer\r\n\t}))\r\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) { if (true) {\r\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) } else if (typeof module === 'object' && module.exports) {\t\t\t\t\r\n\t\tmodule.exports = factory(require('./util/lang')) // Node\r\n\t}}(this, function (lang) {\r\n\t\tvar deny = {}\r\n\t\tvar noChange = {}\r\n\t\tvar context\r\n\t\tvar WeakMap = lang.WeakMap\r\n\t\tvar setPrototypeOf = Object.setPrototypeOf || (function(base, proto) { base.__proto__ = proto})\r\n\t\tvar getPrototypeOf = Object.getPrototypeOf || (function(base) { return base.__proto__ })\r\n\t\tvar isGenerator = lang.isGenerator\r\n\t\tvar undefined // makes it faster to be locally scoped\r\n\t\t// update types\r\n\t\tvar RequestChange = 3\r\n\t\tvar RequestSet = 4\r\n\t\tvar NOT_MODIFIED = {}\r\n\t\r\n\t\tvar propertyListenersMap = new WeakMap(null, 'propertyListenersMap')\r\n\t\tvar isStructureChecked = new WeakMap()\r\n\t\tvar nextVersion = Date.now()\r\n\t\r\n\t\tvar CacheEntry = lang.compose(WeakMap, function() {\r\n\t\t},{\r\n\t\t\t_propertyChange: function(propertyName) {\r\n\t\t\t\tthis.variable._propertyChange(propertyName, contextFromCache(this))\r\n\t\t\t}\r\n\t\t})\r\n\t\tvar listenerId = 1\r\n\t\r\n\t\tfunction when(value, callback, errback) {\r\n\t\t\tif (value && value.then) {\r\n\t\t\t\treturn value.then(callback, errback)\r\n\t\t\t}\r\n\t\t\treturn callback(value)\r\n\t\t}\r\n\t\tfunction whenStrict(value, callback) {\r\n\t\t\tif (value && value.then && !value.notifies) {\r\n\t\t\t\treturn value.then(callback)\r\n\t\t\t}\r\n\t\t\treturn callback(value)\r\n\t\t}\r\n\t\r\n\t\tfunction Context(subject, notifies){\r\n\t\t\tthis.subject = subject\r\n\t\t\tif (notifies) {\r\n\t\t\t\tthis.notifies = notifies\r\n\t\t\t}\r\n\t\t\tthis.sources = []\r\n\t\t}\r\n\t\tContext.prototype = {\r\n\t\t\tconstructor: Context,\r\n\t\t\tnewContext: function(variable) {\r\n\t\t\t\treturn new Context(this.subject, this.notifies)\r\n\t\t\t},\r\n\t\t\texecuteWithin: function(executor) {\r\n\t\t\t\tvar previousContext = context\r\n\t\t\t\ttry {\r\n\t\t\t\t\tcontext = this\r\n\t\t\t\t\treturn executor()\r\n\t\t\t\t} finally {\r\n\t\t\t\t\tcontext = previousContext\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t//version: 2166136261, // FNV-1a prime seed\r\n\t\t\tversion: 0,\r\n\t\t\trestart: function() {\r\n\t\t\t\t//this.version = 2166136261\r\n\t\t\t},\r\n\t\t\tcontextualize: function(variable, parentContext) {\r\n\t\t\t\t// resolve the contextualization of a variable, and updates this context to be aware of what distinctive aspect of the context has\r\n\t\t\t\t// been used for resolution\r\n\t\t\t\tvar contextualized\r\n\t\t\t\tif (this.distinctSubject) {\r\n\t\t\t\t\tvar contextMap = variable._contextMap || (variable._contextMap = new WeakMap())\r\n\t\t\t\t\tcontextualized = contextMap.get(this.distinctSubject)\r\n\t\t\t\t\tif (!contextualized) {\r\n\t\t\t\t\t\tcontextMap.set(this.distinctSubject, contextualized = Object.create(variable))\r\n\t\t\t\t\t\tcontextualized.listeners = false\r\n\t\t\t\t\t\tcontextualized.context = this\r\n\t\t\t\t\t\tvar sources = this.sources\r\n\t\t\t\t\t\tfor (var i = 0, l = sources.length; i < l; i++) {\r\n\t\t\t\t\t\t\tcontextualized[sources[i]] = sources[++i]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.contextualized = contextualized\r\n\t\t\t\t\t// do the merge\r\n\t\t\t\t\tif (parentContext) {\r\n\t\t\t\t\t\tparentContext.merge(this)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcontextualized = variable\r\n\t\t\t\t}\r\n\t\t\t\t//if (this.contextualized && this.contextualized !== contextualized) {\r\n\t\t\t\t\t// TOOD: if it has previously been contextualized to a different context (can happen in a promise/async situation), stop previous notifiers and start new ones\r\n\t\t\t\t//}\r\n\t\t\t\treturn contextualized\r\n\t\t\t},\r\n\t\t\tsetVersion: function(version) {\r\n\t/*\t\t\t// FNV1a hash algorithm 32-bit\r\n\t\t\t\treturn this.version = (this.version ^ (version || 0)) * 16777619 >>> 0*/\r\n\t\r\n\t/*\t\t\t// 54 bit FNV1a hash algorithm\r\n\t\t\t\tvar xored = this.version ^ (version || 0)\r\n\t\t\t\t// 435 + 1099511627776 = 1099511628211 is 64 bit FNV prime\r\n\t\t\t\treturn this.version =\r\n\t\t\t\t\txored * 435 + // compute hash on lower 32 bits\r\n\t\t\t\t\t(xor & 16777215) * 1099511627776 + // compute hash on lower 24 bits that overflow into upper 32 bits\r\n\t\t\t\t\t((this.version / 4294967296 >>> 0) * 435 & 2097151) * 4294967296 // hash on upper 32 bits*/\r\n\t\t\t\t// 54 bit derivative of FNV1a that better uses JS numbers/operators\r\n\t\t\t\t\r\n\t\t\t\t// a fast, efficient hash\r\n\t\t\t\t//return this.version = (this.version ^ (version || 0)) * 1049011 + (this.version / 5555555 >>> 0)\r\n\t\t\t\t// if we are using globally monotonically increasing version, we can just use max\r\n\t\t\t\tif (isNaN(version)) {\r\n\t\t\t\t\tthrow new Error('Bad version')\r\n\t\t\t\t}\r\n\t\t\t\treturn this.version = Math.max(this.version, version)\r\n\t\t\t},\r\n\t\t\tmerge: function(childContext) {\r\n\t\t\t\tif (!this.distinctSubject) {\r\n\t\t\t\t\tthis.distinctSubject = childContext.distinctSubject\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tspecify: function(Variable) {\r\n\t\t\t\t// specify a particular instance of a generic variable\r\n\t\t\t\tvar subject = this.subject\r\n\t\t\t\tvar subjectMap = subject.constructor.ownedClasses\r\n\t\t\t\tvar specifiedInstance\r\n\t\t\t\tif (subjectMap) {\r\n\t\t\t\t\tif (!this.distinctSubject) {\r\n\t\t\t\t\t\tthis.distinctSubject = subject\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar instanceMap = subjectMap.get(Variable)\r\n\t\t\t\t\tif (instanceMap) {\r\n\t\t\t\t\t\tspecifiedInstance = instanceMap.get(subject)\r\n\t\t\t\t\t\tif (!specifiedInstance) {\r\n\t\t\t\t\t\t\tinstanceMap.set(subject, specifiedInstance = instanceMap.createInstance ? instanceMap.createInstance(subject) : new Variable())\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn specifiedInstance\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// else if no specific context is found, return default instance\r\n\t\t\t\treturn Variable.defaultInstance\r\n\t\t\t},\r\n\t\t\tgetContextualized: function(variable) {\r\n\t\t\t\tif (!this.subject) {\r\n\t\t\t\t\t// no subject, just use the default variable\r\n\t\t\t\t\treturn variable\r\n\t\t\t\t}\r\n\t\t\t\t// returns a variable that has already been contextualized\r\n\t\t\t\tvar instance = variable._contextMap && this.subject && variable._contextMap.get(this.subject)\r\n\t\t\t\tif (instance && instance.context && instance.context.matches(this)) {\r\n\t\t\t\t\treturn instance\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tmatches: function(context) {\r\n\t\t\t\t// does another context match the resolution of this one?\r\n\t\t\t\treturn context.subject === this.subject\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction NotifyingContext(listener, subject){\r\n\t\t\tthis.subject = subject\r\n\t\t\tthis.listener = listener\r\n\t\t}\r\n\t\tNotifyingContext.prototype = Object.create(Context.prototype)\r\n\t\tNotifyingContext.prototype.constructor = NotifyingContext\r\n\t\tNotifyingContext.prototype.addInput = function(contextualized) {\r\n\t\t\tcontextualized.notifies(this.listener)\r\n\t\t}\r\n\t\r\n\t\tvar whenAll = lang.whenAll\r\n\t\r\n\t\tfunction registerListener(value, listener) {\r\n\t\t\tvar listeners = propertyListenersMap.get(value)\r\n\t\t\tvar id = listener.listenerId || (listener.listenerId = ('-' + listenerId++))\r\n\t\t\tif (listeners) {\r\n\t\t\t\tif (listeners[id] === undefined) {\r\n\t\t\t\t\tlisteners[id] = listeners.push(listener) - 1\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tpropertyListenersMap.set(value, listeners = [listener])\r\n\t\t\t\tlisteners[id] = 0\r\n\t\t\t\tif (Variable.autoObserveObjects) {\r\n\t\t\t\t\tobserve(value)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlistener.listeningToObject = value\r\n\t\t}\r\n\t\tfunction deregisterListener(listener) {\r\n\t\t\tif (listener.listeningToObject) {\r\n\t\t\t\tvar value = listener.listeningToObject\r\n\t\t\t\tlistener.listeningToObject = null\r\n\t\t\t\tvar listeners = propertyListenersMap.get(value)\r\n\t\t\t\tif (listeners) {\r\n\t\t\t\t\tvar index = listeners[listener.listenerId]\r\n\t\t\t\t\tif (index > -1) {\r\n\t\t\t\t\t\tlisteners.splice(index, 1)\r\n\t\t\t\t\t\tdelete listeners[listener.listenerId]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction RefreshEvent() {\r\n\t\t\tthis.visited = new Set()\r\n\t\t}\r\n\t\tRefreshEvent.prototype.type = 'refresh'\r\n\t\r\n\t\tfunction PropertyChangeEvent(key, childEvent, parent) {\r\n\t\t\tthis.key = key\r\n\t\t\tthis.childEvent = childEvent\r\n\t\t\tthis.parent = parent\r\n\t\t\tthis.visited = childEvent.visited\r\n\t\t}\r\n\t\tPropertyChangeEvent.prototype.type = 'update'\r\n\t\r\n\t\tfunction AddEvent(args) {\r\n\t\t\tthis.visited = new Set()\r\n\t\t\tfor (var key in args) {\r\n\t\t\t\tthis[key] = args[key]\r\n\t\t\t}\r\n\t\t}\r\n\t\tAddEvent.prototype.type = 'add'\r\n\t\tfunction DeleteEvent(args) {\r\n\t\t\tthis.visited = new Set()\r\n\t\t\tfor (var key in args) {\r\n\t\t\t\tthis[key] = args[key]\r\n\t\t\t}\r\n\t\t}\r\n\t\tDeleteEvent.prototype.type = 'delete'\r\n\t\r\n\t\tfunction forPropertyNotifyingValues(variable, properties, callback) {\r\n\t\t\tif (variable === properties) {\r\n\t\t\t\tforPropertyNotifyingValues(variable, variable._properties, callback)\r\n\t\t\t}\r\n\t\t\tfor (var key in properties) {\r\n\t\t\t\tvar property = properties[key]\r\n\t\t\t\tif (property && property.parent == variable) {\r\n\t\t\t\t\tif (property.returnedVariable) {\r\n\t\t\t\t\t\tcallback(property.returnedVariable)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (property.hasChildNotifiers) {\r\n\t\t\t\t\t\tvar subProperties = property._properties\r\n\t\t\t\t\t\tif (subProperties) {\r\n\t\t\t\t\t\t\tforPropertyNotifyingValues(property, property, callback)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction assignPromise(variable, promise, callback) {\r\n\t\t\tvar isSync\r\n\t\t\tpromise.then(function(value) {\r\n\t\t\t\tif (isSync !== false) {\r\n\t\t\t\t\t// synchronous resolution\r\n\t\t\t\t\tisSync = true\r\n\t\t\t\t} else if (variable.promise === promise) {\r\n\t\t\t\t\t// async resolution make sure we are the still the most recent promise\r\n\t\t\t\t\tvariable.promise = null\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// if async and we are not the most recent, just return\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tif (callback) { // custom handler\r\n\t\t\t\t\tcallback(value) \r\n\t\t\t\t} else {\r\n\t\t\t\t\tvariable.value = value\r\n\t\t\t\t}\r\n\t\t\t}, function(error) {\r\n\t\t\t\tif (isSync !== false) {\r\n\t\t\t\t\t// synchronous resolution\r\n\t\t\t\t\tisSync = true\r\n\t\t\t\t} else if (variable.promise === promise) {\r\n\t\t\t\t\t// async resolution make sure we are the still the most recent promise\r\n\t\t\t\t\tvariable.promise = null\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// if async and we are not the most recent, just return\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tvariable.error = error\r\n\t\t\t})\r\n\t\t\tif (!isSync) {\r\n\t\t\t\tisSync = false\r\n\t\t\t\tvariable.promise = promise\r\n\t\t\t}\r\n\t\t\treturn promise\r\n\t\t}\r\n\t\r\n\t\tfunction Variable(value) {\r\n\t\t\tif (this instanceof Variable) {\r\n\t\t\t\t// new call, may eventually use new.target\r\n\t\t\t\tif (value !== undefined) {\r\n\t\t\t\t\tif (value && value.then && !value.notifies) {\r\n\t\t\t\t\t\tassignPromise(this, value)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.value = value\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn Variable.with(value)\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tVariable._logStackTrace = function(v) {\r\n\t\t\tvar stack = (new Error().stack || '').split(/[\\r\\n]+/)\r\n\t\t\tif (stack[0] && /^Error\\s*/.test(stack[0])) stack.shift()\r\n\t\t\tif (stack[0] && /_logStackTrace/.test(stack[0])) stack.shift()\r\n\t\t\tvar coalesce = (this._debugOpts && this._debugOpts.coalesce) || []\r\n\t\t\tif (this._debugOpts && this._debugOpts.shortStackTrace) {\r\n\t\t\t\t// find the first non-coalesced line\r\n\t\t\t\tvar line\r\n\t\t\t\tstack.some(function(line) {\r\n\t\t\t\t\tif (!coalesce.some(function(re) {\r\n\t\t\t\t\t\treturn re.re.test(line)\r\n\t\t\t\t\t})) {\r\n\t\t\t\t\t\tline = stack[0]\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tconsole.log('Variable ' + v.__debug + ' changed', line && line.replace(/^\\s+/, ''))\r\n\t\t\t} else {\r\n\t\t\t\tif (coalesce.length) {\r\n\t\t\t\t\tvar s = []\r\n\t\t\t\t\tvar re\r\n\t\t\t\t\tfor (var i = 0; i < stack.length; i++) {\r\n\t\t\t\t\t\tvar line = stack[i]\r\n\t\t\t\t\t\tif (re) {\r\n\t\t\t\t\t\t\tif (re.test(line)) continue\r\n\t\t\t\t\t\t\tre = null\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tre\r\n\t\t\t\t\t\tcoalesce.some(function(re) {\r\n\t\t\t\t\t\t\treturn re = re.re.test(line)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tline = line.replace(/^\\s+/,'')\r\n\t\t\t\t\t\tif (re) {\r\n\t\t\t\t\t\t\ts.push('(' + re.name + ') ' + line)\r\n\t\t\t\t\t\t\tre = re.re\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ts.push(line)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstack = s\r\n\t\t\t\t}\r\n\t\t\t\tvar stackObject = this._debugOpts && this._debugOpts.stackObject\r\n\t\t\t\tif (stackObject) {\r\n\t\t\t\t\tconsole.log('Variable ' + v.__debug + ' changed', stack)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log('Variable ' + v.__debug + ' changed\\r\\n' + stack.join('\\r\\n'))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tVariable._debugOpts = {\r\n\t\t\tcoalesce: [{ name: 'alkali', re: /\\/alkali\\// }, { name: 'Promise', re: /(Promise\\.)|(PromiseArray\\.)|(\\/bluebird\\/)/ }],\r\n\t\t\tstackObject: false\r\n\t\t}\r\n\t\r\n\t\tvar VariablePrototype = Variable.prototype = {\r\n\t\t\t// for debugging use\r\n\t\t\tget _currentValue() {\r\n\t\t\t\treturn this.valueOf()\r\n\t\t\t},\r\n\t\t\tset _currentValue(value) {\r\n\t\t\t\tthis.put(value)\r\n\t\t\t},\r\n\t\t\tconstructor: Variable,\r\n\t\t\tvalueOf: function() {\r\n\t\t\t\treturn this.gotValue(true, this.getValue(true))\r\n\t\t\t},\r\n\t\t\tthen: function(onFulfilled, onRejected) {\r\n\t\t\t\tvar result = this.gotValue(false, this.getValue())\r\n\t\t\t\tif (!result || !result.then) {\r\n\t\t\t\t\tresult = new lang.SyncPromise(result) // ensure it is promise-like\r\n\t\t\t\t}\r\n\t\t\t\tif (onFulfilled || onRejected) { // call then if we have any callbacks\r\n\t\t\t\t\treturn result.then(onFulfilled, onRejected)\r\n\t\t\t\t}\r\n\t\t\t\treturn result\r\n\t\t\t},\r\n\t\t\tgetValue: function(sync, forModification, forChild) {\r\n\t\t\t\tif (context) {\r\n\t\t\t\t\tcontext.setVersion(forChild ? this.version : Math.max(this.version || 0, this.versionWithChildren || 0))\r\n\t\t\t\t}\r\n\t\t\t\tif (this.key != null) {\r\n\t\t\t\t\tif (context) {\r\n\t\t\t\t\t\tif (context.ifModifiedSince != null) {\r\n\t\t\t\t\t\t\t// just too complicated to handle NOT_MODIFED objects for now\r\n\t\t\t\t\t\t\t// TODO: Maybe handle this and delegate NOT_MODIFIED through this\r\n\t\t\t\t\t\t\t// chain and through gotValue\r\n\t\t\t\t\t\t\tcontext.ifModifiedSince = undefined \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar key = this.key\r\n\t\t\t\t\tvar property = this\r\n\t\t\t\t\tvar parent = this.parent\r\n\t\t\t\t\tvar object\r\n\t\t\t\t\tif (parent.getValue) {\r\n\t\t\t\t\t\t// parent needs value context, might want to do separate context,\r\n\t\t\t\t\t\t// but would need to treat special so it retrieves the version\r\n\t\t\t\t\t\t// only and not the versionWithChildren\r\n\t\t\t\t\t\tobject = parent.getValue(sync, forModification, true)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tobject = parent.value\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!sync && object && object.then && !object.notifies) {\r\n\t\t\t\t\t\treturn when(object, function(object) {\r\n\t\t\t\t\t\t\tvar value = object == null ? undefined :\r\n\t\t\t\t\t\t\t\ttypeof object.property === 'function' ? object.property(key) :\r\n\t\t\t\t\t\t\t\ttypeof object.get === 'function' ? object.get(key) : object[key]\r\n\t\t\t\t\t\t\t//if (property.listeners) {\r\n\t\t\t\t\t\t\t\tvar listeners = propertyListenersMap.get(object)\r\n\t\t\t\t\t\t\t\tif (listeners && listeners.observer && listeners.observer.addKey) {\r\n\t\t\t\t\t\t\t\t\tlisteners.observer.addKey(key)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t//}\r\n\t\t\t\t\t\t\treturn value\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar value = object == null ? undefined :\r\n\t\t\t\t\t\ttypeof object.property === 'function' ? object.property(key) :\r\n\t\t\t\t\t\ttypeof object.get === 'function' ? object.get(key) : object[key]\r\n\t\t\t\t\t//if (property.listeners) {\r\n\t\t\t\t\t\tvar listeners = propertyListenersMap.get(object)\r\n\t\t\t\t\t\tif (listeners && listeners.observer && listeners.observer.addKey) {\r\n\t\t\t\t\t\t\tlisteners.observer.addKey(key)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t//}\r\n\t\t\t\t\treturn value\r\n\t\t\t\t}\r\n\t\t\t\tif (this.promise) {\r\n\t\t\t\t\tif (sync) {\r\n\t\t\t\t\t\tif (context) {\r\n\t\t\t\t\t\t\tcontext.notResolvedYet = true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else { // async mode, we are fine with waiting\r\n\t\t\t\t\t\treturn this.promise\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tvar value = this.value\r\n\t\t\t\treturn value !== undefined ?\r\n\t\t\t\t\tthis.value :\r\n\t\t\t\t\tforModification ? (this.value = lang.deepCopy(this.default && this.default.valueOf())) : this.default\r\n\t\t\t},\r\n\t\t\tgotValue: function(sync, value) {\r\n\t\t\t\tvar previousNotifyingValue = this.returnedVariable\r\n\t\t\t\tvar variable = this\r\n\t\t\t\tif (previousNotifyingValue) {\r\n\t\t\t\t\tif (value === previousNotifyingValue) {\r\n\t\t\t\t\t\t// nothing changed, immediately return valueOf\r\n\t\t\t\t\t\treturn sync ? value.valueOf() : value.then()\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// if there was a another value that we were dependent on before, stop listening to it\r\n\t\t\t\t\t// TODO: we may want to consider doing cleanup after the next rendering turn\r\n\t\t\t\t\tif (variable.listeners) {\r\n\t\t\t\t\t\tpreviousNotifyingValue.stopNotifies(variable)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvariable.returnedVariable = null\r\n\t\t\t\t}\r\n\t\t\t\tif (value && value.notifies) {\r\n\t\t\t\t\tvariable.returnedVariable = value\r\n\t\t\t\t\tif (variable.listeners) {\r\n\t\t\t\t\t\tvalue.notifies(variable)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (sync) {\r\n\t\t\t\t\t\tvalue = value.valueOf()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!sync && value && value.then) {\r\n\t\t\t\t\tvar deferredContext = context\r\n\t\t\t\t\treturn value.then(function(value) {\r\n\t\t\t\t\t\tif (value && value.subscribe) {\r\n\t\t\t\t\t\t\tif (deferredContext) {\r\n\t\t\t\t\t\t\t\treturn deferredContext.executeWithin(function() {\r\n\t\t\t\t\t\t\t\t\treturn Variable.prototype.gotValue.call(variable, sync, value)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn Variable.prototype.gotValue.call(variable, sync, value)\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn value\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\treturn value\r\n\t\t\t},\r\n\t\t\tPropertyClass: Variable,\r\n\t\t\tproperty: function(key, PropertyClass) {\r\n\t\t\t\tvar propertyVariable = this[key]\r\n\t\t\t\tif (!propertyVariable || !propertyVariable.notifies) {\r\n\t\t\t\t\tpropertyVariable = this._properties && this._properties[key]\r\n\t\t\t\t}\r\n\t\t\t\tif (!propertyVariable) {\r\n\t\t\t\t\t// create the property variable\r\n\t\t\t\t\tvar Class = PropertyClass\r\n\t\t\t\t\tif (!Class) {\r\n\t\t\t\t\t\tClass = this.constructor[key]\r\n\t\t\t\t\t\tif (typeof Class !== 'function' || !Class.isPropertyClass) {\r\n\t\t\t\t\t\t\tClass = this.PropertyClass\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpropertyVariable = new Class()\r\n\t\t\t\t\tpropertyVariable.key = key\r\n\t\t\t\t\tpropertyVariable.parent = this\r\n\t\t\t\t\tif (this[key] === undefined) {\r\n\t\t\t\t\t\tthis[key] = propertyVariable\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t(this._properties || (this._properties = {}))[key] = propertyVariable\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (PropertyClass) {\r\n\t\t\t\t\tif (!(propertyVariable instanceof PropertyClass)) {\r\n\t\t\t\t\t\tthrow new TypeError('Existing property variable does not match requested variable type')\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn propertyVariable\r\n\t\t\t},\r\n\t\t\tfor: function(subject) {\r\n\t\t\t\tif (subject && subject.target && !subject.constructor.getForClass) {\r\n\t\t\t\t\t// makes HTML events work\r\n\t\t\t\t\tsubject = subject.target\r\n\t\t\t\t}\r\n\t\t\t\tif (this.parent) {\r\n\t\t\t\t\treturn this.parent.for(subject).property(this.key)\r\n\t\t\t\t}\r\n\t\t\t\treturn new ContextualizedVariable(this, subject || defaultContext)\r\n\t\t\t},\r\n\t\t\t_changeValue: function(type, newValue) {\r\n\t\t\t\tvar key = this.key\r\n\t\t\t\tvar parent = this.parent\r\n\t\t\t\tif (!parent) {\r\n\t\t\t\t\treturn this.put(newValue, context)\r\n\t\t\t\t}\r\n\t\t\t\tvar variable = this\r\n\t\t\t\tvar object = parent.getValue ? parent.getValue(true, true, true) : parent.value\r\n\t\t\t\tif (object == null) {\r\n\t\t\t\t\t// nothing there yet, create an object to hold the new property\r\n\t\t\t\t\tparent.put(object = typeof key == 'number' ? [] : {})\r\n\t\t\t\t} else if (typeof object != 'object') {\r\n\t\t\t\t\t// if the parent is not an object, we can't set anything (that will be retained)\r\n\t\t\t\t\tvar error = new Error('Can not set property on non-object')\r\n\t\t\t\t\terror.deniedPut = true\r\n\t\t\t\t\tthrow error\r\n\t\r\n\t\t\t\t}\r\n\t\t\t\tvar oldValue = typeof object.get === 'function' ? object.get(key) : object[key]\r\n\t\t\t\tif (oldValue === newValue && typeof newValue != 'object') {\r\n\t\t\t\t\t// no actual change to make\r\n\t\t\t\t\treturn noChange\r\n\t\t\t\t}\r\n\t\t\t\tif (typeof object.set === 'function') {\r\n\t\t\t\t\tobject.set(key, newValue)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (type == RequestChange && oldValue && oldValue.put && (!newValue && newValue.put)) {\r\n\t\t\t\t\t\t// if a put and the property value is a variable, assign it to that.\r\n\t\t\t\t\t\toldValue.put(newValue)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (newValue && newValue.then && !newValue.notifies) {\r\n\t\t\t\t\t\t\tnewValue = assignPromise(this, newValue, function(value) {\r\n\t\t\t\t\t\t\t\tobject[key] = value\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tobject[key] = newValue\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// or set the setter/getter\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tvar event = new RefreshEvent()\r\n\t\t\t\tevent.oldValue = oldValue\r\n\t\t\t\tevent.target = variable\r\n\t\t\t\tvariable.updated(event, variable)\r\n\t\r\n\t\t\t\t// now notify any object listeners\r\n\t\t\t\tvar listeners = propertyListenersMap.get(object)\r\n\t\t\t\t// we need to do it before the other listeners, so we can update it before\r\n\t\t\t\t// we trigger a full clobbering of the object\r\n\t\t\t\tif (listeners) {\r\n\t\t\t\t\tlisteners = listeners.slice(0)\r\n\t\t\t\t\tfor (var i = 0, l = listeners.length; i < l; i++) {\r\n\t\t\t\t\t\tvar listener = listeners[i]\r\n\t\t\t\t\t\tif (listener !== parent) {\r\n\t\t\t\t\t\t\t// now go ahead and actually trigger the other listeners (but make sure we don't do the parent again)\r\n\t\t\t\t\t\t\tlistener._propertyChange(key, object, type)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn newValue\r\n\t\t\t},\r\n\t\r\n\t\t\t_propertyChange: function(propertyName, object, type) {\r\n\t\t\t\tif (this.onPropertyChange) {\r\n\t\t\t\t\tthis.onPropertyChange(propertyName, object)\r\n\t\t\t\t}\r\n\t\t\t\tthis.updated(new PropertyChangeEvent(propertyName, new RefreshEvent(), this))\r\n\t\t\t},\r\n\t\t\teachKey: function(callback) {\r\n\t\t\t\tfor (var i in this._properties) {\r\n\t\t\t\t\tcallback(i)\r\n\t\t\t\t}\r\n\t\t\t\tfor (var i in this) {\r\n\t\t\t\t\tif (this.hasOwnProperty[i]) {\r\n\t\t\t\t\t\tvar value = this[i]\r\n\t\t\t\t\t\tif (value && value.parent == this && value.listeners) {\r\n\t\t\t\t\t\t\tcallback(i)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tapply: function(instance, args) {\r\n\t\t\t\treturn new Transform(args[0], this, args)\r\n\t\t\t},\r\n\t\t\tcall: function(instance) {\r\n\t\t\t\treturn this.apply(instance, Array.prototype.slice.call(arguments, 1))\r\n\t\t\t},\r\n\t\t\tforDependencies: function(callback) {\r\n\t\t\t\tif (this.returnedVariable) {\r\n\t\t\t\t\tcallback(this.returnedVariable)\r\n\t\t\t\t}\r\n\t\t\t\tif (this.hasNotifyingChild) {\r\n\t\t\t\t\tforPropertyNotifyingValues(this, this, callback)\r\n\t\t\t\t}\r\n\t\t\t\tif (this.parent) {\r\n\t\t\t\t\tcallback(this.parent)\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tinit: function() {\r\n\t\t\t\tvar variable = this\r\n\t\t\t\tvar contextualizes, sources = [] // TODO: optimize this\r\n\t\t\t\tthis.forDependencies(function(dependency) {\r\n\t\t\t\t\tvar contextualized = dependency.notifies(variable)\r\n\t\t\t\t\tif (contextualized !== dependency) {\r\n\t\t\t\t\t\tcontextualizes = true\r\n\t\t\t\t\t}\r\n\t\t\t\t\tsources.push(contextualized)\r\n\t\t\t\t})\r\n\t\t\t\tif (contextualizes) {\r\n\t\t\t\t\tvar contextualized = new ContextualizedVariable()\r\n\t\t\t\t\t//context.instanceMap.set(this, contextualized)\r\n\t\t\t\t\tcontextualized.sources = sources\r\n\t\t\t\t\tcontextualized.init()\r\n\t\t\t\t\treturn contextualized\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tif (this.listeningToObject === null) {\r\n\t\t\t\t\t// we were previously listening to an object, but it needs to be restored\r\n\t\t\t\t\t// calling valueOf will cause the listening object to be restored\r\n\t\t\t\t\tthis.valueOf()\r\n\t\t\t\t}\r\n\t\t\t\treturn this\r\n\t\t\t},\r\n\t\t\tcleanup: function() {\r\n\t\t\t\tthis.listeners = false\r\n\t\t\t\tvar handles = this.handles\r\n\t\t\t\tif (handles) {\r\n\t\t\t\t\tfor (var i = 0; i < handles.length; i++) {\r\n\t\t\t\t\t\thandles[i].remove()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.handles = null\r\n\t\t\t\tvar returnedVariable = this.returnedVariable\r\n\t\t\t\tvar variable = this\r\n\t\t\t\tthis.forDependencies(function(dependency) {\r\n\t\t\t\t\tdependency.stopNotifies(variable)\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\r\n\t\t\tversion: 0,\r\n\t\t\tversionWithChildren: 0,\r\n\t\r\n\t\t\tupdateVersion: function(version) {\r\n\t\t\t\tthis.version = nextVersion = Math.max(Date.now(), nextVersion + 1)\r\n\t\t\t},\r\n\t\r\n\t\t\tgetVersion: function() {\r\n\t\t\t\treturn Math.max(this.version,\r\n\t\t\t\t\tthis.returnedVariable && this.returnedVariable.getVersion ? this.returnedVariable.getFullVersion(context) : 0,\r\n\t\t\t\t\tthis.parent ? this.parent.getVersion(context) : 0)\r\n\t\t\t},\r\n\t\t\tgetFullVersion: function() {\r\n\t\t\t\treturn Math.max(this.versionWithChildren, this.getVersion())\r\n\t\t\t},\r\n\t\r\n\t\t\tgetSubject: function(selectVariable) {\r\n\t\t\t\treturn this.subject\r\n\t\t\t},\r\n\t\r\n\t\t\tgetUpdates: function(since) {\r\n\t\t\t\tvar updates = []\r\n\t\t\t\tvar nextUpdateMap = this.nextUpdateMap\r\n\t\t\t\tif (nextUpdateMap && since) {\r\n\t\t\t\t\twhile ((since = nextUpdateMap.get(since))) {\r\n\t\t\t\t\t\tif (since.type === 'refresh') {\r\n\t\t\t\t\t\t\t// if it was refresh, we can clear any prior entries\r\n\t\t\t\t\t\t\tupdates = []\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tupdates.push(since)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn updates\r\n\t\t\t},\r\n\t\r\n\t\t\tupdated: function(updateEvent, by, isDownstream) {\r\n\t\t\t\tif (!updateEvent) {\r\n\t\t\t\t\tupdateEvent = new RefreshEvent()\r\n\t\t\t\t\tupdateEvent.source = this\r\n\t\t\t\t}\r\n\t\t\t\tif (updateEvent.visited.has(this)){\r\n\t\t\t\t\t// if this event has already visited this variable, skip it\r\n\t\t\t\t\treturn updateEvent\r\n\t\t\t\t}\r\n\t\t\t\tupdateEvent.visited.add(this)\r\n\t\t\t\tif (this.__debug) {\r\n\t\t\t\t\t// debug is on\r\n\t\t\t\t\tVariable._logStackTrace(this)\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t/*var contextualInstance = context && context.getContextualized(this)\r\n\t\t\t\tif (contextualInstance) {\r\n\t\t\t\t\tcontextualInstance.updated(updateEvent, this)\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\t// at some point we could do an update list so that we could incrementally update\r\n\t\t\t\t// lists in non-live situations\r\n\t\t\t\tif (this.lastUpdate) {\r\n\t\t\t\t\tvar nextUpdateMap = this.nextUpdateMap\r\n\t\t\t\t\tif (!nextUpdateMap) {\r\n\t\t\t\t\t\tnextUpdateMap = this.nextUpdateMap = new WeakMap()\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnextUpdateMap.set(this.lastUpdate, updateEvent)\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.lastUpdate = updateEvent */\r\n\t\t\t\tif (updateEvent instanceof PropertyChangeEvent) {\r\n\t\t\t\t\tthis.versionWithChildren = Math.max(Date.now(), nextVersion + 1)\r\n\t\t\t\t} else if (!isDownstream) {\r\n\t\t\t\t\tthis.updateVersion()\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar listeners = this.listeners\r\n\t\t\t\tif (listeners) {\r\n\t\t\t\t\tvar variable = this\r\n\t\t\t\t\t// make a copy, in case they change\r\n\t\t\t\t\tlisteners = listeners.slice()\r\n\t\t\t\t\tfor (var i = 0, l = listeners.length; i < l; i++) {\r\n\t\t\t\t\t\tvar dependent = listeners[i]\r\n\t\t\t\t\t\tif ((updateEvent instanceof PropertyChangeEvent) &&\r\n\t\t\t\t\t\t\t\tdependent.parent) {\r\n\t\t\t\t\t\t\tif (dependent.key === updateEvent.key) {\r\n\t\t\t\t\t\t\t\tdependent.updated(updateEvent.childEvent, variable, true)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tdependent.updated(updateEvent, variable, true)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (updateEvent instanceof PropertyChangeEvent) {\r\n\t\t\t\t\tif (this.returnedVariable && this.fixed) {\r\n\t\t\t\t\t\tthis.returnedVariable.updated(updateEvent, this)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this.constructor.collection) {\r\n\t\t\t\t\t\tthis.constructor.collection.updated(updateEvent, this)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (this.parent) {\r\n\t\t\t\t\tthis.parent.updated(new PropertyChangeEvent(this.key, updateEvent, this.parent), this)\r\n\t\t\t\t}\r\n\t\t\t\tif (this.collection) {\r\n\t\t\t\t\tthis.collection.updated(updateEvent, this)\r\n\t\t\t\t}\r\n\t\t\t\treturn updateEvent\r\n\t\t\t},\r\n\t\r\n\t\t\tinvalidate: function() {\r\n\t\t\t\t// for back-compatibility for now\r\n\t\t\t\tthis.updated()\r\n\t\t\t},\r\n\t\r\n\t\t\tnotifies: function(target) {\r\n\t\t\t\t// TODO: Eventually we want this to be trigerred from context, but context gets shared with returned variables, so will need to handle that\r\n\t\t\t\tif (!target) {\r\n\t\t\t\t\tthrow new Error('No listener provided for notification')\r\n\t\t\t\t}\r\n\t\t\t\tvar listeners = this.listeners\r\n\t\t\t\tif (!listeners || !this.hasOwnProperty('listeners')) {\r\n\t\t\t\t\tvar variable = this.init()\r\n\t\t\t\t\tvariable.listeners = listeners = [target]\r\n\t\t\t\t\treturn variable\r\n\t\t\t\t} else if (listeners.indexOf(target) === -1) {\r\n\t\t\t\t\tlisteners.push(target)\r\n\t\t\t\t}\r\n\t\t\t\treturn this\r\n\t\t\t},\r\n\t\t\tsubscribe: function(listener) {\r\n\t\t\t\t// ES7 Observable (and baconjs) compatible API\r\n\t\t\t\tvar updated\r\n\t\t\t\tvar updateQueued\r\n\t\t\t\tvar variable = this\r\n\t\t\t\t// it is important to make sure you register for notifications before getting the value\r\n\t\t\t\tif (typeof listener === 'function') {\r\n\t\t\t\t\t// BaconJS compatible API\r\n\t\t\t\t\tvar variable = this\r\n\t\t\t\t\tvar event = {\r\n\t\t\t\t\t\tvalue: function() {\r\n\t\t\t\t\t\t\treturn new Context(null, true).executeWithin(function() {\r\n\t\t\t\t\t\t\t\treturn variable.valueOf()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tupdated = function() {\r\n\t\t\t\t\t\tupdateQueued = false\r\n\t\t\t\t\t\tlistener(event)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\telse if (listener.next) {\r\n\t\t\t\t\t// Assuming ES7 Observable API. It is actually a streaming API, this pretty much violates all principles of reactivity, but we will support it\r\n\t\t\t\t\tupdated = function() {\r\n\t\t\t\t\t\tupdateQueued = false\r\n\t\t\t\t\t\tvariable.then(function(value) {\r\n\t\t\t\t\t\t\tlistener.next(value)\r\n\t\t\t\t\t\t}, function(error) {\r\n\t\t\t\t\t\t\tlistener.error(value)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error('Subscribing to an invalid listener, the listener must be a function, or have an update or next method')\r\n\t\t\t\t}\r\n\t\t\t\tvar updateReceiver = {\r\n\t\t\t\t\tupdated: function() {\r\n\t\t\t\t\t\tif (updateQueued) {\r\n\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tupdateQueued = true\r\n\t\t\t\t\t\tlang.nextTurn(updated)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tupdated()\r\n\t\t\t\tthis.notifies(updateReceiver)\r\n\t\t\t\treturn {\r\n\t\t\t\t\tunsubscribe: function() {\r\n\t\t\t\t\t\tvariable.stopNotifies(updateReceiver)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tstopNotifies: function(dependent) {\r\n\t\t\t\tvar listeners = this.listeners\r\n\t\t\t\tif (listeners) {\r\n\t\t\t\t\tvar index = listeners.indexOf(dependent)\r\n\t\t\t\t\tif (index > -1) {\r\n\t\t\t\t\t\tlisteners.splice(index, 1)\r\n\t\t\t\t\t\tif (listeners.length === 0) {\r\n\t\t\t\t\t\t\t// clear the listeners so it will be reinitialized if it has\r\n\t\t\t\t\t\t\t// listeners again\r\n\t\t\t\t\t\t\tthis.cleanup()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tput: function(value) {\r\n\t\t\t\tvar variable = this\r\n\t\t\t\tif (this.parent) {\r\n\t\t\t\t\treturn this._changeValue(RequestChange, value)\r\n\t\t\t\t}\r\n\t\t\t\tvar oldValue = this.getValue ? this.getValue(true) : this.value\r\n\t\t\t\tif (oldValue === value && typeof value != 'object') {\r\n\t\t\t\t\treturn noChange\r\n\t\t\t\t}\r\n\t\t\t\tif (oldValue && oldValue.put &&\r\n\t\t\t\t\t\t// if it is set to fixed, we see we can put in the current variable\r\n\t\t\t\t\t\t(variable.fixed || !(value && value.put))) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\treturn oldValue.put(value)\r\n\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\tif (!error.deniedPut) {\r\n\t\t\t\t\t\t\tthrow error\r\n\t\t\t\t\t\t}// else if the put was denied, continue on and set the value on this variable\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (value && value.then && !value.notifies) {\r\n\t\t\t\t\tvalue = assignPromise(this, value)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvariable.value = value\r\n\t\t\t\t}\r\n\t\t\t\tvar event = new RefreshEvent()\r\n\t\t\t\tevent.oldValue = oldValue\r\n\t\t\t\tevent.target = variable\r\n\t\t\t\tvariable.updated(event, variable)\r\n\t\t\t\treturn value\r\n\t\t\t},\r\n\t\t\tget: function(key) {\r\n\t\t\t\tif (this[key] || (this._properties && this._properties[key])) {\r\n\t\t\t\t\treturn this.property(key).valueOf()\r\n\t\t\t\t}\r\n\t\t\t\tvar object = this.getValue(true)\r\n\t\t\t\tif (!object) {\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tif (typeof object.get === 'function') {\r\n\t\t\t\t\treturn object.get(key)\r\n\t\t\t\t}\r\n\t\t\t\tvar value = object[key]\r\n\t\t\t\tif (value && value.notifies) {\r\n\t\t\t\t\t// nested variable situation, get underlying value\r\n\t\t\t\t\treturn value.valueOf()\r\n\t\t\t\t}\r\n\t\t\t\treturn value\r\n\t\t\t},\r\n\t\t\tset: function(key, value) {\r\n\t\t\t\t// TODO: create an optimized route when the property doesn't exist yet\r\n\t\t\t\tthis.property(key)._changeValue(RequestSet, value)\r\n\t\t\t},\r\n\t\t\tundefine: function(key) {\r\n\t\t\t\tthis.set(key, undefined)\r\n\t\t\t},\r\n\t\t\tis: function(proxiedVariable) {\r\n\t\t\t\tvar thisVariable = this\r\n\t\t\t\tthis.fixed = true\r\n\t\t\t\treturn whenStrict(this.setValue(proxiedVariable), function(value) {\r\n\t\t\t\t\tthisVariable.updated(new RefreshEvent(), thisVariable)\r\n\t\t\t\t\treturn thisVariable\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tproxy: function(proxiedVariable) {\r\n\t\t\t\treturn this.is(proxiedVariable)\r\n\t\t\t},\r\n\t\t\tnext: function(value) {\r\n\t\t\t\t// for ES7 observable compatibility\r\n\t\t\t\tthis.put(value)\r\n\t\t\t},\r\n\t\t\terror: function(error) {\r\n\t\t\t\t// for ES7 observable compatibility\r\n\t\t\t\tvar listeners = this.listeners\r\n\t\t\t\tif (listeners) {\r\n\t\t\t\t\t// make a copy, in case they change\r\n\t\t\t\t\tlisteners.forEach(function(dependent) {\r\n\t\t\t\t\t\t// skip notifying property listeners if we are headed up the parent chain\r\n\t\t\t\t\t\tdependent.error(error)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcomplete: function(value) {\r\n\t\t\t\t// for ES7 observable compatibility\r\n\t\t\t\tthis.put(value)\r\n\t\t\t},\r\n\t\t\tsetValue: function(value) {\r\n\t\t\t\treturn this.value = value\r\n\t\t\t},\r\n\t\t\tonValue: function(listener) {\r\n\t\t\t\treturn this.subscribe(function(event) {\r\n\t\t\t\t\twhen(event.value(), function(value) {\r\n\t\t\t\t\t\tlistener(value)\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\ttoJSON: function() {\r\n\t\t\t\treturn this.valueOf()\r\n\t\t\t},\r\n\t\t\ttoString: function() {\r\n\t\t\t\treturn String(this.valueOf())\r\n\t\t\t},\r\n\t\t\tforEach: function(callbackOrItemClass, callback) {\r\n\t\t\t\t// iterate through current value of variable\r\n\t\t\t\tif (callbackOrItemClass.notifies) {\r\n\t\t\t\t\treturn this.forEach(function(item) {\r\n\t\t\t\t\t\tvar itemVariable = callbackOrItemClass.from(item)\r\n\t\t\t\t\t\tcallback.call(this, itemVariable)\r\n\t\t\t\t\t}, context)\r\n\t\t\t\t}\r\n\t\t\t\tvar collectionOf = this.collectionOf\r\n\t\t\t\tif (collectionOf) {\r\n\t\t\t\t\tvar variable = this\r\n\t\t\t\t\treturn when(this.valueOf(), function(value) {\r\n\t\t\t\t\t\tif (value && value.forEach) {\r\n\t\t\t\t\t\t\tvalue.forEach(function(item, index) {\r\n\t\t\t\t\t\t\t\tcallbackOrItemClass.call(variable, variable.property(index, collectionOf))\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\treturn when(this.valueOf(callback), function(value) {\r\n\t\t\t\t\tif (value && value.forEach) {\r\n\t\t\t\t\t\tvalue.forEach(callbackOrItemClass)\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tfor (var i in value) {\r\n\t\t\t\t\t\t\tcallbackOrItemClass.call(value, value[i], i)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\r\n\t\t\tto: function (transformFunction, reverse) {\r\n\t\t\t\tif (typeof transformFunction !== 'function') {\r\n\t\t\t\t\tif (typeof transformFunction === 'object') {\r\n\t\t\t\t\t\tthis.to(transformFunction.get, transformFunction.set)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthrow new Error('No function provided to transform')\r\n\t\t\t\t}\r\n\t\t\t\tif (reverse) {\r\n\t\t\t\t\ttransformFunction.reverse = function(value, args, context) {\r\n\t\t\t\t\t\t// for direct to, we can just use the first argument\r\n\t\t\t\t\t\treverse.call(this, value, args[0], context)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (transformFunction.prototype instanceof Variable) {\r\n\t\t\t\t\treturn new transformFunction(this)\r\n\t\t\t\t}\r\n\t\t\t\treturn new (this._Transform || Transform)(this, transformFunction)\r\n\t\t\t},\r\n\t\t\tmap: function (transformFunction) {\r\n\t\t\t\treturn this.to(function(value) {\r\n\t\t\t\t\tif (value instanceof Array) {\r\n\t\t\t\t\t\tthrow new Error('map without VArray')\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn transformFunction(value)\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tas: function(Class) {\r\n\t\t\t\t// easiest way to cast to a variable class\r\n\t\t\t\treturn new Class(this)\r\n\t\t\t},\r\n\t\t\tget schema() {\r\n\t\t\t\t// default schema is the constructor\r\n\t\t\t\tif (this.returnedVariable) {\r\n\t\t\t\t\treturn this.returnedVariable.schema\r\n\t\t\t\t}\r\n\t\t\t\tif (this.parent) {\r\n\t\t\t\t\tvar parentSchemaProperties = this.parent.schema.properties || this.parent.schema\r\n\t\t\t\t\treturn parentSchemaProperties && parentSchemaProperties[this.key]\r\n\t\t\t\t}\r\n\t\t\t\treturn this.constructor\r\n\t\t\t},\r\n\t\t\tset schema(schema) {\r\n\t\t\t\t// but allow it to be overriden\r\n\t\t\t\tObject.defineProperty(this, 'schema', {\r\n\t\t\t\t\tvalue: schema\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tvalidate: function(target, schema) {\r\n\t\t\t\tif (this.returnedVariable) {\r\n\t\t\t\t\treturn this.returnedVariable.validate(target, schema)\r\n\t\t\t\t}\r\n\t\t\t\tif (this.parent) {\r\n\t\t\t\t\treturn this.parent.validate(target.valueOf(), schema)\r\n\t\t\t\t}\r\n\t\t\t\tif (schema) {\r\n\t\t\t\t\tif (schema.type && (schema.type !== typeof target)) {\r\n\t\t\t\t\t\treturn ['Target type of ' + typeof target + ' does not match schema type of ' + schema.type]\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (schema.required && (target == null || target == '' || (typeof target === 'number' && isNaN(target)))) {\r\n\t\t\t\t\t\treturn ['Value is required']\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tvar valid = []\r\n\t\t\t\tvalid.isValid = true\r\n\t\t\t\treturn valid\r\n\t\t\t},\r\n\t\r\n\t\t\tget validation() {\r\n\t\t\t\tvar validation = new Validating(this)\r\n\t\t\t\tObject.defineProperty(this, 'validation', {\r\n\t\t\t\t\tvalue: validation\r\n\t\t\t\t})\r\n\t\t\t\treturn validation\r\n\t\t\t},\r\n\t\t\tset validation(validation) {\r\n\t\t\t\t// but allow it to be overriden\r\n\t\t\t\tObject.defineProperty(this, 'validation', {\r\n\t\t\t\t\tvalue: validation\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tset structured(structure) {\r\n\t\t\t\t// find any variable properties and attaches them as a property\r\n\t\t\t\tvar keys = Object.keys(this)\r\n\t\t\t\tvar properties = keys.length > 1 && this._properties || (this._properties = {})\r\n\t\t\t\tfor(var i = 0, l = keys.length; i < l; i++) {\r\n\t\t\t\t\tvar key = keys[i]\r\n\t\t\t\t\tvar value = this[key]\r\n\t\t\t\t\tif (value instanceof Variable) {\r\n\t\t\t\t\t\tvar existing = properties[key]\r\n\t\t\t\t\t\tif (existing) {\r\n\t\t\t\t\t\t\tif (existing !== value) {\r\n\t\t\t\t\t\t\t\t// an existing property exists, put in it\r\n\t\t\t\t\t\t\t\texisting.put(value)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (value.parent) {\r\n\t\t\t\t\t\t\t\tif (value.parent === this) {\r\n\t\t\t\t\t\t\t\t\tcontinue // just being assigned to another property\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// property already exists with different parent, make a proxy\r\n\t\t\t\t\t\t\t\t\tvar newValue = new Variable()\r\n\t\t\t\t\t\t\t\t\tnewValue.proxy(value)\r\n\t\t\t\t\t\t\t\t\tvalue = newValue\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvalue.key = key\r\n\t\t\t\t\t\t\tvalue.parent = this\r\n\t\t\t\t\t\t\tproperties[key] = value\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tgetId: function() {\r\n\t\t\t\treturn this.id || (this.id = Variable.nextId++)\r\n\t\t\t},\r\n\t\t\tobserveObject: function() {\r\n\t\t\t\tvar variable = this\r\n\t\t\t\treturn when(this.valueOf(), function(object) {\r\n\t\t\t\t\tvar listeners = propertyListenersMap.get(object)\r\n\t\t\t\t\tif (!listeners) {\r\n\t\t\t\t\t\tpropertyListenersMap.set(object, listeners = [])\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (listeners.observerCount) {\r\n\t\t\t\t\t\tlisteners.observerCount++\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tlisteners.observerCount = 1\r\n\t\t\t\t\t\tvar observer = listeners.observer = lang.observe(object, function(events) {\r\n\t\t\t\t\t\t\tfor (var i = 0, l = listeners.length; i < l; i++) {\r\n\t\t\t\t\t\t\t\tvar listener = listeners[i]\r\n\t\t\t\t\t\t\t\tfor (var j = 0, el = events.length; j < el; j++) {\r\n\t\t\t\t\t\t\t\t\tvar event = events[j]\r\n\t\t\t\t\t\t\t\t\tlistener._propertyChange(event.name, object)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tif (observer.addKey) {\r\n\t\t\t\t\t\t\tfor (var i = 0, l = listeners.length; i < l; i++) {\r\n\t\t\t\t\t\t\t\tvar listener = listeners[i]\r\n\t\t\t\t\t\t\t\tlistener.eachKey(function(key) {\r\n\t\t\t\t\t\t\t\t\tobserver.addKey(key)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tregisterListener(object, variable)\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tremove: function() {\r\n\t\t\t\t\t\t\tderegisterListener(object, variable)\r\n\t\t\t\t\t\t\tif (!(--listeners.observerCount)) {\r\n\t\t\t\t\t\t\t\tlisteners.observer.remove()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tdone: function() {\r\n\t\t\t\t\t\t\t// deliver changes\r\n\t\t\t\t\t\t\tlang.deliverChanges(observer)\r\n\t\t\t\t\t\t\tthis.remove()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tgetCollectionOf: function() {\r\n\t\t\t\treturn this.returnedVariable && this.returnedVariable.collectionOf || this.constructor.collectionOf\r\n\t\t\t},\r\n\t\t\t_sN: function(name) {\r\n\t\t\t\t// for compilers to set a name\r\n\t\t\t\tthis.name = name\r\n\t\t\t\treturn this\r\n\t\t\t},\r\n\t\t\tget _debug() {\r\n\t\t\t\tif (this.__debug === undefined) {\r\n\t\t\t\t\tthis.__debug = this.name || (Math.random() + '').slice(2)\r\n\t\t\t\t}\r\n\t\t\t\treturn this.__debug\r\n\t\t\t},\r\n\t\t\tset _debug(_debug) {\r\n\t\t\t\tthis.__debug = _debug\r\n\t\t\t},\r\n\t\t\tget _lastUpdated() {\r\n\t\t\t\treturn new Date(this.getVersion())\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\t// a variable inheritance change goes through its own prototype, so classes/constructor\r\n\t\t// can be used as variables as well\r\n\t\tfor (var key in VariablePrototype) {\r\n\t\t\tObject.defineProperty(Variable, key, Object.getOwnPropertyDescriptor(VariablePrototype, key))\r\n\t\t}\r\n\t\r\n\t\tVariable.as = function(Type) {\r\n\t\t\tvar NewType = this.with({})\r\n\t\t\tvar target = NewType.prototype\r\n\t\t\tvar prototype = Type.prototype\r\n\t\t\tdo {\r\n\t\t\t\tvar names = Object.getOwnPropertyNames(prototype)\r\n\t\t\t\tfor (var i = 0; i < names.length; i++) {\r\n\t\t\t\t\tvar name = names[i]\r\n\t\t\t\t\tif (!Object.getOwnPropertyDescriptor(target, name)) {\r\n\t\t\t\t\t\tObject.defineProperty(target, name, Object.getOwnPropertyDescriptor(prototype, name))\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tprototype = getPrototypeOf(prototype)\r\n\t\t\t} while (prototype && prototype !== Variable.prototype)\r\n\t\t\treturn NewType\r\n\t\t}\r\n\t\r\n\t\tVariable.with = function(properties, ExtendedVariable) {\r\n\t\t\t// TODO: handle arguments\r\n\t\t\tvar Base = this\r\n\t\t\tvar prototype\r\n\t\t\tif (Object.getOwnPropertyDescriptor(this, 'prototype').writable === false) {\r\n\t\t\t\t// extending native class\r\n\t\t\t\tExtendedVariable = lang.extendClass(this)\r\n\t\t\t\tprototype = ExtendedVariable.prototype\r\n\t\t\t} else {\r\n\t\t\t\t// extending function/constructor\r\n\t\t\t\tExtendedVariable = ExtendedVariable || function() {\r\n\t\t\t\t\tif (this instanceof ExtendedVariable) {\r\n\t\t\t\t\t\tBase.apply(this, arguments)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn ExtendedVariable.with(properties)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tprototype = ExtendedVariable.prototype = Object.create(this.prototype)\r\n\t\t\t\tprototype.constructor = ExtendedVariable\r\n\t\t\t\tsetPrototypeOf(ExtendedVariable, this)\r\n\t\t\t}\r\n\t\t\treturn ExtendedVariable.assign(properties)\r\n\t\t}\r\n\t\tVariable.assign = function(properties) {\r\n\t\t\tvar prototype = this.prototype\r\n\t\t\tfor (var key in properties) {\r\n\t\t\t\tvar descriptor = Object.getOwnPropertyDescriptor(properties, key)\r\n\t\t\t\tvar value = descriptor.value\r\n\t\t\t\tif (typeof value === 'function' && key !== 'collectionOf') {\r\n\t\t\t\t\tif (value.notifies) {\r\n\t\t\t\t\t\t// variable class\r\n\t\t\t\t\t\tdescriptor = (function(key, Class) {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tget: function() {\r\n\t\t\t\t\t\t\t\t\tvar property = (this._properties || (this._properties = {}))[key]\r\n\t\t\t\t\t\t\t\t\tif (!property) {\r\n\t\t\t\t\t\t\t\t\t\tthis._properties[key] = property = new Class()\r\n\t\t\t\t\t\t\t\t\t\tproperty.key = key\r\n\t\t\t\t\t\t\t\t\t\tproperty.parent = this\r\n\t\t\t\t\t\t\t\t\t\tif (property.listeners) {\r\n\t\t\t\t\t\t\t\t\t\t\t// if it already has listeners, need to reinit it with the parent\r\n\t\t\t\t\t\t\t\t\t\t\tproperty.init()\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\treturn property\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tset: function(value) {\r\n\t\t\t\t\t\t\t\t\tthis[key]._changeValue(RequestSet, value)\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tenumerable: true\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})(key, value)\r\n\t\t\t\t\t\tif (value === Variable) {\r\n\t\t\t\t\t\t\tvalue = Variable() // create own instance\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvalue.isPropertyClass = true\r\n\t\t\t\t\t} else if (isGenerator(value)) {\r\n\t\t\t\t\t\tdescriptor = getGeneratorDescriptor(value)\r\n\t\t\t\t\t} else if (value.defineAs) {\r\n\t\t\t\t\t\tdescriptor = value.defineAs(key)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvalue = generalizeMethod(value, key)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tObject.defineProperty(prototype, key, descriptor)\r\n\t\t\t\tif (value !== undefined) {\r\n\t\t\t\t\t// TODO: If there is a getter/setter here, use defineProperty\r\n\t\t\t\t\tthis[key] = value\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// getter/setter\r\n\t\t\t\t\tObject.defineProperty(this, key, descriptor)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (properties && properties.hasOwn) {\r\n\t\t\t\thasOwn.call(this, properties.hasOwn)\r\n\t\t\t}\r\n\t\t\treturn this\r\n\t\t}\r\n\t\r\n\t\tObject.defineProperty(Variable, 'defaultInstance', {\r\n\t\t\tget: function() {\r\n\t\t\t\treturn this.hasOwnProperty('_defaultInstance') ?\r\n\t\t\t\t\tthis._defaultInstance : (\r\n\t\t\t\t\t\tthis._defaultInstance = new this(),\r\n\t\t\t\t\t\tthis._defaultInstance.subject = defaultContext,\r\n\t\t\t\t\t\tthis._defaultInstance)\r\n\t\t\t}\r\n\t\t})\r\n\t\tVariable.hasOwn = function(Target, createInstance) {\r\n\t\t\tvar instanceMap = new WeakMap()\r\n\t\t\tinstanceMap.createInstance = createInstance\r\n\t\t\tvar subjectMap = this.ownedClasses || (this.ownedClasses = new WeakMap())\r\n\t\t\tsubjectMap.set(Target, instanceMap)\r\n\t\t}\r\n\t\r\n\t\r\n\t\tfunction arrayToModify(variable, callback) {\r\n\t\t\t// TODO: switch this to allow promises\r\n\t\t\treturn when(variable.cachedValue || variable.valueOf(), function(array) {\r\n\t\t\t\tif (!array) {\r\n\t\t\t\t\tvariable.put(array = [])\r\n\t\t\t\t}\r\n\t\t\t\tvar results = callback.call(variable, array)\r\n\t\t\t\tvariable.cachedVersion++ // update the cached version, so any version checking will know it has changed\r\n\t\t\t\treturn results\r\n\t\t\t})\r\n\t\t}\r\n\t\r\n\t\tfunction insertedAt(variable, added, startingIndex, arrayLength) {\r\n\t\t\tvar addedCount = added.length\r\n\t\t\t// adjust the key positions of any index properties after splice\r\n\t\t\tif (addedCount > 0) {\r\n\t\t\t\tvar arrayPosition\r\n\t\t\t\tfor (var i = arrayLength - addedCount; i > startingIndex;) {\r\n\t\t\t\t\tvar arrayPosition = variable[--i]\r\n\t\t\t\t\tif (arrayPosition) {\r\n\t\t\t\t\t\tvariable[i] = undefined\r\n\t\t\t\t\t\tarrayPosition.key += addedCount\r\n\t\t\t\t\t\tvariable[arrayPosition.key] = arrayPosition\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// send out updates\r\n\t\t\t\tfor (var i = 0, l = added.length; i < l; i++) {\r\n\t\t\t\t\tvariable.updated(new AddEvent({\r\n\t\t\t\t\t\tvalue: added[i],\r\n\t\t\t\t\t\tindex: i + startingIndex,\r\n\t\t\t\t\t\tmodifier: variable\r\n\t\t\t\t\t}), variable)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction removedAt(variable, removed, startingIndex, removalCount, arrayLength) {\r\n\t\t\t// adjust the properties\r\n\t\t\tvar i = startingIndex + removalCount\r\n\t\t\tvar arrayPosition\r\n\t\t\tif (removalCount > 0) {\r\n\t\t\t\tfor (var i = startingIndex + removalCount; i < arrayLength + removalCount; i++) {\r\n\t\t\t\t\tvar arrayPosition = variable[i]\r\n\t\t\t\t\tif (arrayPosition) {\r\n\t\t\t\t\t\tvariable[i] = undefined\r\n\t\t\t\t\t\tarrayPosition.key -= removalCount\r\n\t\t\t\t\t\tvariable[arrayPosition.key] = arrayPosition\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// send out updates\r\n\t\t\t\tfor (var i = 0; i < removalCount; i++) {\r\n\t\t\t\t\tvariable.updated(new DeleteEvent({\r\n\t\t\t\t\t\tpreviousIndex: startingIndex,\r\n\t\t\t\t\t\toldValue: removed[i],\r\n\t\t\t\t\t\tmodifier: variable\r\n\t\t\t\t\t}), variable)\r\n\t\t\t\t}\r\n\t\t\t\tvariable.cachedVersion = variable.version // update the cached version so it doesn't need to be recomputed\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tif (typeof Symbol !== 'undefined') {\r\n\t\t\tVariable.prototype[Symbol.iterator] = function() {\r\n\t\t\t\tvar iterator = this.valueOf()[Symbol.iterator]()\r\n\t\t\t\tvar variable = this\r\n\t\t\t\tvar collectionOf = this.collectionOf\r\n\t\t\t\tif (collectionOf) {\r\n\t\t\t\t\tvar parent = this\r\n\t\t\t\t\tvar i = 0\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tnext: function() {\r\n\t\t\t\t\t\t\tvar result = iterator.next()\r\n\t\t\t\t\t\t\tif (!result.done) {\r\n\t\t\t\t\t\t\t\tresult.value = variable.property(i++, collectionOf)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn result\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn iterator\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tvar VMap = Variable.VMap = lang.compose(Variable, function(value){\r\n\t\t\tif (typeof value !== 'undefined') {\r\n\t\t\t\tthis.value = value\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tfixed: true,\r\n\t\t\t// TODO: Move all the get and set functionality for maps out of Variable\r\n\t\t\tproperty: function(key, PropertyClass) {\r\n\t\t\t\tvar properties = this._properties || (this._properties = new Map())\r\n\t\t\t\tvar propertyVariable = properties.get(key)\r\n\t\t\t\tif (!propertyVariable) {\r\n\t\t\t\t\t// create the property variable\r\n\t\t\t\t\tpropertyVariable = new (PropertyClass || this.PropertyClass)()\r\n\t\t\t\t\tpropertyVariable.key = key\r\n\t\t\t\t\tpropertyVariable.parent = this\r\n\t\t\t\t\tif (propertyVariable.listeners) {\r\n\t\t\t\t\t\t// if it already has listeners, need to reinit it with the parent\r\n\t\t\t\t\t\tpropertyVariable.init()\r\n\t\t\t\t\t}\r\n\t\t\t\t\tproperties.set(key, propertyVariable)\r\n\t\t\t\t}\r\n\t\t\t\treturn propertyVariable\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\tvar Transform = Variable.Transform = lang.compose(Variable, function Transform(source, transform, sources) {\r\n\t\t\tif (source !== undefined || sources) {\r\n\t\t\t\tthis.source = source\r\n\t\t\t}\r\n\t\t\tif (transform) {\r\n\t\t\t\tthis.transform = transform\r\n\t\t\t\tif (sources) {\r\n\t\t\t\t\tfor (var i = 1, l = sources.length; i < l; i++) {\r\n\t\t\t\t\t\tthis['source' + i] = sources[i]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tgetValue: function(sync) {\r\n\t\t\t\t// first check to see if we have the variable already computed\r\n\t\t\t\tif (this.readyState == 'invalidated') {\r\n\t\t\t\t\tthis.readyState = nextVersion.toString()\r\n\t\t\t\t} else if (isFinite(this.readyState)) {\r\n\t\t\t\t\t// will un-invalidate this later (contextualizedVariable.readyState = 'up-to-date')\r\n\t\t\t\t} else if ((this.listeners && this.readyState === 'up-to-date' || this.staysUpdated) && this.cachedVersion > -1) {\r\n\t\t\t\t\t// it is live, so we can shortcut and just return the cached value\r\n\t\t\t\t\tif (context) {\r\n\t\t\t\t\t\tcontext.setVersion(this.cachedVersion)\r\n\t\t\t\t\t\tif (context.ifModifiedSince >= this.cachedVersion && !this.returnedVariable) {\r\n\t\t\t\t\t\t\treturn NOT_MODIFIED\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (sync) {\r\n\t\t\t\t\t\tif (this.promise && context) {\r\n\t\t\t\t\t\t\tcontext.notResolvedYet = true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn this.cachedValue\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn this.promise || this.cachedValue\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!this.hasOwnProperty('source1') && context) {\r\n\t\t\t\t\t// TODO: Not sure if this is a helpful optimization or not\r\n\t\t\t\t\t// if we have a single source, we can use ifModifiedSince\r\n\t\t\t\t\t\t/*if (!contextualizedVariable && this.context && this.context.matches(context)) {\r\n\t\t\t\t\t\t\tcontextualizedVariable = this\r\n\t\t\t\t\t\t}*/\r\n\t\t\t\t}\r\n\t\t\t\tvar readyState = this.readyState\r\n\t\t\t\tvar parentContext = context\r\n\t\t\t\tvar transformContext = context = context ? context.newContext() : new Context()\r\n\t\t\t\tvar args = []\r\n\t\t\t\ttry {\r\n\t\t\t\t\tif (this.version) {\r\n\t\t\t\t\t\t// get the version in there\r\n\t\t\t\t\t\ttransformContext.setVersion(this.version)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this && this.cachedVersion >= this.version && this.cachedVersion > -1 && !this.hasOwnProperty('source1')) {\r\n\t\t\t\t\t\ttransformContext.ifModifiedSince = this.cachedVersion\r\n\t\t\t\t\t}\r\n\t\t\t \t\tvar transform = this.transform && this.transform.valueOf()\r\n\t\r\n\t\t\t\t\tvar argument, argumentName\r\n\t\t\t\t\tfor (var i = 0; (argument = this[argumentName = i > 0 ? 'source' + i : 'source']) || argumentName in this; i++) {\r\n\t\t\t\t\t\targs[i] = (argument && sync) ? argument.valueOf() : argument // for async, `then` will be called in whenAll\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar variable = this\r\n\t\t \t\t\treturn whenAll(args, function(resolved) {\r\n\t\t \t\t\t\tif (transformContext.ifModifiedSince !== undefined) {\r\n\t\t \t\t\t\t\ttransformContext.ifModifiedSince = undefined\r\n\t\t \t\t\t\t}\r\n\t\t\t\t\t\tvar version = transformContext.version\r\n\t\t\t\t\t\tvar notResolvedYet = transformContext.notResolvedYet\r\n\t\t\t\t\t\tif (notResolvedYet) {\r\n\t\t\t\t\t\t\tif (parentContext)\r\n\t\t\t\t\t\t\t\tparentContext.notResolvedYet = true \r\n\t\t\t\t\t\t\tif (resolved[0] === undefined && resolved.length === 1) {\r\n\t\t\t\t\t\t\t\tvariable.readyState = 'invalidated'\r\n\t\t\t\t\t\t\t\treturn variable.cachedValue // always sync here\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (variable.cachedVersion >= version || resolved[0] == NOT_MODIFIED) { // note that cached version can get \"ahead\" of `version` of all dependencies, in cases where the transform ends up executing an valueOf() that advances the resolution context version number. \r\n\t\t\t\t\t\t\t\t// get it out of the cache\r\n\t\t\t\t\t\t\t\tif (parentContext) {\r\n\t\t\t\t\t\t\t\t\tparentContext.setVersion(version)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (parentContext && parentContext.ifModifiedSince >= version && !variable.returnedVariable) {\r\n\t\t\t\t\t\t\t\t\treturn NOT_MODIFIED\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif (sync) {\r\n\t\t\t\t\t\t\t\t\tif (variable.promise && parentContext) {\r\n\t\t\t\t\t\t\t\t\t\tparentContext.notResolvedYet = true\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\treturn variable.cachedValue\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\treturn variable.promise || variable.cachedValue\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar finishedResolvingArgs = true\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tvar result = transform ? transform.apply(variable, resolved) : resolved[0]\r\n\t\t\t\t\t\tvar isPromise = result && result.then && !result.notifies\r\n\t\t\t\t\t\tversion = transformContext.version\r\n\t\r\n\t\t\t\t\t\tif (finishedResolvingArgs) {\r\n\t\t\t\t\t\t\tif (isPromise) {\r\n\t\t\t\t\t\t\t\tvar promise = variable.promise = result\r\n\t\t\t\t\t\t\t\tvariable.cachedVersion = version\r\n\t\t\t\t\t\t\t\tresult = result.then(function(resolved) {\r\n\t\t\t\t\t\t\t\t\tif (promise === variable.promise) { // make sure we are still the latest promise\r\n\t\t\t\t\t\t\t\t\t\tvariable.promise = null\r\n\t\t\t\t\t\t\t\t\t\tonResolve(resolved, transformContext.version)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\treturn resolved\r\n\t\t\t\t\t\t\t\t}, function(error) {\r\n\t\t\t\t\t\t\t\t\tif (promise === variable.promise) { // make sure we are still the latest promise\r\n\t\t\t\t\t\t\t\t\t\t// clear out the cache on an error\r\n\t\t\t\t\t\t\t\t\t\tvariable.promise = null\r\n\t\t\t\t\t\t\t\t\t\tvariable.lastError = error\r\n\t\t\t\t\t\t\t\t\t\tonResolve(null, 0)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tthrow error // rethrow so it isn't silenced\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tonResolve(result, version)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (sync && isPromise) {\r\n\t\t\t\t\t\t\tif (parentContext) {\r\n\t\t\t\t\t\t\t\tparentContext.notResolvedYet = true \r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// return what we have, stale or otherwise\r\n\t\t\t\t\t\t\treturn variable.cachedValue\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn result\r\n\t\r\n\t\t\t\t\t\tfunction onResolve(result, version) {\r\n\t\t\t\t\t\t\tif (variable.readyState === readyState) {\r\n\t\t\t\t\t\t\t\tif (parentContext) {\r\n\t\t\t\t\t\t\t\t\tparentContext.setVersion(version)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tvariable.readyState = (variable.listeners || variable.staysUpdated || parentContext && parentContext.notifies) ? 'up-to-date' : '' // mark it as up-to-date now\r\n\t\t\t\t\t\t\t\tvariable.cachedVersion = version\r\n\t\t\t\t\t\t\t\tvariable.cachedValue = result\r\n\t\t\t\t\t\t\t}/* else {\r\n\t\t\t\t\t\t\t\tconsole.log('ready state different than when the variable trasnform started ', variable, variable.readyState, readyState)\r\n\t\t\t\t\t\t\t}*/\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t \t\t} finally {\r\n\t\t \t\t\tcontext = parentContext\r\n\t\t \t\t}\r\n\t\t\t},\r\n\t\t\tforDependencies: function(callback) {\r\n\t\t\t\t// depend on the args\r\n\t\t\t\tVariable.prototype.forDependencies.call(this, callback)\r\n\t\t\t\tvar argument, argumentName\r\n\t\t\t\tfor (var i = 0; (argument = this[argumentName = i > 0 ? 'source' + i : 'source']) || argumentName in this; i++) {\r\n\t\t\t\t\tif (argument && argument.notifies) {\r\n\t\t\t\t\t\tcallback(argument)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\tupdated: function(updateEvent, by, isDownstream) {\r\n\t\t\t\tthis.readyState = 'invalidated'\r\n\t\t\t\tif (this.promise) {\r\n\t\t\t\t\tthis.promise = null\r\n\t\t\t\t}\r\n\t\t\t\tif (by !== this.returnedVariable && updateEvent && updateEvent.type !== 'refresh') {\r\n\t\t\t\t\t// search for the output in the sources\r\n\t\t\t\t\tvar argument, argumentName\r\n\t\t\t\t\tfor (var i = 0; (argument = this[argumentName = i > 0 ? 'source' + i : 'source']) || argumentName in this; i++) {\r\n\t\t\t\t\t\tif (argument === by) {\r\n\t\t\t\t\t\t\t// if one of the args was updated, we need to do a full refresh (we can't compute differential events without knowledge of how the mapping function works)\r\n\t\t\t\t\t\t\tupdateEvent = new RefreshEvent()\r\n\t\t\t\t\t\t\tcontinue\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn Variable.prototype.updated.call(this, updateEvent, by, isDownstream)\r\n\t\t\t},\r\n\t\r\n\t\t\tcleanup: function() {\r\n\t\t\t\tif (this.readyState === 'up-to-date' && !this.staysUpdated) {\r\n\t\t\t\t\tthis.readyState = '' // once there are no listeners, we can't guarantee we are up-to-date\r\n\t\t\t\t}\r\n\t\t\t\tVariable.prototype.cleanup.call(this)\r\n\t\t\t},\r\n\t\r\n\t\t\tgetUpdates: function(since) {\r\n\t\t\t\t// this always issues updates, nothing incremental can flow through it\r\n\t\t\t\tif (!since || since.version < getVersion()) {\r\n\t\t\t\t\treturn [new RefreshEvent()]\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\tgetArguments: function() {\r\n\t\t\t\tvar args = []\r\n\t\t\t\tvar argument, argumentName\r\n\t\t\t\tfor (var i = 0; (argument = this[argumentName = i > 0 ? 'source' + i : 'source']) || argumentName in this; i++) {\r\n\t\t\t\t\targs.push(argument)\r\n\t\t\t\t}\r\n\t\t\t\treturn args\r\n\t\t\t},\r\n\t\t\tput: function(value) {\r\n\t\t\t\tvar call = this\r\n\t\t\t\treturn when(this.valueOf(), function(originalValue) {\r\n\t\t\t\t\tif (originalValue === value && typeof value != 'object') {\r\n\t\t\t\t\t\treturn noChange\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar transform = call.transform.valueOf()\r\n\t\t\t\t\tif (transform.reverse) {\r\n\t\t\t\t\t\t(transform.reverse).call(call, value, call.getArguments())\r\n\t\t\t\t\t\tcall.updated()\r\n\t\t\t\t\t} else if (originalValue && originalValue.put) {\r\n\t\t\t\t\t\treturn originalValue.put(value)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar error = new Error('Can not put value into a one-way transform, that lacks a reversal')\r\n\t\t\t\t\t\terror.deniedPut = true\r\n\t\t\t\t\t\tthrow error\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tsetReverse: function(reverse) {\r\n\t\t\t\tthis.transform.valueOf().reverse = reverse\r\n\t\t\t\treturn this\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\tvar ContextualTransform = lang.compose(Transform, function ContextualTransform() {\r\n\t\t\tTransform.apply(this, arguments)\r\n\t\t}, {\r\n\t\t\tgetValue: function(sync) {\r\n\t\t\t\t// first check to see if we have the variable already computed\r\n\t\t\t\tvar contextualizedVariable = context ? context.getContextualized(this) : this\r\n\t\t\t\tif (contextualizedVariable && contextualizedVariable !== this) {\r\n\t\t\t\t\treturn contextualizedVariable.getValue(sync)\r\n\t\t\t\t}\r\n\t\t\t\treturn Transform.prototype.getValue.call(this, sync)\r\n\t\t\t},\r\n\t\t\t_needsContextualization: true\r\n\t\t})\r\n\t\r\n\t\tvar Item = lang.compose(Variable, function Item(value, content) {\r\n\t\t\tthis.value = value\r\n\t\t\tthis.collection = content\r\n\t\t}, {})\r\n\t\r\n\t\tvar ContextualizedVariable = lang.compose(Variable, function ContextualizedVariable(generic, subject) {\r\n\t\t\tthis.generic = generic\r\n\t\t\tthis.subject = subject\r\n\t\t}, {\r\n\t\t\tvalueOf: function() {\r\n\t\t\t\t// TODO: Lookup Context type for all of these using registry or something\r\n\t\t\t\tvar subject = this.subject\r\n\t\t\t\tvar context = subject.getContextualized ? subject : new Context(subject)\r\n\t\t\t\tvar generic = this.generic\r\n\t\t\t\treturn context.executeWithin(function() {\r\n\t\t\t\t\treturn generic.valueOf()\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\r\n\t\t\tforDependencies: function(callback) {\r\n\t\t\t\tthis.sources && this.sources.forEach(callback)\r\n\t\t\t},\r\n\t\r\n\t\t\tgetVersion: function() {\r\n\t\t\t\tvar version = Variable.prototype.getVersion.call(this)\r\n\t\t\t\tvar sources = this.sources || 0\r\n\t\t\t\tfor (var i = 0, l = sources.length; i < l; i++) {\r\n\t\t\t\t\tvar source = sources[i]\r\n\t\t\t\t\tif (source.getFullVersion) {\r\n\t\t\t\t\t\tversion = Math.max(version, source.getFullVersion())\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn version\r\n\t\t\t},\r\n\t\r\n\t\t\tput: function(value) {\r\n\t\t\t\tvar subject = this.subject\r\n\t\t\t\treturn this.generic.put(value, subject.getContextualized ? subject : new Context(subject))\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\tvar VArray = Variable.VArray = lang.compose(Variable, function VArray(value) {\r\n\t\t\treturn makeSubVar(this, value, VArray)\r\n\t\t}, {\r\n\t\t\t_isStrictArray: true,\r\n\t\t\t/* TODO: at some point, we might add support for length, but need to make it be dependent/notified by array changes\r\n\t\t\tget length() {\r\n\t\t\t\tif (typeof this !== 'function') {\r\n\t\t\t\t\tObject.defineProperty(this, 'length', {\r\n\t\t\t\t\t\tconfigurable: true\r\n\t\t\t\t\t})\r\n\t\t\t\t\treturn this.property('length')\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tset length(length) {\r\n\t\t\t\t// allow overriding\r\n\t\t\t\tObject.defineProperty(this, 'length', {\r\n\t\t\t\t\tvalue: length\r\n\t\t\t\t})\r\n\t\t\t},*/\r\n\t\t\tproperty: function(key, PropertyClass) {\r\n\t\t\t\treturn Variable.prototype.property.call(this, key, PropertyClass || typeof key === 'number' && this.collectionOf)\r\n\t\t\t},\r\n\t\t\tsplice: function(startingIndex, removalCount) {\r\n\t\t\t\tvar args = arguments\r\n\t\t\t\treturn arrayToModify(this, function(array) {\r\n\t\t\t\t\tif (startingIndex < 0) {\r\n\t\t\t\t\t\tstartingIndex = array.length + startingIndex\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar results = array.splice.apply(array, args)\r\n\t\t\t\t\tremovedAt(this, results, startingIndex, removalCount, array.length)\r\n\t\t\t\t\tinsertedAt(this, [].slice.call(args, 2), startingIndex, array.length)\r\n\t\t\t\t\treturn results\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tpush: function() {\r\n\t\t\t\tvar args = arguments\r\n\t\t\t\treturn arrayToModify(this, function(array) {\r\n\t\t\t\t\tvar results = array.push.apply(array, args)\r\n\t\t\t\t\tinsertedAt(this, args, array.length - args.length, array.length)\r\n\t\t\t\t\treturn results\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tunshift: function() {\r\n\t\t\t\tvar args = arguments\r\n\t\t\t\treturn arrayToModify(this, function(array) {\r\n\t\t\t\t\tvar results = array.unshift.apply(array, args)\r\n\t\t\t\t\tinsertedAt(this, args, 0, array.length)\r\n\t\t\t\t\treturn results\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tpop: function() {\r\n\t\t\t\treturn arrayToModify(this, function(array) {\r\n\t\t\t\t\tvar results = array.pop()\r\n\t\t\t\t\tremovedAt(this, [results], array.length, 1)\r\n\t\t\t\t\treturn results\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tshift: function() {\r\n\t\t\t\treturn arrayToModify(this, function(array) {\r\n\t\t\t\t\tvar results = array.shift()\r\n\t\t\t\t\tremovedAt(this, [results], 0, 1, array.length)\r\n\t\t\t\t\treturn results\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t\tVArray.of = function(collectionOf) {\r\n\t\t\tvar ArrayClass = VArray({collectionOf: collectionOf})\r\n\t\t\tif (this !== VArray) {\r\n\t\t\t\t// new operator\r\n\t\t\t\treturn new ArrayClass()\r\n\t\t\t}\r\n\t\t\treturn ArrayClass\r\n\t\t}\r\n\t\r\n\t\tfunction toArray(array) {\r\n\t\t\tif (!array) {\r\n\t\t\t\treturn []\r\n\t\t\t}\r\n\t\t\tif (array.length > -1) {\r\n\t\t\t\treturn array\r\n\t\t\t}\r\n\t\t\tvar newArray = []\r\n\t\t\tif (array.forEach) {\r\n\t\t\t\tarray.forEach(function(item) {\r\n\t\t\t\t\tnewArray.push(item)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\treturn newArray\r\n\t\t}\r\n\t\r\n\t\tvar getValue\r\n\t\tvar GeneratorVariable = lang.compose(Transform, function ReactiveGenerator(generator){\r\n\t\t\tthis.generator = generator\r\n\t\t}, {\r\n\t\t\ttransform: {\r\n\t\t\t\tvalueOf: function() {\r\n\t\t\t\t\tvar generatorContext = context\r\n\t\t\t\t\tvar resuming\r\n\t\t\t\t\treturn next\r\n\t\t\t\t\tfunction next() {\r\n\t\t\t\t\t\tvar nextValue\r\n\t\t\t\t\t\tvar i\r\n\t\t\t\t\t\tvar generatorIterator\r\n\t\t\t\t\t\tvar isThrowing\r\n\t\t\t\t\t\tif (resuming) {\r\n\t\t\t\t\t\t\t// resuming from a promise\r\n\t\t\t\t\t\t\tgeneratorIterator = resuming.iterator\r\n\t\t\t\t\t\t\ti = resuming.i\r\n\t\t\t\t\t\t\tnextValue = resuming.value\r\n\t\t\t\t\t\t\tif (nextValue && nextValue.then) {\r\n\t\t\t\t\t\t\t\tthrow new Error('Generator resumed with promise or variable', nextValue)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tisThrowing = resuming.isThrowing\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (generatorContext) {\r\n\t\t\t\t\t\t\t\t// must restart the context, if the input values had previously been checked and hashed against this context, must restart them.\r\n\t\t\t\t\t\t\t\tgeneratorContext.restart()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ti = 0\r\n\t\t\t\t\t\t\tgeneratorIterator = this.generator()\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tdo {\r\n\t\t\t\t\t\t\tvar stepReturn = generatorIterator[isThrowing ? 'throw' : 'next'](nextValue)\r\n\t\t\t\t\t\t\tif (stepReturn.done) {\r\n\t\t\t\t\t\t\t\tvar oldSources = this.sources || []\r\n\t\t\t\t\t\t\t\tvar newLength = i\r\n\t\t\t\t\t\t\t\tvar newSources = []\r\n\t\t\t\t\t\t\t\twhile(this[argumentName = i > 0 ? 'source' + i : 'source']) {\r\n\t\t\t\t\t\t\t\t\t// clear out old properties\r\n\t\t\t\t\t\t\t\t\tthis[argumentName] = undefined\r\n\t\t\t\t\t\t\t\t\ti++\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tfor (i = 0; i < newLength; i++) {\r\n\t\t\t\t\t\t\t\t\t// create new array\r\n\t\t\t\t\t\t\t\t\tvar argumentName = i > 0 ? 'source' + i : 'source'\r\n\t\t\t\t\t\t\t\t\tif (this[argumentName] && this[argumentName].notifies) {\r\n\t\t\t\t\t\t\t\t\t\tnewSources.push(this[argumentName])\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tfor (i = 0; i < oldSources.length; i++) {\r\n\t\t\t\t\t\t\t\t\tif (newSources.indexOf(oldSources[i]) == -1) {\r\n\t\t\t\t\t\t\t\t\t\toldSources[i].stopNotifies(this)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tthis.sources = newSources\r\n\t\t\t\t\t\t\t\treturn stepReturn.value\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tnextValue = stepReturn.value\r\n\t\t\t\t\t\t\t// compare with the arguments from the last\r\n\t\t\t\t\t\t\t// execution to see if they are the same\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tvar argumentName = i > 0 ? 'source' + i : 'source'\r\n\t\t\t\t\t\t\t\tif (this[argumentName] !== nextValue || this[argumentName] === undefined) {\r\n\t\t\t\t\t\t\t\t\t// subscribe if it is a variable\r\n\t\t\t\t\t\t\t\t\tif (nextValue && nextValue.notifies) {\r\n\t\t\t\t\t\t\t\t\t\tif (this.listeners) {\r\n\t\t\t\t\t\t\t\t\t\t\tnextValue.notifies(this)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tthis[argumentName] = nextValue\r\n\t\t\t\t\t\t\t\t\t} else if (typeof nextValue === 'function' && isGenerator(nextValue)) {\r\n\t\t\t\t\t\t\t\t\t\tresuming = {\r\n\t\t\t\t\t\t\t\t\t\t\ti: i,\r\n\t\t\t\t\t\t\t\t\t\t\titerator: nextValue()\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tnext.call(this)\r\n\t\t\t\t\t\t\t\t\t\ti = resuming.i\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tthis[argumentName] = null\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\ti++\r\n\t\t\t\t\t\t\t\tif (nextValue && nextValue.then) {\r\n\t\t\t\t\t\t\t\t\t// if it is a promise or variable, we will wait on it\r\n\t\t\t\t\t\t\t\t\tvar variable = this\r\n\t\t\t\t\t\t\t\t\tresuming = {\r\n\t\t\t\t\t\t\t\t\t\ti: i,\r\n\t\t\t\t\t\t\t\t\t\titerator: generatorIterator\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tvar isSync = null\r\n\t\t\t\t\t\t\t\t\t// and return the promise so that the next caller can wait on this\r\n\t\t\t\t\t\t\t\t\tvar promise = nextValue.then(function(value) {\r\n\t\t\t\t\t\t\t\t\t\tif (isSync !== false) {\r\n\t\t\t\t\t\t\t\t\t\t\tisSync = true\r\n\t\t\t\t\t\t\t\t\t\t\tnextValue = value\r\n\t\t\t\t\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tresuming.value = value\r\n\t\t\t\t\t\t\t\t\t\tif (generatorContext) {\r\n\t\t\t\t\t\t\t\t\t\t\treturn generatorContext.executeWithin(next.bind(variable))\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\treturn next.call(variable)\r\n\t\t\t\t\t\t\t\t\t}, function(error) {\r\n\t\t\t\t\t\t\t\t\t\tresuming.value = error\r\n\t\t\t\t\t\t\t\t\t\tresuming.isThrowing = true\r\n\t\t\t\t\t\t\t\t\t\tif (generatorContext) {\r\n\t\t\t\t\t\t\t\t\t\t\treturn generatorContext.executeWithin(next.bind(variable))\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\treturn next.call(variable)\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t\tif (!isSync) {\r\n\t\t\t\t\t\t\t\t\t\tisSync = false\r\n\t\t\t\t\t\t\t\t\t\treturn promise\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tisThrowing = false\r\n\t\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\t\tisThrowing = true\r\n\t\t\t\t\t\t\t\tnextValue = error\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} while(true)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\tvar Validating = lang.compose(Transform, function(source) {\r\n\t\t\tthis.source = source\r\n\t\t}, {\r\n\t\t\ttransform: function(target) {\r\n\t\t\t\tvar target = this.source\r\n\t\t\t\treturn target && target.validate(target, target.schema)\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\tfunction makeSubVar(instance, value, Type) {\r\n\t\t\tif (instance instanceof Variable) {\r\n\t\t\t\tVariable.call(instance, value)\r\n\t\t\t} else {\r\n\t\t\t\treturn Type.with(value)\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction objectUpdated(object) {\r\n\t\t\t// simply notifies any subscribers to an object, that it has changed\r\n\t\t\tvar listeners = propertyListenersMap.get(object)\r\n\t\t\tif (listeners) {\r\n\t\t\t\tfor (var i = 0, l = listeners.length; i < l; i++) {\r\n\t\t\t\t\tlisteners[i]._propertyChange(null, object)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tvar argsToArray = {\r\n\t\t\tapply: function(instance, args) {\r\n\t\t\t\treturn args\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction all(array, transform) {\r\n\t\t\t// This is intended to mirror Promise.all. It actually takes\r\n\t\t\t// an iterable, but for now we are just looking for array-like\r\n\t\t\tif (array instanceof Array) {\r\n\t\t\t\tif (array.length > 1000) {\r\n\t\t\t\t\t //throw new Error('too big')\r\n\t\t\t\t}\r\n\t\t\t\tif (array.length > 0 || typeof transform === 'function') {\r\n\t\t\t\t\t// TODO: Return VArray Transform\r\n\t\t\t\t\treturn new Transform(array[0], typeof transform === 'function' ? transform : argsToArray, array)\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn new VArray([])\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (arguments.length > 1) {\r\n\t\t\t\t// support multiple arguments as an array\r\n\t\t\t\treturn new Transform(arguments[0], argsToArray, arguments).as(VArray)\r\n\t\t\t}\r\n\t\t\tif (typeof array === 'object') {\r\n\t\t\t\t// allow an object as a hash to be mapped\r\n\t\t\t\tvar keyMapping = []\r\n\t\t\t\tvar valueArray = []\r\n\t\t\t\tfor (var key in array) {\r\n\t\t\t\t\tkeyMapping.push(key)\r\n\t\t\t\t\tvalueArray.push(array[key])\r\n\t\t\t\t}\r\n\t\t\t\treturn new Variable(function(results) {\r\n\t\t\t\t\tvar resultObject = {}\r\n\t\t\t\t\tfor (var i = 0; i < results.length; i++) {\r\n\t\t\t\t\t\tresultObject[keyMapping[i]] = results[i]\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn resultObject\r\n\t\t\t\t}).apply(null, valueArray)\r\n\t\t\t}\r\n\t\t\tthrow new TypeError('Variable.all requires an array')\r\n\t\t}\r\n\t\r\n\t\tfunction hasOwn(Target, createForInstance) {\r\n\t\r\n\t\t\tvar ownedClasses = this.ownedClasses || (this.ownedClasses = new WeakMap())\r\n\t\t\t// TODO: assign to super classes\r\n\t\t\tvar Class = this\r\n\t\t\townedClasses.set(Target, createForInstance || function() { return new Target() })\r\n\t\t\treturn this\r\n\t\t}\r\n\t\tfunction generalizeClass() {\r\n\t\t\tvar prototype = this.prototype\r\n\t\t\tvar prototypeNames = Object.getOwnPropertyNames(prototype)\r\n\t\t\tfor(var i = 0, l = prototypeNames.length; i < l; i++) {\r\n\t\t\t\tvar name = prototypeNames[i]\r\n\t\t\t\tObject.defineProperty(this, name, getGeneralizedDescriptor(Object.getOwnPropertyDescriptor(prototype, name), name, this))\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction getGeneralizedDescriptor(descriptor, name, Class) {\r\n\t\t\tif (typeof descriptor.value === 'function') {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: generalizeMethod(Class, name)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn descriptor\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction generalizeMethod(Class, name) {\r\n\t\t\t// I think we can just rely on `this`, but we could use the argument:\r\n\t\t\t// function(possibleEvent) {\r\n\t\t\t// \tvar target = possibleEvent && possibleEvent.target\r\n\t\t\tvar method = Class[name] = function() {\r\n\t\t\t\tvar instance = Class.for(this)\r\n\t\t\t\treturn instance[name].apply(instance, arguments)\r\n\t\t\t}\r\n\t\t\tmethod.for = function(context) {\r\n\t\t\t\tvar instance = Class.for(context)\r\n\t\t\t\treturn function() {\r\n\t\t\t\t\treturn instance[name].apply(instance, arguments)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn method\r\n\t\t}\r\n\t\r\n\t\tvar defaultContext = {\r\n\t\t\tname: 'Default context',\r\n\t\t\tdescription: 'This object is the default context for classes, corresponding to a singleton instance of that class',\r\n\t\t\tconstructor: {\r\n\t\t\t\tgetForClass: function(subject, Class) {\r\n\t\t\t\t\treturn Class.defaultInstance\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcontains: function() {\r\n\t\t\t\treturn true // contains everything\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction instanceForContext(Class, context) {\r\n\t\t\tif (!context) {\r\n\t\t\t\treturn Class.defaultInstance\r\n\t\t\t}\r\n\t\t\tvar instance = context.specify(Class)\r\n\t\t\tif (!context.instanceMap) {\r\n\t\t\t\tcontext.instanceMap = new Map()\r\n\t\t\t}\r\n\t\t\tcontext.instanceMap.set(Class, instance)\r\n\t\t\treturn instance\r\n\t//\t\tvar instance = context.subject.constructor.getForClass && context.subject.constructor.getForClass(context.subject, Class) || Class.defaultInstance\r\n\t//\t\tcontext.distinctSubject = mergeSubject(context.distinctSubject, instance.subject)\r\n\t//\t\treturn instance\r\n\t\t}\r\n\t\tVariable.valueOf = function() {\r\n\t\t\t// contextualized valueOf\r\n\t\t\treturn instanceForContext(this, context).valueOf()\r\n\t\t}\r\n\t\tVariable.then = function(callback, errback) {\r\n\t\t\t// contextualized valueOf\r\n\t\t\treturn instanceForContext(this, context).then(callback, errback)\r\n\t\t}\r\n\t\tVariable.getValue = function(sync) {\r\n\t\t\t// contextualized getValue\r\n\t\t\treturn instanceForContext(this, context)\r\n\t\t}\r\n\t\tVariable.put = function(value) {\r\n\t\t\t// contextualized setValue\r\n\t\t\treturn instanceForContext(this, context).put(value)\r\n\t\t}\r\n\t\tVariable.for = function(subject) {\r\n\t\t\tif (subject != null) {\r\n\t\t\t\tif (subject.target && !subject.constructor.getForClass) {\r\n\t\t\t\t\t// makes HTML events work\r\n\t\t\t\t\tsubject = subject.target\r\n\t\t\t\t}\r\n\t\t\t\tvar instance\r\n\t\t\t\tinstance = new Context(subject).specify(this)\r\n\t\t\t\tif (instance && !instance.subject) {\r\n\t\t\t\t\tinstance.subject = subject\r\n\t\t\t\t}\r\n\t\t\t\t// TODO: Do we have a global context that we set on defaultInstance?\r\n\t\t\t\treturn instance || this.defaultInstance\r\n\t\t\t} else {\r\n\t\t\t\treturn this.defaultInstance\r\n\t\t\t}\r\n\t\t}\r\n\t\tVariable.from = function(value) {\r\n\t\t\tif (value && typeof value === 'object') {\r\n\t\t\t\t// a plain object, we use our own map to retrieve the instance (or create one)\r\n\t\t\t\tvar instanceMap = this.instanceMap || (this.instanceMap = new WeakMap())\r\n\t\t\t\tvar instance = instanceMap.get(value)\r\n\t\t\t\tif (!instance) {\r\n\t\t\t\t\tinstanceMap.set(value, instance = new this(value))\r\n\t\t\t\t}\r\n\t\t\t\treturn instance\r\n\t\t\t} else {\r\n\t\t\t\t// a primitive, just unconditionally create a new variable for it\r\n\t\t\t\treturn new this(value)\r\n\t\t\t}\r\n\t\t}\r\n\t\tVariable.notifies = function(target) {\r\n\t\t\tvar instance = instanceForContext(this, context)\r\n\t\t\tinstance.notifies(target)\r\n\t\t\treturn instance\r\n\t\t}\r\n\t\tVariable.stopNotifies = function(target) {\r\n\t\t\tthis.defaultInstance.stopNotifies(target)\r\n\t\t}\r\n\t\tVariable.getCollectionOf = function () {\r\n\t\t\treturn this.collectionOf\r\n\t\t}\r\n\t\tVariable.updated = function(updateEvent, by) {\r\n\t\t\treturn instanceForContext(this, context).updated(updateEvent, by)\r\n\t\t}\r\n\t\tVariable._Transform = ContextualTransform\r\n\t\tvar proxyHandler = {\r\n\t\t\tget: function(target, name) {\r\n\t\t\t\tvar value = target[name]\r\n\t\t\t\treturn value === undefined ? target.property(name) : value\r\n\t\t\t},\r\n\t\t\tset: function(target, name, value) {\r\n\t\t\t\tvar oldValue = target[name]\r\n\t\t\t\tif (oldValue && oldValue.put) {\r\n\t\t\t\t\t// own property available to put into\r\n\t\t\t\t\toldValue.put(value)\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttarget.set(name, value)\r\n\t\t\t\t}\r\n\t\t\t\treturn true\r\n\t\t\t},\r\n\t\t\thas: function(target, name) {\r\n\t\t\t\treturn (name in target) || (name in target.valueOf())\r\n\t\t\t},\r\n\t\t\tdeleteProperty: function(target, name) {\r\n\t\t\t\treturn proxyHandler.set(target, name, undefined)\r\n\t\t\t},\r\n\t\t\townKeys: function(target) {\r\n\t\t\t\treturn Object.getOwnPropertyNames(target.valueOf())\r\n\t\t\t}\r\n\t\t}\r\n\t\tVariable.proxy = function(source) {\r\n\t\t\t// should we memoize?\r\n\t\t\treturn new Proxy(source instanceof this ? source : this.from(source), proxyHandler)\r\n\t\t}\r\n\t\tObject.defineProperty(Variable, 'collectionOf', {\r\n\t\t\tget: function() {\r\n\t\t\t\treturn this._collectionOf\r\n\t\t\t},\r\n\t\t\tset: function(ItemClass) {\r\n\t\t\t\tif (this._collectionOf != ItemClass) {\r\n\t\t\t\t\tthis._collectionOf = ItemClass\r\n\t\t\t\t\tItemClass.collection = this\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\tObject.defineProperty(Variable, 'collection', {\r\n\t\t\tget: function() {\r\n\t\t\t\treturn this._collection\r\n\t\t\t},\r\n\t\t\tset: function(Collection) {\r\n\t\t\t\tif (this._collection != Collection) {\r\n\t\t\t\t\tthis._collection = Collection\r\n\t\t\t\t\tCollection.collectionOf = this\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\tVariable.nextVersion = Date.now()\r\n\t\tVariable.generalize = generalizeClass\r\n\t\tVariable.call = Function.prototype.call // restore these\r\n\t\tVariable.apply = Function.prototype.apply\r\n\t\r\n\t\tfunction VFunction() {\r\n\t\t}\r\n\t\t(VFunction.returns = function(Type){\r\n\t\t\tfunction VFunction() {}\r\n\t\t\tVFunction.defineAs = function(method)\t{\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: function() {\r\n\t\t\t\t\t\tvar args = arguments\r\n\t\t\t\t\t\t// TODO: make these args part of the call so variables can be resolved\r\n\t\t\t\t\t\t// TODO: may actually want to do getValue().invoke()\r\n\t\t\t\t\t\treturn new Type(new Transform(this, function(value) {\r\n\t\t\t\t\t\t\t\treturn value == null ? undefined : value[method].apply(value, args)\r\n\t\t\t\t\t\t}))\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn VFunction\r\n\t\t})\r\n\t\r\n\t\tfunction VMethod() {\r\n\t\t}\r\n\t\tVMethod.defineAs = function(method) {\r\n\t\t\treturn {\r\n\t\t\t\tvalue: function() {\r\n\t\t\t\t\tvar args = arguments\r\n\t\t\t\t\t// TODO: make these args part of the call so variables can be resolved\r\n\t\t\t\t\t// TODO: may actually want to do getValue().invoke()\r\n\t\t\t\t\tvar variable = this\r\n\t\t\t\t\treturn when(this.valueOf(), function(value) {\r\n\t\t\t\t\t\tvar returnValue = value[method].apply(value, args)\r\n\t\t\t\t\t\treturn when(variable.put(value), function() {\r\n\t\t\t\t\t\t\treturn returnValue\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\t\t\r\n\t\t}\r\n\t\r\n\t\tfunction VString(value) {\r\n\t\t\treturn makeSubVar(this, typeof value === 'object' ? value : String(value), VString)\r\n\t\t}\r\n\t\r\n\t\tfunction VNumber(value) {\r\n\t\t\treturn makeSubVar(this, typeof value === 'object' ? value : Number(value), VNumber)\r\n\t\t}\r\n\t\t\r\n\t\tVString = Variable.with({\r\n\t\t\tcharAt: VFunction.returns(VString),\r\n\t\t\tcodeCharAt: VFunction.returns(VNumber),\r\n\t\t\tindexOf: VFunction.returns(VNumber),\r\n\t\t\tlastIndexOf: VFunction.returns(VNumber),\r\n\t\t\tmatch: VFunction.returns(VArray),\r\n\t\t\treplace: VFunction.returns(VString),\r\n\t\t\tsubstr: VFunction.returns(VString),\r\n\t\t\tslice: VFunction.returns(VString),\r\n\t\t\ttoUpperCase: VFunction.returns(VString),\r\n\t\t\ttoLowerCase: VFunction.returns(VString),\r\n\t\t\tlength: VNumber\r\n\t\t}, VString)\r\n\t\r\n\t\tVNumber = Variable.with({\r\n\t\t\ttoFixed: VFunction.returns(VString),\r\n\t\t\ttoExponential: VFunction.returns(VString),\r\n\t\t\ttoPrecision: VFunction.returns(VString),\r\n\t\t\ttoLocaleString: VFunction.returns(VString)\r\n\t\t}, VNumber)\r\n\t\r\n\t\tfunction VBoolean(value) {\r\n\t\t\treturn makeSubVar(this, typeof value === 'object' ? value : Boolean(value), VBoolean)\r\n\t\t}\r\n\t\tVBoolean = Variable.with({}, VBoolean)\r\n\t\r\n\t\tfunction VSet(value) {\r\n\t\t\treturn makeSubVar(this, value instanceof Array ? new Set(value) : value, VSet)\r\n\t\t}\r\n\t\tVSet = Variable.with({\r\n\t\t\thas: VFunction.returns(VBoolean),\r\n\t\t\tadd: VMethod,\r\n\t\t\tclear: VMethod,\r\n\t\t\tdelete: VMethod\r\n\t\t}, VSet)\r\n\t\tObject.defineProperty(VSet.prototype, 'array', {\r\n\t\t\tget: function() {\r\n\t\t\t\treturn this._array || (this._array = this.to(toArray).as(VArray))\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\tfunction VDate(value) {\r\n\t\t\treturn makeSubVar(this, typeof value === 'object' ? value : new Date(value), VDate)\r\n\t\t}\r\n\t\tVDate = Variable.with({\r\n\t\t\ttoDateString: VFunction.returns(VString),\r\n\t\t\ttoTimeString: VFunction.returns(VString),\r\n\t\t\ttoGMTString: VFunction.returns(VString),\r\n\t\t\ttoUTCString: VFunction.returns(VString),\r\n\t\t\tgetTime: VFunction.returns(VNumber),\r\n\t\t\tsetTime: VMethod\r\n\t\t}, VDate)\r\n\t\r\n\t\tvar VPromise = lang.compose(Variable, function VPromise(value) {\r\n\t\t\treturn makeSubVar(this, value, VPromise)\r\n\t\t}, {\r\n\t\t\tvalueOf: function() {\r\n\t\t\t\treturn this.then()\r\n\t\t\t},\r\n\t\t})\r\n\t\tvar primitives = {\r\n\t\t\t'string': VString,\r\n\t\t\t'number': VNumber,\r\n\t\t\t'boolean': VBoolean\r\n\t\t}\r\n\t\tfunction getType(Type) {\r\n\t\t\tif (typeof Type === 'string') {\r\n\t\t\t\treturn primitives[Type]\r\n\t\t\t} else if (typeof Type === 'object') {\r\n\t\t\t\tif (Type instanceof Array) {\r\n\t\t\t\t\treturn VArray.of(getType(Type[0]))\r\n\t\t\t\t}\r\n\t\t\t\tvar typedObject = {}\r\n\t\t\t\tfor (var key in Type) {\r\n\t\t\t\t\ttypedObject[key] = getType(Type[key])\r\n\t\t\t\t}\r\n\t\t\t\treturn Variable.with(typedObject)\r\n\t\t\t}\r\n\t\t\treturn Type\r\n\t\t}\r\n\t\tvar exports = {\r\n\t\t\t__esModule: true,\r\n\t\t\tVariable: Variable,\r\n\t\t\tVArray: VArray,\r\n\t\t\tdefault: Variable,\r\n\t\t\tVString: VString,\r\n\t\t\tVNumber: VNumber,\r\n\t\t\tVBoolean: VBoolean,\r\n\t\t\tVPromise: VPromise,\r\n\t\t\tVDate: VDate,\r\n\t\t\tVSet: VSet,\r\n\t\t\tVMap: VMap,\r\n\t\t\tTransform: Transform,\r\n\t\t\tdeny: deny,\r\n\t\t\tnoChange: noChange,\r\n\t\t\tContext: Context,\r\n\t\t\tGeneratorVariable: GeneratorVariable,\r\n\t\t\tItem: Item,\r\n\t\t\tNotifyingContext: NotifyingContext,\r\n\t\t\tall: all,\r\n\t\t\tobjectUpdated: objectUpdated,\r\n\t\t\treactive: reactive,\r\n\t\t\tNOT_MODIFIED: NOT_MODIFIED\r\n\t\t}\r\n\t\tObject.defineProperty(exports, 'currentContext', {\r\n\t\t\tget: function() {\r\n\t\t\t\treturn context\r\n\t\t\t}\r\n\t\t})\r\n\t\tvar typeScriptConversions = new Map()\r\n\t\ttypeScriptConversions.set(Array, VArray)\r\n\t\ttypeScriptConversions.set(String, VString)\r\n\t\ttypeScriptConversions.set(Number, VNumber)\r\n\t\ttypeScriptConversions.set(Boolean, VBoolean)\r\n\t\tfunction reactive(target, key) { // for typescript decorators\r\n\t\t\tvar Type = Reflect.getMetadata('design:type', target, key)\r\n\t\t\tconsole.log('Type', Type)\r\n\t\t\tif (!Type.notifies) {\r\n\t\t\t\tType = typeScriptConversions.get(Type) || Variable\r\n\t\t\t}\r\n\t\t\tObject.defineProperty(target, key, {\r\n\t\t\t\tget: function() {\r\n\t\t\t\t\treturn reactive.get(this, key, Type)\r\n\t\t\t\t},\r\n\t\t\t\tset: function(value) {\r\n\t\t\t\t\treactive.set(this, key, value)\r\n\t\t\t\t},\r\n\t\t\t\tenumerable: true\r\n\t\t\t})\r\n\t\t}\r\n\t\treactive.get = function(target, key, Type) { // for babel decorators\r\n\t\t\tvar property = (target._properties || (target._properties = {}))[key]\r\n\t\t\tif (!property) {\r\n\t\t\t\ttarget._properties[key] = property = new (getType(Type))()\r\n\t\t\t\tif (target.getValue) {\r\n\t\t\t\t\tproperty.key = key\r\n\t\t\t\t\tproperty.parent = target\r\n\t\t\t\t\tif (property.listeners) {\r\n\t\t\t\t\t\t// if it already has listeners, need to reinit it with the parent\r\n\t\t\t\t\t\tproperty.init()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn property\r\n\t\t}\r\n\t\treactive.set = function(target, key, value) {\r\n\t\t\tvar property = target[key]\r\n\t\t\tproperty.parent ? property._changeValue(RequestSet, value) : property.put(value)\r\n\t\t}\r\n\t\r\n\t\r\n\t\tvar IterativeMethod = lang.compose(Transform, function(source, method, args) {\r\n\t\t\tthis.source = source\r\n\t\t\t// source.interestWithin = true\r\n\t\t\tthis.method = method\r\n\t\t\tthis.arguments = args\r\n\t\t}, {\r\n\t\t\ttransform: function(array) {\r\n\t\t\t\tvar method = this.method\r\n\t\t\t\tvar isStrictArray = this.source && this.source._isStrictArray\r\n\t\t\t\tif (array && array.forEach) {\r\n\t\t\t\t\t// already an array\r\n\t\t\t\t\t//array = this._mappedItems(array)\r\n\t\t\t\t} else if (isStrictArray) {\r\n\t\t\t\t\tarray = []\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// if not an array convert to an array\r\n\t\t\t\t\tarray = [array]\r\n\t\t\t\t}\r\n\t\t\t\tif (typeof method === 'string') {\r\n\t\t\t\t\t// apply method\r\n\t\t\t\t\treturn array[method].apply(array, this.arguments)\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn method(array, this.arguments)\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t_mappedItems: function(array) {\r\n\t\t\t\tvar source = this.source\r\n\t\t\t\tvar collectionOf = source && source.collectionOf\r\n\t\t\t\treturn collectionOf ? array.map(function(item, i) {\r\n\t\t\t\t\tvar wrapped = collectionOf.from(item)\r\n\t\t\t\t\twrapped.collection = source\r\n\t\t\t\t\treturn wrapped\r\n\t\t\t\t}) : array\r\n\t\t\t},\r\n\t\r\n\t\t\tgetCollectionOf: function(){\r\n\t\t\t\treturn this.source.getCollectionOf()\r\n\t\t\t},\r\n\t\t\t_isStrictArray: true\r\n\t\t})\r\n\t\r\n\t\tfunction defineArrayMethod(method, constructor, properties, returns) {\r\n\t\t\tvar IterativeResults = lang.compose(returns ? returns.as(IterativeMethod) : IterativeMethod, constructor, properties)\r\n\t\t\tIterativeResults.prototype.method || (IterativeResults.prototype.method = method)\r\n\t\t\tObject.defineProperty(IterativeResults.prototype, 'isIterable', {value: true});\r\n\t\t\tVArray[method] = VArray.prototype[method] = function() {\r\n\t\t\t\tvar results = new IterativeResults(this)\r\n\t\t\t\tresults.source = this\r\n\t\t\t\tresults.arguments = arguments\r\n\t\t\t\treturn results\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tdefineArrayMethod('filter', function Filtered() {}, {\r\n\t\t\tupdated: function(event, by, isDownstream) {\r\n\t\t\t\tif (!event || event.modifier === this || (event.modifier && event.modifier.constructor === this)) {\r\n\t\t\t\t\treturn Transform.prototype.updated.call(this, event, by)\r\n\t\t\t\t}\r\n\t\t\t\tvar contextualizedVariable = context && context.getContextualized(this) || this\r\n\t\t\t\tif (event.type === 'delete') {\r\n\t\t\t\t\tvar index = contextualizedVariable.cachedValue.indexOf(event.oldValue)\r\n\t\t\t\t\tif (index > -1) {\r\n\t\t\t\t\t\tcontextualizedVariable.splice(index, 1)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (event.type === 'add') {\r\n\t\t\t\t\tif ([event.value].filter(this.arguments[0]).length > 0) {\r\n\t\t\t\t\t\tcontextualizedVariable.push(event.value)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (event.type === 'update') {\r\n\t\t\t\t\tvar object = event.parent.valueOf()\r\n\t\t\t\t\tvar index = contextualizedVariable.cachedValue.indexOf(object)\r\n\t\t\t\t\tvar matches = [object].filter(this.arguments[0]).length > 0\r\n\t\t\t\t\tif (index > -1) {\r\n\t\t\t\t\t\tif (matches) {\r\n\t\t\t\t\t\t\treturn new PropertyChangeEvent(index, event, contextualizedVariable.cachedValue,\r\n\t\t\t\t\t\t\t\t// might need to do something with this\r\n\t\t\t\t\t\t\t\tobject)\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcontextualizedVariable.splice(index, 1)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\telse {\r\n\t\t\t\t\t\tif (matches) {\r\n\t\t\t\t\t\t\tcontextualizedVariable.push(object)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// else nothing mactches\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn Transform.prototype.updated.call(this, event, by, isDownstream)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, VArray)\r\n\t\tdefineArrayMethod('map', function Mapped(source) {\r\n\t\t\tthis._isStrictArray = source._isStrictArray\r\n\t\t}, {\r\n\t\t\ttransform: function(array) {\r\n\t\t\t\tvar isStrictArray = this.source && this.source._isStrictArray\r\n\t\t\t\tvar mapFunction = this.arguments[0]\r\n\t\t\t\tif (array && array.map) {\r\n\t\t\t\t\tvar source = this.source\r\n\t\t\t\t\tvar collectionOf = source && source.collectionOf\r\n\t\t\t\t\treturn array.map(collectionOf ? function(item, i) {\r\n\t\t\t\t\t\treturn mapFunction(source.property(i), i)\r\n\t\t\t\t\t} : mapFunction)\r\n\t\t\t\t} else if (!isStrictArray) {\r\n\t\t\t\t\tif (method === 'map'){\r\n\t\t\t\t\t\t// fast path, and special behavior for map\r\n\t\t\t\t\t\treturn mapFunction(array)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn IterativeMethod.prototype.transform.call(this, array)\r\n\t\t\t},\r\n\t\t\tupdated: function(event, by, isDownstream) {\r\n\t\t\t\tif (!event || event.modifier === this || (event.modifier && event.modifier.constructor === this)) {\r\n\t\t\t\t\treturn Variable.prototype.updated.call(this, event, by)\r\n\t\t\t\t}\r\n\t\t\t\tvar contextualizedVariable = context && context.getContextualized(this) || this\r\n\t\t\t\tif (event.type === 'delete') {\r\n\t\t\t\t\tcontextualizedVariable.splice(event.previousIndex, 1)\r\n\t\t\t\t} else if (event.type === 'add') {\r\n\t\t\t\t\tvar array = contextualizedVariable.cachedValue\r\n\t\t\t\t\tcontextualizedVariable.push(this.arguments[0].call(this.arguments[1], this.source.property(array && array.length)))\r\n\t\t\t\t} else if (event.type === 'update') {\r\n\t\t\t\t\tif (this.getCollectionOf()) {\r\n\t\t\t\t\t\treturn // if it has typed items, we don't need to propagate update events, since they will be handled by the variable item.\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar object = event.parent.valueOf()\r\n\t\t\t\t\tvar array = contextualizedVariable.cachedValue\r\n\t\t\t\t\tvar index = event.key\r\n\t\t\t\t\tvar value = event.value\r\n\t\t\t\t\tif (index > -1) {\r\n\t\t\t\t\t\t// update was to an index property of this array variable\r\n\t\t\t\t\t\tvalue = object[index]\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// update was inside an object inside of our array\r\n\t\t\t\t\t\tindex = array && array.map && array.indexOf(object)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (index > -1) {\r\n\t\t\t\t\t\tcontextualizedVariable.splice(index, 1, this.arguments[0].call(this.arguments[1], this.source.property(index)))\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn Transform.prototype.updated.call(this, event, by, isDownstream)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn Transform.prototype.updated.call(this, event, by, isDownstream)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, VArray)\r\n\t\tdefineArrayMethod('reduce', function Reduced() {})\r\n\t\tdefineArrayMethod('reduceRight', function Reduced() {})\r\n\t\tdefineArrayMethod('some', function Aggregated() {}, {}, VBoolean)\r\n\t\tdefineArrayMethod('every', function Aggregated() {}, {}, VBoolean)\r\n\t\tdefineArrayMethod('slice', function Aggregated() {}, {}, VArray)\r\n\t\tdefineArrayMethod('keyBy', function UniqueIndex(source, args) {}, {\r\n\t\t\tproperty: VMap.prototype.property,\r\n\t\t\tmethod: function(array, args) {\r\n\t\t\t\tvar index = new Map()\r\n\t\t\t\tvar keyGenerator = args[0]\r\n\t\t\t\tvar valueGenerator = args[1]\r\n\t\t\t\tvar hasKeyFunction = typeof keyGenerator === 'function'\r\n\t\t\t\tvar hasValueFunction = typeof valueGenerator === 'function'\r\n\t\t\t\tvar hasKey = !!keyGenerator\r\n\t\t\t\tfor (var i = 0, l = array.length; i < l; i++) {\r\n\t\t\t\t\tvar element = array[i]\r\n\t\t\t\t\tindex.set(\r\n\t\t\t\t\t\thasKeyFunction ? keyGenerator(element, emit) :\r\n\t\t\t\t\t\t\thasKey ? element[keyGenerator] : element,\r\n\t\t\t\t\t\thasValueFunction ? valueGenerator(element) : element)\r\n\t\t\t\t}\r\n\t\t\t\tfunction emit(key, value) {\r\n\t\t\t\t\tindex.set(key, value)\r\n\t\t\t\t}\r\n\t\t\t\treturn index\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\tdefineArrayMethod('groupBy', function UniqueIndex(source, args) {}, {\r\n\t\t\tproperty: VMap.prototype.property,\r\n\t\t\tmethod: function(array, args) {\r\n\t\t\t\tvar index = new Map()\r\n\t\t\t\tvar keyGenerator = args[0]\r\n\t\t\t\tvar valueGenerator = args[1]\r\n\t\t\t\tvar hasKeyFunction = typeof keyGenerator === 'function'\r\n\t\t\t\tvar hasValueFunction = typeof valueGenerator === 'function'\r\n\t\t\t\tvar hasKey = !!keyGenerator\r\n\t\t\t\tfor (var i = 0, l = array.length; i < l; i++) {\r\n\t\t\t\t\tvar element = array[i]\r\n\t\t\t\t\tvar key = hasKeyFunction ? keyGenerator(element) :\r\n\t\t\t\t\t\t\thasKey ? element[keyGenerator] : element\r\n\t\t\t\t\tvar group = index.get(key)\r\n\t\t\t\t\tif (!group) {\r\n\t\t\t\t\t\tindex.set(key, group = [])\r\n\t\t\t\t\t}\r\n\t\t\t\t\tgroup.push(hasValueFunction ? valueGenerator(element) : element)\r\n\t\t\t\t}\r\n\t\t\t\tfunction emit(key, value) {\r\n\t\t\t\t\tvar group = index.get(key)\r\n\t\t\t\t\tif (!group) {\r\n\t\t\t\t\t\tindex.set(key, group = [])\r\n\t\t\t\t\t}\r\n\t\t\t\t\tgroup.push(value)\r\n\t\t\t\t}\r\n\t\t\t\treturn index\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\tvar getGeneratorDescriptor = Variable.getGeneratorDescriptor = function(value) {\r\n\t\t\tvar variables\r\n\t\t\treturn {\r\n\t\t\t\tget: function() {\r\n\t\t\t\t\tif (!variables) {\r\n\t\t\t\t\t\t variables = new WeakMap()\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar variable = variables.get(this)\r\n\t\t\t\t\tif (!variable) {\r\n\t\t\t\t\t\tvariables.set(this, variable = new GeneratorVariable(value.bind(this)))\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn variable\r\n\t\t\t\t},\r\n\t\t\t\tenumerable: true\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tVariable.all = all\r\n\t\tVariable.Context = Context\r\n\t\r\n\t\treturn exports\r\n\t}))\r\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) { if (true) {\r\n\t  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2), __webpack_require__(6), __webpack_require__(4)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) } else if (typeof module === 'object' && module.exports) {        \r\n\t  module.exports = factory(require('./util/lang'), require('./operators'), require('./Variable')) // Node\r\n\t}}(this, function (lang, operators, VariableExports) {\r\n\t\r\n\t  var Transform = VariableExports.Transform\r\n\t  var Variable = VariableExports.Variable\r\n\t  var isGenerator = lang.isGenerator\r\n\t  var ObjectTransform = lang.compose(Transform, function ObjectTransform(source, transform, sources) {\r\n\t    this.sources = sources\r\n\t    Transform.apply(this, arguments)\r\n\t  }, {\r\n\t    _getAsObject: function() {\r\n\t      return this.transform.apply(this, preserveObjects(this.sources))\r\n\t    }\r\n\t  })\r\n\t  function preserveObjects(sources) {\r\n\t    for (var i = 0, l = sources.length; i < l; i++) {\r\n\t      var source = sources[i]\r\n\t      if (source && source._getAsObject) {\r\n\t        sources[i] = source._getAsObject()\r\n\t      }\r\n\t    }\r\n\t    return sources\r\n\t  }\r\n\t\tfunction react(generator, options) {\r\n\t    if (typeof generator !== 'function') {\r\n\t      throw new Error('react() must be called with a generator. You need to use the babel-plugin-transform-alkali plugin if you want to use reactive expressions')\r\n\t    }\r\n\t\t\tif (options && options.reverse) {\r\n\t\t\t\tgenerator.reverse = options.reverse\r\n\t\t\t}\r\n\t\t\treturn new VariableExports.GeneratorVariable(generator)\r\n\t\t}\r\n\t  lang.copy(react, operators)\r\n\t  react.from = function(value, options) {\r\n\t    if (value && value.property) {\r\n\t      return value\r\n\t    }\r\n\t    if (typeof value === 'function' && isGenerator(value)) {\r\n\t      return react(value, options)\r\n\t    }\r\n\t    return Variable.from(value)\r\n\t  }\r\n\t  react.prop = function(object, property) {\r\n\t    if (object) {\r\n\t      // TODO: Use a static set of public methods/properties that can be accessed\r\n\t      if (object.property) {\r\n\t        // it is a variable already, but check to see if we are using a method/property directly on the variable\r\n\t        var directPropertyValue = object[property]\r\n\t        return directPropertyValue !== undefined ? directPropertyValue : object.property(property)\r\n\t      }\r\n\t      return object[property]\r\n\t    }\r\n\t    // not even truthy, return undefined\r\n\t  }\r\n\t  react.cond = function(test, consequent, alternate) {\r\n\t    return operators.if(test, operators.choose(consequent, alternate))\r\n\t  }\r\n\t  react.fcall = function(target, args) {\r\n\t    if (target.property && typeof target === 'function') {\r\n\t      return target.apply(null, preserveObjects(args))\r\n\t    }\r\n\t    return new Transform(args[0], target, args)\r\n\t  }\r\n\t  react.mcall = function(target, key, args) {\r\n\t    var method = target[key]\r\n\t    if (typeof method === 'function' && method.property || key === 'bind') {\r\n\t      // for now we check to see if looks like it could handle a variable, or is a bind call\r\n\t      return method.apply(target, preserveObjects(args))\r\n\t    }\r\n\t    return new Transform(args[0], target[key].bind(target), args)\r\n\t  }\r\n\t  react.ncall = function(target, args) {\r\n\t    if (target.property && typeof target === 'function') {\r\n\t      return new (target.bind.apply(target, [null].concat(preserveObjects(args))))()\r\n\t    }\r\n\t    return new Transform(args[0], function() {\r\n\t      return new (target.bind.apply(target, [null].concat(arguments)))()\r\n\t    }, args)\r\n\t  }\r\n\t\r\n\t  react.obj = function(transform, sources) {\r\n\t    return new ObjectTransform(sources[0], transform, sources)\r\n\t  }\r\n\t\r\n\t\treturn react\r\n\t}))\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) { if (true) {\r\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) } else if (typeof module === 'object' && module.exports) {        \r\n\t  module.exports = factory(require('./Variable')) // Node\r\n\t}}(this, function (VariableExports) {\r\n\t\r\n\t\tvar VBoolean = VariableExports.VBoolean\r\n\t\tvar VNumber = VariableExports.VNumber\r\n\t\tvar operatingFunctions = {};\r\n\t\tvar operators = {};\r\n\t\tfunction getOperatingFunction(expression){\r\n\t\t\t// jshint evil: true\r\n\t\t\treturn operatingFunctions[expression] ||\r\n\t\t\t\t(operatingFunctions[expression] =\r\n\t\t\t\t\tnew Function('a', 'b', 'return ' + expression));\r\n\t\t}\r\n\t\tfunction operator(operator, type, name, precedence, forward, reverseA, reverseB){\r\n\t\t\t// defines the standard operators\r\n\t\t\tvar reverse = function(output, inputs){\r\n\t\t\t\tvar a = inputs[0],\r\n\t\t\t\t\tb = inputs[1]\r\n\t\t\t\tvar firstError\r\n\t\t\t\tif(a && a.put){\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\treturn a.put(reverseA(output, b && b.valueOf()))\r\n\t\t\t\t\t} catch(error) {\r\n\t\t\t\t\t\tif (error.deniedPut) {\r\n\t\t\t\t\t\t\tfirstError = error\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthrow error\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(b && b.put){\r\n\t\t\t\t\tb.put(reverseB(output, a && a.valueOf()))\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow (firstError && firstError.message ? firstError : new Error('Can not assign change value to constant operators'))\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\t// define a function that can lazily ensure the operating function\r\n\t\t\t// is available\r\n\t\t\tvar operatorHandler = {\r\n\t\t\t\tapply: function(instance, args){\r\n\t\t\t\t\tforward = getOperatingFunction(forward);\r\n\t\t\t\t\treverseA = reverseA && getOperatingFunction(reverseA);\r\n\t\t\t\t\treverseB = reverseB && getOperatingFunction(reverseB);\r\n\t\t\t\t\tforward.reverse = reverse;\r\n\t\t\t\t\toperators[operator] = operatorHandler = new VariableExports.Variable(forward);\r\n\t\r\n\t\t\t\t\taddFlags(operatorHandler);\r\n\t\t\t\t\targs = Array.prototype.slice.call(args);\r\n\t\t\t\t\treturn operatorHandler.apply(instance, args);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tfunction addFlags(operatorHandler){\r\n\t\t\t\toperatorHandler.precedence = precedence;\r\n\t\t\t\toperatorHandler.infix = reverseB !== false;\r\n\t\t\t}\r\n\t\t\taddFlags(operatorHandler);\r\n\t\t\toperators[operator] = operatorHandler;\r\n\t\t\toperators[name] = function() {\r\n\t\t\t\tvar result = operatorHandler.apply(null, arguments)\r\n\t\t\t\treturn type ? result.as(type) : result\r\n\t\t\t}\r\n\t\t}\r\n\t\t// using order precedence from:\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\r\n\t\toperator('+', VNumber, 'add', 6, 'a+b', 'a-b', 'a-b');\r\n\t\toperator('-', VNumber, 'subtract', 6, 'a-b', 'a+b', 'b-a');\r\n\t\toperator('*', VNumber, 'multiply', 5, 'a*b', 'a/b', 'a/b');\r\n\t\toperator('/', VNumber, 'divide', 5, 'a/b', 'a*b', 'b/a');\r\n\t//\toperator('^', 7, 'a^b', 'a^(-b)', 'Math.log(a)/Math.log(b)');\r\n\t\toperator('?', null, 'if', 16, 'b[a?0:1]', 'a===b[0]||(a===b[1]?false:(function(){throw new Error()})())', '[a,b]');\r\n\t\toperator(':', null, 'choose', 15, '[a,b]', 'a[0]?a[1]:(function(){throw new Error()})()', 'a[1]');\r\n\t\toperator('!', VBoolean, 'not', 4, '!a', '!a', false);\r\n\t\toperator('%', VNumber, 'remainder', 5, 'a%b');\r\n\t\toperator('>', VBoolean, 'greater', 8, 'a>b');\r\n\t\toperator('>=', VBoolean, 'greaterOrEqual', 8, 'a>=b');\r\n\t\toperator('<', VBoolean, 'less', 8, 'a<b');\r\n\t\toperator('<=', VBoolean, 'lessOrEqual', 8, 'a<=b');\r\n\t\toperator('===', VBoolean, 'strictEqual', 9, 'a===b');\r\n\t\toperator('==', VBoolean, 'equal', 9, 'a==b');\r\n\t\toperator('&', VBoolean, 'and', 8, 'a&&b');\r\n\t\toperator('|', VBoolean, 'or', 8, 'a||b');\r\n\t\toperator('round', 'round', 8, 'Math.round(a*Math.pow(10,b||1))/Math.pow(10,b||1)', 'a', 'a');\r\n\t\treturn operators;\r\n\t}))\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) { if (true) {\r\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2), __webpack_require__(4)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) } else if (typeof module === 'object' && module.exports) {        \r\n\t  module.exports = factory(require('./util/lang'), require('./Variable')) // Node\r\n\t}}(this, function (lang, VariableExports) {\r\n\t\tvar Variable = VariableExports.Variable\r\n\t\t\r\n\t\tfunction deepCopy(source, target, derivativeMap) {\r\n\t\t\tif (source && typeof source == 'object') {\r\n\t\t\t\tif (source instanceof Array) {\r\n\t\t\t\t\ttarget = [] // always create a new array for array targets\r\n\t\t\t\t\tfor(var i = 0, l = source.length; i < l; i++) {\r\n\t\t\t\t\t\ttarget[i] = deepCopy(source[i], null, derivativeMap)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (!target || typeof target !== 'object') {\r\n\t\t\t\t\t\ttarget = derivativeMap && derivativeMap.get(source)\r\n\t\t\t\t\t\tif (!target) {\r\n\t\t\t\t\t\t\ttarget = {}\r\n\t\t\t\t\t\t\tderivativeMap && derivativeMap.set(source, target)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (var i in source) {\r\n\t\t\t\t\t\ttarget[i] = deepCopy(source[i], target[i], derivativeMap)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn target\r\n\t\t\t}\r\n\t\t\treturn source\r\n\t\t}\r\n\t\r\n\t\tvar Copy = lang.compose(Variable, function(copiedFrom) {\r\n\t\t\t// this is the variable that we derive from\r\n\t\t\tthis.copiedFrom = copiedFrom\r\n\t\t\tthis.derivativeMap = new lang.WeakMap(null, 'derivative')\r\n\t\t\tthis.isDirty = new Variable(false)\r\n\t\t}, {\r\n\t\t\tgetValue: function(sync, context) {\r\n\t\t\t\tif(this.state) {\r\n\t\t\t\t\tthis.state = null\r\n\t\t\t\t}\r\n\t\t\t\tvar value = this.copiedFrom.valueOf(context)\r\n\t\t\t\tif(value && typeof value == 'object') {\r\n\t\t\t\t\tvar derivative = this.derivativeMap.get(value)\r\n\t\t\t\t\tif (derivative == null) {\r\n\t\t\t\t\t\tthis.derivativeMap.set(value, derivative = deepCopy(value, undefined, this.derivativeMap))\r\n\t\t\t\t\t\tthis.setValue(derivative, context)\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn derivative\r\n\t\t\t\t}\r\n\t\t\t\tif(this.value === undefined) {\r\n\t\t\t\t\treturn value\r\n\t\t\t\t}\r\n\t\t\t\treturn this.value\r\n\t\t\t},\r\n\t\t\tgetCopyOf: function(value) {\r\n\t\t\t\tvar derivative = this.derivativeMap.get(value)\r\n\t\t\t\tif (derivative == null) {\r\n\t\t\t\t\tthis.derivativeMap.set(value, derivative = deepCopy(value, undefined, this.derivativeMap))\r\n\t\t\t\t}\r\n\t\t\t\treturn derivative\r\n\t\t\t},\r\n\t\t\tsave: function() {\r\n\t\t\t\t// copy back to the original object\r\n\t\t\t\tvar original = this.copiedFrom.valueOf()\r\n\t\t\t\tvar newCopiedFrom = deepCopy(this.valueOf(), original)\r\n\t\t\t\tif (this.copiedFrom.put) { // copiedFrom doesn't have to be a variable, it can be a plain object\r\n\t\t\t\t\t// assign it now\r\n\t\t\t\t\tthis.copiedFrom.put(newCopiedFrom)\r\n\t\t\t\t}\r\n\t\t\t\tthis.isDirty.put(false)\r\n\t\t\t\tthis.onSave && this.onSave()\r\n\t\t\t},\r\n\t\t\trevert: function() {\r\n\t\t\t\tvar original = this.copiedFrom.valueOf()\r\n\t\t\t\tthis.derivativeMap = new lang.WeakMap(null, 'derivative') // clear out the mapping, so we can start fresh\r\n\t\t\t\tthis.put(deepCopy(original, undefined, this.derivativeMap))\r\n\t\t\t\tthis.isDirty.put(false)\r\n\t\t\t},\r\n\t\t\tupdated: function() {\r\n\t\t\t\tthis.isDirty.put(true)\r\n\t\t\t\treturn Variable.prototype.updated.apply(this, arguments)\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn Copy\r\n\t}))\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** index.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap ec73241735099629c44e\n **/","/// <reference path=\"./typings.d.ts\" />\r\n(function (root, factory) { if (typeof define === 'function' && define.amd) {\r\n  define(['./Element', './Renderer', './react', './Copy', './operators', './Variable', './util/lang'], factory) } else if (typeof module === 'object' && module.exports) {        \r\n  module.exports = factory(require('./Element'), require('./Renderer'), require('./react'), require('./Copy'), require('./operators'), require('./Variable'), require('./util/lang')) // Node\r\n}}(this, function (Element, Renderer, react, Copy, operators, VariableExports, lang) {\r\n\r\n\tvar main = Object.create(Element)\r\n\tmain.Copy = Copy\r\n\tmain.Element = Element\r\n\tlang.copy(main, VariableExports)\r\n\tObject.defineProperty(main, 'currentContext', Object.getOwnPropertyDescriptor(VariableExports, 'currentContext'))\r\n\tmain.react = react\r\n\tmain.spawn = lang.spawn\r\n\tmain.Renderer = Renderer.ElementRenderer\r\n\tlang.copy(main, Renderer)\r\n\tlang.copy(main, operators)\r\n\tmain.default = undefined // no default export\r\n\treturn main\r\n}))\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./index.js\n ** module id = 0\n ** module chunks = 0\n **/","(function (root, factory) { if (typeof define === 'function' && define.amd) {\r\n\tdefine(['./util/lang', './Renderer', './Variable'], factory) } else if (typeof module === 'object' && module.exports) {\t\t\t\t\r\n\tmodule.exports = factory(require('./util/lang'), require('./Renderer'), require('./Variable')) // Node\r\n}}(this, function (lang, Renderer, VariableExports) {\r\n\tvar Variable = VariableExports.Variable\r\n\tvar knownElementProperties = [\r\n\t\t'textContent', // Node\r\n\t\t'id', 'className', 'innerHTML', // Element\r\n\t\t'title', 'lang', 'translate', 'dir', 'tabIndex', 'accessKey', 'draggable', 'spellcheck', 'contentEditable', 'innerText', 'webkitdropzone'] // HTMLElement\r\n\r\n\tvar SELECTOR_REGEX = /^(\\.|#)([-\\w]+)(.+)?/\r\n\tvar isGenerator = lang.isGenerator\r\n\tvar Context = VariableExports.Context\r\n\tvar PropertyRenderer = Renderer.PropertyRenderer\r\n\tvar InputPropertyRenderer = Renderer.InputPropertyRenderer\r\n\tvar AttributeRenderer = Renderer.AttributeRenderer\r\n\tvar StyleRenderer = lang.compose(Renderer.StyleRenderer, function StyleRenderer() {\r\n\t\tRenderer.StyleRenderer.apply(this, arguments)\r\n\t}, {\r\n\t\trenderUpdate: function(newValue, element) {\r\n\t\t\tvar definition = styleDefinitions[this.name]\r\n\t\t\tif (definition) {\r\n\t\t\t\tdefinition(element, newValue, this.name)\r\n\t\t\t} else {\r\n\t\t\t\telement.style[this.name] = newValue\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\n\tvar ClassNameRenderer = lang.compose(Renderer.ElementRenderer, function ClassNameRenderer(options) {\r\n\t\tthis.className = options.className\r\n\t\tRenderer.apply(this, arguments)\r\n\t}, {\r\n\t\trenderUpdate: function(newValue, element) {\r\n\t\t\tvar currentClassName = element.className\r\n\t\t\tvar changingClassName = this.className\r\n\t\t\t// remove the className (needed for addition or removal)\r\n\t\t\t// see http://jsperf.com/remove-class-name-algorithm/2 for some tests on this\r\n\t\t\tvar removed = currentClassName && (' ' + currentClassName + ' ').replace(' ' + changingClassName + ' ', ' ')\r\n\t\t\tif (newValue) {\r\n\t\t\t\t// addition, add the className\r\n\t\t\t\tchangingClassName = currentClassName ? (removed + changingClassName).slice(1) : changingClassName;\r\n\t\t\t} else {\r\n\t\t\t\t// we already have removed the class, just need to trim\r\n\t\t\t\tchangingClassName = removed.slice(1, removed.length - 1)\r\n\t\t\t}\r\n\t\t\t// only assign if it changed, this can save a lot of time\r\n\t\t\tif (changingClassName != currentClassName) {\r\n\t\t\t\telement.className = changingClassName\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\n\t// TODO: check for renderContent with text updater\r\n\tvar TextRenderer = Renderer.TextRenderer\r\n\tvar ListRenderer = Renderer.ListRenderer\r\n\r\n\tvar doc = typeof document !== 'undefined' ? document : {\r\n\t\tcreateElement: function(tag) {\r\n\t\t\treturn {}\r\n\t\t},\r\n\t\taddEventListener: function() {\r\n\t\t}\r\n\t}\r\n\r\n\tvar inputs = {\r\n\t\tINPUT: 1,\r\n\t\tTEXTAREA: 1\r\n\t\t// SELECT: 1, we exclude this, so the default \"content\" of the element can be the options\r\n\t}\r\n\r\n\tvar buggyConstructorSetter = false\r\n\tvar testElement = doc.createElement('font')\r\n\tvar originalConstructor = testElement.constructor\r\n\ttestElement.constructor = function(){}\r\n\tif (doc.createElement('font').constructor == testElement.constructor) {\r\n\t\t// In safari, setting the constructor can actually assign it at the prototype level, instead of at the instance\r\n\t\ttestElement.__proto__.constructor = originalConstructor // restore the original constructor\r\n\t\tbuggyConstructorSetter = true\r\n\t}\r\n\r\n\r\n\tfunction booleanStyle(options) {\r\n\t\treturn function(element, value, key) {\r\n\t\t\tif (typeof value !== 'string') {\r\n\t\t\t\t// use the boolean conversion\r\n\t\t\t\tvalue = options[value ? 0 : 1]\r\n\t\t\t}\r\n\t\t\telement.style[key] = value\r\n\t\t}\r\n\t}\r\n\r\n\tfunction defaultStyle(element, value, key) {\r\n\t\tif (typeof value === 'number') {\r\n\t\t\tvalue = value + 'px'\r\n\t\t}\r\n\t\telement.style[key] = value\r\n\t}\r\n\tfunction directStyle(element, value, key) {\r\n\t\telement.style[key] = value\r\n\t}\r\n\r\n\tvar styleDefinitions = {\r\n\t\tdisplay: booleanStyle(['', 'none']),\r\n\t\tvisibility: booleanStyle(['visible', 'hidden']),\r\n\t\tcolor: directStyle,\r\n\t\topacity: directStyle,\r\n\t\tzoom: directStyle,\r\n\t\tminZoom: directStyle,\r\n\t\tmaxZoom: directStyle,\r\n\t\tfontWeight: directStyle,\r\n\t\tposition: booleanStyle(['absolute', '']),\r\n\t\ttextDecoration: booleanStyle(['underline', '']),\r\n\t\tfontWeight: directStyle // numbers are allowed here (TODO: eventually allow booleans too)\r\n\t}\r\n\t;[\"alignContent\",\"alignItems\",\"alignSelf\",\"animation\",\"animationDelay\",\"animationDirection\",\"animationDuration\",\"animationFillMode\",\"animationIterationCount\",\"animationName\",\"animationPlayState\",\"animationTimingFunction\",\"backfaceVisibility\",\"background\",\"backgroundAttachment\",\"backgroundBlendMode\",\"backgroundClip\",\"backgroundColor\",\"backgroundImage\",\"backgroundOrigin\",\"backgroundPosition\",\"backgroundPositionX\",\"backgroundPositionY\",\"backgroundRepeat\",\"backgroundRepeatX\",\"backgroundRepeatY\",\"backgroundSize\",\"baselineShift\",\"border\",\"borderBottom\",\"borderBottomColor\",\"borderBottomLeftRadius\",\"borderBottomRightRadius\",\"borderBottomStyle\",\"borderBottomWidth\",\"borderCollapse\",\"borderColor\",\"borderImage\",\"borderImageOutset\",\"borderImageRepeat\",\"borderImageSlice\",\"borderImageSource\",\"borderImageWidth\",\"borderLeft\",\"borderLeftColor\",\"borderLeftStyle\",\"borderLeftWidth\",\"borderRadius\",\"borderRight\",\"borderRightColor\",\"borderRightStyle\",\"borderRightWidth\",\"borderSpacing\",\"borderStyle\",\"borderTop\",\"borderTopColor\",\"borderTopLeftRadius\",\"borderTopRightRadius\",\"borderTopStyle\",\"borderTopWidth\",\"borderWidth\",\"bottom\",\"boxShadow\",\"boxSizing\",\"bufferedRendering\",\"captionSide\",\"clear\",\"clip\",\"clipPath\",\"clipRule\",\"color\",\"colorInterpolation\",\"colorInterpolationFilters\",\"colorRendering\",\"counterIncrement\",\"counterReset\",\"cursor\",\"direction\",\"display\",\"emptyCells\",\"fill\",\"fillOpacity\",\"fillRule\",\"filter\",\"flex\",\"flexBasis\",\"flexDirection\",\"flexFlow\",\"flexGrow\",\"flexShrink\",\"flexWrap\",\"float\",\"floodColor\",\"floodOpacity\",\"font\",\"fontFamily\",\"fontFeatureSettings\",\"fontKerning\",\"fontSize\",\"fontStretch\",\"fontStyle\",\"fontVariant\",\"fontVariantLigatures\",\"fontWeight\",\"height\",\"imageRendering\",\"isolation\",\"justifyContent\",\"left\",\"letterSpacing\",\"lightingColor\",\"lineHeight\",\"listStyle\",\"listStyleImage\",\"listStylePosition\",\"listStyleType\",\"margin\",\"marginBottom\",\"marginLeft\",\"marginRight\",\"marginTop\",\"marker\",\"markerEnd\",\"markerMid\",\"markerStart\",\"mask\",\"maskType\",\"maxHeight\",\"maxWidth\",\"maxZoom\",\"minHeight\",\"minWidth\",\"minZoom\",\"mixBlendMode\",\"motion\",\"motionOffset\",\"motionPath\",\"motionRotation\",\"objectFit\",\"objectPosition\",\"opacity\",\"order\",\"orientation\",\"orphans\",\"outline\",\"outlineColor\",\"outlineOffset\",\"outlineStyle\",\"outlineWidth\",\"overflow\",\"overflowWrap\",\"overflowX\",\"overflowY\",\"padding\",\"paddingBottom\",\"paddingLeft\",\"paddingRight\",\"paddingTop\",\"page\",\"pageBreakAfter\",\"pageBreakBefore\",\"pageBreakInside\",\"paintOrder\",\"perspective\",\"perspectiveOrigin\",\"pointerEvents\",\"position\",\"quotes\",\"resize\",\"right\",\"shapeImageThreshold\",\"shapeMargin\",\"shapeOutside\",\"shapeRendering\",\"size\",\"speak\",\"src\",\"stopColor\",\"stopOpacity\",\"stroke\",\"strokeDasharray\",\"strokeDashoffset\",\"strokeLinecap\",\"strokeLinejoin\",\"strokeMiterlimit\",\"strokeOpacity\",\"strokeWidth\",\"tabSize\",\"tableLayout\",\"textAlign\",\"textAlignLast\",\"textAnchor\",\"textCombineUpright\",\"textDecoration\",\"textIndent\",\"textOrientation\",\"textOverflow\",\"textRendering\",\"textShadow\",\"textTransform\",\"top\",\"touchAction\",\"transform\",\"transformOrigin\",\"transformStyle\",\"transition\",\"transitionDelay\",\"transitionDuration\",\"transitionProperty\",\"transitionTimingFunction\",\"unicodeBidi\",\"unicodeRange\",\"userZoom\",\"vectorEffect\",\"verticalAlign\",\"visibility\",\"whiteSpace\",\"widows\",\"width\",\"willChange\",\"wordBreak\",\"wordSpacing\",\"wordWrap\",\"writingMode\",\"zIndex\",\"zoom\"].forEach(function(property) {\r\n\t\tstyleDefinitions[property] = styleDefinitions[property] || defaultStyle\r\n\t})\r\n\tvar styleSheet\r\n\tvar presumptiveParentMap = new WeakMap()\r\n\r\n\tvar setPrototypeOf = Object.setPrototypeOf || (function(base, proto) { base.__proto__ = proto})\r\n\tvar getPrototypeOf = Object.getPrototypeOf || (function(base) { return base.__proto__ })\r\n\tfunction createCssRule(selector) {\r\n\t\tif (!styleSheet) {\r\n\t\t\tvar styleSheetElement = doc.createElement(\"style\")\r\n\t\t\tstyleSheetElement.setAttribute(\"type\", \"text/css\")\r\n//\t\t\tstyleSheet.appendChild(doc.createTextNode(css))\r\n\t\t\tdoc.head.insertBefore(styleSheetElement, doc.head.firstChild)\r\n\t\t\tstyleSheet = styleSheetElement.sheet\r\n\t\t}\r\n\t\tvar cssRules = styleSheet.cssRules || styleSheet.rules\r\n\t\treturn cssRules[styleSheet.addRule(selector, ' ', cssRules.length)]\r\n\t}\r\n\r\n\t// TODO: Need to do some more testing to see if that would improve performance:\r\n\t// var fragmentThresholdHeuristic = (typeof navigator !== 'undefined' && navigator.userAgent.indexOf('Chrome') > 0) ? 1 : 3\r\n\r\n\tfunction layoutChildren(parent, children, container, prepend) {\r\n\t\tvar fragment = (children.length > 1 || prepend) ? doc.createDocumentFragment() : parent\r\n\t\tfor(var i = 0, l = children.length; i < l; i++) {\r\n\t\t\tvar child = children[i]\r\n\t\t\tvar childNode\r\n\t\t\tif (child != null) { // we just skip nulls and undefined, helps make it easier to write conditional element logic\r\n\t\t\t\tif (child.create) {\r\n\t\t\t\t\t// an element constructor\r\n\t\t\t\t\tcurrentParent = parent\r\n\t\t\t\t\tchildNode = child.create()\r\n\t\t\t\t\tfragment.appendChild(childNode)\r\n\t\t\t\t\tif (child.isContentNode) {\r\n\t\t\t\t\t\tcontainer.contentNode = childNode\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (child.notifies) {\r\n\t\t\t\t\t// a variable\r\n\t\t\t\t\tvar ref = child.isIterable ? fragment : parent\r\n\t\t\t\t\tfragment.appendChild(childNode = variableAsContent(ref, child))\r\n\t\t\t\t} else if (typeof child == 'object') {\r\n\t\t\t\t\tif (child instanceof Array) {\r\n\t\t\t\t\t\t// array of sub-children\r\n\t\t\t\t\t\tcontainer = container || parent\r\n\t\t\t\t\t\tchildNode = childNode || parent\r\n\t\t\t\t\t\tlayoutChildren(childNode.contentNode || childNode, child, container)\r\n\t\t\t\t\t} else if (child.nodeType) {\r\n\t\t\t\t\t\t// an element itself\r\n\t\t\t\t\t\tfragment.appendChild(childNode = child)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// TODO: apply properties to last child, but with binding to the parent (for events)\r\n\t\t\t\t\t\tthrow new Error('Unknown child type ' + child)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// a primitive value\r\n\t\t\t\t\tchildNode = doc.createTextNode(child)\r\n\t\t\t\t\tfragment.appendChild(childNode)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (fragment != parent) {\r\n\t\t\tif (prepend) {\r\n\t\t\t\tparent.insertBefore(fragment, parent.firstChild)\r\n\t\t\t} else {\r\n\t\t\t\tparent.appendChild(fragment)\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn childNode\r\n\t}\r\n\tfunction variableAsContent(parent, content) {\r\n\t\tif (content == null) {\r\n\t\t\treturn doc.createTextNode('')\r\n\t\t}\r\n\t\tvar textNode\r\n\t\tif (content.notifies) {\r\n\t\t\ttextNode = doc.createTextNode('')\r\n\t\t\tvar renderer = new TextRenderer({\r\n\t\t\t\telement: parent,\r\n\t\t\t\ttextNode: textNode,\r\n\t\t\t\tvariable: content\r\n\t\t\t})\r\n\t\t\ttextNode = renderer.textNode // it can be swapped for another node\r\n\t\t} else {\r\n\t\t\ttextNode = doc.createTextNode(content)\r\n\t\t}\r\n\t\treturn textNode\r\n\t}\r\n\r\n\tfunction bidirectionalHandler(element, value, key) {\r\n\t\tif (value && value.notifies) {\r\n\t\t\tnew InputPropertyRenderer({\r\n\t\t\t\tname: key,\r\n\t\t\t\tvariable: value,\r\n\t\t\t\telement: element\r\n\t\t\t})\r\n\t\t\tif (inputs[element.tagName] || element.tagName === 'SELECT') {\r\n\t\t\t\tbindChanges(element, value, key)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (element.tagName === 'SELECT' && key === 'value') {\r\n\t\t\t\t// use the deferred <select> value assignment\r\n\t\t\t\tInputPropertyRenderer.prototype.renderSelectValueUpdate(value, element)\r\n\t\t\t} else {\r\n\t\t\t\tif (element.type === 'number') {\r\n\t\t\t\t\tif (isNaN(value)) {\r\n\t\t\t\t\t\tvalue = ''\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telement[key] = value\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction noop() {}\r\n\tvar propertyHandlers = {\r\n\t\tchildren: noop,\r\n\t\ttagName: noop,\r\n\t\t_generators: noop,\r\n\t\tclasses: function(element, classes) {\r\n\t\t\tif (!(classes.length > -1)) {\r\n\t\t\t\t// index the classes, if necessary\r\n\t\t\t\tvar i = 0\r\n\t\t\t\tfor (var key in classes) {\r\n\t\t\t\t\tif (!classes[i]) {\r\n\t\t\t\t\t\tclasses[i] = key\r\n\t\t\t\t\t}\r\n\t\t\t\t\ti++\r\n\t\t\t\t}\r\n\t\t\t\tclasses.length = i\r\n\t\t\t}\r\n\t\t\tfor (var i = 0, l = classes.length; i < l; i++) {\r\n\t\t\t\t// find each class name\r\n\t\t\t\tvar className = classes[i]\r\n\t\t\t\tvar flag = classes[className]\r\n\t\t\t\tif (flag && flag.notifies) {\r\n\t\t\t\t\t// if it is a variable, we react to it\r\n\t\t\t\t\tnew ClassNameRenderer({\r\n\t\t\t\t\t\telement: element,\r\n\t\t\t\t\t\tclassName: className,\r\n\t\t\t\t\t\tvariable: flag\r\n\t\t\t\t\t})\r\n\t\t\t\t} else if (flag || flag === undefined) {\r\n\t\t\t\t\telement.className += ' ' + className\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tclass: applyAttribute,\r\n\t\tfor: applyAttribute, // TODO: move to label?\r\n\t\trole: applyAttribute,\r\n\t\trender: function(element, value, key, properties) {\r\n\t\t\t// TODO: This doesn't need to be a property updater (is in place for *render())\r\n\t\t\t// we should also verify it is a generator\r\n\t\t\t// and maybe, at some point, find an optimization to eliminate the bind()\r\n\t\t\tnew PropertyRenderer({\r\n\t\t\t\tname: key,\r\n\t\t\t\tvariable: new VariableExports.GeneratorVariable(value.bind(element, properties)),\r\n\t\t\t\telement: element\r\n\t\t\t})\r\n\t\t},\r\n\t\tdataset: applySubProperties(function(newValue, element, key) {\r\n\t\t\telement.dataset[key || this.name] = newValue\r\n\t\t}),\r\n\t\tattributes: applySubProperties(function(newValue, element, key) {\r\n\t\t\telement.setAttribute(key || this.name, newValue)\r\n\t\t}),\r\n\t\tstyle: function(element, value, key) {\r\n\t\t\tif (typeof value === 'string') {\r\n\t\t\t\telement.setAttribute('style', value)\r\n\t\t\t} else if (value && value.notifies) {\r\n\t\t\t\tnew AttributeRenderer({\r\n\t\t\t\t\tname: 'style',\r\n\t\t\t\t\tvariable: value,\r\n\t\t\t\t\telement: element\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tstyleObjectHandler(element, value, key)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tknownElementProperties.forEach(function(property) {\r\n\t\tpropertyHandlers[property] = true\r\n\t})\r\n\tif (typeof HTMLElement !== 'undefined') {\r\n\t\tHTMLElement.prototype._propertyHandlers = propertyHandlers // inherit this, at least for now\r\n\t}\r\n\tvar elementPropertyHandlers = {\r\n\t\tinput: lang.copy(['accept', 'alt', 'autocomplete', 'autofocus', 'capture', 'defaultChecked', 'dirName', 'disabled', 'form', 'files', 'formAction', 'formEnctype', 'formMethod', 'formNoValidate', 'formTarget', 'indeterminate', 'inputMode', 'list', 'max', 'maxLength', 'min', 'minLength', 'multiple', 'name', 'pattern', 'placeholder', 'readOnly', 'required', 'size', 'src', 'step', 'type', 'defaultValue', 'willValidate', 'validity', 'validationMessage', 'useMap', 'autocapitalize', 'webkitdirectory', 'incremental', 'stepUp', 'stepDown'], {\r\n\t\t\tvalue: bidirectionalHandler,\r\n\t\t\tvalueAsNumber: bidirectionalHandler,\r\n\t\t\tvalueAsDate: bidirectionalHandler,\r\n\t\t\tchecked: bidirectionalHandler,\r\n\t\t\ttype: function(element, value) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\telement.type = value\r\n\t\t\t\t} catch(e) {\r\n\t\t\t\t\t// IE 11 will throw an error here\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}),\r\n\t\tselect: lang.copy(['name', 'size', 'type', 'selectedIndex', 'validationMessage'], {\r\n\t\t\tvalue: bidirectionalHandler\r\n\t\t}),\r\n\t\ttextarea: lang.copy(['cols', 'dirName', 'maxLength', 'minLength', 'name', 'placeholder', 'rows', 'wrap', 'type', 'defaultValue', 'textLength', 'validationMessage', 'autocapitalize'], {\r\n\t\t\tvalue: bidirectionalHandler\r\n\t\t}),\r\n\t\ta: ['target', 'download', 'ping', 'rel', 'hreflang', 'type', 'referrerPolicy', 'href', 'media'],\r\n\t\tarea: ['target', 'download', 'coords', 'rel', 'hreflang', 'type', 'referrerPolicy', 'href', 'media', 'alt', 'shape'],\r\n\t\tbutton: ['disabled', 'formAction', 'formEnctype', 'formMethod', 'formTarget', 'name', 'type', 'value', 'validationMessage'],\r\n\t\tdialog: ['open'],\r\n\t\tembed: ['src', 'type', 'name'],\r\n\t\tform: ['acceptCharset', 'action', 'autocomplete', 'enctype', 'encoding', 'method', 'name', 'target', 'novalidate'],\r\n\t\tframe: ['name', 'scrolling', 'src', 'frameBorder'],\r\n\t\tframeset: ['cols', 'rows'],\r\n\t\tiframe: ['src', 'srcdoc', 'name', 'referrerPolicy', 'align', 'scrolling', 'frameBorder', 'longDesc'],\r\n\t\timg: ['src', 'alt', 'crossorigin', 'ismap', 'longdesc', 'sizes', 'srcset', 'usemap', 'referrerpolicy'],\r\n\t\toption: ['label', 'value', 'text', 'index'],\r\n\t\toptgroup: ['label'],\r\n\t\toutput: ['name', 'type', 'defaultValue', 'value', 'validationMessage'],\r\n\t\tlabel: ['htmlFor'],\r\n\t\ttd: ['colSpan', 'rowSpan'],\r\n\t\tth: ['colSpan', 'rowSpan'],\r\n\t\tscript: ['src', 'type', 'charset', 'text', 'event', 'htmlFor', 'integrity'],\r\n\t\tstyle: ['media', 'type'],\r\n\t\ttrack: ['kind', 'src', 'srclang', 'label'],\r\n\t\tlink: ['href', 'rel', 'media', 'hreflang', 'type', 'charset', 'rev', 'target', 'integrity', 'as'],\r\n\t\tmeta: ['name', 'httpEquiv', 'content', 'scheme'],\r\n\t\tmeter: ['value', 'min', 'max', 'low', 'high', 'optimum'],\r\n\t\tprogress: ['value', 'max', 'position'],\r\n\t\tdel: ['cite', 'dateTime'],\r\n\t\tins: ['cite', 'dateTime'],\r\n\t\tsource: ['src', 'type', 'srcset', 'sizes', 'media'],\r\n\t\tvideo: ['videoWidth', 'videoHeight', 'poster', 'webkitDecodedFrameCount', 'webkitDroppedFrameCount'],\r\n\t\tkeygen: ['challenge', 'keytype', 'name', 'type', 'validationMessage'],\r\n\t\tobject: ['data', 'type', 'name', 'useMap', 'validationMessage', 'archive', 'code', 'hspace', 'standby', 'vspace', 'codeBase', 'codeType'],\r\n\t\tparam: ['name', 'value', 'type', 'valueType']\r\n\t}\r\n\r\n\tfunction applyAttribute(element, value, key) {\r\n\t\tif (value && value.notifies) {\r\n\t\t\tnew AttributeRenderer({\r\n\t\t\t\tname: key,\r\n\t\t\t\tvariable: value,\r\n\t\t\t\telement: element\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\telement.setAttribute(key, value)\r\n\t\t}\r\n\t}\r\n\r\n\tvar styleObjectHandler = applySubProperties(function(newValue, element, key) {\r\n\t\telement.style[key || this.name] = newValue\r\n\t})\r\n\r\n\tfunction applySubProperties(renderer) {\r\n\t\tvar SubPropertyRenderer = lang.compose(PropertyRenderer, function SubPropertyRenderer(options) {\r\n\t\t\tPropertyRenderer.apply(this, arguments)\r\n\t\t}, {\r\n\t\t\trenderUpdate: renderer\r\n\t\t})\r\n\t\treturn function(element, value, key) {\r\n\t\t\tfor (var subKey in value) {\r\n\t\t\t\tvar subValue = value[subKey]\r\n\t\t\t\tif (subValue && subValue.notifies) {\r\n\t\t\t\t\tnew SubPropertyRenderer({\r\n\t\t\t\t\t\tname: subKey,\r\n\t\t\t\t\t\tvariable: subValue,\r\n\t\t\t\t\t\telement: element\r\n\t\t\t\t\t})\r\n\t\t\t\t} else {\r\n\t\t\t\t\trenderer(subValue, element, subKey)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction assignProperties(element, properties) {\r\n\t\tvar propertyHandlers = element._propertyHandlers\r\n\t\tvar Element = element.constructor\r\n\t\tfor (var key in properties) {\r\n\t\t\tvar value = properties[key]\r\n\t\t\tvar VariableClass = Element[key]\r\n\t\t\tif (typeof VariableClass === 'function' && VariableClass.notifies && VariableClass !== value) {\r\n\t\t\t\thasOwn(Element, VariableClass)\r\n\t\t\t\t// if (value instanceof VariableClass) { TODO: assign the value as the owned instance\r\n\t\t\t\tVariableClass.for(element).put(value)\r\n\t\t\t}\r\n\t\t\tvar styleDefinition\r\n\t\t\tvar propertyHandler = propertyHandlers[key]\r\n\t\t\tif (propertyHandler) {\r\n\t\t\t\tif (propertyHandler === true) {\r\n\t\t\t\t\tif (value && value.notifies) {\r\n\t\t\t\t\t// a standard, known element property\r\n\t\t\t\t\t\tnew PropertyRenderer({\r\n\t\t\t\t\t\t\tname: key,\r\n\t\t\t\t\t\t\tvariable: value,\r\n\t\t\t\t\t\t\telement: element\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\telement[key] = value\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpropertyHandler(element, value, key, properties)\r\n\t\t\t\t}\r\n\t\t\t} else if ((styleDefinition = styleDefinitions[key])) {\r\n\t\t\t\tif (value && value.notifies) {\r\n\t\t\t\t\tnew StyleRenderer({\r\n\t\t\t\t\t\tname: key,\r\n\t\t\t\t\t\tvariable: value,\r\n\t\t\t\t\t\telement: element\r\n\t\t\t\t\t})\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstyleDefinition(element, value, key)\r\n\t\t\t\t}\r\n\t\t\t} else if (element[key] == null) {\r\n\t\t\t\t// we are working an unknown/unstandard property (or an event listener)\r\n\t\t\t\t// undefined or null means we can safely set\r\n\t\t\t\t// TODO: we may want to do the event listener check first so we can handle oncustomevent (that needs an addEventListener call to work)\r\n\t\t\t\telement[key] = value\r\n\t\t\t} else if (typeof value === 'function' && key.slice(0, 2) === 'on') {\r\n\t\t\t\t// event listener with one already defined on the prototype\r\n\t\t\t\telement.addEventListener(key.slice(2), value)\r\n\t\t\t} else {\r\n\t\t\t\t// otherwise bypass/override the native getter/setter\r\n\t\t\t\tObject.defineProperty(element, key, {\r\n\t\t\t\t\tvalue: value,\r\n\t\t\t\t\tenumerable: true,\r\n\t\t\t\t\tconfigurable: true,\r\n\t\t\t\t\twritable: true\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction assignGenerators(element, properties) {\r\n\t\tvar generators = properties._generators\r\n\t\tvar customGenerators\r\n\t\tvar styleGenerators\r\n\t\tvar nativeGenerators\r\n\t\tvar propertyHandlers = element._propertyHandlers\r\n\t\tfor (var key in generators) {\r\n\t\t\tvar variable = new VariableExports.GeneratorVariable(generators[key].bind(element, properties))\r\n\t\t\tif (propertyHandlers[key]) {\r\n\t\t\t\t(nativeGenerators || (nativeGenerators = {}))[key] = variable\r\n\t\t\t} else if (styleDefinitions[key]) {\r\n\t\t\t\t(styleGenerators || (styleGenerators = {}))[key] = variable\r\n\t\t\t} else {\r\n\t\t\t\t(customGenerators || (customGenerators = {}))[key] = variable\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (customGenerators) {\r\n\t\t\t// custom ones must go first\r\n\t\t\tassignProperties(element, customGenerators)\r\n\t\t}\r\n\t\tif (styleGenerators) {\r\n\t\t\tassignProperties(element, styleGenerators)\r\n\t\t}\r\n\t\tif (nativeGenerators) {\r\n\t\t\t// native ones must come last so they can access custom ones\r\n\t\t\tassignProperties(element, nativeGenerators)\r\n\t\t}\r\n\t}\r\n\r\n\tfunction buildContent(element, content, key, properties) {\r\n\t\tvar each = element.each || properties.each\r\n\t\tif (each && content) {\r\n\t\t\t// render as list\r\n\t\t\tif (each.create) {\r\n\t\t\t\teach.defineHasOwn = function () {\r\n\t\t\t\t\tvar ItemClass = content.getCollectionOf && content.getCollectionOf() || Item\r\n\t\t\t\t\thasOwn(each, ItemClass, function (element) {\r\n\t\t\t\t\t\tvar itemVariable = ItemClass.from(element._item)\r\n\t\t\t\t\t\treturn itemVariable\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (content.notifies) {\r\n\t\t\t\tnew ListRenderer({\r\n\t\t\t\t\teach: each,\r\n\t\t\t\t\tvariable: content,\r\n\t\t\t\t\telement: element\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tvar fragment = doc.createDocumentFragment()\r\n\t\t\t\tif (each.defineHasOwn) {\r\n\t\t\t\t\teach.defineHasOwn()\r\n\t\t\t\t}\r\n\t\t\t\tcontent.forEach(function(item) {\r\n\t\t\t\t\tif (each.create) {\r\n\t\t\t\t\t\tchildElement = each.create({parent: element, _item: item}) // TODO: make a faster object here potentially\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tchildElement = each(item, element)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfragment.appendChild(childElement)\r\n\t\t\t\t})\r\n\t\t\t\telement.appendChild(fragment)\r\n\t\t\t}\r\n\t\t} else if (inputs[element.tagName]) {\r\n\t\t\t// render into input\r\n\t\t\tbuildInputContent(element, content)\r\n\t\t} else if (content instanceof Array) {\r\n\t\t\t// treat array as children (potentially of the content node)\r\n\t\t\telement = element.contentNode || element\r\n\t\t\tlayoutChildren(element, content, element)\r\n\t\t} else {\r\n\t\t\t// render as string\r\n\t\t\telement.appendChild(variableAsContent(element, content))\r\n\t\t}\r\n\t}\r\n\r\n\tfunction bindChanges(element, variable, key, conversion) {\r\n\t\tlang.nextTurn(function() { // wait for next turn in case inputChanges isn't set yet\r\n\t\t\tvar inputEvents = element.inputEvents || ['change', 'alkali-change']\r\n\t\t\tfor (var i = 0, l = inputEvents.length; i < l; i++) {\r\n\t\t\t\telement.addEventListener(inputEvents[i], function (event) {\r\n\t\t\t\t\tvar value = element[key]\r\n\t\t\t\t\tvar result = variable.put(conversion ? conversion(value, element) : value, new Context(element))\r\n\t\t\t\t\tif (result === VariableExports.deny) {\r\n\t\t\t\t\t\tthrow new Error('Variable change denied')\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tdoc.addEventListener('click', function(event) {\r\n\t\tvar target = event.target\r\n\t\tif (target.type === 'radio') {\r\n\t\t\tvar radios = doc.querySelectorAll('input[type=radio]')\r\n\t\t\tfor (var i = 0, l = radios.length; i < l; i++) {\r\n\t\t\t\tvar radio = radios[i]\r\n\t\t\t\tif (radio.name === target.name && radio !== target) {\r\n\t\t\t\t\tradio.dispatchEvent(new Event('alkali-change', {}))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\n\tfunction conversion(value, element) {\r\n\t\tif (element.type == 'number') {\r\n\t\t\treturn parseFloat(value)\r\n\t\t}\r\n\t\treturn value\r\n\t}\r\n\r\n\tfunction buildInputContent(element, content) {\r\n\t\tvar inputType = element.type\r\n\t\tvar inputProperty = inputType in {date: 1, datetime: 1, time: 1} ?\r\n\t\t\t\t'valueAsDate' : (inputType === 'checkbox' || inputType === 'radio') ?\r\n\t\t\t\t\t'checked' : 'value'\r\n\r\n\t\tif (content && content.notifies) {\r\n\t\t\t// a variable, respond to changes\r\n\t\t\tnew InputPropertyRenderer({\r\n\t\t\t\tvariable: content,\r\n\t\t\t\tname: inputProperty,\r\n\t\t\t\telement: element\r\n\t\t\t})\r\n\t\t\t// and bind the other way as well, updating the variable in response to input changes\r\n\t\t\tbindChanges(element, content, inputProperty, conversion)\r\n\t\t} else {\r\n\t\t\t// primitive\r\n\t\t\telement[inputProperty] = content\r\n\t\t}\r\n\t}\r\n\r\n\tfunction mergeObject(Element, value, key, properties) {\r\n\t\tvar existing = properties[key]\r\n\t\tif (existing) {\r\n\t\t\tfor (var subKey in value) {\r\n\t\t\t\texisting[subKey] = value[subKey]\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tproperties[key] = value\r\n\t\t}\r\n\t}\r\n\r\n\tvar classHandlers = {\r\n\t\tclasses: mergeObject,\r\n\t\t_generators: mergeObject,\r\n\t\tdataset: mergeObject,\r\n\t\tattributes: mergeObject,\r\n\t\tstyle: mergeObject,\r\n\t\thasOwn: function(Element, value) {\r\n\t\t\thasOwn(Element, value)\r\n\t\t},\r\n\t\tchildren: function(Element, value) {\r\n\t\t\tElement.children = value\r\n\t\t},\r\n\t\tshadow: function(Element, value) {\r\n\t\t\tElement.shadow = value\r\n\t\t}\r\n\t}\r\n\r\n\tfunction applyToConstructor(argument, Element) {\r\n\t\tvar applyOnCreate = Element._applyOnCreate\r\n\t\tif (argument && typeof argument === 'object') {\r\n\t\t\tif (argument instanceof Array || argument.notifies) {\r\n\t\t\t\tapplyOnCreate.content = argument\r\n\t\t\t} else {\r\n\t\t\t\tfor (var key in argument) {\r\n\t\t\t\t// TODO: eventually we want to be able to set these as rules statically per element\r\n\t\t\t\t/*if (styleDefinitions[key]) {\r\n\t\t\t\t\tvar styles = Element.styles || (Element.styles = [])\r\n\t\t\t\t\tstyles.push(key)\r\n\t\t\t\t\tstyles[key] = descriptor.value\r\n\t\t\t\t} else {*/\r\n\t\t\t\t\tvar value = argument[key]\r\n\t\t\t\t\tvar VariableClass = Element[key]\r\n\t\t\t\t\tif (typeof value === 'function') {\r\n\t\t\t\t\t\tif (value.notifies) {\r\n\t\t\t\t\t\t\tif (value === Variable) {\r\n\t\t\t\t\t\t\t\tvalue = Variable() // create a branded variable if we are using a generic one\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// for Variable classes we make them statically available on the element\r\n\t\t\t\t\t\t\tElement[key] = value\r\n\t\t\t\t\t\t} else if (isGenerator(value)) {\r\n\t\t\t\t\t\t\tif (key.slice(0, 4) === 'get_') {\r\n\t\t\t\t\t\t\t\tkey = key.slice(4)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t(applyOnCreate._generators || (applyOnCreate._generators = {}))[key] = value\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (value && value.notifies) {\r\n\t\t\t\t\t\t// also store any variables as statically available properties\r\n\t\t\t\t\t\tElement[key] = value\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (classHandlers[key]) { // Could eliminate this if we got rid of hasOwn\r\n\t\t\t\t\t\tclassHandlers[key](Element, value, key, applyOnCreate)\r\n\t\t\t\t\t} else if (typeof VariableClass === 'function' && VariableClass.notifies) {\r\n\t\t\t\t\t\tapplyOnCreate[key] = new VariableClass(value)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tapplyOnCreate[key] = value\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (typeof argument === 'function' && !argument.for) {\r\n\t\t\tthrow new TypeError('Function as argument not supported')\r\n\t\t} else {\r\n\t\t\tapplyOnCreate.content = argument\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getApplySet(Class) {\r\n\t\tif (Class.hasOwnProperty('_applyOnCreate')) {\r\n\t\t\treturn Class._applyOnCreate\r\n\t\t}\r\n\t\t// this means we didn't extend and evaluate the prototype yet\r\n\t\tif (Class.getForClass) {\r\n\t\t\t// we are extending an alkali constructor\r\n\t\t\t// if this class is inheriting from an alkali constructor, work our way up the chain\r\n\t\t\tvar applyOnCreate = Class._applyOnCreate = {}\r\n\t\t\tvar parentApplySet = getApplySet(getPrototypeOf(Class))\r\n\t\t\tfor (var key in parentApplySet) {\r\n\t\t\t\tapplyOnCreate[key] = classHandlers[key] ? Object.create(parentApplySet[key]) : parentApplySet[key]\r\n\t\t\t}\r\n\t\t\t// we need to check the prototype for event handlers\r\n\t\t\tvar prototype = Class.prototype\r\n\t\t\tvar propertyHandlers\r\n\t\t\tvar keys = Object.getOwnPropertyNames(prototype)\r\n\t\t\tfor (var i = 0, l = keys.length; i < l; i++) {\r\n\t\t\t\tvar key = keys[i]\r\n\t\t\t\tif (key.slice(0, 2) === 'on' || (key === 'render' && isGenerator(prototype[key]))) {\r\n\t\t\t\t\tapplyOnCreate[key] = prototype[key]\r\n\t\t\t\t} else if (key.slice(0, 6) === 'render') {\r\n\t\t\t\t\tvar propertyName = key[6].toLowerCase() + key.slice(7)\r\n\t\t\t\t\tif (!propertyHandlers) {\r\n\t\t\t\t\t\tpropertyHandlers = prototype._propertyHandlers = Object.create(prototype._propertyHandlers)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpropertyHandlers[propertyName] = true // TODO: is it better to implement this with property handlers?\r\n\t\t\t\t\tObject.defineProperty(prototype, propertyName, renderDescriptor(key))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn applyOnCreate\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\tfunction renderDescriptor(renderMethod) {\r\n\t\tvar map = new WeakMap()\r\n\t\treturn {\r\n\t\t\tget: function() {\r\n\t\t\t\treturn map.has(this) ? map.get(this) : null\r\n\t\t\t},\r\n\t\t\tset: function(value) {\r\n\t\t\t\tmap.set(this, value)\r\n\t\t\t\tthis[renderMethod](value)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction makeElementConstructor() {\r\n\t\tfunction Element(selector, properties) {\r\n\t\t\tif (this instanceof Element){\r\n\t\t\t\t// create DOM element\r\n\t\t\t\t// Need to detect if we have registered the element and `this` is actually already the correct instance\r\n\t\t\t\treturn create.apply(Element.prototype === getPrototypeOf(this) ? Element :// this means it is from this constructor\r\n\t\t\t\t\tthis.constructor, // this means it was constructed from a subclass\r\n\t\t\t\t\targuments)\r\n\t\t\t} else {\r\n\t\t\t\t// extend to create new class\r\n\t\t\t\treturn withProperties.apply(Element, arguments)\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn Element\r\n\t}\r\n\r\n\tfunction withProperties(selector, properties) {\r\n\t\tvar Element = makeElementConstructor()\r\n\t\tif (this.with) {\r\n\t\t\t// TODO: Might consider only doing this for derivatives of derivatives, since we don't need to inherit from base constructors\r\n\t\t\t// or only doing this in the case of element having custom properties (could mark it with a flag)\r\n\t\t\tsetPrototypeOf(Element, this)\r\n\t\t\tElement.ownedClasses = null\r\n\t\t} else {\r\n\t\t\tElement.create = create\r\n\t\t\tElement.with = withProperties\r\n\t\t\tElement.for = forTarget\r\n\t\t\tElement.property = propertyForElement\r\n\t\t\tElement.getForClass = getForClass\r\n\t\t}\r\n\t\tElement.prototype = this.prototype\r\n\r\n\t\tvar applyOnCreate = Element._applyOnCreate = {}\r\n\t\tvar parentApplySet = getApplySet(this)\r\n\t\t// copy parent properties\r\n\t\tfor (var key in parentApplySet) {\r\n\t\t\tapplyOnCreate[key] = classHandlers[key] ? Object.create(parentApplySet[key]) : parentApplySet[key]\r\n\t\t}\r\n\r\n\t\tvar i = 0 // for arguments\r\n\t\tif (typeof selector === 'string') {\r\n\t\t\tvar selectorMatch = selector.match(SELECTOR_REGEX)\r\n\t\t\tif (selectorMatch) {\r\n\t\t\t\tdo {\r\n\t\t\t\t\tvar operator = selectorMatch[1]\r\n\t\t\t\t\tvar name = selectorMatch[2]\r\n\t\t\t\t\tif (operator == '.') {\r\n\t\t\t\t\t\tif (applyOnCreate.className) {\r\n\t\t\t\t\t\t\tapplyOnCreate.className += ' ' + name\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tapplyOnCreate.className = name\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tapplyOnCreate.id = name\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar remaining = selectorMatch[3]\r\n\t\t\t\t\tselectorMatch = remaining && remaining.match(SELECTOR_REGEX)\r\n\t\t\t\t} while (selectorMatch)\r\n\t\t\t} else {\r\n\t\t\t\tapplyOnCreate.content = selector\r\n\t\t\t}\r\n\t\t\ti++ // skip the first argument\r\n\t\t}\r\n\r\n\t\tfor (var l = arguments.length; i < l; i++) {\r\n\t\t\tapplyToConstructor(arguments[i], Element)\r\n\t\t}\r\n\t\treturn Element\r\n\t}\r\n\tvar currentParent\r\n\tfunction create(selector, properties) {\r\n\t\t// TODO: make this a symbol\r\n\t\tvar applyOnCreate = getApplySet(this)\r\n\t\tif (currentParent) {\r\n\t\t\tvar parent = currentParent\r\n\t\t\tcurrentParent = null\r\n\t\t}\r\n/*\t\tif (this._initialized != this) {\r\n\t\t\tthis._initialized = this\r\n\t\t\tthis.initialize && this.initialize()\r\n\t\t\tvar styles = this.styles\r\n\t\t\tif (styles) {\r\n\t\t\t\tvar rule = createCssRule(getUniqueSelector(this))\r\n\t\t\t\tfor (var i = 0, l = styles.length; i < l; i++) {\r\n\t\t\t\t\tvar key = styles[i]\r\n\t\t\t\t\tvar value = styles[key]\r\n\t\t\t\t\t// TODO: if it is a contextualized variable, do this on the element\r\n\t\t\t\t\tvar styleDefinition = styleDefinitions[key]\r\n\t\t\t\t\tif (styleDefinition) {\r\n\t\t\t\t\t\tstyleDefinition(rule, value, key)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!this.hasOwnProperty('_applyOnCreate')) {\r\n\t\t\t\tapplyOnCreate = getApplySet(this)\r\n\t\t\t}\r\n\t\t}*/\r\n\t\tvar element = doc.createElement(this.tagName)\r\n\t\tif (selector && selector.parent) {\r\n\t\t\tparent = selector.parent\r\n\t\t}\r\n\t\tif (parent) {\r\n\t\t\tpresumptiveParentMap.set(element, parent)\r\n\t\t}\r\n\t\tif (!(element instanceof this)) {\r\n\t\t\t// ideally we want to avoid this call, as it is expensive, but for classes that\r\n\t\t\t// don't register a tag name, we have to make sure the prototype chain is correct\r\n\t\t\tsetPrototypeOf(element, this.prototype)\r\n\t\t}\r\n\t\tif (element.constructor != this) {\r\n\t\t\tif (buggyConstructorSetter) {\r\n\t\t\t\t// in safari, directly setting the constructor messes up the native prototype\r\n\t\t\t\tObject.defineProperty(element, 'constructor', { value: this })\r\n\t\t\t} else {\r\n\t\t\t\telement.constructor = this // need to do this for hasOwn contextualization to work\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (arguments.length > 0) {\r\n\t\t\t// copy applyOnCreate when we have arguments\r\n\t\t\tvar ElementApplyOnCreate = applyOnCreate\r\n\t\t\tapplyOnCreate = {}\r\n\t\t\tfor (var key in ElementApplyOnCreate) {\r\n\t\t\t\tapplyOnCreate[key] = classHandlers[key] ? Object.create(ElementApplyOnCreate[key]) : ElementApplyOnCreate[key]\r\n\t\t\t}\r\n\t\t\tvar i = 0\r\n\t\t\tif (typeof selector == 'string') {\r\n\t\t\t\ti++\r\n\t\t\t\tvar selectorMatch = selector.match(SELECTOR_REGEX)\r\n\t\t\t\tif (selectorMatch) {\r\n\t\t\t\t\tdo {\r\n\t\t\t\t\t\tvar operator = selectorMatch[1]\r\n\t\t\t\t\t\tvar name = selectorMatch[2]\r\n\t\t\t\t\t\tif (operator == '.') {\r\n\t\t\t\t\t\t\tif (applyOnCreate.className) {\r\n\t\t\t\t\t\t\t\tapplyOnCreate.className += ' ' + name\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tif (element.className) {\r\n\t\t\t\t\t\t\t\t\t\telement.className += ' ' + name\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\telement.className = name\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (applyOnCreate.id) {\r\n\t\t\t\t\t\t\t\tapplyOnCreate.id = name\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// just skip right to the element\r\n\t\t\t\t\t\t\t\telement.id = name\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar remaining = selectorMatch[3]\r\n\t\t\t\t\t\tselectorMatch = remaining && remaining.match(SELECTOR_REGEX)\r\n\t\t\t\t\t} while (selectorMatch)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tapplyOnCreate.content = selector\r\n\t\t\t\t}\r\n\t\t\t} else if (selector && selector._item) {\r\n\t\t\t\t// this is kind of hack, to get the Item available before the properties, eventually we may want to\r\n\t\t\t\t// order static properties before variable binding applications, but for now.\r\n\t\t\t\telement._item = selector._item\r\n\t\t\t}\r\n\t\t\tfor (var l = arguments.length; i < l; i++) {\r\n\t\t\t\tvar argument = arguments[i]\r\n\t\t\t\tif (argument && typeof argument === 'object') {\r\n\t\t\t\t\tif (argument instanceof Array || argument.notifies) {\r\n\t\t\t\t\t\tapplyOnCreate.content = argument\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tfor (var key in argument) {\r\n\t\t\t\t\t\t\tif (classHandlers[key]) {\r\n\t\t\t\t\t\t\t\tclassHandlers[key](this, argument[key], key, applyOnCreate)\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tapplyOnCreate[key] = argument[key]\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (typeof argument === 'function' && argument.for) {\r\n\t\t\t\t\tapplyOnCreate.content = argument.for(element)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tapplyOnCreate.content = argument\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (element.created) {\r\n\t\t\tapplyOnCreate = element.created(applyOnCreate) || applyOnCreate\r\n\t\t} else if (applyOnCreate.created) {\r\n\t\t\tapplyOnCreate = applyOnCreate.created.call(element, applyOnCreate) || applyOnCreate\r\n\t\t}\r\n\t\t// TODO: inline this for better performance, possibly\r\n\t\tassignProperties(element, applyOnCreate)\r\n\r\n\t\tif (applyOnCreate._generators) {\r\n\t\t\tassignGenerators(element, applyOnCreate)\r\n\t\t}\r\n\r\n\t\tif (this.children) {\r\n\t\t\tlayoutChildren(element, this.children, element)\r\n\t\t}\r\n\t\tif (this.shadow) {\r\n\t\t\tlayoutChildren(element.attachShadow({mode: 'open'}), this.shadow, element)\r\n\t\t}\r\n\t\t// always do this last, so it can be properly inserted inside the children\r\n\t\tif (element.content != null) {\r\n\t\t\tbuildContent(element, element.content, 'content', applyOnCreate)\r\n\t\t}\r\n\t\telement.ready && element.ready(applyOnCreate)\r\n\t\treturn element\r\n\t}\r\n\r\n\tvar slice = [].slice\r\n\tfunction append(parent){\r\n\t\treturn this.nodeType ?\r\n\t\t\tlayoutChildren(this, arguments, this) : // called as a method\r\n\t\t\tlayoutChildren(parent, slice.call(arguments, 1), parent) // called as a function\r\n\t}\r\n\r\n\tfunction prepend(parent){\r\n\t\treturn this.nodeType ?\r\n\t\t\tlayoutChildren(this, arguments, this, true) : // called as a method\r\n\t\t\tlayoutChildren(parent, slice.call(arguments, 1), parent, true) // called as a function\r\n\t}\r\n\r\n\tfunction defineTag(tagName, Element) {\r\n\t\tvar extendElement = Element.tagName\r\n\t\tElement.tagName = tagName\r\n\t\tif (typeof customElements === 'object') {\r\n\t\t\tcustomElements.define(tagName, lang.extendClass(HTMLElement), { extends: extendElement })\r\n\t\t} else {\r\n\t\t\tconsole.warn('This browser does not support customElements, ensure that the constructor is used to create new elements')\r\n\t\t}\r\n\t}\r\n\r\n\tvar Element = withProperties.call(typeof HTMLElement !== 'undefined' ? HTMLElement : function() {})\r\n\r\n\tElement.defineTag = defineTag\r\n\tElement.assign = function(target, properties) {\r\n\t\tif (typeof target === 'function') {\r\n\t\t\t// assign properties to an existing constructor/class\r\n\t\t\tgetApplySet(target) // make sure we have our own applyOnCreate first\r\n\t\t\tapplyToConstructor(properties, target)\r\n\t\t} else {\r\n\t\t\t// assign to an element\r\n\t\t\t// TODO: Handle content property separately\r\n\t\t\treturn assignProperties(target, properties)\r\n\t\t}\r\n\t}\r\n\r\n\tElement.within = function(element){\r\n\t\t// find closest child\r\n\t}\r\n\r\n\tgenerate([\r\n\t\t'Video',\r\n\t\t'Source',\r\n\t\t'Media',\r\n\t\t'Audio',\r\n\t\t'UL',\r\n\t\t'U',\r\n\t\t'Track',\r\n\t\t'Title',\r\n\t\t'TextArea',\r\n\t\t'Template',\r\n\t\t'TBody',\r\n\t\t'THead',\r\n\t\t'TFoot',\r\n\t\t'TR',\r\n\t\t'Table',\r\n\t\t'Col',\r\n\t\t'ColGroup',\r\n\t\t'TH',\r\n\t\t'TD',\r\n\t\t'Caption',\r\n\t\t'Sup',\r\n\t\t'Sub',\r\n\t\t'Style',\r\n\t\t'Strong',\r\n\t\t'Span',\r\n\t\t'Small',\r\n\t\t'Shadow',\r\n\t\t'Select',\r\n\t\t'Script',\r\n\t\t'S',\r\n\t\t'Quote',\r\n\t\t'Progress',\r\n\t\t'Pre',\r\n\t\t'Picture',\r\n\t\t'Param',\r\n\t\t'P',\r\n\t\t'Output',\r\n\t\t'Option',\r\n\t\t'Optgroup',\r\n\t\t'Object',\r\n\t\t'OL',\r\n\t\t'Ins',\r\n\t\t'I',\r\n\t\t'Del',\r\n\t\t'Meter',\r\n\t\t'Meta',\r\n\t\t'Menu',\r\n\t\t'Map',\r\n\t\t'Link',\r\n\t\t'Legend',\r\n\t\t'Label',\r\n\t\t'LI',\r\n\t\t'KeyGen',\r\n\t\t'Input',\r\n\t\t'Img',\r\n\t\t'IFrame',\r\n\t\t'H1',\r\n\t\t'H2',\r\n\t\t'H3',\r\n\t\t'H4',\r\n\t\t'H5',\r\n\t\t'H6',\r\n\t\t'Hr',\r\n\t\t'FrameSet',\r\n\t\t'Frame',\r\n\t\t'Form',\r\n\t\t'Font',\r\n\t\t'Embed',\r\n\t\t'Em',\r\n\t\t'Code',\r\n\t\t'Cite',\r\n\t\t'Dfn',\r\n\t\t'B',\r\n\t\t'Article',\r\n\t\t'Aside',\r\n\t\t'Abbr',\r\n\t\t'Footer',\r\n\t\t'Figure',\r\n\t\t'FigCaption',\r\n\t\t'Header',\r\n\t\t'Main',\r\n\t\t'Mark',\r\n\t\t'MenuItem',\r\n\t\t'Nav',\r\n\t\t'Section',\r\n\t\t'Slot',\r\n\t\t'Summary',\r\n\t\t'WBr',\r\n\t\t'Div',\r\n\t\t'Dialog',\r\n\t\t'Details',\r\n\t\t'DataList',\r\n\t\t'DL',\r\n\t\t'Canvas',\r\n\t\t'Button',\r\n\t\t'Base',\r\n\t\t'Br',\r\n\t\t'Area',\r\n\t\t'A'\r\n\t])\r\n\tgenerateInputs([\r\n\t\t'Checkbox',\r\n\t\t'Password',\r\n\t\t'Submit',\r\n\t\t'Radio',\r\n\t\t'Color',\r\n\t\t'Date',\r\n\t\t'DateTime',\r\n\t\t'Email',\r\n\t\t'Month',\r\n\t\t'Number',\r\n\t\t'Range',\r\n\t\t'Search',\r\n\t\t'Tel',\r\n\t\t'Time',\r\n\t\t'Url',\r\n\t\t'Week'])\r\n\r\n\tvar tags = {}\r\n\tfunction getConstructor(tagName) {\r\n\t\ttagName = tagName.toLowerCase()\r\n\t\treturn tags[tagName] ||\r\n\t\t\t(tags[tagName] =\r\n\t\t\t\tsetupElement(withProperties.call(doc.createElement(tagName).constructor), tagName))\r\n\t}\r\n\r\n\tfunction setupElement(Element, tagName) {\r\n\t\tvar props = elementPropertyHandlers[tagName]\r\n\t\tif (props && !props.assigned) {\r\n\t\t\tvar handlers = Element.prototype._propertyHandlers = Object.create(propertyHandlers)\r\n\t\t\tfor (var i = 0, l = props.length; i < l; i++) {\r\n\t\t\t\thandlers[props[i]] = true\r\n\t\t\t}\r\n\t\t\tif (props.value) {\r\n\t\t\t\tfor (var i in props) {\r\n\t\t\t\t\tif (!(i > -1)) { // assign any string properties if necessary\r\n\t\t\t\t\t\thandlers[i] = props[i]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tprops.assigned = true\r\n\t\t}\r\n\t\tElement.tagName = tagName\r\n\t\treturn Element\r\n\t}\r\n\tfunction generate(elements) {\r\n\t\telements.forEach(function(elementName) {\r\n\t\t\tvar ElementClass\r\n\t\t\tObject.defineProperty(Element, elementName, {\r\n\t\t\t\tget: function() {\r\n\t\t\t\t\treturn ElementClass || (ElementClass = getConstructor(elementName))\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\tfunction generateInputs(elements) {\r\n\t\telements.forEach(function(inputType) {\r\n\t\t\tvar ElementClass\r\n\t\t\tObject.defineProperty(Element, inputType, {\r\n\t\t\t\tget: function() {\r\n\t\t\t\t\t// TODO: make all inputs extend from input generated from generate\r\n\t\t\t\t\treturn ElementClass || (ElementClass = setupElement(withProperties.call(HTMLInputElement, {\r\n\t\t\t\t\t\ttype: inputType.toLowerCase()\r\n\t\t\t\t\t}), 'input'))\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t// alias all the inputs with an Input suffix\r\n\t\t\tObject.defineProperty(Element, inputType + 'Input', {\r\n\t\t\t\tget: function() {\r\n\t\t\t\t\treturn this[inputType]\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\tvar aliases = {\r\n\t\tAnchor: 'A',\r\n\t\tImage: 'Img',\r\n\t\tParagraph: 'P',\r\n\t\tTextarea: 'TextArea',\r\n\t\tDList: 'DL',\r\n\t\tUList: 'UL',\r\n\t\tOList: 'OL',\r\n\t\tListItem: 'LI',\r\n\t\tText: 'Input',\r\n\t\tTextInput: 'Input',\r\n\t\tTableRow: 'TR',\r\n\t\tTableCell: 'TD',\r\n\t\tTableHeaderCell: 'TH',\r\n\t\tTableHeader: 'THead',\r\n\t\tTableBody: 'TBody'\r\n\t}\r\n\tfor (var alias in aliases) {\r\n\t\t(function(alias, to) {\r\n\t\t\tObject.defineProperty(Element, alias, {\r\n\t\t\t\tget: function() {\r\n\t\t\t\t\treturn this[to]\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})(alias, aliases[alias])\r\n\t}\r\n\r\n\tElement.append = append\r\n\tRenderer.append = append // make it available to the renderer\r\n\tElement.prepend = prepend\r\n\tElement.refresh = Renderer.refresh\r\n\tElement.options = {\r\n\t\tmoveLiveElementsEnabled: true,\r\n\t}\r\n\tElement.content = function(element){\r\n\t\t// container marker\r\n\t\treturn {\r\n\t\t\tisContentNode: true,\r\n\t\t\tcreate: element.create.bind(element)\r\n\t\t}\r\n\t}\r\n\r\n\tElement.ElementClass = function() {}\r\n\tif (typeof Symbol !== 'undefined') {\r\n\t\t// make instanceof work for Element\r\n\t\tObject.defineProperty(Element.ElementClass, Symbol.hasInstance, { value: function(target) {\r\n\t\t\treturn target && (target.create && target.with)\r\n\t\t}})\r\n\t}\r\n\r\n\t// TODO: unify this in lang\r\n\tElement.extend = function(Class, properties) {\r\n\t\tfunction ExtendedElement() {\r\n\t\t\treturn Class.apply(this, arguments)\r\n\t\t}\r\n\t\tsetPrototypeOf(ExtendedElement, Class)\r\n\t\tvar prototype = ExtendedElement.prototype = Object.create(Class.prototype, {\r\n\t\t\tconstructor: { value: ExtendedElement }\r\n\t\t})\r\n\t\tObject.getOwnPropertyNames(properties).forEach(function(key) {\r\n\t\t\tvar descriptor = Object.getOwnPropertyDescriptor(properties, key)\r\n\t\t\tif (classHandlers[key]) {\r\n\t\t\t\tclassHandlers[key](ExtendedElement, descriptor.value, key, properties)\r\n\t\t\t} else {\r\n\t\t\t\tObject.defineProperty(prototype, key, descriptor)\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn ExtendedElement\r\n\t}\r\n\r\n\tfunction forTarget(target) {\r\n\t\treturn target.constructor.getForClass(target, this)\r\n\t}\r\n\r\n\tfunction hasOwn(From, Target, createInstance) {\r\n\t\tif (typeof Target === 'object') {\r\n\t\t\t// we were given an actual instance, use that\r\n\t\t\tvar elementMap = From.ownedClasses || (From.ownedClasses = new WeakMap())\r\n\t\t\tvar instanceMap = {get: function () {\r\n\t\t\t\treturn Target\r\n\t\t\t}}\r\n\t\t\telementMap.set(Target.constructor, instanceMap)\r\n\t\t\treturn hasOwn(From, Target.Class, Target.createInstance)\r\n\t\t}\r\n\t\tif (Target instanceof Array) {\r\n\t\t\treturn Target.forEach(function(Target) {\r\n\t\t\t\thasOwn(From, Target)\r\n\t\t\t})\r\n\t\t}\r\n\t\tvar elementMap = From.ownedClasses || (From.ownedClasses = new WeakMap())\r\n\t\t// TODO: Go up through prototype chain of Target and set each one\r\n\t\tif (!elementMap.has(Target)) {\r\n\t\t\tvar instanceMap = new WeakMap()\r\n\t\t\tinstanceMap.createInstance = createInstance\r\n\t\t\telementMap.set(Target, instanceMap)\r\n\t\t}\r\n\t\treturn From\r\n\t}\r\n\r\n\tfunction getForClass(element, Target) {\r\n\t\tvar createInstance\r\n\t\twhile (element && !(createInstance = element.constructor.ownedClasses && element.constructor.ownedClasses.get(Target))) {\r\n\t\t\telement = element.parentNode || presumptiveParentMap.get(element)\r\n\t\t}\r\n\t\tif (createInstance) {\r\n\t\t\tvar ownedInstances = element.ownedInstances || (element.ownedInstances = new WeakMap())\r\n\t\t\tvar instance = ownedInstances.get(Target)\r\n\t\t\tif (instance === undefined) {\r\n\t\t\t\townedInstances.set(Target, instance = createInstance(element))\r\n\t\t\t\tinstance.subject = element\r\n\t\t\t}\r\n\t\t\treturn instance\r\n\t\t}\r\n\t}\r\n\r\n\tfunction propertyForElement(key) {\r\n\t\t// we just need to establish one Variable class for each element, so we cache it\r\n\t\tThisElementVariable = this._Variable\r\n\t\tif (!ThisElementVariable) {\r\n\t\t\t// need our own branded variable class for this element class\r\n\t\t\tThisElementVariable = this._Variable = Variable()\r\n\r\n\t\t\thasOwn(this, ThisElementVariable, function(element) {\r\n\t\t\t\t// TODO: we might want to do this in init instead\r\n\t\t\t\tvar elementOverlay\r\n\t\t\t\tif (element.alkaliRenderers) {\r\n\t\t\t\t\tvar variableProperties = {}\r\n\t\t\t\t\tfor (var i = 0; i < element.alkaliRenderers.length; i++){\r\n\t\t\t\t\t\tvar renderer = element.alkaliRenderers[i]\r\n\t\t\t\t\t\tif (renderer.name) {\r\n\t\t\t\t\t\t\tvariableProperties[renderer.name] = {value: renderer.variable}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telementOverlay = Object.create(element, variableProperties)\r\n\t\t\t\t} else {\r\n\t\t\t\t\telementOverlay = element\r\n\t\t\t\t}\r\n\t\t\t\tvar instance = new ThisElementVariable(elementOverlay)\r\n\t\t\t\t// we are not observing, because you can't delegate getters and setters in safari\r\n\t\t\t\t// instance.observeObject()\r\n\t\t\t\treturn instance\r\n\t\t\t})\r\n\t\t}\r\n\t\t// now actually get the property class\r\n\t\treturn ThisElementVariable.property(key)\r\n\t}\r\n\r\n\tvar Item = Element.Item = VariableExports.Item\r\n\r\n\tfunction enterRenderer(Renderer, options/*, target*/) {\r\n\t\t// this will be used for optimized class-level variables\r\n\t\t/*if (target.started) { // TODO: Might want to pass in started as a parameter\r\n\t\t\t// this means that the renderer has already been created, so we just need to add this instance\r\n\t\t\tRenderer.prototype.renderUpdate.call(options, element)\r\n\t\t} else {*/\r\n\t\tnew Renderer(options)\r\n\t\t//}\r\n\t}\r\n\r\n\tfunction cleanup(target) {\r\n\t\tvar renderers = target.alkaliRenderers\r\n\t\tif (renderers) {\r\n\t\t\tfor (var i = 0, l = renderers.length; i < l; i++) {\r\n\t\t\t\trenderers[i].stop()\r\n\t\t\t}\r\n\t\t\ttarget.needsRestart = true\r\n\t\t}\r\n\t}\r\n\tfunction restart(target) {\r\n\t\tvar renderers = target.alkaliRenderers\r\n\t\tif (renderers) {\r\n\t\t\tfor (var i = 0, l = renderers.length; i < l; i++) {\r\n//\t\t\t\tupdaters[i].start()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// setup the mutation observer so we can be notified of attachments and removals\r\n\tfunction elementAttached(element) {\r\n\t\tvar Class = element.constructor\r\n\t\tif (Class.create) {\r\n/*\t\t\tif (Class.attachedInstances) {\r\n\t\t\t\tClass.attachedInstances.push(element)\r\n\t\t\t\tif (Class.attachedInstances.length === 1 && Class.needsRestart) {\r\n\t\t\t\t\trestart(Class)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tClass.attachedInstances = [element]\r\n\t\t\t}*/\r\n\t\t\tif (element.attached) {\r\n\t\t\t\telement.attached()\r\n\t\t\t}\r\n\t\t\tif (element.needsRestart) {\r\n\t\t\t\trestart(element)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfunction elementDetached(element) {\r\n\t\t/*var attachedInstances = element.constructor.attachedInstances\r\n\t\tif (attachedInstances) {\r\n\t\t\tvar index = attachedInstances.indexOf(element)\r\n\t\t\tif (index > -1) {\r\n\t\t\t\tattachedInstances.splice(index, 1)\r\n\t\t\t\tif (attachedInstances.length === 0) {\r\n\t\t\t\t\tcleanup(Class)\r\n\t\t\t\t}\r\n\t\t\t}*/\r\n\t\t\tif (element.detached) {\r\n\t\t\t\telement.detached()\r\n\t\t\t}\r\n\t\t\tcleanup(element)\r\n\t\t//}\r\n\t}\r\n\tif (typeof MutationObserver === 'function') {\r\n\t\tvar lifeStates = [{\r\n\t\t\tname: 'detached',\r\n\t\t\tnodes: 'removedNodes',\r\n\t\t\taction: elementDetached\r\n\t\t}, {\r\n\t\t\tname: 'attached',\r\n\t\t\tnodes: 'addedNodes',\r\n\t\t\taction: elementAttached\r\n\t\t}]\r\n\t\tfunction firstVisit(node, state) {\r\n\t\t\tif (state.name === 'attached') {\r\n\t\t\t\tif (node.__alkaliAttached__) {\r\n\t\t\t\t\treturn false\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnode.__alkaliAttached__ = true\r\n\t\t\t\t\tstate.action(node)\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}\r\n\t\t\t} else if (node.__alkaliAttached__) {\r\n\t\t\t\tif (doc.body.contains(node)) {\r\n\t\t\t\t\t// detached event, but it is actually still attached (will get attached in a later mutation record)\r\n\t\t\t\t\t// so don't get through the detached/attached lifecycle\r\n\t\t\t\t\treturn false\r\n\t\t\t\t}\r\n\t\t\t\tnode.__alkaliAttached__ = false\r\n\t\t\t\tstate.action(node)\r\n\t\t\t}\r\n\t\t\treturn true\r\n\t\t}\r\n\t\tvar observer = new MutationObserver(function(mutations) {\r\n\t\t\tfor (var i = 0, il = mutations.length; i < il; i++) {\r\n\t\t\t\tvar mutation = mutations[i]\r\n\t\t\t\t// invoke action on element if we haven't already\r\n\t\t\t\tactionIteration:\r\n\t\t\t\tfor (var j = 0, jl = lifeStates.length; j < jl; j++) { // two steps, removed nodes and added nodes\r\n\t\t\t\t\tvar state = lifeStates[j]\r\n\t\t\t\t\tvar nodes = mutation[state.nodes]\r\n\t\t\t\t\t// iterate over node list\r\n\t\t\t\t\tnodeIteration:\r\n\t\t\t\t\tfor (var k = 0, kl = nodes.length; k < kl; k++) {\r\n\t\t\t\t\t\tvar baseNode = nodes[k]\r\n\t\t\t\t\t\tif (firstVisit(baseNode, state)) {\r\n\t\t\t\t\t\t\t// start traversal with child, if it exists\r\n\t\t\t\t\t\t\tvar currentNode = baseNode.firstChild\r\n\t\t\t\t\t\t\tif (currentNode) {\r\n\t\t\t\t\t\t\t\tdo {\r\n\t\t\t\t\t\t\t\t\tvar nextNode\r\n\t\t\t\t\t\t\t\t\tif (currentNode.nodeType === 1 && firstVisit(currentNode, state)) {\r\n\t\t\t\t\t\t\t\t\t\t// depth-first search\r\n\t\t\t\t\t\t\t\t\t\tnextNode = currentNode.firstChild\r\n\t\t\t\t\t\t\t\t\t\tif (!nextNode) {\r\n\t\t\t\t\t\t\t\t\t\t\tnextNode = currentNode.nextSibling\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tnextNode = currentNode.nextSibling\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif (!nextNode) {\r\n\t\t\t\t\t\t\t\t\t\t// come back out to parents\r\n\t\t\t\t\t\t\t\t\t\t// TODO: try keeping a stack to make this faster\r\n\t\t\t\t\t\t\t\t\t\tdo {\r\n\t\t\t\t\t\t\t\t\t\t\tcurrentNode = currentNode.parentNode\r\n\t\t\t\t\t\t\t\t\t\t\tif (currentNode === baseNode) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tcontinue nodeIteration\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t} while (!(nextNode = currentNode.nextSibling))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tcurrentNode = nextNode\r\n\t\t\t\t\t\t\t\t} while (true)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// if (options.moveLiveElementsEnabled) {\r\n\t\t\t\t\t\t// TODO: any options that we can really do here?\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\tobserver.observe(doc.body || doc, {\r\n\t\t\tchildList: true,\r\n\t\t\tsubtree: true\r\n\t\t})\r\n\t}\r\n\r\n\tlang.copy(VariableExports.Context.prototype, {\r\n\t\tspecify: function(Variable) {\r\n\t\t\tvar element = this.subject\r\n\t\t\tvar distinctive = true\r\n\t\t\t;(this.generics || (this.generics = [])).push(Variable)\r\n\t\t\tdo {\r\n\t\t\t\tif (this.distinctSubject === element) {\r\n\t\t\t\t\tdistinctive = false\r\n\t\t\t\t}\r\n\t\t\t\tvar subjectMap = element.constructor.ownedClasses\r\n\t\t\t\tif (subjectMap) {\r\n\t\t\t\t\tvar instanceMap = subjectMap.get(Variable)\r\n\t\t\t\t\tif (instanceMap) {\r\n\t\t\t\t\t\tif (distinctive) {\r\n\t\t\t\t\t\t\tthis.distinctSubject = element\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tspecifiedInstance = instanceMap.get(element)\r\n\t\t\t\t\t\tif (!specifiedInstance) {\r\n\t\t\t\t\t\t\tinstanceMap.set(element, specifiedInstance = instanceMap.createInstance ?\r\n\t\t\t\t\t\t\t\tinstanceMap.createInstance(element) : new Variable())\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn specifiedInstance\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} while ((element = element.parentNode || presumptiveParentMap.get(element)))\r\n\t\t\t// else if no specific context is found, return default instance\r\n\t\t\treturn Variable.defaultInstance\r\n\t\t},\r\n\r\n\t\tgetContextualized: function(variable) {\r\n\t\t\t// returns a variable that has already been contextualized\r\n\t\t\tvar element = this.subject\r\n\t\t\tif (!element) {\r\n\t\t\t\t// no element, just use the default variable\r\n\t\t\t\treturn variable\r\n\t\t\t}\r\n\t\t\tif (variable._contextMap) {\r\n\t\t\t\tdo {\r\n\t\t\t\t\tvar instance = variable._contextMap.get(element)\r\n\t\t\t\t\tif (instance && instance.context.matches(element)) {\r\n\t\t\t\t\t\treturn instance\r\n\t\t\t\t\t}\r\n\t\t\t\t} while ((element = element.parentNode || presumptiveParentMap.get(element)))\r\n\t\t\t}\r\n\t\t\tif (variable.context && variable.context.matches(this.subject)) {\r\n\t\t\t\t// check if the default variable is allowed\r\n\t\t\t\treturn variable\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tmerge: function(childContext) {\r\n\t\t\tif (!this.distinctSubject ||\r\n\t\t\t\t\t(this.distinctSubject !== childContext.distinctSubject && this.distinctSubject.contains(childContext.distinctSubject))) {\r\n\t\t\t\tthis.distinctSubject = childContext.distinctSubject\r\n\t\t\t}\r\n\t\t\t[].push.apply(this.generics || (this.generics = []), childContext.generics)\r\n\t\t},\r\n\t\tgetDistinctElement: function(Variable, element) {\r\n\t\t\tdo {\r\n\t\t\t\tvar subjectMap = element.constructor.ownedClasses\r\n\t\t\t\tif (subjectMap) {\r\n\t\t\t\t\tvar instanceMap = subjectMap.get(Variable)\r\n\t\t\t\t\tif (instanceMap && instanceMap.has(element)) {\r\n\t\t\t\t\t\treturn element\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} while ((element = element.parentNode || presumptiveParentMap.get(element)))\r\n\t\t},\r\n\t\tmatches: function(element) {\r\n\t\t\tvar generics = this.generics\r\n\t\t\tif (generics) {\r\n\t\t\t\tfor (var i = 0, l = generics.length; i < l; i++) {\r\n\t\t\t\t\tif (this.getDistinctElement(generics[i], element) !== this.distinctSubject) {\r\n\t\t\t\t\t\treturn false\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true\r\n\t\t}\r\n\t})\r\n\r\n\r\n\r\n\treturn Element\r\n}))\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Element.js\n ** module id = 1\n ** module chunks = 0\n **/","(function (root, factory) { if (typeof define === 'function' && define.amd) {\r\n\tdefine([], factory) } else if (typeof module === 'object' && module.exports) {\t\t\t\t\r\n\tmodule.exports = factory() // Node\r\n}}(this, function () {\r\n\tvar getPrototypeOf = Object.getPrototypeOf || (function(base) { return base.__proto__ })\r\n\tvar setPrototypeOf = Object.setPrototypeOf || (function(base, proto) { base.__proto__ = proto})\r\n\tvar hasFeatures = {\r\n\t\trequestAnimationFrame: typeof requestAnimationFrame != 'undefined',\r\n\t\tdefineProperty: Object.defineProperty && (function() {\r\n\t\t\ttry{\r\n\t\t\t\tObject.defineProperty({}, 't', {})\r\n\t\t\t\treturn true\r\n\t\t\t}catch(e) {\r\n\t\t\t}\r\n\t\t})(),\r\n\t\tpromise: typeof Promise !== 'undefined',\r\n\t\tMutationObserver: typeof MutationObserver !== 'undefined',\r\n\t\t'WeakMap': typeof WeakMap === 'function'\r\n\t}\r\n\tfunction has(feature) {\r\n\t\treturn hasFeatures[feature]\r\n\t}\r\n\r\n\tfunction SyncPromise(value) {\r\n\t\tthis.value = value\r\n\t}\r\n\tSyncPromise.prototype = {\r\n\t\tthen: function(onFulfilled, onRejected) {\r\n\t\t\tif (!onFulfilled) {\r\n\t\t\t\treturn new SyncPromise(this.value)\r\n\t\t\t}\r\n\t\t\ttry {\r\n\t\t\t\tvar result = onFulfilled(this.value)\r\n\t\t\t\treturn (result && result.then) ? result : new SyncPromise(result)\r\n\t\t\t} catch(error) {\r\n\t\t\t\treturn new SyncErrorPromise(error)\r\n\t\t\t}\r\n\t\t},\r\n\t\tcatch: function(handler) {\r\n\t\t\treturn this.then(null, handler)\r\n\t\t}\r\n\t}\r\n\tfunction SyncErrorPromise(error) {\r\n\t\tthis.value = error\r\n\t\tthis.unhandledTimeout = setTimeout(function() {\r\n\t\t\tconsole.error('Uncaught (in promise)', error)\r\n\t\t})\r\n\t}\r\n\tSyncErrorPromise.prototype = new SyncPromise()\r\n\tSyncErrorPromise.prototype.then = function(onFulfilled, onRejected) {\r\n\t\tclearTimeout(this.unhandledTimeout)\r\n\t\tif (!onRejected) {\r\n\t\t\treturn new SyncErrorPromise(this.value)\r\n\t\t}\r\n\t\treturn SyncPromise.prototype.then.call(this, onRejected)\r\n\t}\r\n\t// This is an polyfill for Object.observe with just enough functionality\r\n\t// for what Variables need\r\n\t// An observe function, with polyfile\r\n\tvar observe =\r\n\t\thas('defineProperty') ? \r\n\t\tfunction observe(target, listener) {\r\n\t\t\t/*for(var i in target) {\r\n\t\t\t\taddKey(i)\r\n\t\t\t}*/\r\n\t\t\tlistener.addKey = addKey\r\n\t\t\tlistener.remove = function() {\r\n\t\t\t\tlistener = null\r\n\t\t\t}\r\n\t\t\treturn listener\r\n\t\t\tfunction addKey(key) {\r\n\t\t\t\tvar keyFlag = 'key' + key\r\n\t\t\t\tif(this[keyFlag]) {\r\n\t\t\t\t\treturn\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis[keyFlag] = true\r\n\t\t\t\t}\r\n\t\t\t\tvar currentValue = target[key]\r\n\t\t\t\tvar targetAncestor = target\r\n\t\t\t\tvar descriptor\r\n\t\t\t\tdo {\r\n\t\t\t\t\tdescriptor = Object.getOwnPropertyDescriptor(targetAncestor, key)\r\n\t\t\t\t} while(!descriptor && (targetAncestor = getPrototypeOf(targetAncestor)))\r\n\r\n\t\t\t\tif(descriptor && descriptor.set) {\r\n\t\t\t\t\tvar previousSet = descriptor.set\r\n\t\t\t\t\tvar previousGet = descriptor.get\r\n\t\t\t\t\tObject.defineProperty(target, key, {\r\n\t\t\t\t\t\tget: function() {\r\n\t\t\t\t\t\t\treturn (currentValue = previousGet.call(this))\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tset: function(value) {\r\n\t\t\t\t\t\t\tpreviousSet.call(this, value)\r\n\t\t\t\t\t\t\tif(currentValue !== value) {\r\n\t\t\t\t\t\t\t\tcurrentValue = value\r\n\t\t\t\t\t\t\t\tif(listener) {\r\n\t\t\t\t\t\t\t\t\tlistener([{target: this, name: key}])\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tenumerable: descriptor.enumerable\r\n\t\t\t\t\t})\r\n\t\t\t\t}else{\r\n\t\t\t\t\tObject.defineProperty(target, key, {\r\n\t\t\t\t\t\tget: function() {\r\n\t\t\t\t\t\t\treturn currentValue\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tset: function(value) {\r\n\t\t\t\t\t\t\tif(currentValue !== value) {\r\n\t\t\t\t\t\t\t\tcurrentValue = value\r\n\t\t\t\t\t\t\t\tif(listener) {\r\n\t\t\t\t\t\t\t\t\tlistener([{target: this, name: key}])\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tenumerable: !descriptor || descriptor.enumerable\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} :\r\n\t\t// and finally a polling-based solution, for the really old browsers\r\n\t\tfunction(target, listener) {\r\n\t\t\tif(!timerStarted) {\r\n\t\t\t\ttimerStarted = true\r\n\t\t\t\tsetInterval(function() {\r\n\t\t\t\t\tfor(var i = 0, l = watchedObjects.length; i < l; i++) {\r\n\t\t\t\t\t\tdiff(watchedCopies[i], watchedObjects[i], listeners[i])\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 20)\r\n\t\t\t}\r\n\t\t\tvar copy = {}\r\n\t\t\tfor(var i in target) {\r\n\t\t\t\tif(target.hasOwnProperty(i)) {\r\n\t\t\t\t\tcopy[i] = target[i]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twatchedObjects.push(target)\r\n\t\t\twatchedCopies.push(copy)\r\n\t\t\tlisteners.push(listener)\r\n\t\t}\r\n\tvar queuedListeners\r\n\tfunction queue(listener, object, name) {\r\n\t\tif(queuedListeners) {\r\n\t\t\tif(queuedListeners.indexOf(listener) === -1) {\r\n\t\t\t\tqueuedListeners.push(listener)\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tqueuedListeners = [listener]\r\n\t\t\tlang.nextTurn(function() {\r\n\t\t\t\tqueuedListeners.forEach(function(listener) {\r\n\t\t\t\t\tvar events = []\r\n\t\t\t\t\tlistener.properties.forEach(function(property) {\r\n\t\t\t\t\t\tevents.push({target: listener.object, name: property})\r\n\t\t\t\t\t})\r\n\t\t\t\t\tlistener(events)\r\n\t\t\t\t\tlistener.object = null\r\n\t\t\t\t\tlistener.properties = null\r\n\t\t\t\t})\r\n\t\t\t\tqueuedListeners = null\r\n\t\t\t}, 0)\r\n\t\t}\r\n\t\tlistener.object = object\r\n\t\tvar properties = listener.properties || (listener.properties = [])\r\n\t\tif(properties.indexOf(name) === -1) {\r\n\t\t\tproperties.push(name)\r\n\t\t}\r\n\t}\r\n\tvar unobserve = has('observe') ? Object.unobserve :\r\n\t\tfunction(target, listener) {\r\n\t\t\tif(listener.remove) {\r\n\t\t\t\tlistener.remove()\r\n\t\t\t}\r\n\t\t\tfor(var i = 0, l = watchedObjects.length; i < l; i++) {\r\n\t\t\t\tif(watchedObjects[i] === target && listeners[i] === listener) {\r\n\t\t\t\t\twatchedObjects.splice(i, 1)\r\n\t\t\t\t\twatchedCopies.splice(i, 1)\r\n\t\t\t\t\tlisteners.splice(i, 1)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\tvar watchedObjects = []\r\n\tvar watchedCopies = []\r\n\tvar listeners = []\r\n\tvar timerStarted = false\r\n\tfunction diff(previous, current, callback) {\r\n\t\t// TODO: keep an array of properties for each watch for faster iteration\r\n\t\tvar queued\r\n\t\tfor(var i in previous) {\r\n\t\t\tif(previous.hasOwnProperty(i) && previous[i] !== current[i]) {\r\n\t\t\t\t// a property has changed\r\n\t\t\t\tprevious[i] = current[i]\r\n\t\t\t\t(queued || (queued = [])).push({name: i})\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(var i in current) {\r\n\t\t\tif(current.hasOwnProperty(i) && !previous.hasOwnProperty(i)) {\r\n\t\t\t\t// a property has been added\r\n\t\t\t\tprevious[i] = current[i]\r\n\t\t\t\t(queued || (queued = [])).push({name: i})\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(queued) {\r\n\t\t\tcallback(queued)\r\n\t\t}\r\n\t}\r\n\r\n\tvar id = 1\r\n\t// a function that returns a function, to stop JSON serialization of an\r\n\t// object\r\n\tfunction toJSONHidden() {\r\n\t\treturn toJSONHidden\r\n\t}\r\n\t// An object that will be hidden from JSON serialization\r\n\tvar Hidden = function () {\r\n\t}\r\n\tHidden.prototype.toJSON = toJSONHidden\r\n\r\n\tvar extendClass\r\n\ttry {\r\n\t\textendClass = eval('(function(Base){ return class extends Base {}})')\r\n\t} catch(e) {}\r\n\r\n\tvar lang = {\r\n\t\trequestAnimationFrame: has('requestAnimationFrame') ? requestAnimationFrame :\r\n\t\t\t(function() {\r\n\t\t\t\tvar toRender = []\r\n\t\t\t\tvar queued = false\r\n\t\t\t\tfunction processAnimationFrame() {\r\n\t\t\t\t\tfor (var i = 0; i < toRender.length; i++) {\r\n\t\t\t\t\t\ttoRender[i]()\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttoRender = []\r\n\t\t\t\t\tqueued = false\r\n\t\t\t\t}\r\n\t\t\t\tfunction requestAnimationFrame(renderer) {\r\n\t\t\t\t \tif (!queued) {\r\n\t\t\t\t\t\tsetTimeout(processAnimationFrame)\r\n\t\t\t\t\t\tqueued = true\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttoRender.push(renderer)\r\n\t\t\t\t}\r\n\t\t\t\treturn requestAnimationFrame\r\n\t\t\t})(),\r\n\t\tSyncPromise: SyncPromise,\r\n\t\tPromise: has('promise') ? Promise : (function() {\r\n\t\t\tfunction Promise(execute) {\r\n\t\t\t\tvar isResolved, resolution, errorResolution\r\n\t\t\t\tvar queue = 0\r\n\t\t\t\tfunction resolve(value) {\r\n\t\t\t\t\t// resolve function\r\n\t\t\t\t\tif(value && value.then) {\r\n\t\t\t\t\t\t// received a promise, wait for it\r\n\t\t\t\t\t\tvalue.then(resolve, reject)\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tresolution = value\r\n\t\t\t\t\t\tfinished()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfunction reject(error) {\r\n\t\t\t\t\t// reject function\r\n\t\t\t\t\terrorResolution = error\r\n\t\t\t\t\tfinished()\r\n\t\t\t\t}\r\n\t\t\t\texecute(resolve, reject)\r\n\t\t\t\tfunction finished() {\r\n\t\t\t\t\tisResolved = true\r\n\t\t\t\t\tfor(var i = 0, l = queue.length; i < l; i++) {\r\n\t\t\t\t\t\tqueue[i]()\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// clean out the memory\r\n\t\t\t\t\tqueue = 0\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\tthen: function(callback, errback) {\r\n\t\t\t\t\t\treturn new Promise(function(resolve, reject) {\r\n\t\t\t\t\t\t\tfunction handle() {\r\n\t\t\t\t\t\t\t\t// promise fulfilled, call the appropriate callback\r\n\t\t\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\t\t\tif(errorResolution && !errback) {\r\n\t\t\t\t\t\t\t\t\t\t// errors without a handler flow through\r\n\t\t\t\t\t\t\t\t\t\treject(errorResolution)\r\n\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\t// resolve to the callback's result\r\n\t\t\t\t\t\t\t\t\t\tresolve(errorResolution ?\r\n\t\t\t\t\t\t\t\t\t\t\terrback(errorResolution) :\r\n\t\t\t\t\t\t\t\t\t\t\tcallback ?\r\n\t\t\t\t\t\t\t\t\t\t\t\tcallback(resolution) : resolution)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}catch(newError) {\r\n\t\t\t\t\t\t\t\t\t// caught an error, reject the returned promise\r\n\t\t\t\t\t\t\t\t\treject(newError)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(isResolved) {\r\n\t\t\t\t\t\t\t\t// already resolved, immediately handle\r\n\t\t\t\t\t\t\t\thandle()\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t(queue || (queue = [])).push(handle)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn Promise\r\n\t\t}()),\r\n\r\n\t\tWeakMap: has('WeakMap') ? WeakMap :\r\n\t \tfunction (values, name) {\r\n\t \t\tvar mapProperty = '__' + (name || '') + id++\r\n\t \t\treturn has('defineProperty') ?\r\n\t \t\t{\r\n\t \t\t\tget: function (key) {\r\n\t \t\t\t\treturn key[mapProperty]\r\n\t \t\t\t},\r\n\t \t\t\tset: function (key, value) {\r\n\t \t\t\t\tObject.defineProperty(key, mapProperty, {\r\n\t \t\t\t\t\tvalue: value,\r\n\t \t\t\t\t\tenumerable: false\r\n\t \t\t\t\t})\r\n\t \t\t\t}\r\n\t \t\t} :\r\n\t \t\t{\r\n\t \t\t\tget: function (key) {\r\n\t \t\t\t\tvar intermediary = key[mapProperty]\r\n\t \t\t\t\treturn intermediary && intermediary.value\r\n\t \t\t\t},\r\n\t \t\t\tset: function (key, value) {\r\n\t \t\t\t\t// we use an intermediary that is hidden from JSON serialization, at least\r\n\t \t\t\t\tvar intermediary = key[mapProperty] || (key[mapProperty] = new Hidden())\r\n\t \t\t\t\tintermediary.value = value\r\n\t \t\t\t}\r\n\t \t\t}\r\n\t \t},\r\n\r\n\t\tobserve: observe,\r\n\t\tunobserve: unobserve,\r\n\t\textendClass: extendClass,\r\n\t\twhen: function(value, callback, errorHandler) {\r\n\t\t\treturn value && value.then ?\r\n\t\t\t\t(value.then(callback, errorHandler) || value) : callback(value)\r\n\t\t},\r\n\t\twhenAll: function(inputs, callback) {\r\n\t\t\tvar promiseInvolved\r\n\t\t\tvar readyInputs = []\r\n\t\t\tvar remaining = 1\r\n\t\t\tvar result\r\n\t\t\tvar lastPromiseResult\r\n\t\t\tfor(var i = 0, l = inputs.length; i < l; i++) {\r\n\t\t\t\tvar input = inputs[i]\r\n\t\t\t\tif(input && input.then) {\r\n\t\t\t\t\tremaining++\r\n\t\t\t\t\t(function(i, previousPromiseResult) {\r\n\t\t\t\t\t\tlastPromiseResult = input.then(function(value) {\r\n\t\t\t\t\t\t\treadyInputs[i] = value\r\n\t\t\t\t\t\t\tonEach()\r\n\t\t\t\t\t\t\tif(!remaining) {\r\n\t\t\t\t\t\t\t\treturn result\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\treturn previousPromiseResult\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})(i, lastPromiseResult)\r\n\t\t\t\t} else {\r\n\t\t\t\t\treadyInputs[i] = input\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tonEach()\r\n\t\t\tif (remaining > 0) {\r\n\t\t\t\treturn lastPromiseResult\r\n\t\t\t} else {\r\n\t\t\t\treturn result\r\n\t\t\t}\r\n\t\t\tfunction onEach() {\r\n\t\t\t\tremaining--\r\n\t\t\t\tif (!remaining) {\r\n\t\t\t\t\t result = callback(readyInputs)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcompose: function(Base, constructor, properties) {\r\n\t\t\tvar prototype = constructor.prototype = Object.create(Base.prototype)\r\n\t\t\tsetPrototypeOf(constructor, Base)\r\n\t\t\tfor(var i in properties) {\r\n\t\t\t\tprototype[i] = properties[i]\r\n\t\t\t}\r\n\t\t\tprototype.constructor = constructor\r\n\t\t\treturn constructor\r\n\t\t},\r\n\t\tnextTurn: has('MutationObserver') ?\r\n\t\t\tfunction (callback) {\r\n\t\t\t\t// promises don't resolve consistently on the next micro turn (Edge doesn't do it right),\r\n\t\t\t\t// so use mutation observer\r\n\t\t\t\t// TODO: make a faster mode that doesn't recreate each time\r\n\t\t\t\tvar div = document.createElement('div')\r\n\t\t\t\tvar observer = new MutationObserver(callback)\r\n\t\t\t\tobserver.observe(div, {\r\n\t\t\t\t\tattributes: true\r\n\t\t\t\t})\r\n\t\t\t\tdiv.setAttribute('a', id++)\r\n\t\t\t} :\r\n\t\t\tfunction (callback) {\r\n\t\t\t\t// TODO: we can do better for other, older browsers\r\n\t\t\t\tsetTimeout(callback, 0)\r\n\t\t\t},\r\n\t\tcopy: Object.assign || function(target, source) {\r\n\t\t\tfor(var i in source) {\r\n\t\t\t\ttarget[i] = source[i]\r\n\t\t\t}\r\n\t\t\treturn target\r\n\t\t},\r\n\t\tdeepCopy: function(source) {\r\n\t\t\tif (source && typeof source == 'object') {\r\n\t\t\t\tif (source instanceof Array) {\r\n\t\t\t\t\tvar target = [] // always create a new array for array targets\r\n\t\t\t\t\tfor(var i = 0, l = source.length; i < l; i++) {\r\n\t\t\t\t\t\ttarget[i] = lang.deepCopy(source[i])\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar target = {}\r\n\t\t\t\t\tfor (var i in source) {\r\n\t\t\t\t\t\ttarget[i] = lang.deepCopy(source[i])\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn target\r\n\t\t\t}\r\n\t\t\treturn source\r\n\t\t}\r\n\t}\r\n\tfunction isGenerator(func) {\r\n\t\tif (typeof func === 'function') {\r\n\t\t\tvar constructor = func.constructor\r\n\t\t\t// this is used to handle both native generators and transpiled generators\r\n\t\t\treturn (constructor.displayName || constructor.name) === 'GeneratorFunction'\r\n\t\t}\r\n\t}\r\n\tfunction isGeneratorIterator(iterator) {\r\n\t\tif (iterator && iterator.next) {\r\n\t\t\tvar constructor = iterator.constructor.constructor\r\n\t\t\treturn (constructor.displayName || constructor.name) === 'GeneratorFunction'\r\n\t\t}\r\n\t}\r\n\tlang.isGenerator = isGenerator\r\n\r\n\tfunction spawn(generator) {\r\n\t\tvar generatorIterator = typeof generator === 'function' ? generator() : generator\r\n\t\tvar resuming\r\n\t\tvar nextValue\r\n\t\tvar isThrowing\r\n\t\treturn next()\r\n\t\tfunction next() {\r\n\t\t\tdo {\r\n\t\t\t\tvar stepReturn = generatorIterator[isThrowing ? 'throw' : 'next'](nextValue)\r\n\t\t\t\tif (stepReturn.done) {\r\n\t\t\t\t\treturn stepReturn.value\r\n\t\t\t\t}\r\n\t\t\t\tnextValue = stepReturn.value\r\n\t\t\t\t// if the return value is a (generator) iterator, execute it\r\n\t\t\t\tif (nextValue && nextValue.next && isGeneratorIterator(nextValue)) {\r\n\t\t\t\t\tnextValue = spawn(nextValue)\r\n\t\t\t\t}\r\n\t\t\t\tif (nextValue && nextValue.then) {\r\n\t\t\t\t\t// if it is a promise, we will wait on it\r\n\t\t\t\t\t// and return the promise so that the next caller can wait on this\r\n\t\t\t\t\tvar resolved\r\n\t\t\t\t\tvar isSync = null\r\n\t\t\t\t\tvar result = nextValue.then(function(value) {\r\n\t\t\t\t\t\tnextValue = value\r\n\t\t\t\t\t\tif (isSync === false) {\r\n\t\t\t\t\t\t\treturn next()\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tisSync = true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, function(error) {\r\n\t\t\t\t\t\tnextValue = error\r\n\t\t\t\t\t\tisThrowing = true\r\n\t\t\t\t\t\treturn next()\r\n\t\t\t\t\t})\r\n\t\t\t\t\tif (!isSync) {\r\n\t\t\t\t\t\tisSync = false\r\n\t\t\t\t\t\treturn result\r\n\t\t\t\t\t} // else keeping looping to avoid recursion\r\n\t\t\t\t}\r\n\t\t\t\tisThrowing = false\r\n\t\t\t} while(true)\r\n\t\t}\r\n\t}\r\n\tlang.spawn = spawn\r\n\treturn lang\r\n}))\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./util/lang.js\n ** module id = 2\n ** module chunks = 0\n **/","(function (root, factory) { if (typeof define === 'function' && define.amd) {\r\n\tdefine(['./util/lang', './Variable'], factory) } else if (typeof module === 'object' && module.exports) {        \r\n  module.exports = factory(require('./util/lang'), require('./Variable')) // Node\r\n}}(this, function (lang, VariableExports) {\r\n\tvar doc = typeof document !== 'undefined' && document\r\n\tvar invalidatedElements\r\n\tvar queued\r\n\tvar toRender = []\r\n\tvar nextId = 1\r\n\tvar requestAnimationFrame = lang.requestAnimationFrame\r\n\tvar Context = VariableExports.Context\r\n\r\n\tfunction Renderer(options) {\r\n\t\tvar variable = options.variable\r\n\r\n\t\tthis.variable = variable\r\n\t\tif (options.selector) {\r\n\t\t\tthis.selector = options.selector\r\n\t\t}\r\n\t\tif (options.elements) {\r\n\t\t\tthis.elements = options.elements\r\n\t\t\tthis.element = this.elements[0]\r\n\t\t\tfor(var i = 0, l = this.elements.length; i < l; i++) {\r\n\t\t\t\t(this.elements[i].alkaliRenderers || (this.elements[i].alkaliRenderers = [])).push(this)\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (options.element) {\r\n\t\t\tvar element = this.element = options.element;\r\n\t\t\t(element.alkaliRenderers || (element.alkaliRenderers = [])).push(this)\r\n\t\t} else {\r\n\t\t\tthrow new Error('No element provided to Renderer')\r\n\t\t}\r\n\t\tif (options.update) {\r\n\t\t\tthis.updateRendering = options.update\r\n\t\t}\r\n\t\tif (options.shouldRender) {\r\n\t\t\tthis.shouldRender = options.shouldRender\r\n\t\t}\r\n\t\tif (options.renderUpdate) {\r\n\t\t\tthis.renderUpdate = options.renderUpdate\r\n\t\t}\r\n\t\tif (options.alwaysUpdate) {\r\n\t\t\tthis.alwaysUpdate = options.alwaysUpdate\r\n\t\t}\r\n\t\tif (!variable.updated) {\r\n\t\t\t// baconjs-esqe API\r\n\t\t\tvar renderer = this\r\n\t\t\tvariable.subscribe(function (event) {\r\n\t\t\t\t// replace the variable with an object\r\n\t\t\t\t// that returns the value from the event\r\n\t\t\t\trenderer.variable = {\r\n\t\t\t\t\tvalueOf: function () {\r\n\t\t\t\t\t\treturn event.value()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\trenderer.updated()\r\n\t\t\t})\r\n\t\t}\r\n\t\tif (options.updateOnStart === false){\r\n\t\t\tvar contextualized = this.contextualized || this.variable\r\n\t\t\tthis.variable.valueOf(this)\r\n\t\t\t// even if we don't render on start, we still need to compute the value so we can depend on the computed \r\n\t\t\t// TODO: we may need to handle recontextualization if it returns a promise\r\n\t\t\tcontextualized.notifies(this)\r\n\t\t} else {\r\n\t\t\tthis.updateRendering(true)\r\n\t\t}\r\n\t}\r\n\tRenderer.prototype = {\r\n\t\tconstructor: Renderer,\r\n\t\tversion: 0,\r\n\t\tnotifies: true,\r\n\t\tupdateRendering: function () {\r\n\t\t\tthrow new Error ('updateRendering must be implemented by sub class of Renderer')\r\n\t\t},\r\n\t\tupdated: function (updateEvent, by, context) {\r\n\t\t\tif (!this.invalidated) {\r\n\t\t\t\tif (!context || this.contextMatches(context)) {\r\n\t\t\t\t\t// do this only once, until we render again\r\n\t\t\t\t\tthis.invalidated = true\r\n\t\t\t\t\tif (this.deferredRender) {\r\n\t\t\t\t\t\tthis.deferredRender.isCanceled = true\r\n\t\t\t\t\t\tthis.deferredRender = null\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar renderer = this\r\n\t\t\t\t\trequestAnimationFrame(function(){\r\n\t\t\t\t\t\tinvalidatedElements = null\r\n\t\t\t\t\t\trenderer.updateRendering(renderer.alwaysUpdate)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\texecuteWithin: Context.prototype.executeWithin,\r\n\t\tsetVersion: function(){\r\n\t\t\t// this doesn't need its own version/hash\r\n\t\t},\r\n\t\tnewContext: function() {\r\n\t\t\treturn new Context(this.element, true)\r\n\t\t},\r\n\t\tintegrate: function(context, contextualized) {\r\n\t\t\tthis.addInput(contextualized)\r\n\t\t},\r\n\t\taddInput: function(contextualized) {\r\n\t\t\tif (this.variable !== contextualized) {\r\n\t\t\t\tthis.contextualized = contextualized\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetContextualized: function(Variable) {\r\n\t\t\treturn Context.prototype.getContextualized.call(this, Variable)\r\n\t\t\t//return this.contextualized || this.variable\r\n\t\t},\r\n\t\tspecify: function(Variable) {\r\n\t\t\treturn this.contextualized = Context.prototype.specify.call(this, Variable)\r\n\t\t\t// a new context to get this\r\n\t\t\tthis.contextualized = this.newContext(null, true).specify(Variable)\r\n\r\n\t\t},\r\n\t\tmerge: function(){\r\n\t\t\t// noop\r\n\t\t},\r\n\t\tcontextMatches: function(context) {\r\n\t\t\treturn true\r\n\t\t},\r\n\t\tinvalidateElement: function(element) {\r\n\t\t\tif(!invalidatedElements){\r\n\t\t\t\tinvalidatedElements = new WeakMap(null, 'invalidated')\r\n\t\t\t}\r\n\t\t\tvar invalidatedParts = invalidatedElements.get(element)\r\n\t\t\tinvalidatedElements.set(element, invalidatedParts = {})\r\n\t\t\tif (!invalidatedParts[id]) {\r\n\t\t\t\tinvalidatedParts[id] = true\r\n\t\t\t}\r\n\t\t\tif (!queued) {\r\n\t\t\t\tlang.queueTask(processQueue)\r\n\t\t\t\tqueued = true\r\n\t\t\t}\r\n\t\t\tvar renderer = this\r\n\t\t\ttoRender.push(function(){\r\n\t\t\t\trenderer.invalidated = false\r\n\t\t\t\trenderer.updateElement(element)\r\n\t\t\t})\r\n\t\t},\r\n\t\tgetId: function(){\r\n\t\t\treturn this.id || (this.id = nextId++)\r\n\t\t},\r\n\t\tstop: function() {\r\n\t\t\tvar contextualized = this.contextualized || this.variable\r\n\t\t\tcontextualized.stopNotifies(this)\r\n\t\t}\r\n\t}\r\n\tObject.defineProperty(Renderer.prototype, 'subject', {\r\n\t\tget: function() {\r\n\t\t\treturn this.element\r\n\t\t}\r\n\t})\r\n\r\n\tfunction ElementRenderer(options) {\r\n\t\tRenderer.call(this, options)\r\n\t}\r\n\tElementRenderer.prototype = Object.create(Renderer.prototype)\r\n\tElementRenderer.prototype.shouldRender = function (element) {\r\n\t\treturn document.body.contains(element)\r\n\t}\r\n\tElementRenderer.prototype.getSubject = function () {\r\n\t\treturn this.element\r\n\t}\r\n\tElementRenderer.prototype.updateRendering = function (always, element) {\r\n\t\tif (!element && this.elements) {\r\n\t\t\tvar elements = this.elements\r\n\t\t\tif(!elements.length){\r\n\t\t\t\tif(this.selector){\r\n\t\t\t\t\telements = document.querySelectorAll(this.selector)\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthrow new Error('No element or selector was provided to the Renderer')\r\n\t\t\t\t}\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tfor(var i = 0, l = elements.length; i < l; i++){\r\n\t\t\t\tthis.updateRendering(always, elements[i])\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar thisElement = element || this.element\r\n\r\n\t\t\tif(always || this.shouldRender(thisElement)){\r\n\t\t\t\t// it is connected\r\n\t\t\t\tthis.updateElement(thisElement)\r\n\t\t\t} else {\r\n\t\t\t\tvar id = this.getId()\r\n\t\t\t\tvar renderers = thisElement.renderersOnShow\r\n\t\t\t\tif(!renderers){\r\n\t\t\t\t\trenderers = thisElement.renderersOnShow = []\r\n\t\t\t\t\tthisElement.className += ' needs-rerendering'\r\n\t\t\t\t}\r\n\t\t\t\tif (!renderers[id]) {\r\n\t\t\t\t\trenderers[id] = this\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tElementRenderer.prototype.addElement = function (element) {\r\n\t\tif (this.selector) {\r\n\t\t\telement.renderersOnShow = [this]\r\n\t\t} else {\r\n\t\t\tthis.elements.push(element)\r\n\t\t}\r\n\t\t// and immediately do an update\r\n\t\tthis.updateElement(element)\r\n\t}\r\n\tElementRenderer.prototype.updateElement = function(element) {\r\n\t\tthis.invalidated = false\r\n\t\tif (this.omitValueOf) {\r\n\t\t\tthis.started = true\r\n\t\t\tthis.renderUpdate(undefined, element)\r\n\t\t\treturn\r\n\t\t}\r\n\t\tvar resolved\r\n\t\tvar renderer = this\r\n\t\tvar deferredRender = this.executeWithin(function() {\r\n\t\t\treturn renderer.variable.then()\r\n\t\t})\r\n\t\tdeferredRender.then(function(value) {\r\n\t\t\tresolved = true\r\n\t\t\tif (!deferredRender.isCanceled) {\r\n\t\t\t\tif (deferredRender === renderer.deferredRender) {\r\n\t\t\t\t\trenderer.deferredRender = null\r\n\t\t\t\t}\r\n\t\t\t\tif (renderer.contextualized && renderer.contextualized !== renderer.variable) {\r\n\t\t\t\t\trenderer.contextualized.stopNotifies(renderer)\r\n\t\t\t\t}\r\n\t\t\t\trenderer.executeWithin(function() {\r\n\t\t\t\t\trenderer.variable.notifies(renderer)\r\n\t\t\t\t})\r\n\t\t\t\tif(value !== undefined || renderer.started){\r\n\t\t\t\t\trenderer.started = true\r\n\t\t\t\t\trenderer.renderUpdate(value, element)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, function(error) {\r\n\t\t\tconsole.error('Error rendering', renderer, error)\r\n\t\t})\r\n\t\tif(!resolved){\r\n\t\t\t// start listening for changes immediately\r\n\t\t\tthis.executeWithin(function() {\r\n\t\t\t\trenderer.contextualized = renderer.variable.notifies(renderer)\r\n\t\t\t})\r\n\t\t\tthis.deferredRender = deferredRender\r\n\t\t\tif (this.renderLoading) {\r\n\t\t\t\t// if we have loading renderer call it\r\n\t\t\t\tthis.renderLoading(deferredRender, element)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tElementRenderer.prototype.renderUpdate = function (newValue, element) {\r\n\t\tthrow new Error('renderUpdate(newValue) must be implemented')\r\n\t}\r\n\tRenderer.Renderer = Renderer\r\n\tRenderer.ElementRenderer = ElementRenderer\r\n\r\n\tfunction AttributeRenderer(options) {\r\n\t\tif(options.name){\r\n\t\t\tthis.name = options.name\r\n\t\t}\r\n\t\tElementRenderer.apply(this, arguments)\r\n\t}\r\n\tAttributeRenderer.prototype = Object.create(ElementRenderer.prototype)\r\n\tAttributeRenderer.prototype.type = 'AttributeRenderer'\r\n\tAttributeRenderer.prototype.renderUpdate = function (newValue, element) {\r\n\t\tif (typeof newValue == 'boolean' || newValue == null) {\r\n\t\t\t// for booleans or null/undefined, treat the attribute boolean-like, setting and removing\r\n\t\t\tif (newValue) {\r\n\t\t\t\telement.setAttribute(this.name, '') // \"set\" the attribute to enabled\r\n\t\t\t} else {\r\n\t\t\t\telement.removeAttribute(this.name) // disable the attribute, removing it\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// otherwise, assign value as string\r\n\t\t\telement.setAttribute(this.name, newValue)\r\n\t\t}\r\n\t}\r\n\tRenderer.AttributeRenderer = AttributeRenderer\r\n\r\n\tfunction PropertyRenderer(options) {\r\n\t\tif (options.name) {\r\n\t\t\tthis.name = options.name\r\n\t\t}\r\n\t\tElementRenderer.apply(this, arguments)\r\n\t}\r\n\tPropertyRenderer.prototype = Object.create(ElementRenderer.prototype)\r\n\tPropertyRenderer.prototype.type = 'PropertyRenderer'\r\n\tPropertyRenderer.prototype.renderUpdate = function (newValue, element) {\r\n\t\telement[this.name] = newValue\r\n\t}\r\n\tRenderer.PropertyRenderer = PropertyRenderer\r\n\r\n\tfunction InputPropertyRenderer(options) {\r\n\t\tif (options.element && options.element.tagName === 'SELECT' && options.name === 'value') {\r\n\t\t\t// use the deferred value assignment for <select>\r\n\t\t\tthis.renderUpdate = this.renderSelectValueUpdate\r\n\t\t}\r\n\t\tPropertyRenderer.apply(this, arguments)\r\n\t}\r\n\tInputPropertyRenderer.prototype = Object.create(PropertyRenderer.prototype)\r\n\tInputPropertyRenderer.prototype.type = 'InputPropertyRenderer'\r\n\tInputPropertyRenderer.prototype.renderUpdate = function(newValue, element) {\r\n\t\tif (newValue == null || (element.type === 'number' && isNaN(newValue))) {\r\n\t\t\tnewValue = ''\r\n\t\t}\r\n\t\tvar oldValue = element[this.name]\r\n\t\tif (typeof oldValue === 'string' && typeof newValue !== 'string') {\r\n\t\t\tnewValue = newValue == null ? '' : String(newValue)\r\n\t\t}\r\n\t\tif (oldValue != newValue) {\r\n\t\t\telement[this.name] = newValue\r\n\t\t}\r\n\t}\r\n\tInputPropertyRenderer.prototype.renderSelectValueUpdate = function (newValue, element) {\r\n\t\telement.value = newValue\r\n\t\tif (element.value != newValue && !element.value) {\r\n\t\t\t// if we didn't successfully set the value of a <select>, we may need to wait until the children are constructed\r\n\t\t\telement.eventualValue = newValue\r\n\t\t\tlang.nextTurn(function() {\r\n\t\t\t\tif (element.eventualValue) {\r\n\t\t\t\t\telement.value = element.eventualValue\r\n\t\t\t\t\telement.eventualValue = undefined\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\telement.eventualValue = undefined\r\n\t\t}\r\n\t}\r\n\tRenderer.InputPropertyRenderer = InputPropertyRenderer\r\n\r\n\tfunction StyleRenderer(options) {\r\n\t\tif(options.name){\r\n\t\t\tthis.name = options.name\r\n\t\t}\r\n\t\tElementRenderer.apply(this, arguments)\r\n\t}\r\n\tStyleRenderer.prototype = Object.create(ElementRenderer.prototype)\r\n\tStyleRenderer.prototype.type = 'StyleRenderer'\r\n\tStyleRenderer.prototype.renderUpdate = function (newValue, element) {\r\n\t\telement.style[this.name] = newValue\r\n\t}\r\n\tRenderer.StyleRenderer = StyleRenderer\r\n\r\n\tfunction ContentRenderer(options) {\r\n\t\tElementRenderer.apply(this, arguments)\r\n\t}\r\n\tContentRenderer.prototype = Object.create(ElementRenderer.prototype)\r\n\tContentRenderer.prototype.type = 'ContentRenderer'\r\n\tContentRenderer.prototype.renderUpdate = function (newValue, element) {\r\n\t\telement.innerHTML = ''\r\n\t\tif (newValue === undefined){\r\n\t\t\tnewValue = ''\r\n\t\t}\r\n\t\telement.appendChild(document.createTextNode(newValue))\r\n\t}\r\n\tRenderer.ContentRenderer = ContentRenderer\r\n\r\n\tfunction TextRenderer(options) {\r\n\t\tthis.position = options.position\r\n\t\tthis.textNode = options.textNode\r\n\t\tElementRenderer.apply(this, arguments)\r\n\t}\r\n\tTextRenderer.prototype = Object.create(ElementRenderer.prototype)\r\n\tTextRenderer.prototype.type = 'TextRenderer'\r\n\tTextRenderer.prototype.updated = function (updateEvent, context) {\r\n\t\tif (this.builtList) {\r\n\t\t\tif (updateEvent.type === 'refresh') {\r\n\t\t\t\tthis.builtList = false\r\n\t\t\t\tthis.omitValueOf = false\r\n\t\t\t} else {\r\n\t\t\t\t(this.updates || (this.updates = [])).push(updateEvent)\r\n\t\t\t}\r\n\t\t}\r\n\t\tElementRenderer.prototype.updated.call(this, updateEvent, context)\r\n\t}\r\n\tTextRenderer.prototype.renderUpdate = function (newValue, element) {\r\n\t\tif (newValue == null){\r\n\t\t\tnewValue = ''\r\n\t\t}\r\n\t\tif (newValue.create) {\r\n\t\t\tnewValue = newValue.create({parent: element})\r\n\t\t}\r\n\t\tif (newValue.nodeType) {\r\n\t\t\tif (this.textNode && this.textNode.parentNode == element) {\r\n\t\t\t\t// text node is attached, we can replace it with the node\r\n\t\t\t\telement.replaceChild(newValue, this.textNode)\r\n\t\t\t} else {\r\n\t\t\t\telement.appendChild(newValue)\r\n\t\t\t}\r\n\t\t\tthis.textNode = newValue\r\n\t\t} else if (newValue instanceof Array) {\r\n\t\t\tthis.renderUpdate = ListRenderer.prototype.renderUpdate\r\n\t\t\tthis.omitValueOf = true\r\n\t\t\tthis.renderUpdate(newValue, element)\r\n\t\t} else {\r\n\t\t\t(this.textNode || element.childNodes[this.position]).nodeValue = newValue\r\n\t\t}\r\n\t}\r\n\tRenderer.TextRenderer = TextRenderer\r\n\r\n\tfunction ListRenderer(options) {\r\n\t\tif (options.each) {\r\n\t\t\tthis.each = options.each\r\n\t\t}\r\n\t\tElementRenderer.apply(this, arguments)\r\n\t}\r\n\tListRenderer.prototype = Object.create(ElementRenderer.prototype)\r\n\tListRenderer.prototype.updated = function (updateEvent, context) {\r\n\t\tif (this.builtList) {\r\n\t\t\tif (updateEvent.type === 'refresh') {\r\n\t\t\t\tthis.builtList = false\r\n\t\t\t\tthis.omitValueOf = false\r\n\t\t\t} else {\r\n\t\t\t\t(this.updates || (this.updates = [])).push(updateEvent)\r\n\t\t\t}\r\n\t\t}\r\n\t\tElementRenderer.prototype.updated.call(this, updateEvent, context)\r\n\t}\r\n\tListRenderer.prototype.type = 'ListRenderer'\r\n\tListRenderer.prototype.renderUpdate = function (newValue, element) {\r\n\t\tvar container\r\n\t\tvar each = this.each || function(item) { // TODO: make a single identity function\r\n\t\t\treturn item\r\n\t\t}\r\n\t\tvar thisElement = this.element\r\n\t\tvar renderer = this\r\n\t\tif (!this.builtList) {\r\n\t\t\tthis.builtList = true\r\n\t\t\tthis.omitValueOf = true\r\n\t\t\telement.innerHTML = ''\r\n\t\t\tvar childElements = this.childElements = []\r\n\t\t\tif (each.defineHasOwn) {\r\n\t\t\t\teach.defineHasOwn()\r\n\t\t\t}\r\n\t\t\tif (newValue) {\r\n\t\t\t\tnewValue.forEach(function(item) {\r\n\t\t\t\t\tchildElements.push(Renderer.append(thisElement, eachItem(item)))\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tvar contextualized = this.contextualized || this.variable\r\n\t\t\tcontextualized.notifies(this)\r\n\r\n\t\t\t// TODO: restore using a doc fragment to add these items:\r\n\t\t\t// thisElement.appendChild(container)\r\n\t\t} else {\r\n\t\t\tvar childElements = this.childElements\r\n\t\t\tvar updates = this.updates\r\n\t\t\tcontainer = thisElement\r\n\t\t\tupdates.forEach(function(update) {\r\n\t\t\t\tif (update.type === 'refresh') {\r\n\t\t\t\t\trenderer.builtList = false\r\n\t\t\t\t\tfor (var i = 0, l = childElements.length; i < l; i++) {\r\n\t\t\t\t\t\tthisElement.removeChild(childElements[i])\r\n\t\t\t\t\t}\r\n\t\t\t\t\trenderer.renderUpdate()\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (update.previousIndex > -1) {\r\n\t\t\t\t\t\tthisElement.removeChild(childElements[update.previousIndex])\r\n\t\t\t\t\t\tchildElements.splice(update.previousIndex, 1)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (update.index > -1) {\r\n\t\t\t\t\t\tvar nextChild = childElements[update.index]\r\n\t\t\t\t\t\tvar newElement = Renderer.append(thisElement, eachItem(update.value))\r\n\t\t\t\t\t\tif (nextChild) {\r\n\t\t\t\t\t\t\tthisElement.insertBefore(newElement, nextChild)\r\n\t\t\t\t\t\t\tchildElements.splice(update.index, 0, newElement)\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tchildElements.push(newElement)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tthis.updates = [] // clear the updates\r\n\t\t}\r\n\t\tfunction eachItem(item) {\r\n\t\t\tvar childElement\r\n\t\t\tif (each.create) {\r\n\t\t\t\tchildElement = each.create({parent: thisElement, _item: item}) // TODO: make a faster object here potentially\r\n\t\t\t} else {\r\n\t\t\t\tchildElement = each(item, thisElement)\r\n\t\t\t\tif (childElement.create) {\r\n\t\t\t\t\tchildElement = childElement.create({parent: thisElement, _item: item})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn childElement\r\n\t\t}\r\n\t}\r\n\tRenderer.ListRenderer = ListRenderer\r\n\r\n\tRenderer.onShowElement = function(shownElement){\r\n\t\trequestAnimationFrame(function(){\r\n\t\t\tinvalidatedElements = null\r\n\t\t\tvar elements = [].slice.call(shownElement.getElementsByClassName('needs-rerendering'))\r\n\t\t\tif (shownElement.className.indexOf('needs-rerendering') > 0){\r\n\t\t\t\tvar includingTop = [shownElement]\r\n\t\t\t\tincludingTop.push.apply(includingTop, elements)\r\n\t\t\t\telements = includingTop\r\n\t\t\t}\r\n\t\t\tfor (var i = 0, l = elements.length; i < l; i++){\r\n\t\t\t\tvar element = elements[i]\r\n\t\t\t\tvar renderers = element.renderersOnShow\r\n\t\t\t\tif(renderers){\r\n\t\t\t\t\telement.renderersOnShow = null\r\n\t\t\t\t\t// remove needs-rerendering class\r\n\t\t\t\t\telement.className = element.className.replace(/\\s?needs\\-rerendering\\s?/g, '')\r\n\t\t\t\t\tfor (var id in renderers) {\r\n\t\t\t\t\t\tvar renderer = renderers[id]\r\n\t\t\t\t\t\trenderer.updateElement(element)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tfunction onElementRemoval(element){\r\n\t\t// cleanup element renderers\r\n\t\tif(element.alkaliRenderers){\r\n\t\t\tvar renderers = element.alkaliRenderers\r\n\t\t\tfor(var i = 0; i < renderers.length; i++){\r\n\t\t\t\tvar renderer = renderers[i]\r\n\t\t\t\trenderer.variable.stopNotifies(renderer)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tRenderer.onElementRemoval = function(element, onlyChildren){\r\n\t\tif(!onlyChildren){\r\n\t\t\tonElementRemoval(element)\r\n\t\t}\r\n\t\tvar children = element.getElementsByTagName('*')\r\n\t\tfor(var i = 0, l = children.length; i < l; i++){\r\n\t\t\tvar child = children[i]\r\n\t\t\tif(child.alkaliRenderers){\r\n\t\t\t\tonElementRemoval(child)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn Renderer\r\n}))\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Renderer.js\n ** module id = 3\n ** module chunks = 0\n **/","(function (root, factory) { if (typeof define === 'function' && define.amd) {\r\n\tdefine(['./util/lang'], factory) } else if (typeof module === 'object' && module.exports) {\t\t\t\t\r\n\tmodule.exports = factory(require('./util/lang')) // Node\r\n}}(this, function (lang) {\r\n\tvar deny = {}\r\n\tvar noChange = {}\r\n\tvar context\r\n\tvar WeakMap = lang.WeakMap\r\n\tvar setPrototypeOf = Object.setPrototypeOf || (function(base, proto) { base.__proto__ = proto})\r\n\tvar getPrototypeOf = Object.getPrototypeOf || (function(base) { return base.__proto__ })\r\n\tvar isGenerator = lang.isGenerator\r\n\tvar undefined // makes it faster to be locally scoped\r\n\t// update types\r\n\tvar RequestChange = 3\r\n\tvar RequestSet = 4\r\n\tvar NOT_MODIFIED = {}\r\n\r\n\tvar propertyListenersMap = new WeakMap(null, 'propertyListenersMap')\r\n\tvar isStructureChecked = new WeakMap()\r\n\tvar nextVersion = Date.now()\r\n\r\n\tvar CacheEntry = lang.compose(WeakMap, function() {\r\n\t},{\r\n\t\t_propertyChange: function(propertyName) {\r\n\t\t\tthis.variable._propertyChange(propertyName, contextFromCache(this))\r\n\t\t}\r\n\t})\r\n\tvar listenerId = 1\r\n\r\n\tfunction when(value, callback, errback) {\r\n\t\tif (value && value.then) {\r\n\t\t\treturn value.then(callback, errback)\r\n\t\t}\r\n\t\treturn callback(value)\r\n\t}\r\n\tfunction whenStrict(value, callback) {\r\n\t\tif (value && value.then && !value.notifies) {\r\n\t\t\treturn value.then(callback)\r\n\t\t}\r\n\t\treturn callback(value)\r\n\t}\r\n\r\n\tfunction Context(subject, notifies){\r\n\t\tthis.subject = subject\r\n\t\tif (notifies) {\r\n\t\t\tthis.notifies = notifies\r\n\t\t}\r\n\t\tthis.sources = []\r\n\t}\r\n\tContext.prototype = {\r\n\t\tconstructor: Context,\r\n\t\tnewContext: function(variable) {\r\n\t\t\treturn new Context(this.subject, this.notifies)\r\n\t\t},\r\n\t\texecuteWithin: function(executor) {\r\n\t\t\tvar previousContext = context\r\n\t\t\ttry {\r\n\t\t\t\tcontext = this\r\n\t\t\t\treturn executor()\r\n\t\t\t} finally {\r\n\t\t\t\tcontext = previousContext\r\n\t\t\t}\r\n\t\t},\r\n\t\t//version: 2166136261, // FNV-1a prime seed\r\n\t\tversion: 0,\r\n\t\trestart: function() {\r\n\t\t\t//this.version = 2166136261\r\n\t\t},\r\n\t\tcontextualize: function(variable, parentContext) {\r\n\t\t\t// resolve the contextualization of a variable, and updates this context to be aware of what distinctive aspect of the context has\r\n\t\t\t// been used for resolution\r\n\t\t\tvar contextualized\r\n\t\t\tif (this.distinctSubject) {\r\n\t\t\t\tvar contextMap = variable._contextMap || (variable._contextMap = new WeakMap())\r\n\t\t\t\tcontextualized = contextMap.get(this.distinctSubject)\r\n\t\t\t\tif (!contextualized) {\r\n\t\t\t\t\tcontextMap.set(this.distinctSubject, contextualized = Object.create(variable))\r\n\t\t\t\t\tcontextualized.listeners = false\r\n\t\t\t\t\tcontextualized.context = this\r\n\t\t\t\t\tvar sources = this.sources\r\n\t\t\t\t\tfor (var i = 0, l = sources.length; i < l; i++) {\r\n\t\t\t\t\t\tcontextualized[sources[i]] = sources[++i]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.contextualized = contextualized\r\n\t\t\t\t// do the merge\r\n\t\t\t\tif (parentContext) {\r\n\t\t\t\t\tparentContext.merge(this)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tcontextualized = variable\r\n\t\t\t}\r\n\t\t\t//if (this.contextualized && this.contextualized !== contextualized) {\r\n\t\t\t\t// TOOD: if it has previously been contextualized to a different context (can happen in a promise/async situation), stop previous notifiers and start new ones\r\n\t\t\t//}\r\n\t\t\treturn contextualized\r\n\t\t},\r\n\t\tsetVersion: function(version) {\r\n/*\t\t\t// FNV1a hash algorithm 32-bit\r\n\t\t\treturn this.version = (this.version ^ (version || 0)) * 16777619 >>> 0*/\r\n\r\n/*\t\t\t// 54 bit FNV1a hash algorithm\r\n\t\t\tvar xored = this.version ^ (version || 0)\r\n\t\t\t// 435 + 1099511627776 = 1099511628211 is 64 bit FNV prime\r\n\t\t\treturn this.version =\r\n\t\t\t\txored * 435 + // compute hash on lower 32 bits\r\n\t\t\t\t(xor & 16777215) * 1099511627776 + // compute hash on lower 24 bits that overflow into upper 32 bits\r\n\t\t\t\t((this.version / 4294967296 >>> 0) * 435 & 2097151) * 4294967296 // hash on upper 32 bits*/\r\n\t\t\t// 54 bit derivative of FNV1a that better uses JS numbers/operators\r\n\t\t\t\r\n\t\t\t// a fast, efficient hash\r\n\t\t\t//return this.version = (this.version ^ (version || 0)) * 1049011 + (this.version / 5555555 >>> 0)\r\n\t\t\t// if we are using globally monotonically increasing version, we can just use max\r\n\t\t\tif (isNaN(version)) {\r\n\t\t\t\tthrow new Error('Bad version')\r\n\t\t\t}\r\n\t\t\treturn this.version = Math.max(this.version, version)\r\n\t\t},\r\n\t\tmerge: function(childContext) {\r\n\t\t\tif (!this.distinctSubject) {\r\n\t\t\t\tthis.distinctSubject = childContext.distinctSubject\r\n\t\t\t}\r\n\t\t},\r\n\t\tspecify: function(Variable) {\r\n\t\t\t// specify a particular instance of a generic variable\r\n\t\t\tvar subject = this.subject\r\n\t\t\tvar subjectMap = subject.constructor.ownedClasses\r\n\t\t\tvar specifiedInstance\r\n\t\t\tif (subjectMap) {\r\n\t\t\t\tif (!this.distinctSubject) {\r\n\t\t\t\t\tthis.distinctSubject = subject\r\n\t\t\t\t}\r\n\t\t\t\tvar instanceMap = subjectMap.get(Variable)\r\n\t\t\t\tif (instanceMap) {\r\n\t\t\t\t\tspecifiedInstance = instanceMap.get(subject)\r\n\t\t\t\t\tif (!specifiedInstance) {\r\n\t\t\t\t\t\tinstanceMap.set(subject, specifiedInstance = instanceMap.createInstance ? instanceMap.createInstance(subject) : new Variable())\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn specifiedInstance\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// else if no specific context is found, return default instance\r\n\t\t\treturn Variable.defaultInstance\r\n\t\t},\r\n\t\tgetContextualized: function(variable) {\r\n\t\t\tif (!this.subject) {\r\n\t\t\t\t// no subject, just use the default variable\r\n\t\t\t\treturn variable\r\n\t\t\t}\r\n\t\t\t// returns a variable that has already been contextualized\r\n\t\t\tvar instance = variable._contextMap && this.subject && variable._contextMap.get(this.subject)\r\n\t\t\tif (instance && instance.context && instance.context.matches(this)) {\r\n\t\t\t\treturn instance\r\n\t\t\t}\r\n\t\t},\r\n\t\tmatches: function(context) {\r\n\t\t\t// does another context match the resolution of this one?\r\n\t\t\treturn context.subject === this.subject\r\n\t\t}\r\n\t}\r\n\r\n\tfunction NotifyingContext(listener, subject){\r\n\t\tthis.subject = subject\r\n\t\tthis.listener = listener\r\n\t}\r\n\tNotifyingContext.prototype = Object.create(Context.prototype)\r\n\tNotifyingContext.prototype.constructor = NotifyingContext\r\n\tNotifyingContext.prototype.addInput = function(contextualized) {\r\n\t\tcontextualized.notifies(this.listener)\r\n\t}\r\n\r\n\tvar whenAll = lang.whenAll\r\n\r\n\tfunction registerListener(value, listener) {\r\n\t\tvar listeners = propertyListenersMap.get(value)\r\n\t\tvar id = listener.listenerId || (listener.listenerId = ('-' + listenerId++))\r\n\t\tif (listeners) {\r\n\t\t\tif (listeners[id] === undefined) {\r\n\t\t\t\tlisteners[id] = listeners.push(listener) - 1\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tpropertyListenersMap.set(value, listeners = [listener])\r\n\t\t\tlisteners[id] = 0\r\n\t\t\tif (Variable.autoObserveObjects) {\r\n\t\t\t\tobserve(value)\r\n\t\t\t}\r\n\t\t}\r\n\t\tlistener.listeningToObject = value\r\n\t}\r\n\tfunction deregisterListener(listener) {\r\n\t\tif (listener.listeningToObject) {\r\n\t\t\tvar value = listener.listeningToObject\r\n\t\t\tlistener.listeningToObject = null\r\n\t\t\tvar listeners = propertyListenersMap.get(value)\r\n\t\t\tif (listeners) {\r\n\t\t\t\tvar index = listeners[listener.listenerId]\r\n\t\t\t\tif (index > -1) {\r\n\t\t\t\t\tlisteners.splice(index, 1)\r\n\t\t\t\t\tdelete listeners[listener.listenerId]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction RefreshEvent() {\r\n\t\tthis.visited = new Set()\r\n\t}\r\n\tRefreshEvent.prototype.type = 'refresh'\r\n\r\n\tfunction PropertyChangeEvent(key, childEvent, parent) {\r\n\t\tthis.key = key\r\n\t\tthis.childEvent = childEvent\r\n\t\tthis.parent = parent\r\n\t\tthis.visited = childEvent.visited\r\n\t}\r\n\tPropertyChangeEvent.prototype.type = 'update'\r\n\r\n\tfunction AddEvent(args) {\r\n\t\tthis.visited = new Set()\r\n\t\tfor (var key in args) {\r\n\t\t\tthis[key] = args[key]\r\n\t\t}\r\n\t}\r\n\tAddEvent.prototype.type = 'add'\r\n\tfunction DeleteEvent(args) {\r\n\t\tthis.visited = new Set()\r\n\t\tfor (var key in args) {\r\n\t\t\tthis[key] = args[key]\r\n\t\t}\r\n\t}\r\n\tDeleteEvent.prototype.type = 'delete'\r\n\r\n\tfunction forPropertyNotifyingValues(variable, properties, callback) {\r\n\t\tif (variable === properties) {\r\n\t\t\tforPropertyNotifyingValues(variable, variable._properties, callback)\r\n\t\t}\r\n\t\tfor (var key in properties) {\r\n\t\t\tvar property = properties[key]\r\n\t\t\tif (property && property.parent == variable) {\r\n\t\t\t\tif (property.returnedVariable) {\r\n\t\t\t\t\tcallback(property.returnedVariable)\r\n\t\t\t\t}\r\n\t\t\t\tif (property.hasChildNotifiers) {\r\n\t\t\t\t\tvar subProperties = property._properties\r\n\t\t\t\t\tif (subProperties) {\r\n\t\t\t\t\t\tforPropertyNotifyingValues(property, property, callback)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction assignPromise(variable, promise, callback) {\r\n\t\tvar isSync\r\n\t\tpromise.then(function(value) {\r\n\t\t\tif (isSync !== false) {\r\n\t\t\t\t// synchronous resolution\r\n\t\t\t\tisSync = true\r\n\t\t\t} else if (variable.promise === promise) {\r\n\t\t\t\t// async resolution make sure we are the still the most recent promise\r\n\t\t\t\tvariable.promise = null\r\n\t\t\t} else {\r\n\t\t\t\t// if async and we are not the most recent, just return\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tif (callback) { // custom handler\r\n\t\t\t\tcallback(value) \r\n\t\t\t} else {\r\n\t\t\t\tvariable.value = value\r\n\t\t\t}\r\n\t\t}, function(error) {\r\n\t\t\tif (isSync !== false) {\r\n\t\t\t\t// synchronous resolution\r\n\t\t\t\tisSync = true\r\n\t\t\t} else if (variable.promise === promise) {\r\n\t\t\t\t// async resolution make sure we are the still the most recent promise\r\n\t\t\t\tvariable.promise = null\r\n\t\t\t} else {\r\n\t\t\t\t// if async and we are not the most recent, just return\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tvariable.error = error\r\n\t\t})\r\n\t\tif (!isSync) {\r\n\t\t\tisSync = false\r\n\t\t\tvariable.promise = promise\r\n\t\t}\r\n\t\treturn promise\r\n\t}\r\n\r\n\tfunction Variable(value) {\r\n\t\tif (this instanceof Variable) {\r\n\t\t\t// new call, may eventually use new.target\r\n\t\t\tif (value !== undefined) {\r\n\t\t\t\tif (value && value.then && !value.notifies) {\r\n\t\t\t\t\tassignPromise(this, value)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.value = value\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn Variable.with(value)\r\n\t\t}\r\n\t}\r\n\r\n\tVariable._logStackTrace = function(v) {\r\n\t\tvar stack = (new Error().stack || '').split(/[\\r\\n]+/)\r\n\t\tif (stack[0] && /^Error\\s*/.test(stack[0])) stack.shift()\r\n\t\tif (stack[0] && /_logStackTrace/.test(stack[0])) stack.shift()\r\n\t\tvar coalesce = (this._debugOpts && this._debugOpts.coalesce) || []\r\n\t\tif (this._debugOpts && this._debugOpts.shortStackTrace) {\r\n\t\t\t// find the first non-coalesced line\r\n\t\t\tvar line\r\n\t\t\tstack.some(function(line) {\r\n\t\t\t\tif (!coalesce.some(function(re) {\r\n\t\t\t\t\treturn re.re.test(line)\r\n\t\t\t\t})) {\r\n\t\t\t\t\tline = stack[0]\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tconsole.log('Variable ' + v.__debug + ' changed', line && line.replace(/^\\s+/, ''))\r\n\t\t} else {\r\n\t\t\tif (coalesce.length) {\r\n\t\t\t\tvar s = []\r\n\t\t\t\tvar re\r\n\t\t\t\tfor (var i = 0; i < stack.length; i++) {\r\n\t\t\t\t\tvar line = stack[i]\r\n\t\t\t\t\tif (re) {\r\n\t\t\t\t\t\tif (re.test(line)) continue\r\n\t\t\t\t\t\tre = null\r\n\t\t\t\t\t}\r\n\t\t\t\t\tre\r\n\t\t\t\t\tcoalesce.some(function(re) {\r\n\t\t\t\t\t\treturn re = re.re.test(line)\r\n\t\t\t\t\t})\r\n\t\t\t\t\tline = line.replace(/^\\s+/,'')\r\n\t\t\t\t\tif (re) {\r\n\t\t\t\t\t\ts.push('(' + re.name + ') ' + line)\r\n\t\t\t\t\t\tre = re.re\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ts.push(line)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tstack = s\r\n\t\t\t}\r\n\t\t\tvar stackObject = this._debugOpts && this._debugOpts.stackObject\r\n\t\t\tif (stackObject) {\r\n\t\t\t\tconsole.log('Variable ' + v.__debug + ' changed', stack)\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('Variable ' + v.__debug + ' changed\\r\\n' + stack.join('\\r\\n'))\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tVariable._debugOpts = {\r\n\t\tcoalesce: [{ name: 'alkali', re: /\\/alkali\\// }, { name: 'Promise', re: /(Promise\\.)|(PromiseArray\\.)|(\\/bluebird\\/)/ }],\r\n\t\tstackObject: false\r\n\t}\r\n\r\n\tvar VariablePrototype = Variable.prototype = {\r\n\t\t// for debugging use\r\n\t\tget _currentValue() {\r\n\t\t\treturn this.valueOf()\r\n\t\t},\r\n\t\tset _currentValue(value) {\r\n\t\t\tthis.put(value)\r\n\t\t},\r\n\t\tconstructor: Variable,\r\n\t\tvalueOf: function() {\r\n\t\t\treturn this.gotValue(true, this.getValue(true))\r\n\t\t},\r\n\t\tthen: function(onFulfilled, onRejected) {\r\n\t\t\tvar result = this.gotValue(false, this.getValue())\r\n\t\t\tif (!result || !result.then) {\r\n\t\t\t\tresult = new lang.SyncPromise(result) // ensure it is promise-like\r\n\t\t\t}\r\n\t\t\tif (onFulfilled || onRejected) { // call then if we have any callbacks\r\n\t\t\t\treturn result.then(onFulfilled, onRejected)\r\n\t\t\t}\r\n\t\t\treturn result\r\n\t\t},\r\n\t\tgetValue: function(sync, forModification, forChild) {\r\n\t\t\tif (context) {\r\n\t\t\t\tcontext.setVersion(forChild ? this.version : Math.max(this.version || 0, this.versionWithChildren || 0))\r\n\t\t\t}\r\n\t\t\tif (this.key != null) {\r\n\t\t\t\tif (context) {\r\n\t\t\t\t\tif (context.ifModifiedSince != null) {\r\n\t\t\t\t\t\t// just too complicated to handle NOT_MODIFED objects for now\r\n\t\t\t\t\t\t// TODO: Maybe handle this and delegate NOT_MODIFIED through this\r\n\t\t\t\t\t\t// chain and through gotValue\r\n\t\t\t\t\t\tcontext.ifModifiedSince = undefined \r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tvar key = this.key\r\n\t\t\t\tvar property = this\r\n\t\t\t\tvar parent = this.parent\r\n\t\t\t\tvar object\r\n\t\t\t\tif (parent.getValue) {\r\n\t\t\t\t\t// parent needs value context, might want to do separate context,\r\n\t\t\t\t\t// but would need to treat special so it retrieves the version\r\n\t\t\t\t\t// only and not the versionWithChildren\r\n\t\t\t\t\tobject = parent.getValue(sync, forModification, true)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tobject = parent.value\r\n\t\t\t\t}\r\n\t\t\t\tif (!sync && object && object.then && !object.notifies) {\r\n\t\t\t\t\treturn when(object, function(object) {\r\n\t\t\t\t\t\tvar value = object == null ? undefined :\r\n\t\t\t\t\t\t\ttypeof object.property === 'function' ? object.property(key) :\r\n\t\t\t\t\t\t\ttypeof object.get === 'function' ? object.get(key) : object[key]\r\n\t\t\t\t\t\t//if (property.listeners) {\r\n\t\t\t\t\t\t\tvar listeners = propertyListenersMap.get(object)\r\n\t\t\t\t\t\t\tif (listeners && listeners.observer && listeners.observer.addKey) {\r\n\t\t\t\t\t\t\t\tlisteners.observer.addKey(key)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//}\r\n\t\t\t\t\t\treturn value\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tvar value = object == null ? undefined :\r\n\t\t\t\t\ttypeof object.property === 'function' ? object.property(key) :\r\n\t\t\t\t\ttypeof object.get === 'function' ? object.get(key) : object[key]\r\n\t\t\t\t//if (property.listeners) {\r\n\t\t\t\t\tvar listeners = propertyListenersMap.get(object)\r\n\t\t\t\t\tif (listeners && listeners.observer && listeners.observer.addKey) {\r\n\t\t\t\t\t\tlisteners.observer.addKey(key)\r\n\t\t\t\t\t}\r\n\t\t\t\t//}\r\n\t\t\t\treturn value\r\n\t\t\t}\r\n\t\t\tif (this.promise) {\r\n\t\t\t\tif (sync) {\r\n\t\t\t\t\tif (context) {\r\n\t\t\t\t\t\tcontext.notResolvedYet = true\r\n\t\t\t\t\t}\r\n\t\t\t\t} else { // async mode, we are fine with waiting\r\n\t\t\t\t\treturn this.promise\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar value = this.value\r\n\t\t\treturn value !== undefined ?\r\n\t\t\t\tthis.value :\r\n\t\t\t\tforModification ? (this.value = lang.deepCopy(this.default && this.default.valueOf())) : this.default\r\n\t\t},\r\n\t\tgotValue: function(sync, value) {\r\n\t\t\tvar previousNotifyingValue = this.returnedVariable\r\n\t\t\tvar variable = this\r\n\t\t\tif (previousNotifyingValue) {\r\n\t\t\t\tif (value === previousNotifyingValue) {\r\n\t\t\t\t\t// nothing changed, immediately return valueOf\r\n\t\t\t\t\treturn sync ? value.valueOf() : value.then()\r\n\t\t\t\t}\r\n\t\t\t\t// if there was a another value that we were dependent on before, stop listening to it\r\n\t\t\t\t// TODO: we may want to consider doing cleanup after the next rendering turn\r\n\t\t\t\tif (variable.listeners) {\r\n\t\t\t\t\tpreviousNotifyingValue.stopNotifies(variable)\r\n\t\t\t\t}\r\n\t\t\t\tvariable.returnedVariable = null\r\n\t\t\t}\r\n\t\t\tif (value && value.notifies) {\r\n\t\t\t\tvariable.returnedVariable = value\r\n\t\t\t\tif (variable.listeners) {\r\n\t\t\t\t\tvalue.notifies(variable)\r\n\t\t\t\t}\r\n\t\t\t\tif (sync) {\r\n\t\t\t\t\tvalue = value.valueOf()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!sync && value && value.then) {\r\n\t\t\t\tvar deferredContext = context\r\n\t\t\t\treturn value.then(function(value) {\r\n\t\t\t\t\tif (value && value.subscribe) {\r\n\t\t\t\t\t\tif (deferredContext) {\r\n\t\t\t\t\t\t\treturn deferredContext.executeWithin(function() {\r\n\t\t\t\t\t\t\t\treturn Variable.prototype.gotValue.call(variable, sync, value)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn Variable.prototype.gotValue.call(variable, sync, value)\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn value\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\treturn value\r\n\t\t},\r\n\t\tPropertyClass: Variable,\r\n\t\tproperty: function(key, PropertyClass) {\r\n\t\t\tvar propertyVariable = this[key]\r\n\t\t\tif (!propertyVariable || !propertyVariable.notifies) {\r\n\t\t\t\tpropertyVariable = this._properties && this._properties[key]\r\n\t\t\t}\r\n\t\t\tif (!propertyVariable) {\r\n\t\t\t\t// create the property variable\r\n\t\t\t\tvar Class = PropertyClass\r\n\t\t\t\tif (!Class) {\r\n\t\t\t\t\tClass = this.constructor[key]\r\n\t\t\t\t\tif (typeof Class !== 'function' || !Class.isPropertyClass) {\r\n\t\t\t\t\t\tClass = this.PropertyClass\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tpropertyVariable = new Class()\r\n\t\t\t\tpropertyVariable.key = key\r\n\t\t\t\tpropertyVariable.parent = this\r\n\t\t\t\tif (this[key] === undefined) {\r\n\t\t\t\t\tthis[key] = propertyVariable\r\n\t\t\t\t} else {\r\n\t\t\t\t\t(this._properties || (this._properties = {}))[key] = propertyVariable\r\n\t\t\t\t}\r\n\t\t\t} else if (PropertyClass) {\r\n\t\t\t\tif (!(propertyVariable instanceof PropertyClass)) {\r\n\t\t\t\t\tthrow new TypeError('Existing property variable does not match requested variable type')\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn propertyVariable\r\n\t\t},\r\n\t\tfor: function(subject) {\r\n\t\t\tif (subject && subject.target && !subject.constructor.getForClass) {\r\n\t\t\t\t// makes HTML events work\r\n\t\t\t\tsubject = subject.target\r\n\t\t\t}\r\n\t\t\tif (this.parent) {\r\n\t\t\t\treturn this.parent.for(subject).property(this.key)\r\n\t\t\t}\r\n\t\t\treturn new ContextualizedVariable(this, subject || defaultContext)\r\n\t\t},\r\n\t\t_changeValue: function(type, newValue) {\r\n\t\t\tvar key = this.key\r\n\t\t\tvar parent = this.parent\r\n\t\t\tif (!parent) {\r\n\t\t\t\treturn this.put(newValue, context)\r\n\t\t\t}\r\n\t\t\tvar variable = this\r\n\t\t\tvar object = parent.getValue ? parent.getValue(true, true, true) : parent.value\r\n\t\t\tif (object == null) {\r\n\t\t\t\t// nothing there yet, create an object to hold the new property\r\n\t\t\t\tparent.put(object = typeof key == 'number' ? [] : {})\r\n\t\t\t} else if (typeof object != 'object') {\r\n\t\t\t\t// if the parent is not an object, we can't set anything (that will be retained)\r\n\t\t\t\tvar error = new Error('Can not set property on non-object')\r\n\t\t\t\terror.deniedPut = true\r\n\t\t\t\tthrow error\r\n\r\n\t\t\t}\r\n\t\t\tvar oldValue = typeof object.get === 'function' ? object.get(key) : object[key]\r\n\t\t\tif (oldValue === newValue && typeof newValue != 'object') {\r\n\t\t\t\t// no actual change to make\r\n\t\t\t\treturn noChange\r\n\t\t\t}\r\n\t\t\tif (typeof object.set === 'function') {\r\n\t\t\t\tobject.set(key, newValue)\r\n\t\t\t} else {\r\n\t\t\t\tif (type == RequestChange && oldValue && oldValue.put && (!newValue && newValue.put)) {\r\n\t\t\t\t\t// if a put and the property value is a variable, assign it to that.\r\n\t\t\t\t\toldValue.put(newValue)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (newValue && newValue.then && !newValue.notifies) {\r\n\t\t\t\t\t\tnewValue = assignPromise(this, newValue, function(value) {\r\n\t\t\t\t\t\t\tobject[key] = value\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tobject[key] = newValue\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// or set the setter/getter\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar event = new RefreshEvent()\r\n\t\t\tevent.oldValue = oldValue\r\n\t\t\tevent.target = variable\r\n\t\t\tvariable.updated(event, variable)\r\n\r\n\t\t\t// now notify any object listeners\r\n\t\t\tvar listeners = propertyListenersMap.get(object)\r\n\t\t\t// we need to do it before the other listeners, so we can update it before\r\n\t\t\t// we trigger a full clobbering of the object\r\n\t\t\tif (listeners) {\r\n\t\t\t\tlisteners = listeners.slice(0)\r\n\t\t\t\tfor (var i = 0, l = listeners.length; i < l; i++) {\r\n\t\t\t\t\tvar listener = listeners[i]\r\n\t\t\t\t\tif (listener !== parent) {\r\n\t\t\t\t\t\t// now go ahead and actually trigger the other listeners (but make sure we don't do the parent again)\r\n\t\t\t\t\t\tlistener._propertyChange(key, object, type)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn newValue\r\n\t\t},\r\n\r\n\t\t_propertyChange: function(propertyName, object, type) {\r\n\t\t\tif (this.onPropertyChange) {\r\n\t\t\t\tthis.onPropertyChange(propertyName, object)\r\n\t\t\t}\r\n\t\t\tthis.updated(new PropertyChangeEvent(propertyName, new RefreshEvent(), this))\r\n\t\t},\r\n\t\teachKey: function(callback) {\r\n\t\t\tfor (var i in this._properties) {\r\n\t\t\t\tcallback(i)\r\n\t\t\t}\r\n\t\t\tfor (var i in this) {\r\n\t\t\t\tif (this.hasOwnProperty[i]) {\r\n\t\t\t\t\tvar value = this[i]\r\n\t\t\t\t\tif (value && value.parent == this && value.listeners) {\r\n\t\t\t\t\t\tcallback(i)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tapply: function(instance, args) {\r\n\t\t\treturn new Transform(args[0], this, args)\r\n\t\t},\r\n\t\tcall: function(instance) {\r\n\t\t\treturn this.apply(instance, Array.prototype.slice.call(arguments, 1))\r\n\t\t},\r\n\t\tforDependencies: function(callback) {\r\n\t\t\tif (this.returnedVariable) {\r\n\t\t\t\tcallback(this.returnedVariable)\r\n\t\t\t}\r\n\t\t\tif (this.hasNotifyingChild) {\r\n\t\t\t\tforPropertyNotifyingValues(this, this, callback)\r\n\t\t\t}\r\n\t\t\tif (this.parent) {\r\n\t\t\t\tcallback(this.parent)\r\n\t\t\t}\r\n\t\t},\r\n\t\tinit: function() {\r\n\t\t\tvar variable = this\r\n\t\t\tvar contextualizes, sources = [] // TODO: optimize this\r\n\t\t\tthis.forDependencies(function(dependency) {\r\n\t\t\t\tvar contextualized = dependency.notifies(variable)\r\n\t\t\t\tif (contextualized !== dependency) {\r\n\t\t\t\t\tcontextualizes = true\r\n\t\t\t\t}\r\n\t\t\t\tsources.push(contextualized)\r\n\t\t\t})\r\n\t\t\tif (contextualizes) {\r\n\t\t\t\tvar contextualized = new ContextualizedVariable()\r\n\t\t\t\t//context.instanceMap.set(this, contextualized)\r\n\t\t\t\tcontextualized.sources = sources\r\n\t\t\t\tcontextualized.init()\r\n\t\t\t\treturn contextualized\r\n\t\t\t}\r\n\r\n\t\t\tif (this.listeningToObject === null) {\r\n\t\t\t\t// we were previously listening to an object, but it needs to be restored\r\n\t\t\t\t// calling valueOf will cause the listening object to be restored\r\n\t\t\t\tthis.valueOf()\r\n\t\t\t}\r\n\t\t\treturn this\r\n\t\t},\r\n\t\tcleanup: function() {\r\n\t\t\tthis.listeners = false\r\n\t\t\tvar handles = this.handles\r\n\t\t\tif (handles) {\r\n\t\t\t\tfor (var i = 0; i < handles.length; i++) {\r\n\t\t\t\t\thandles[i].remove()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.handles = null\r\n\t\t\tvar returnedVariable = this.returnedVariable\r\n\t\t\tvar variable = this\r\n\t\t\tthis.forDependencies(function(dependency) {\r\n\t\t\t\tdependency.stopNotifies(variable)\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\tversion: 0,\r\n\t\tversionWithChildren: 0,\r\n\r\n\t\tupdateVersion: function(version) {\r\n\t\t\tthis.version = nextVersion = Math.max(Date.now(), nextVersion + 1)\r\n\t\t},\r\n\r\n\t\tgetVersion: function() {\r\n\t\t\treturn Math.max(this.version,\r\n\t\t\t\tthis.returnedVariable && this.returnedVariable.getVersion ? this.returnedVariable.getFullVersion(context) : 0,\r\n\t\t\t\tthis.parent ? this.parent.getVersion(context) : 0)\r\n\t\t},\r\n\t\tgetFullVersion: function() {\r\n\t\t\treturn Math.max(this.versionWithChildren, this.getVersion())\r\n\t\t},\r\n\r\n\t\tgetSubject: function(selectVariable) {\r\n\t\t\treturn this.subject\r\n\t\t},\r\n\r\n\t\tgetUpdates: function(since) {\r\n\t\t\tvar updates = []\r\n\t\t\tvar nextUpdateMap = this.nextUpdateMap\r\n\t\t\tif (nextUpdateMap && since) {\r\n\t\t\t\twhile ((since = nextUpdateMap.get(since))) {\r\n\t\t\t\t\tif (since.type === 'refresh') {\r\n\t\t\t\t\t\t// if it was refresh, we can clear any prior entries\r\n\t\t\t\t\t\tupdates = []\r\n\t\t\t\t\t}\r\n\t\t\t\t\tupdates.push(since)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn updates\r\n\t\t},\r\n\r\n\t\tupdated: function(updateEvent, by, isDownstream) {\r\n\t\t\tif (!updateEvent) {\r\n\t\t\t\tupdateEvent = new RefreshEvent()\r\n\t\t\t\tupdateEvent.source = this\r\n\t\t\t}\r\n\t\t\tif (updateEvent.visited.has(this)){\r\n\t\t\t\t// if this event has already visited this variable, skip it\r\n\t\t\t\treturn updateEvent\r\n\t\t\t}\r\n\t\t\tupdateEvent.visited.add(this)\r\n\t\t\tif (this.__debug) {\r\n\t\t\t\t// debug is on\r\n\t\t\t\tVariable._logStackTrace(this)\r\n\t\t\t}\r\n\r\n\t\t\t/*var contextualInstance = context && context.getContextualized(this)\r\n\t\t\tif (contextualInstance) {\r\n\t\t\t\tcontextualInstance.updated(updateEvent, this)\r\n\t\t\t}\r\n\r\n\t\t\t// at some point we could do an update list so that we could incrementally update\r\n\t\t\t// lists in non-live situations\r\n\t\t\tif (this.lastUpdate) {\r\n\t\t\t\tvar nextUpdateMap = this.nextUpdateMap\r\n\t\t\t\tif (!nextUpdateMap) {\r\n\t\t\t\t\tnextUpdateMap = this.nextUpdateMap = new WeakMap()\r\n\t\t\t\t}\r\n\t\t\t\tnextUpdateMap.set(this.lastUpdate, updateEvent)\r\n\t\t\t}\r\n\r\n\t\t\tthis.lastUpdate = updateEvent */\r\n\t\t\tif (updateEvent instanceof PropertyChangeEvent) {\r\n\t\t\t\tthis.versionWithChildren = Math.max(Date.now(), nextVersion + 1)\r\n\t\t\t} else if (!isDownstream) {\r\n\t\t\t\tthis.updateVersion()\r\n\t\t\t}\r\n\r\n\t\t\tvar listeners = this.listeners\r\n\t\t\tif (listeners) {\r\n\t\t\t\tvar variable = this\r\n\t\t\t\t// make a copy, in case they change\r\n\t\t\t\tlisteners = listeners.slice()\r\n\t\t\t\tfor (var i = 0, l = listeners.length; i < l; i++) {\r\n\t\t\t\t\tvar dependent = listeners[i]\r\n\t\t\t\t\tif ((updateEvent instanceof PropertyChangeEvent) &&\r\n\t\t\t\t\t\t\tdependent.parent) {\r\n\t\t\t\t\t\tif (dependent.key === updateEvent.key) {\r\n\t\t\t\t\t\t\tdependent.updated(updateEvent.childEvent, variable, true)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdependent.updated(updateEvent, variable, true)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (updateEvent instanceof PropertyChangeEvent) {\r\n\t\t\t\tif (this.returnedVariable && this.fixed) {\r\n\t\t\t\t\tthis.returnedVariable.updated(updateEvent, this)\r\n\t\t\t\t}\r\n\t\t\t\tif (this.constructor.collection) {\r\n\t\t\t\t\tthis.constructor.collection.updated(updateEvent, this)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.parent) {\r\n\t\t\t\tthis.parent.updated(new PropertyChangeEvent(this.key, updateEvent, this.parent), this)\r\n\t\t\t}\r\n\t\t\tif (this.collection) {\r\n\t\t\t\tthis.collection.updated(updateEvent, this)\r\n\t\t\t}\r\n\t\t\treturn updateEvent\r\n\t\t},\r\n\r\n\t\tinvalidate: function() {\r\n\t\t\t// for back-compatibility for now\r\n\t\t\tthis.updated()\r\n\t\t},\r\n\r\n\t\tnotifies: function(target) {\r\n\t\t\t// TODO: Eventually we want this to be trigerred from context, but context gets shared with returned variables, so will need to handle that\r\n\t\t\tif (!target) {\r\n\t\t\t\tthrow new Error('No listener provided for notification')\r\n\t\t\t}\r\n\t\t\tvar listeners = this.listeners\r\n\t\t\tif (!listeners || !this.hasOwnProperty('listeners')) {\r\n\t\t\t\tvar variable = this.init()\r\n\t\t\t\tvariable.listeners = listeners = [target]\r\n\t\t\t\treturn variable\r\n\t\t\t} else if (listeners.indexOf(target) === -1) {\r\n\t\t\t\tlisteners.push(target)\r\n\t\t\t}\r\n\t\t\treturn this\r\n\t\t},\r\n\t\tsubscribe: function(listener) {\r\n\t\t\t// ES7 Observable (and baconjs) compatible API\r\n\t\t\tvar updated\r\n\t\t\tvar updateQueued\r\n\t\t\tvar variable = this\r\n\t\t\t// it is important to make sure you register for notifications before getting the value\r\n\t\t\tif (typeof listener === 'function') {\r\n\t\t\t\t// BaconJS compatible API\r\n\t\t\t\tvar variable = this\r\n\t\t\t\tvar event = {\r\n\t\t\t\t\tvalue: function() {\r\n\t\t\t\t\t\treturn new Context(null, true).executeWithin(function() {\r\n\t\t\t\t\t\t\treturn variable.valueOf()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tupdated = function() {\r\n\t\t\t\t\tupdateQueued = false\r\n\t\t\t\t\tlistener(event)\r\n\t\t\t\t}\r\n\t\t\t}\telse if (listener.next) {\r\n\t\t\t\t// Assuming ES7 Observable API. It is actually a streaming API, this pretty much violates all principles of reactivity, but we will support it\r\n\t\t\t\tupdated = function() {\r\n\t\t\t\t\tupdateQueued = false\r\n\t\t\t\t\tvariable.then(function(value) {\r\n\t\t\t\t\t\tlistener.next(value)\r\n\t\t\t\t\t}, function(error) {\r\n\t\t\t\t\t\tlistener.error(value)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error('Subscribing to an invalid listener, the listener must be a function, or have an update or next method')\r\n\t\t\t}\r\n\t\t\tvar updateReceiver = {\r\n\t\t\t\tupdated: function() {\r\n\t\t\t\t\tif (updateQueued) {\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\tupdateQueued = true\r\n\t\t\t\t\tlang.nextTurn(updated)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tupdated()\r\n\t\t\tthis.notifies(updateReceiver)\r\n\t\t\treturn {\r\n\t\t\t\tunsubscribe: function() {\r\n\t\t\t\t\tvariable.stopNotifies(updateReceiver)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tstopNotifies: function(dependent) {\r\n\t\t\tvar listeners = this.listeners\r\n\t\t\tif (listeners) {\r\n\t\t\t\tvar index = listeners.indexOf(dependent)\r\n\t\t\t\tif (index > -1) {\r\n\t\t\t\t\tlisteners.splice(index, 1)\r\n\t\t\t\t\tif (listeners.length === 0) {\r\n\t\t\t\t\t\t// clear the listeners so it will be reinitialized if it has\r\n\t\t\t\t\t\t// listeners again\r\n\t\t\t\t\t\tthis.cleanup()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tput: function(value) {\r\n\t\t\tvar variable = this\r\n\t\t\tif (this.parent) {\r\n\t\t\t\treturn this._changeValue(RequestChange, value)\r\n\t\t\t}\r\n\t\t\tvar oldValue = this.getValue ? this.getValue(true) : this.value\r\n\t\t\tif (oldValue === value && typeof value != 'object') {\r\n\t\t\t\treturn noChange\r\n\t\t\t}\r\n\t\t\tif (oldValue && oldValue.put &&\r\n\t\t\t\t\t// if it is set to fixed, we see we can put in the current variable\r\n\t\t\t\t\t(variable.fixed || !(value && value.put))) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\treturn oldValue.put(value)\r\n\t\t\t\t} catch (error) {\r\n\t\t\t\t\tif (!error.deniedPut) {\r\n\t\t\t\t\t\tthrow error\r\n\t\t\t\t\t}// else if the put was denied, continue on and set the value on this variable\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (value && value.then && !value.notifies) {\r\n\t\t\t\tvalue = assignPromise(this, value)\r\n\t\t\t} else {\r\n\t\t\t\tvariable.value = value\r\n\t\t\t}\r\n\t\t\tvar event = new RefreshEvent()\r\n\t\t\tevent.oldValue = oldValue\r\n\t\t\tevent.target = variable\r\n\t\t\tvariable.updated(event, variable)\r\n\t\t\treturn value\r\n\t\t},\r\n\t\tget: function(key) {\r\n\t\t\tif (this[key] || (this._properties && this._properties[key])) {\r\n\t\t\t\treturn this.property(key).valueOf()\r\n\t\t\t}\r\n\t\t\tvar object = this.getValue(true)\r\n\t\t\tif (!object) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tif (typeof object.get === 'function') {\r\n\t\t\t\treturn object.get(key)\r\n\t\t\t}\r\n\t\t\tvar value = object[key]\r\n\t\t\tif (value && value.notifies) {\r\n\t\t\t\t// nested variable situation, get underlying value\r\n\t\t\t\treturn value.valueOf()\r\n\t\t\t}\r\n\t\t\treturn value\r\n\t\t},\r\n\t\tset: function(key, value) {\r\n\t\t\t// TODO: create an optimized route when the property doesn't exist yet\r\n\t\t\tthis.property(key)._changeValue(RequestSet, value)\r\n\t\t},\r\n\t\tundefine: function(key) {\r\n\t\t\tthis.set(key, undefined)\r\n\t\t},\r\n\t\tis: function(proxiedVariable) {\r\n\t\t\tvar thisVariable = this\r\n\t\t\tthis.fixed = true\r\n\t\t\treturn whenStrict(this.setValue(proxiedVariable), function(value) {\r\n\t\t\t\tthisVariable.updated(new RefreshEvent(), thisVariable)\r\n\t\t\t\treturn thisVariable\r\n\t\t\t})\r\n\t\t},\r\n\t\tproxy: function(proxiedVariable) {\r\n\t\t\treturn this.is(proxiedVariable)\r\n\t\t},\r\n\t\tnext: function(value) {\r\n\t\t\t// for ES7 observable compatibility\r\n\t\t\tthis.put(value)\r\n\t\t},\r\n\t\terror: function(error) {\r\n\t\t\t// for ES7 observable compatibility\r\n\t\t\tvar listeners = this.listeners\r\n\t\t\tif (listeners) {\r\n\t\t\t\t// make a copy, in case they change\r\n\t\t\t\tlisteners.forEach(function(dependent) {\r\n\t\t\t\t\t// skip notifying property listeners if we are headed up the parent chain\r\n\t\t\t\t\tdependent.error(error)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomplete: function(value) {\r\n\t\t\t// for ES7 observable compatibility\r\n\t\t\tthis.put(value)\r\n\t\t},\r\n\t\tsetValue: function(value) {\r\n\t\t\treturn this.value = value\r\n\t\t},\r\n\t\tonValue: function(listener) {\r\n\t\t\treturn this.subscribe(function(event) {\r\n\t\t\t\twhen(event.value(), function(value) {\r\n\t\t\t\t\tlistener(value)\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t},\r\n\t\ttoJSON: function() {\r\n\t\t\treturn this.valueOf()\r\n\t\t},\r\n\t\ttoString: function() {\r\n\t\t\treturn String(this.valueOf())\r\n\t\t},\r\n\t\tforEach: function(callbackOrItemClass, callback) {\r\n\t\t\t// iterate through current value of variable\r\n\t\t\tif (callbackOrItemClass.notifies) {\r\n\t\t\t\treturn this.forEach(function(item) {\r\n\t\t\t\t\tvar itemVariable = callbackOrItemClass.from(item)\r\n\t\t\t\t\tcallback.call(this, itemVariable)\r\n\t\t\t\t}, context)\r\n\t\t\t}\r\n\t\t\tvar collectionOf = this.collectionOf\r\n\t\t\tif (collectionOf) {\r\n\t\t\t\tvar variable = this\r\n\t\t\t\treturn when(this.valueOf(), function(value) {\r\n\t\t\t\t\tif (value && value.forEach) {\r\n\t\t\t\t\t\tvalue.forEach(function(item, index) {\r\n\t\t\t\t\t\t\tcallbackOrItemClass.call(variable, variable.property(index, collectionOf))\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\treturn when(this.valueOf(callback), function(value) {\r\n\t\t\t\tif (value && value.forEach) {\r\n\t\t\t\t\tvalue.forEach(callbackOrItemClass)\r\n\t\t\t\t}else{\r\n\t\t\t\t\tfor (var i in value) {\r\n\t\t\t\t\t\tcallbackOrItemClass.call(value, value[i], i)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\tto: function (transformFunction, reverse) {\r\n\t\t\tif (typeof transformFunction !== 'function') {\r\n\t\t\t\tif (typeof transformFunction === 'object') {\r\n\t\t\t\t\tthis.to(transformFunction.get, transformFunction.set)\r\n\t\t\t\t}\r\n\t\t\t\tthrow new Error('No function provided to transform')\r\n\t\t\t}\r\n\t\t\tif (reverse) {\r\n\t\t\t\ttransformFunction.reverse = function(value, args, context) {\r\n\t\t\t\t\t// for direct to, we can just use the first argument\r\n\t\t\t\t\treverse.call(this, value, args[0], context)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (transformFunction.prototype instanceof Variable) {\r\n\t\t\t\treturn new transformFunction(this)\r\n\t\t\t}\r\n\t\t\treturn new (this._Transform || Transform)(this, transformFunction)\r\n\t\t},\r\n\t\tmap: function (transformFunction) {\r\n\t\t\treturn this.to(function(value) {\r\n\t\t\t\tif (value instanceof Array) {\r\n\t\t\t\t\tthrow new Error('map without VArray')\r\n\t\t\t\t}\r\n\t\t\t\treturn transformFunction(value)\r\n\t\t\t})\r\n\t\t},\r\n\t\tas: function(Class) {\r\n\t\t\t// easiest way to cast to a variable class\r\n\t\t\treturn new Class(this)\r\n\t\t},\r\n\t\tget schema() {\r\n\t\t\t// default schema is the constructor\r\n\t\t\tif (this.returnedVariable) {\r\n\t\t\t\treturn this.returnedVariable.schema\r\n\t\t\t}\r\n\t\t\tif (this.parent) {\r\n\t\t\t\tvar parentSchemaProperties = this.parent.schema.properties || this.parent.schema\r\n\t\t\t\treturn parentSchemaProperties && parentSchemaProperties[this.key]\r\n\t\t\t}\r\n\t\t\treturn this.constructor\r\n\t\t},\r\n\t\tset schema(schema) {\r\n\t\t\t// but allow it to be overriden\r\n\t\t\tObject.defineProperty(this, 'schema', {\r\n\t\t\t\tvalue: schema\r\n\t\t\t})\r\n\t\t},\r\n\t\tvalidate: function(target, schema) {\r\n\t\t\tif (this.returnedVariable) {\r\n\t\t\t\treturn this.returnedVariable.validate(target, schema)\r\n\t\t\t}\r\n\t\t\tif (this.parent) {\r\n\t\t\t\treturn this.parent.validate(target.valueOf(), schema)\r\n\t\t\t}\r\n\t\t\tif (schema) {\r\n\t\t\t\tif (schema.type && (schema.type !== typeof target)) {\r\n\t\t\t\t\treturn ['Target type of ' + typeof target + ' does not match schema type of ' + schema.type]\r\n\t\t\t\t}\r\n\t\t\t\tif (schema.required && (target == null || target == '' || (typeof target === 'number' && isNaN(target)))) {\r\n\t\t\t\t\treturn ['Value is required']\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar valid = []\r\n\t\t\tvalid.isValid = true\r\n\t\t\treturn valid\r\n\t\t},\r\n\r\n\t\tget validation() {\r\n\t\t\tvar validation = new Validating(this)\r\n\t\t\tObject.defineProperty(this, 'validation', {\r\n\t\t\t\tvalue: validation\r\n\t\t\t})\r\n\t\t\treturn validation\r\n\t\t},\r\n\t\tset validation(validation) {\r\n\t\t\t// but allow it to be overriden\r\n\t\t\tObject.defineProperty(this, 'validation', {\r\n\t\t\t\tvalue: validation\r\n\t\t\t})\r\n\t\t},\r\n\t\tset structured(structure) {\r\n\t\t\t// find any variable properties and attaches them as a property\r\n\t\t\tvar keys = Object.keys(this)\r\n\t\t\tvar properties = keys.length > 1 && this._properties || (this._properties = {})\r\n\t\t\tfor(var i = 0, l = keys.length; i < l; i++) {\r\n\t\t\t\tvar key = keys[i]\r\n\t\t\t\tvar value = this[key]\r\n\t\t\t\tif (value instanceof Variable) {\r\n\t\t\t\t\tvar existing = properties[key]\r\n\t\t\t\t\tif (existing) {\r\n\t\t\t\t\t\tif (existing !== value) {\r\n\t\t\t\t\t\t\t// an existing property exists, put in it\r\n\t\t\t\t\t\t\texisting.put(value)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (value.parent) {\r\n\t\t\t\t\t\t\tif (value.parent === this) {\r\n\t\t\t\t\t\t\t\tcontinue // just being assigned to another property\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// property already exists with different parent, make a proxy\r\n\t\t\t\t\t\t\t\tvar newValue = new Variable()\r\n\t\t\t\t\t\t\t\tnewValue.proxy(value)\r\n\t\t\t\t\t\t\t\tvalue = newValue\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvalue.key = key\r\n\t\t\t\t\t\tvalue.parent = this\r\n\t\t\t\t\t\tproperties[key] = value\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetId: function() {\r\n\t\t\treturn this.id || (this.id = Variable.nextId++)\r\n\t\t},\r\n\t\tobserveObject: function() {\r\n\t\t\tvar variable = this\r\n\t\t\treturn when(this.valueOf(), function(object) {\r\n\t\t\t\tvar listeners = propertyListenersMap.get(object)\r\n\t\t\t\tif (!listeners) {\r\n\t\t\t\t\tpropertyListenersMap.set(object, listeners = [])\r\n\t\t\t\t}\r\n\t\t\t\tif (listeners.observerCount) {\r\n\t\t\t\t\tlisteners.observerCount++\r\n\t\t\t\t}else{\r\n\t\t\t\t\tlisteners.observerCount = 1\r\n\t\t\t\t\tvar observer = listeners.observer = lang.observe(object, function(events) {\r\n\t\t\t\t\t\tfor (var i = 0, l = listeners.length; i < l; i++) {\r\n\t\t\t\t\t\t\tvar listener = listeners[i]\r\n\t\t\t\t\t\t\tfor (var j = 0, el = events.length; j < el; j++) {\r\n\t\t\t\t\t\t\t\tvar event = events[j]\r\n\t\t\t\t\t\t\t\tlistener._propertyChange(event.name, object)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\tif (observer.addKey) {\r\n\t\t\t\t\t\tfor (var i = 0, l = listeners.length; i < l; i++) {\r\n\t\t\t\t\t\t\tvar listener = listeners[i]\r\n\t\t\t\t\t\t\tlistener.eachKey(function(key) {\r\n\t\t\t\t\t\t\t\tobserver.addKey(key)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tregisterListener(object, variable)\r\n\t\t\t\treturn {\r\n\t\t\t\t\tremove: function() {\r\n\t\t\t\t\t\tderegisterListener(object, variable)\r\n\t\t\t\t\t\tif (!(--listeners.observerCount)) {\r\n\t\t\t\t\t\t\tlisteners.observer.remove()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdone: function() {\r\n\t\t\t\t\t\t// deliver changes\r\n\t\t\t\t\t\tlang.deliverChanges(observer)\r\n\t\t\t\t\t\tthis.remove()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\t\tgetCollectionOf: function() {\r\n\t\t\treturn this.returnedVariable && this.returnedVariable.collectionOf || this.constructor.collectionOf\r\n\t\t},\r\n\t\t_sN: function(name) {\r\n\t\t\t// for compilers to set a name\r\n\t\t\tthis.name = name\r\n\t\t\treturn this\r\n\t\t},\r\n\t\tget _debug() {\r\n\t\t\tif (this.__debug === undefined) {\r\n\t\t\t\tthis.__debug = this.name || (Math.random() + '').slice(2)\r\n\t\t\t}\r\n\t\t\treturn this.__debug\r\n\t\t},\r\n\t\tset _debug(_debug) {\r\n\t\t\tthis.__debug = _debug\r\n\t\t},\r\n\t\tget _lastUpdated() {\r\n\t\t\treturn new Date(this.getVersion())\r\n\t\t}\r\n\t}\r\n\r\n\t// a variable inheritance change goes through its own prototype, so classes/constructor\r\n\t// can be used as variables as well\r\n\tfor (var key in VariablePrototype) {\r\n\t\tObject.defineProperty(Variable, key, Object.getOwnPropertyDescriptor(VariablePrototype, key))\r\n\t}\r\n\r\n\tVariable.as = function(Type) {\r\n\t\tvar NewType = this.with({})\r\n\t\tvar target = NewType.prototype\r\n\t\tvar prototype = Type.prototype\r\n\t\tdo {\r\n\t\t\tvar names = Object.getOwnPropertyNames(prototype)\r\n\t\t\tfor (var i = 0; i < names.length; i++) {\r\n\t\t\t\tvar name = names[i]\r\n\t\t\t\tif (!Object.getOwnPropertyDescriptor(target, name)) {\r\n\t\t\t\t\tObject.defineProperty(target, name, Object.getOwnPropertyDescriptor(prototype, name))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tprototype = getPrototypeOf(prototype)\r\n\t\t} while (prototype && prototype !== Variable.prototype)\r\n\t\treturn NewType\r\n\t}\r\n\r\n\tVariable.with = function(properties, ExtendedVariable) {\r\n\t\t// TODO: handle arguments\r\n\t\tvar Base = this\r\n\t\tvar prototype\r\n\t\tif (Object.getOwnPropertyDescriptor(this, 'prototype').writable === false) {\r\n\t\t\t// extending native class\r\n\t\t\tExtendedVariable = lang.extendClass(this)\r\n\t\t\tprototype = ExtendedVariable.prototype\r\n\t\t} else {\r\n\t\t\t// extending function/constructor\r\n\t\t\tExtendedVariable = ExtendedVariable || function() {\r\n\t\t\t\tif (this instanceof ExtendedVariable) {\r\n\t\t\t\t\tBase.apply(this, arguments)\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn ExtendedVariable.with(properties)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tprototype = ExtendedVariable.prototype = Object.create(this.prototype)\r\n\t\t\tprototype.constructor = ExtendedVariable\r\n\t\t\tsetPrototypeOf(ExtendedVariable, this)\r\n\t\t}\r\n\t\treturn ExtendedVariable.assign(properties)\r\n\t}\r\n\tVariable.assign = function(properties) {\r\n\t\tvar prototype = this.prototype\r\n\t\tfor (var key in properties) {\r\n\t\t\tvar descriptor = Object.getOwnPropertyDescriptor(properties, key)\r\n\t\t\tvar value = descriptor.value\r\n\t\t\tif (typeof value === 'function' && key !== 'collectionOf') {\r\n\t\t\t\tif (value.notifies) {\r\n\t\t\t\t\t// variable class\r\n\t\t\t\t\tdescriptor = (function(key, Class) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tget: function() {\r\n\t\t\t\t\t\t\t\tvar property = (this._properties || (this._properties = {}))[key]\r\n\t\t\t\t\t\t\t\tif (!property) {\r\n\t\t\t\t\t\t\t\t\tthis._properties[key] = property = new Class()\r\n\t\t\t\t\t\t\t\t\tproperty.key = key\r\n\t\t\t\t\t\t\t\t\tproperty.parent = this\r\n\t\t\t\t\t\t\t\t\tif (property.listeners) {\r\n\t\t\t\t\t\t\t\t\t\t// if it already has listeners, need to reinit it with the parent\r\n\t\t\t\t\t\t\t\t\t\tproperty.init()\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn property\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tset: function(value) {\r\n\t\t\t\t\t\t\t\tthis[key]._changeValue(RequestSet, value)\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tenumerable: true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})(key, value)\r\n\t\t\t\t\tif (value === Variable) {\r\n\t\t\t\t\t\tvalue = Variable() // create own instance\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalue.isPropertyClass = true\r\n\t\t\t\t} else if (isGenerator(value)) {\r\n\t\t\t\t\tdescriptor = getGeneratorDescriptor(value)\r\n\t\t\t\t} else if (value.defineAs) {\r\n\t\t\t\t\tdescriptor = value.defineAs(key)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvalue = generalizeMethod(value, key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tObject.defineProperty(prototype, key, descriptor)\r\n\t\t\tif (value !== undefined) {\r\n\t\t\t\t// TODO: If there is a getter/setter here, use defineProperty\r\n\t\t\t\tthis[key] = value\r\n\t\t\t} else {\r\n\t\t\t\t// getter/setter\r\n\t\t\t\tObject.defineProperty(this, key, descriptor)\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (properties && properties.hasOwn) {\r\n\t\t\thasOwn.call(this, properties.hasOwn)\r\n\t\t}\r\n\t\treturn this\r\n\t}\r\n\r\n\tObject.defineProperty(Variable, 'defaultInstance', {\r\n\t\tget: function() {\r\n\t\t\treturn this.hasOwnProperty('_defaultInstance') ?\r\n\t\t\t\tthis._defaultInstance : (\r\n\t\t\t\t\tthis._defaultInstance = new this(),\r\n\t\t\t\t\tthis._defaultInstance.subject = defaultContext,\r\n\t\t\t\t\tthis._defaultInstance)\r\n\t\t}\r\n\t})\r\n\tVariable.hasOwn = function(Target, createInstance) {\r\n\t\tvar instanceMap = new WeakMap()\r\n\t\tinstanceMap.createInstance = createInstance\r\n\t\tvar subjectMap = this.ownedClasses || (this.ownedClasses = new WeakMap())\r\n\t\tsubjectMap.set(Target, instanceMap)\r\n\t}\r\n\r\n\r\n\tfunction arrayToModify(variable, callback) {\r\n\t\t// TODO: switch this to allow promises\r\n\t\treturn when(variable.cachedValue || variable.valueOf(), function(array) {\r\n\t\t\tif (!array) {\r\n\t\t\t\tvariable.put(array = [])\r\n\t\t\t}\r\n\t\t\tvar results = callback.call(variable, array)\r\n\t\t\tvariable.cachedVersion++ // update the cached version, so any version checking will know it has changed\r\n\t\t\treturn results\r\n\t\t})\r\n\t}\r\n\r\n\tfunction insertedAt(variable, added, startingIndex, arrayLength) {\r\n\t\tvar addedCount = added.length\r\n\t\t// adjust the key positions of any index properties after splice\r\n\t\tif (addedCount > 0) {\r\n\t\t\tvar arrayPosition\r\n\t\t\tfor (var i = arrayLength - addedCount; i > startingIndex;) {\r\n\t\t\t\tvar arrayPosition = variable[--i]\r\n\t\t\t\tif (arrayPosition) {\r\n\t\t\t\t\tvariable[i] = undefined\r\n\t\t\t\t\tarrayPosition.key += addedCount\r\n\t\t\t\t\tvariable[arrayPosition.key] = arrayPosition\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// send out updates\r\n\t\t\tfor (var i = 0, l = added.length; i < l; i++) {\r\n\t\t\t\tvariable.updated(new AddEvent({\r\n\t\t\t\t\tvalue: added[i],\r\n\t\t\t\t\tindex: i + startingIndex,\r\n\t\t\t\t\tmodifier: variable\r\n\t\t\t\t}), variable)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction removedAt(variable, removed, startingIndex, removalCount, arrayLength) {\r\n\t\t// adjust the properties\r\n\t\tvar i = startingIndex + removalCount\r\n\t\tvar arrayPosition\r\n\t\tif (removalCount > 0) {\r\n\t\t\tfor (var i = startingIndex + removalCount; i < arrayLength + removalCount; i++) {\r\n\t\t\t\tvar arrayPosition = variable[i]\r\n\t\t\t\tif (arrayPosition) {\r\n\t\t\t\t\tvariable[i] = undefined\r\n\t\t\t\t\tarrayPosition.key -= removalCount\r\n\t\t\t\t\tvariable[arrayPosition.key] = arrayPosition\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// send out updates\r\n\t\t\tfor (var i = 0; i < removalCount; i++) {\r\n\t\t\t\tvariable.updated(new DeleteEvent({\r\n\t\t\t\t\tpreviousIndex: startingIndex,\r\n\t\t\t\t\toldValue: removed[i],\r\n\t\t\t\t\tmodifier: variable\r\n\t\t\t\t}), variable)\r\n\t\t\t}\r\n\t\t\tvariable.cachedVersion = variable.version // update the cached version so it doesn't need to be recomputed\r\n\t\t}\r\n\t}\r\n\r\n\tif (typeof Symbol !== 'undefined') {\r\n\t\tVariable.prototype[Symbol.iterator] = function() {\r\n\t\t\tvar iterator = this.valueOf()[Symbol.iterator]()\r\n\t\t\tvar variable = this\r\n\t\t\tvar collectionOf = this.collectionOf\r\n\t\t\tif (collectionOf) {\r\n\t\t\t\tvar parent = this\r\n\t\t\t\tvar i = 0\r\n\t\t\t\treturn {\r\n\t\t\t\t\tnext: function() {\r\n\t\t\t\t\t\tvar result = iterator.next()\r\n\t\t\t\t\t\tif (!result.done) {\r\n\t\t\t\t\t\t\tresult.value = variable.property(i++, collectionOf)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn result\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn iterator\r\n\t\t}\r\n\t}\r\n\r\n\tvar VMap = Variable.VMap = lang.compose(Variable, function(value){\r\n\t\tif (typeof value !== 'undefined') {\r\n\t\t\tthis.value = value\r\n\t\t}\r\n\t}, {\r\n\t\tfixed: true,\r\n\t\t// TODO: Move all the get and set functionality for maps out of Variable\r\n\t\tproperty: function(key, PropertyClass) {\r\n\t\t\tvar properties = this._properties || (this._properties = new Map())\r\n\t\t\tvar propertyVariable = properties.get(key)\r\n\t\t\tif (!propertyVariable) {\r\n\t\t\t\t// create the property variable\r\n\t\t\t\tpropertyVariable = new (PropertyClass || this.PropertyClass)()\r\n\t\t\t\tpropertyVariable.key = key\r\n\t\t\t\tpropertyVariable.parent = this\r\n\t\t\t\tif (propertyVariable.listeners) {\r\n\t\t\t\t\t// if it already has listeners, need to reinit it with the parent\r\n\t\t\t\t\tpropertyVariable.init()\r\n\t\t\t\t}\r\n\t\t\t\tproperties.set(key, propertyVariable)\r\n\t\t\t}\r\n\t\t\treturn propertyVariable\r\n\t\t}\r\n\t})\r\n\r\n\tvar Transform = Variable.Transform = lang.compose(Variable, function Transform(source, transform, sources) {\r\n\t\tif (source !== undefined || sources) {\r\n\t\t\tthis.source = source\r\n\t\t}\r\n\t\tif (transform) {\r\n\t\t\tthis.transform = transform\r\n\t\t\tif (sources) {\r\n\t\t\t\tfor (var i = 1, l = sources.length; i < l; i++) {\r\n\t\t\t\t\tthis['source' + i] = sources[i]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}, {\r\n\t\tgetValue: function(sync) {\r\n\t\t\t// first check to see if we have the variable already computed\r\n\t\t\tif (this.readyState == 'invalidated') {\r\n\t\t\t\tthis.readyState = nextVersion.toString()\r\n\t\t\t} else if (isFinite(this.readyState)) {\r\n\t\t\t\t// will un-invalidate this later (contextualizedVariable.readyState = 'up-to-date')\r\n\t\t\t} else if ((this.listeners && this.readyState === 'up-to-date' || this.staysUpdated) && this.cachedVersion > -1) {\r\n\t\t\t\t// it is live, so we can shortcut and just return the cached value\r\n\t\t\t\tif (context) {\r\n\t\t\t\t\tcontext.setVersion(this.cachedVersion)\r\n\t\t\t\t\tif (context.ifModifiedSince >= this.cachedVersion && !this.returnedVariable) {\r\n\t\t\t\t\t\treturn NOT_MODIFIED\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (sync) {\r\n\t\t\t\t\tif (this.promise && context) {\r\n\t\t\t\t\t\tcontext.notResolvedYet = true\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn this.cachedValue\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn this.promise || this.cachedValue\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!this.hasOwnProperty('source1') && context) {\r\n\t\t\t\t// TODO: Not sure if this is a helpful optimization or not\r\n\t\t\t\t// if we have a single source, we can use ifModifiedSince\r\n\t\t\t\t\t/*if (!contextualizedVariable && this.context && this.context.matches(context)) {\r\n\t\t\t\t\t\tcontextualizedVariable = this\r\n\t\t\t\t\t}*/\r\n\t\t\t}\r\n\t\t\tvar readyState = this.readyState\r\n\t\t\tvar parentContext = context\r\n\t\t\tvar transformContext = context = context ? context.newContext() : new Context()\r\n\t\t\tvar args = []\r\n\t\t\ttry {\r\n\t\t\t\tif (this.version) {\r\n\t\t\t\t\t// get the version in there\r\n\t\t\t\t\ttransformContext.setVersion(this.version)\r\n\t\t\t\t}\r\n\t\t\t\tif (this && this.cachedVersion >= this.version && this.cachedVersion > -1 && !this.hasOwnProperty('source1')) {\r\n\t\t\t\t\ttransformContext.ifModifiedSince = this.cachedVersion\r\n\t\t\t\t}\r\n\t\t \t\tvar transform = this.transform && this.transform.valueOf()\r\n\r\n\t\t\t\tvar argument, argumentName\r\n\t\t\t\tfor (var i = 0; (argument = this[argumentName = i > 0 ? 'source' + i : 'source']) || argumentName in this; i++) {\r\n\t\t\t\t\targs[i] = (argument && sync) ? argument.valueOf() : argument // for async, `then` will be called in whenAll\r\n\t\t\t\t}\r\n\t\t\t\tvar variable = this\r\n\t \t\t\treturn whenAll(args, function(resolved) {\r\n\t \t\t\t\tif (transformContext.ifModifiedSince !== undefined) {\r\n\t \t\t\t\t\ttransformContext.ifModifiedSince = undefined\r\n\t \t\t\t\t}\r\n\t\t\t\t\tvar version = transformContext.version\r\n\t\t\t\t\tvar notResolvedYet = transformContext.notResolvedYet\r\n\t\t\t\t\tif (notResolvedYet) {\r\n\t\t\t\t\t\tif (parentContext)\r\n\t\t\t\t\t\t\tparentContext.notResolvedYet = true \r\n\t\t\t\t\t\tif (resolved[0] === undefined && resolved.length === 1) {\r\n\t\t\t\t\t\t\tvariable.readyState = 'invalidated'\r\n\t\t\t\t\t\t\treturn variable.cachedValue // always sync here\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (variable.cachedVersion >= version || resolved[0] == NOT_MODIFIED) { // note that cached version can get \"ahead\" of `version` of all dependencies, in cases where the transform ends up executing an valueOf() that advances the resolution context version number. \r\n\t\t\t\t\t\t\t// get it out of the cache\r\n\t\t\t\t\t\t\tif (parentContext) {\r\n\t\t\t\t\t\t\t\tparentContext.setVersion(version)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (parentContext && parentContext.ifModifiedSince >= version && !variable.returnedVariable) {\r\n\t\t\t\t\t\t\t\treturn NOT_MODIFIED\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif (sync) {\r\n\t\t\t\t\t\t\t\tif (variable.promise && parentContext) {\r\n\t\t\t\t\t\t\t\t\tparentContext.notResolvedYet = true\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn variable.cachedValue\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn variable.promise || variable.cachedValue\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar finishedResolvingArgs = true\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar result = transform ? transform.apply(variable, resolved) : resolved[0]\r\n\t\t\t\t\tvar isPromise = result && result.then && !result.notifies\r\n\t\t\t\t\tversion = transformContext.version\r\n\r\n\t\t\t\t\tif (finishedResolvingArgs) {\r\n\t\t\t\t\t\tif (isPromise) {\r\n\t\t\t\t\t\t\tvar promise = variable.promise = result\r\n\t\t\t\t\t\t\tvariable.cachedVersion = version\r\n\t\t\t\t\t\t\tresult = result.then(function(resolved) {\r\n\t\t\t\t\t\t\t\tif (promise === variable.promise) { // make sure we are still the latest promise\r\n\t\t\t\t\t\t\t\t\tvariable.promise = null\r\n\t\t\t\t\t\t\t\t\tonResolve(resolved, transformContext.version)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn resolved\r\n\t\t\t\t\t\t\t}, function(error) {\r\n\t\t\t\t\t\t\t\tif (promise === variable.promise) { // make sure we are still the latest promise\r\n\t\t\t\t\t\t\t\t\t// clear out the cache on an error\r\n\t\t\t\t\t\t\t\t\tvariable.promise = null\r\n\t\t\t\t\t\t\t\t\tvariable.lastError = error\r\n\t\t\t\t\t\t\t\t\tonResolve(null, 0)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tthrow error // rethrow so it isn't silenced\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tonResolve(result, version)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (sync && isPromise) {\r\n\t\t\t\t\t\tif (parentContext) {\r\n\t\t\t\t\t\t\tparentContext.notResolvedYet = true \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// return what we have, stale or otherwise\r\n\t\t\t\t\t\treturn variable.cachedValue\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn result\r\n\r\n\t\t\t\t\tfunction onResolve(result, version) {\r\n\t\t\t\t\t\tif (variable.readyState === readyState) {\r\n\t\t\t\t\t\t\tif (parentContext) {\r\n\t\t\t\t\t\t\t\tparentContext.setVersion(version)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvariable.readyState = (variable.listeners || variable.staysUpdated || parentContext && parentContext.notifies) ? 'up-to-date' : '' // mark it as up-to-date now\r\n\t\t\t\t\t\t\tvariable.cachedVersion = version\r\n\t\t\t\t\t\t\tvariable.cachedValue = result\r\n\t\t\t\t\t\t}/* else {\r\n\t\t\t\t\t\t\tconsole.log('ready state different than when the variable trasnform started ', variable, variable.readyState, readyState)\r\n\t\t\t\t\t\t}*/\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t \t\t} finally {\r\n\t \t\t\tcontext = parentContext\r\n\t \t\t}\r\n\t\t},\r\n\t\tforDependencies: function(callback) {\r\n\t\t\t// depend on the args\r\n\t\t\tVariable.prototype.forDependencies.call(this, callback)\r\n\t\t\tvar argument, argumentName\r\n\t\t\tfor (var i = 0; (argument = this[argumentName = i > 0 ? 'source' + i : 'source']) || argumentName in this; i++) {\r\n\t\t\t\tif (argument && argument.notifies) {\r\n\t\t\t\t\tcallback(argument)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tupdated: function(updateEvent, by, isDownstream) {\r\n\t\t\tthis.readyState = 'invalidated'\r\n\t\t\tif (this.promise) {\r\n\t\t\t\tthis.promise = null\r\n\t\t\t}\r\n\t\t\tif (by !== this.returnedVariable && updateEvent && updateEvent.type !== 'refresh') {\r\n\t\t\t\t// search for the output in the sources\r\n\t\t\t\tvar argument, argumentName\r\n\t\t\t\tfor (var i = 0; (argument = this[argumentName = i > 0 ? 'source' + i : 'source']) || argumentName in this; i++) {\r\n\t\t\t\t\tif (argument === by) {\r\n\t\t\t\t\t\t// if one of the args was updated, we need to do a full refresh (we can't compute differential events without knowledge of how the mapping function works)\r\n\t\t\t\t\t\tupdateEvent = new RefreshEvent()\r\n\t\t\t\t\t\tcontinue\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn Variable.prototype.updated.call(this, updateEvent, by, isDownstream)\r\n\t\t},\r\n\r\n\t\tcleanup: function() {\r\n\t\t\tif (this.readyState === 'up-to-date' && !this.staysUpdated) {\r\n\t\t\t\tthis.readyState = '' // once there are no listeners, we can't guarantee we are up-to-date\r\n\t\t\t}\r\n\t\t\tVariable.prototype.cleanup.call(this)\r\n\t\t},\r\n\r\n\t\tgetUpdates: function(since) {\r\n\t\t\t// this always issues updates, nothing incremental can flow through it\r\n\t\t\tif (!since || since.version < getVersion()) {\r\n\t\t\t\treturn [new RefreshEvent()]\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetArguments: function() {\r\n\t\t\tvar args = []\r\n\t\t\tvar argument, argumentName\r\n\t\t\tfor (var i = 0; (argument = this[argumentName = i > 0 ? 'source' + i : 'source']) || argumentName in this; i++) {\r\n\t\t\t\targs.push(argument)\r\n\t\t\t}\r\n\t\t\treturn args\r\n\t\t},\r\n\t\tput: function(value) {\r\n\t\t\tvar call = this\r\n\t\t\treturn when(this.valueOf(), function(originalValue) {\r\n\t\t\t\tif (originalValue === value && typeof value != 'object') {\r\n\t\t\t\t\treturn noChange\r\n\t\t\t\t}\r\n\t\t\t\tvar transform = call.transform.valueOf()\r\n\t\t\t\tif (transform.reverse) {\r\n\t\t\t\t\t(transform.reverse).call(call, value, call.getArguments())\r\n\t\t\t\t\tcall.updated()\r\n\t\t\t\t} else if (originalValue && originalValue.put) {\r\n\t\t\t\t\treturn originalValue.put(value)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar error = new Error('Can not put value into a one-way transform, that lacks a reversal')\r\n\t\t\t\t\terror.deniedPut = true\r\n\t\t\t\t\tthrow error\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\t\tsetReverse: function(reverse) {\r\n\t\t\tthis.transform.valueOf().reverse = reverse\r\n\t\t\treturn this\r\n\t\t}\r\n\t})\r\n\r\n\tvar ContextualTransform = lang.compose(Transform, function ContextualTransform() {\r\n\t\tTransform.apply(this, arguments)\r\n\t}, {\r\n\t\tgetValue: function(sync) {\r\n\t\t\t// first check to see if we have the variable already computed\r\n\t\t\tvar contextualizedVariable = context ? context.getContextualized(this) : this\r\n\t\t\tif (contextualizedVariable && contextualizedVariable !== this) {\r\n\t\t\t\treturn contextualizedVariable.getValue(sync)\r\n\t\t\t}\r\n\t\t\treturn Transform.prototype.getValue.call(this, sync)\r\n\t\t},\r\n\t\t_needsContextualization: true\r\n\t})\r\n\r\n\tvar Item = lang.compose(Variable, function Item(value, content) {\r\n\t\tthis.value = value\r\n\t\tthis.collection = content\r\n\t}, {})\r\n\r\n\tvar ContextualizedVariable = lang.compose(Variable, function ContextualizedVariable(generic, subject) {\r\n\t\tthis.generic = generic\r\n\t\tthis.subject = subject\r\n\t}, {\r\n\t\tvalueOf: function() {\r\n\t\t\t// TODO: Lookup Context type for all of these using registry or something\r\n\t\t\tvar subject = this.subject\r\n\t\t\tvar context = subject.getContextualized ? subject : new Context(subject)\r\n\t\t\tvar generic = this.generic\r\n\t\t\treturn context.executeWithin(function() {\r\n\t\t\t\treturn generic.valueOf()\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\tforDependencies: function(callback) {\r\n\t\t\tthis.sources && this.sources.forEach(callback)\r\n\t\t},\r\n\r\n\t\tgetVersion: function() {\r\n\t\t\tvar version = Variable.prototype.getVersion.call(this)\r\n\t\t\tvar sources = this.sources || 0\r\n\t\t\tfor (var i = 0, l = sources.length; i < l; i++) {\r\n\t\t\t\tvar source = sources[i]\r\n\t\t\t\tif (source.getFullVersion) {\r\n\t\t\t\t\tversion = Math.max(version, source.getFullVersion())\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn version\r\n\t\t},\r\n\r\n\t\tput: function(value) {\r\n\t\t\tvar subject = this.subject\r\n\t\t\treturn this.generic.put(value, subject.getContextualized ? subject : new Context(subject))\r\n\t\t}\r\n\t})\r\n\r\n\tvar VArray = Variable.VArray = lang.compose(Variable, function VArray(value) {\r\n\t\treturn makeSubVar(this, value, VArray)\r\n\t}, {\r\n\t\t_isStrictArray: true,\r\n\t\t/* TODO: at some point, we might add support for length, but need to make it be dependent/notified by array changes\r\n\t\tget length() {\r\n\t\t\tif (typeof this !== 'function') {\r\n\t\t\t\tObject.defineProperty(this, 'length', {\r\n\t\t\t\t\tconfigurable: true\r\n\t\t\t\t})\r\n\t\t\t\treturn this.property('length')\r\n\t\t\t}\r\n\t\t},\r\n\t\tset length(length) {\r\n\t\t\t// allow overriding\r\n\t\t\tObject.defineProperty(this, 'length', {\r\n\t\t\t\tvalue: length\r\n\t\t\t})\r\n\t\t},*/\r\n\t\tproperty: function(key, PropertyClass) {\r\n\t\t\treturn Variable.prototype.property.call(this, key, PropertyClass || typeof key === 'number' && this.collectionOf)\r\n\t\t},\r\n\t\tsplice: function(startingIndex, removalCount) {\r\n\t\t\tvar args = arguments\r\n\t\t\treturn arrayToModify(this, function(array) {\r\n\t\t\t\tif (startingIndex < 0) {\r\n\t\t\t\t\tstartingIndex = array.length + startingIndex\r\n\t\t\t\t}\r\n\t\t\t\tvar results = array.splice.apply(array, args)\r\n\t\t\t\tremovedAt(this, results, startingIndex, removalCount, array.length)\r\n\t\t\t\tinsertedAt(this, [].slice.call(args, 2), startingIndex, array.length)\r\n\t\t\t\treturn results\r\n\t\t\t})\r\n\t\t},\r\n\t\tpush: function() {\r\n\t\t\tvar args = arguments\r\n\t\t\treturn arrayToModify(this, function(array) {\r\n\t\t\t\tvar results = array.push.apply(array, args)\r\n\t\t\t\tinsertedAt(this, args, array.length - args.length, array.length)\r\n\t\t\t\treturn results\r\n\t\t\t})\r\n\t\t},\r\n\t\tunshift: function() {\r\n\t\t\tvar args = arguments\r\n\t\t\treturn arrayToModify(this, function(array) {\r\n\t\t\t\tvar results = array.unshift.apply(array, args)\r\n\t\t\t\tinsertedAt(this, args, 0, array.length)\r\n\t\t\t\treturn results\r\n\t\t\t})\r\n\t\t},\r\n\t\tpop: function() {\r\n\t\t\treturn arrayToModify(this, function(array) {\r\n\t\t\t\tvar results = array.pop()\r\n\t\t\t\tremovedAt(this, [results], array.length, 1)\r\n\t\t\t\treturn results\r\n\t\t\t})\r\n\t\t},\r\n\t\tshift: function() {\r\n\t\t\treturn arrayToModify(this, function(array) {\r\n\t\t\t\tvar results = array.shift()\r\n\t\t\t\tremovedAt(this, [results], 0, 1, array.length)\r\n\t\t\t\treturn results\r\n\t\t\t})\r\n\t\t}\r\n\t})\r\n\tVArray.of = function(collectionOf) {\r\n\t\tvar ArrayClass = VArray({collectionOf: collectionOf})\r\n\t\tif (this !== VArray) {\r\n\t\t\t// new operator\r\n\t\t\treturn new ArrayClass()\r\n\t\t}\r\n\t\treturn ArrayClass\r\n\t}\r\n\r\n\tfunction toArray(array) {\r\n\t\tif (!array) {\r\n\t\t\treturn []\r\n\t\t}\r\n\t\tif (array.length > -1) {\r\n\t\t\treturn array\r\n\t\t}\r\n\t\tvar newArray = []\r\n\t\tif (array.forEach) {\r\n\t\t\tarray.forEach(function(item) {\r\n\t\t\t\tnewArray.push(item)\r\n\t\t\t})\r\n\t\t}\r\n\t\treturn newArray\r\n\t}\r\n\r\n\tvar getValue\r\n\tvar GeneratorVariable = lang.compose(Transform, function ReactiveGenerator(generator){\r\n\t\tthis.generator = generator\r\n\t}, {\r\n\t\ttransform: {\r\n\t\t\tvalueOf: function() {\r\n\t\t\t\tvar generatorContext = context\r\n\t\t\t\tvar resuming\r\n\t\t\t\treturn next\r\n\t\t\t\tfunction next() {\r\n\t\t\t\t\tvar nextValue\r\n\t\t\t\t\tvar i\r\n\t\t\t\t\tvar generatorIterator\r\n\t\t\t\t\tvar isThrowing\r\n\t\t\t\t\tif (resuming) {\r\n\t\t\t\t\t\t// resuming from a promise\r\n\t\t\t\t\t\tgeneratorIterator = resuming.iterator\r\n\t\t\t\t\t\ti = resuming.i\r\n\t\t\t\t\t\tnextValue = resuming.value\r\n\t\t\t\t\t\tif (nextValue && nextValue.then) {\r\n\t\t\t\t\t\t\tthrow new Error('Generator resumed with promise or variable', nextValue)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tisThrowing = resuming.isThrowing\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (generatorContext) {\r\n\t\t\t\t\t\t\t// must restart the context, if the input values had previously been checked and hashed against this context, must restart them.\r\n\t\t\t\t\t\t\tgeneratorContext.restart()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ti = 0\r\n\t\t\t\t\t\tgeneratorIterator = this.generator()\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdo {\r\n\t\t\t\t\t\tvar stepReturn = generatorIterator[isThrowing ? 'throw' : 'next'](nextValue)\r\n\t\t\t\t\t\tif (stepReturn.done) {\r\n\t\t\t\t\t\t\tvar oldSources = this.sources || []\r\n\t\t\t\t\t\t\tvar newLength = i\r\n\t\t\t\t\t\t\tvar newSources = []\r\n\t\t\t\t\t\t\twhile(this[argumentName = i > 0 ? 'source' + i : 'source']) {\r\n\t\t\t\t\t\t\t\t// clear out old properties\r\n\t\t\t\t\t\t\t\tthis[argumentName] = undefined\r\n\t\t\t\t\t\t\t\ti++\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfor (i = 0; i < newLength; i++) {\r\n\t\t\t\t\t\t\t\t// create new array\r\n\t\t\t\t\t\t\t\tvar argumentName = i > 0 ? 'source' + i : 'source'\r\n\t\t\t\t\t\t\t\tif (this[argumentName] && this[argumentName].notifies) {\r\n\t\t\t\t\t\t\t\t\tnewSources.push(this[argumentName])\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfor (i = 0; i < oldSources.length; i++) {\r\n\t\t\t\t\t\t\t\tif (newSources.indexOf(oldSources[i]) == -1) {\r\n\t\t\t\t\t\t\t\t\toldSources[i].stopNotifies(this)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.sources = newSources\r\n\t\t\t\t\t\t\treturn stepReturn.value\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tnextValue = stepReturn.value\r\n\t\t\t\t\t\t// compare with the arguments from the last\r\n\t\t\t\t\t\t// execution to see if they are the same\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tvar argumentName = i > 0 ? 'source' + i : 'source'\r\n\t\t\t\t\t\t\tif (this[argumentName] !== nextValue || this[argumentName] === undefined) {\r\n\t\t\t\t\t\t\t\t// subscribe if it is a variable\r\n\t\t\t\t\t\t\t\tif (nextValue && nextValue.notifies) {\r\n\t\t\t\t\t\t\t\t\tif (this.listeners) {\r\n\t\t\t\t\t\t\t\t\t\tnextValue.notifies(this)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tthis[argumentName] = nextValue\r\n\t\t\t\t\t\t\t\t} else if (typeof nextValue === 'function' && isGenerator(nextValue)) {\r\n\t\t\t\t\t\t\t\t\tresuming = {\r\n\t\t\t\t\t\t\t\t\t\ti: i,\r\n\t\t\t\t\t\t\t\t\t\titerator: nextValue()\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tnext.call(this)\r\n\t\t\t\t\t\t\t\t\ti = resuming.i\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tthis[argumentName] = null\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ti++\r\n\t\t\t\t\t\t\tif (nextValue && nextValue.then) {\r\n\t\t\t\t\t\t\t\t// if it is a promise or variable, we will wait on it\r\n\t\t\t\t\t\t\t\tvar variable = this\r\n\t\t\t\t\t\t\t\tresuming = {\r\n\t\t\t\t\t\t\t\t\ti: i,\r\n\t\t\t\t\t\t\t\t\titerator: generatorIterator\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tvar isSync = null\r\n\t\t\t\t\t\t\t\t// and return the promise so that the next caller can wait on this\r\n\t\t\t\t\t\t\t\tvar promise = nextValue.then(function(value) {\r\n\t\t\t\t\t\t\t\t\tif (isSync !== false) {\r\n\t\t\t\t\t\t\t\t\t\tisSync = true\r\n\t\t\t\t\t\t\t\t\t\tnextValue = value\r\n\t\t\t\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tresuming.value = value\r\n\t\t\t\t\t\t\t\t\tif (generatorContext) {\r\n\t\t\t\t\t\t\t\t\t\treturn generatorContext.executeWithin(next.bind(variable))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\treturn next.call(variable)\r\n\t\t\t\t\t\t\t\t}, function(error) {\r\n\t\t\t\t\t\t\t\t\tresuming.value = error\r\n\t\t\t\t\t\t\t\t\tresuming.isThrowing = true\r\n\t\t\t\t\t\t\t\t\tif (generatorContext) {\r\n\t\t\t\t\t\t\t\t\t\treturn generatorContext.executeWithin(next.bind(variable))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\treturn next.call(variable)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\tif (!isSync) {\r\n\t\t\t\t\t\t\t\t\tisSync = false\r\n\t\t\t\t\t\t\t\t\treturn promise\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tisThrowing = false\r\n\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\tisThrowing = true\r\n\t\t\t\t\t\t\tnextValue = error\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} while(true)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\n\tvar Validating = lang.compose(Transform, function(source) {\r\n\t\tthis.source = source\r\n\t}, {\r\n\t\ttransform: function(target) {\r\n\t\t\tvar target = this.source\r\n\t\t\treturn target && target.validate(target, target.schema)\r\n\t\t}\r\n\t})\r\n\r\n\tfunction makeSubVar(instance, value, Type) {\r\n\t\tif (instance instanceof Variable) {\r\n\t\t\tVariable.call(instance, value)\r\n\t\t} else {\r\n\t\t\treturn Type.with(value)\r\n\t\t}\r\n\t}\r\n\r\n\tfunction objectUpdated(object) {\r\n\t\t// simply notifies any subscribers to an object, that it has changed\r\n\t\tvar listeners = propertyListenersMap.get(object)\r\n\t\tif (listeners) {\r\n\t\t\tfor (var i = 0, l = listeners.length; i < l; i++) {\r\n\t\t\t\tlisteners[i]._propertyChange(null, object)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar argsToArray = {\r\n\t\tapply: function(instance, args) {\r\n\t\t\treturn args\r\n\t\t}\r\n\t}\r\n\r\n\tfunction all(array, transform) {\r\n\t\t// This is intended to mirror Promise.all. It actually takes\r\n\t\t// an iterable, but for now we are just looking for array-like\r\n\t\tif (array instanceof Array) {\r\n\t\t\tif (array.length > 1000) {\r\n\t\t\t\t //throw new Error('too big')\r\n\t\t\t}\r\n\t\t\tif (array.length > 0 || typeof transform === 'function') {\r\n\t\t\t\t// TODO: Return VArray Transform\r\n\t\t\t\treturn new Transform(array[0], typeof transform === 'function' ? transform : argsToArray, array)\r\n\t\t\t} else {\r\n\t\t\t\treturn new VArray([])\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (arguments.length > 1) {\r\n\t\t\t// support multiple arguments as an array\r\n\t\t\treturn new Transform(arguments[0], argsToArray, arguments).as(VArray)\r\n\t\t}\r\n\t\tif (typeof array === 'object') {\r\n\t\t\t// allow an object as a hash to be mapped\r\n\t\t\tvar keyMapping = []\r\n\t\t\tvar valueArray = []\r\n\t\t\tfor (var key in array) {\r\n\t\t\t\tkeyMapping.push(key)\r\n\t\t\t\tvalueArray.push(array[key])\r\n\t\t\t}\r\n\t\t\treturn new Variable(function(results) {\r\n\t\t\t\tvar resultObject = {}\r\n\t\t\t\tfor (var i = 0; i < results.length; i++) {\r\n\t\t\t\t\tresultObject[keyMapping[i]] = results[i]\r\n\t\t\t\t}\r\n\t\t\t\treturn resultObject\r\n\t\t\t}).apply(null, valueArray)\r\n\t\t}\r\n\t\tthrow new TypeError('Variable.all requires an array')\r\n\t}\r\n\r\n\tfunction hasOwn(Target, createForInstance) {\r\n\r\n\t\tvar ownedClasses = this.ownedClasses || (this.ownedClasses = new WeakMap())\r\n\t\t// TODO: assign to super classes\r\n\t\tvar Class = this\r\n\t\townedClasses.set(Target, createForInstance || function() { return new Target() })\r\n\t\treturn this\r\n\t}\r\n\tfunction generalizeClass() {\r\n\t\tvar prototype = this.prototype\r\n\t\tvar prototypeNames = Object.getOwnPropertyNames(prototype)\r\n\t\tfor(var i = 0, l = prototypeNames.length; i < l; i++) {\r\n\t\t\tvar name = prototypeNames[i]\r\n\t\t\tObject.defineProperty(this, name, getGeneralizedDescriptor(Object.getOwnPropertyDescriptor(prototype, name), name, this))\r\n\t\t}\r\n\t}\r\n\tfunction getGeneralizedDescriptor(descriptor, name, Class) {\r\n\t\tif (typeof descriptor.value === 'function') {\r\n\t\t\treturn {\r\n\t\t\t\tvalue: generalizeMethod(Class, name)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn descriptor\r\n\t\t}\r\n\t}\r\n\tfunction generalizeMethod(Class, name) {\r\n\t\t// I think we can just rely on `this`, but we could use the argument:\r\n\t\t// function(possibleEvent) {\r\n\t\t// \tvar target = possibleEvent && possibleEvent.target\r\n\t\tvar method = Class[name] = function() {\r\n\t\t\tvar instance = Class.for(this)\r\n\t\t\treturn instance[name].apply(instance, arguments)\r\n\t\t}\r\n\t\tmethod.for = function(context) {\r\n\t\t\tvar instance = Class.for(context)\r\n\t\t\treturn function() {\r\n\t\t\t\treturn instance[name].apply(instance, arguments)\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn method\r\n\t}\r\n\r\n\tvar defaultContext = {\r\n\t\tname: 'Default context',\r\n\t\tdescription: 'This object is the default context for classes, corresponding to a singleton instance of that class',\r\n\t\tconstructor: {\r\n\t\t\tgetForClass: function(subject, Class) {\r\n\t\t\t\treturn Class.defaultInstance\r\n\t\t\t}\r\n\t\t},\r\n\t\tcontains: function() {\r\n\t\t\treturn true // contains everything\r\n\t\t}\r\n\t}\r\n\tfunction instanceForContext(Class, context) {\r\n\t\tif (!context) {\r\n\t\t\treturn Class.defaultInstance\r\n\t\t}\r\n\t\tvar instance = context.specify(Class)\r\n\t\tif (!context.instanceMap) {\r\n\t\t\tcontext.instanceMap = new Map()\r\n\t\t}\r\n\t\tcontext.instanceMap.set(Class, instance)\r\n\t\treturn instance\r\n//\t\tvar instance = context.subject.constructor.getForClass && context.subject.constructor.getForClass(context.subject, Class) || Class.defaultInstance\r\n//\t\tcontext.distinctSubject = mergeSubject(context.distinctSubject, instance.subject)\r\n//\t\treturn instance\r\n\t}\r\n\tVariable.valueOf = function() {\r\n\t\t// contextualized valueOf\r\n\t\treturn instanceForContext(this, context).valueOf()\r\n\t}\r\n\tVariable.then = function(callback, errback) {\r\n\t\t// contextualized valueOf\r\n\t\treturn instanceForContext(this, context).then(callback, errback)\r\n\t}\r\n\tVariable.getValue = function(sync) {\r\n\t\t// contextualized getValue\r\n\t\treturn instanceForContext(this, context)\r\n\t}\r\n\tVariable.put = function(value) {\r\n\t\t// contextualized setValue\r\n\t\treturn instanceForContext(this, context).put(value)\r\n\t}\r\n\tVariable.for = function(subject) {\r\n\t\tif (subject != null) {\r\n\t\t\tif (subject.target && !subject.constructor.getForClass) {\r\n\t\t\t\t// makes HTML events work\r\n\t\t\t\tsubject = subject.target\r\n\t\t\t}\r\n\t\t\tvar instance\r\n\t\t\tinstance = new Context(subject).specify(this)\r\n\t\t\tif (instance && !instance.subject) {\r\n\t\t\t\tinstance.subject = subject\r\n\t\t\t}\r\n\t\t\t// TODO: Do we have a global context that we set on defaultInstance?\r\n\t\t\treturn instance || this.defaultInstance\r\n\t\t} else {\r\n\t\t\treturn this.defaultInstance\r\n\t\t}\r\n\t}\r\n\tVariable.from = function(value) {\r\n\t\tif (value && typeof value === 'object') {\r\n\t\t\t// a plain object, we use our own map to retrieve the instance (or create one)\r\n\t\t\tvar instanceMap = this.instanceMap || (this.instanceMap = new WeakMap())\r\n\t\t\tvar instance = instanceMap.get(value)\r\n\t\t\tif (!instance) {\r\n\t\t\t\tinstanceMap.set(value, instance = new this(value))\r\n\t\t\t}\r\n\t\t\treturn instance\r\n\t\t} else {\r\n\t\t\t// a primitive, just unconditionally create a new variable for it\r\n\t\t\treturn new this(value)\r\n\t\t}\r\n\t}\r\n\tVariable.notifies = function(target) {\r\n\t\tvar instance = instanceForContext(this, context)\r\n\t\tinstance.notifies(target)\r\n\t\treturn instance\r\n\t}\r\n\tVariable.stopNotifies = function(target) {\r\n\t\tthis.defaultInstance.stopNotifies(target)\r\n\t}\r\n\tVariable.getCollectionOf = function () {\r\n\t\treturn this.collectionOf\r\n\t}\r\n\tVariable.updated = function(updateEvent, by) {\r\n\t\treturn instanceForContext(this, context).updated(updateEvent, by)\r\n\t}\r\n\tVariable._Transform = ContextualTransform\r\n\tvar proxyHandler = {\r\n\t\tget: function(target, name) {\r\n\t\t\tvar value = target[name]\r\n\t\t\treturn value === undefined ? target.property(name) : value\r\n\t\t},\r\n\t\tset: function(target, name, value) {\r\n\t\t\tvar oldValue = target[name]\r\n\t\t\tif (oldValue && oldValue.put) {\r\n\t\t\t\t// own property available to put into\r\n\t\t\t\toldValue.put(value)\r\n\t\t\t} else {\r\n\t\t\t\ttarget.set(name, value)\r\n\t\t\t}\r\n\t\t\treturn true\r\n\t\t},\r\n\t\thas: function(target, name) {\r\n\t\t\treturn (name in target) || (name in target.valueOf())\r\n\t\t},\r\n\t\tdeleteProperty: function(target, name) {\r\n\t\t\treturn proxyHandler.set(target, name, undefined)\r\n\t\t},\r\n\t\townKeys: function(target) {\r\n\t\t\treturn Object.getOwnPropertyNames(target.valueOf())\r\n\t\t}\r\n\t}\r\n\tVariable.proxy = function(source) {\r\n\t\t// should we memoize?\r\n\t\treturn new Proxy(source instanceof this ? source : this.from(source), proxyHandler)\r\n\t}\r\n\tObject.defineProperty(Variable, 'collectionOf', {\r\n\t\tget: function() {\r\n\t\t\treturn this._collectionOf\r\n\t\t},\r\n\t\tset: function(ItemClass) {\r\n\t\t\tif (this._collectionOf != ItemClass) {\r\n\t\t\t\tthis._collectionOf = ItemClass\r\n\t\t\t\tItemClass.collection = this\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\tObject.defineProperty(Variable, 'collection', {\r\n\t\tget: function() {\r\n\t\t\treturn this._collection\r\n\t\t},\r\n\t\tset: function(Collection) {\r\n\t\t\tif (this._collection != Collection) {\r\n\t\t\t\tthis._collection = Collection\r\n\t\t\t\tCollection.collectionOf = this\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\tVariable.nextVersion = Date.now()\r\n\tVariable.generalize = generalizeClass\r\n\tVariable.call = Function.prototype.call // restore these\r\n\tVariable.apply = Function.prototype.apply\r\n\r\n\tfunction VFunction() {\r\n\t}\r\n\t(VFunction.returns = function(Type){\r\n\t\tfunction VFunction() {}\r\n\t\tVFunction.defineAs = function(method)\t{\r\n\t\t\treturn {\r\n\t\t\t\tvalue: function() {\r\n\t\t\t\t\tvar args = arguments\r\n\t\t\t\t\t// TODO: make these args part of the call so variables can be resolved\r\n\t\t\t\t\t// TODO: may actually want to do getValue().invoke()\r\n\t\t\t\t\treturn new Type(new Transform(this, function(value) {\r\n\t\t\t\t\t\t\treturn value == null ? undefined : value[method].apply(value, args)\r\n\t\t\t\t\t}))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn VFunction\r\n\t})\r\n\r\n\tfunction VMethod() {\r\n\t}\r\n\tVMethod.defineAs = function(method) {\r\n\t\treturn {\r\n\t\t\tvalue: function() {\r\n\t\t\t\tvar args = arguments\r\n\t\t\t\t// TODO: make these args part of the call so variables can be resolved\r\n\t\t\t\t// TODO: may actually want to do getValue().invoke()\r\n\t\t\t\tvar variable = this\r\n\t\t\t\treturn when(this.valueOf(), function(value) {\r\n\t\t\t\t\tvar returnValue = value[method].apply(value, args)\r\n\t\t\t\t\treturn when(variable.put(value), function() {\r\n\t\t\t\t\t\treturn returnValue\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t}\r\n\r\n\tfunction VString(value) {\r\n\t\treturn makeSubVar(this, typeof value === 'object' ? value : String(value), VString)\r\n\t}\r\n\r\n\tfunction VNumber(value) {\r\n\t\treturn makeSubVar(this, typeof value === 'object' ? value : Number(value), VNumber)\r\n\t}\r\n\t\r\n\tVString = Variable.with({\r\n\t\tcharAt: VFunction.returns(VString),\r\n\t\tcodeCharAt: VFunction.returns(VNumber),\r\n\t\tindexOf: VFunction.returns(VNumber),\r\n\t\tlastIndexOf: VFunction.returns(VNumber),\r\n\t\tmatch: VFunction.returns(VArray),\r\n\t\treplace: VFunction.returns(VString),\r\n\t\tsubstr: VFunction.returns(VString),\r\n\t\tslice: VFunction.returns(VString),\r\n\t\ttoUpperCase: VFunction.returns(VString),\r\n\t\ttoLowerCase: VFunction.returns(VString),\r\n\t\tlength: VNumber\r\n\t}, VString)\r\n\r\n\tVNumber = Variable.with({\r\n\t\ttoFixed: VFunction.returns(VString),\r\n\t\ttoExponential: VFunction.returns(VString),\r\n\t\ttoPrecision: VFunction.returns(VString),\r\n\t\ttoLocaleString: VFunction.returns(VString)\r\n\t}, VNumber)\r\n\r\n\tfunction VBoolean(value) {\r\n\t\treturn makeSubVar(this, typeof value === 'object' ? value : Boolean(value), VBoolean)\r\n\t}\r\n\tVBoolean = Variable.with({}, VBoolean)\r\n\r\n\tfunction VSet(value) {\r\n\t\treturn makeSubVar(this, value instanceof Array ? new Set(value) : value, VSet)\r\n\t}\r\n\tVSet = Variable.with({\r\n\t\thas: VFunction.returns(VBoolean),\r\n\t\tadd: VMethod,\r\n\t\tclear: VMethod,\r\n\t\tdelete: VMethod\r\n\t}, VSet)\r\n\tObject.defineProperty(VSet.prototype, 'array', {\r\n\t\tget: function() {\r\n\t\t\treturn this._array || (this._array = this.to(toArray).as(VArray))\r\n\t\t}\r\n\t})\r\n\r\n\tfunction VDate(value) {\r\n\t\treturn makeSubVar(this, typeof value === 'object' ? value : new Date(value), VDate)\r\n\t}\r\n\tVDate = Variable.with({\r\n\t\ttoDateString: VFunction.returns(VString),\r\n\t\ttoTimeString: VFunction.returns(VString),\r\n\t\ttoGMTString: VFunction.returns(VString),\r\n\t\ttoUTCString: VFunction.returns(VString),\r\n\t\tgetTime: VFunction.returns(VNumber),\r\n\t\tsetTime: VMethod\r\n\t}, VDate)\r\n\r\n\tvar VPromise = lang.compose(Variable, function VPromise(value) {\r\n\t\treturn makeSubVar(this, value, VPromise)\r\n\t}, {\r\n\t\tvalueOf: function() {\r\n\t\t\treturn this.then()\r\n\t\t},\r\n\t})\r\n\tvar primitives = {\r\n\t\t'string': VString,\r\n\t\t'number': VNumber,\r\n\t\t'boolean': VBoolean\r\n\t}\r\n\tfunction getType(Type) {\r\n\t\tif (typeof Type === 'string') {\r\n\t\t\treturn primitives[Type]\r\n\t\t} else if (typeof Type === 'object') {\r\n\t\t\tif (Type instanceof Array) {\r\n\t\t\t\treturn VArray.of(getType(Type[0]))\r\n\t\t\t}\r\n\t\t\tvar typedObject = {}\r\n\t\t\tfor (var key in Type) {\r\n\t\t\t\ttypedObject[key] = getType(Type[key])\r\n\t\t\t}\r\n\t\t\treturn Variable.with(typedObject)\r\n\t\t}\r\n\t\treturn Type\r\n\t}\r\n\tvar exports = {\r\n\t\t__esModule: true,\r\n\t\tVariable: Variable,\r\n\t\tVArray: VArray,\r\n\t\tdefault: Variable,\r\n\t\tVString: VString,\r\n\t\tVNumber: VNumber,\r\n\t\tVBoolean: VBoolean,\r\n\t\tVPromise: VPromise,\r\n\t\tVDate: VDate,\r\n\t\tVSet: VSet,\r\n\t\tVMap: VMap,\r\n\t\tTransform: Transform,\r\n\t\tdeny: deny,\r\n\t\tnoChange: noChange,\r\n\t\tContext: Context,\r\n\t\tGeneratorVariable: GeneratorVariable,\r\n\t\tItem: Item,\r\n\t\tNotifyingContext: NotifyingContext,\r\n\t\tall: all,\r\n\t\tobjectUpdated: objectUpdated,\r\n\t\treactive: reactive,\r\n\t\tNOT_MODIFIED: NOT_MODIFIED\r\n\t}\r\n\tObject.defineProperty(exports, 'currentContext', {\r\n\t\tget: function() {\r\n\t\t\treturn context\r\n\t\t}\r\n\t})\r\n\tvar typeScriptConversions = new Map()\r\n\ttypeScriptConversions.set(Array, VArray)\r\n\ttypeScriptConversions.set(String, VString)\r\n\ttypeScriptConversions.set(Number, VNumber)\r\n\ttypeScriptConversions.set(Boolean, VBoolean)\r\n\tfunction reactive(target, key) { // for typescript decorators\r\n\t\tvar Type = Reflect.getMetadata('design:type', target, key)\r\n\t\tconsole.log('Type', Type)\r\n\t\tif (!Type.notifies) {\r\n\t\t\tType = typeScriptConversions.get(Type) || Variable\r\n\t\t}\r\n\t\tObject.defineProperty(target, key, {\r\n\t\t\tget: function() {\r\n\t\t\t\treturn reactive.get(this, key, Type)\r\n\t\t\t},\r\n\t\t\tset: function(value) {\r\n\t\t\t\treactive.set(this, key, value)\r\n\t\t\t},\r\n\t\t\tenumerable: true\r\n\t\t})\r\n\t}\r\n\treactive.get = function(target, key, Type) { // for babel decorators\r\n\t\tvar property = (target._properties || (target._properties = {}))[key]\r\n\t\tif (!property) {\r\n\t\t\ttarget._properties[key] = property = new (getType(Type))()\r\n\t\t\tif (target.getValue) {\r\n\t\t\t\tproperty.key = key\r\n\t\t\t\tproperty.parent = target\r\n\t\t\t\tif (property.listeners) {\r\n\t\t\t\t\t// if it already has listeners, need to reinit it with the parent\r\n\t\t\t\t\tproperty.init()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn property\r\n\t}\r\n\treactive.set = function(target, key, value) {\r\n\t\tvar property = target[key]\r\n\t\tproperty.parent ? property._changeValue(RequestSet, value) : property.put(value)\r\n\t}\r\n\r\n\r\n\tvar IterativeMethod = lang.compose(Transform, function(source, method, args) {\r\n\t\tthis.source = source\r\n\t\t// source.interestWithin = true\r\n\t\tthis.method = method\r\n\t\tthis.arguments = args\r\n\t}, {\r\n\t\ttransform: function(array) {\r\n\t\t\tvar method = this.method\r\n\t\t\tvar isStrictArray = this.source && this.source._isStrictArray\r\n\t\t\tif (array && array.forEach) {\r\n\t\t\t\t// already an array\r\n\t\t\t\t//array = this._mappedItems(array)\r\n\t\t\t} else if (isStrictArray) {\r\n\t\t\t\tarray = []\r\n\t\t\t} else {\r\n\t\t\t\t// if not an array convert to an array\r\n\t\t\t\tarray = [array]\r\n\t\t\t}\r\n\t\t\tif (typeof method === 'string') {\r\n\t\t\t\t// apply method\r\n\t\t\t\treturn array[method].apply(array, this.arguments)\r\n\t\t\t} else {\r\n\t\t\t\treturn method(array, this.arguments)\r\n\t\t\t}\r\n\t\t},\r\n\t\t_mappedItems: function(array) {\r\n\t\t\tvar source = this.source\r\n\t\t\tvar collectionOf = source && source.collectionOf\r\n\t\t\treturn collectionOf ? array.map(function(item, i) {\r\n\t\t\t\tvar wrapped = collectionOf.from(item)\r\n\t\t\t\twrapped.collection = source\r\n\t\t\t\treturn wrapped\r\n\t\t\t}) : array\r\n\t\t},\r\n\r\n\t\tgetCollectionOf: function(){\r\n\t\t\treturn this.source.getCollectionOf()\r\n\t\t},\r\n\t\t_isStrictArray: true\r\n\t})\r\n\r\n\tfunction defineArrayMethod(method, constructor, properties, returns) {\r\n\t\tvar IterativeResults = lang.compose(returns ? returns.as(IterativeMethod) : IterativeMethod, constructor, properties)\r\n\t\tIterativeResults.prototype.method || (IterativeResults.prototype.method = method)\r\n\t\tObject.defineProperty(IterativeResults.prototype, 'isIterable', {value: true});\r\n\t\tVArray[method] = VArray.prototype[method] = function() {\r\n\t\t\tvar results = new IterativeResults(this)\r\n\t\t\tresults.source = this\r\n\t\t\tresults.arguments = arguments\r\n\t\t\treturn results\r\n\t\t}\r\n\t}\r\n\r\n\tdefineArrayMethod('filter', function Filtered() {}, {\r\n\t\tupdated: function(event, by, isDownstream) {\r\n\t\t\tif (!event || event.modifier === this || (event.modifier && event.modifier.constructor === this)) {\r\n\t\t\t\treturn Transform.prototype.updated.call(this, event, by)\r\n\t\t\t}\r\n\t\t\tvar contextualizedVariable = context && context.getContextualized(this) || this\r\n\t\t\tif (event.type === 'delete') {\r\n\t\t\t\tvar index = contextualizedVariable.cachedValue.indexOf(event.oldValue)\r\n\t\t\t\tif (index > -1) {\r\n\t\t\t\t\tcontextualizedVariable.splice(index, 1)\r\n\t\t\t\t}\r\n\t\t\t} else if (event.type === 'add') {\r\n\t\t\t\tif ([event.value].filter(this.arguments[0]).length > 0) {\r\n\t\t\t\t\tcontextualizedVariable.push(event.value)\r\n\t\t\t\t}\r\n\t\t\t} else if (event.type === 'update') {\r\n\t\t\t\tvar object = event.parent.valueOf()\r\n\t\t\t\tvar index = contextualizedVariable.cachedValue.indexOf(object)\r\n\t\t\t\tvar matches = [object].filter(this.arguments[0]).length > 0\r\n\t\t\t\tif (index > -1) {\r\n\t\t\t\t\tif (matches) {\r\n\t\t\t\t\t\treturn new PropertyChangeEvent(index, event, contextualizedVariable.cachedValue,\r\n\t\t\t\t\t\t\t// might need to do something with this\r\n\t\t\t\t\t\t\tobject)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcontextualizedVariable.splice(index, 1)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\telse {\r\n\t\t\t\t\tif (matches) {\r\n\t\t\t\t\t\tcontextualizedVariable.push(object)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// else nothing mactches\r\n\t\t\t\t}\r\n\t\t\t\treturn\r\n\t\t\t} else {\r\n\t\t\t\treturn Transform.prototype.updated.call(this, event, by, isDownstream)\r\n\t\t\t}\r\n\t\t}\r\n\t}, VArray)\r\n\tdefineArrayMethod('map', function Mapped(source) {\r\n\t\tthis._isStrictArray = source._isStrictArray\r\n\t}, {\r\n\t\ttransform: function(array) {\r\n\t\t\tvar isStrictArray = this.source && this.source._isStrictArray\r\n\t\t\tvar mapFunction = this.arguments[0]\r\n\t\t\tif (array && array.map) {\r\n\t\t\t\tvar source = this.source\r\n\t\t\t\tvar collectionOf = source && source.collectionOf\r\n\t\t\t\treturn array.map(collectionOf ? function(item, i) {\r\n\t\t\t\t\treturn mapFunction(source.property(i), i)\r\n\t\t\t\t} : mapFunction)\r\n\t\t\t} else if (!isStrictArray) {\r\n\t\t\t\tif (method === 'map'){\r\n\t\t\t\t\t// fast path, and special behavior for map\r\n\t\t\t\t\treturn mapFunction(array)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn IterativeMethod.prototype.transform.call(this, array)\r\n\t\t},\r\n\t\tupdated: function(event, by, isDownstream) {\r\n\t\t\tif (!event || event.modifier === this || (event.modifier && event.modifier.constructor === this)) {\r\n\t\t\t\treturn Variable.prototype.updated.call(this, event, by)\r\n\t\t\t}\r\n\t\t\tvar contextualizedVariable = context && context.getContextualized(this) || this\r\n\t\t\tif (event.type === 'delete') {\r\n\t\t\t\tcontextualizedVariable.splice(event.previousIndex, 1)\r\n\t\t\t} else if (event.type === 'add') {\r\n\t\t\t\tvar array = contextualizedVariable.cachedValue\r\n\t\t\t\tcontextualizedVariable.push(this.arguments[0].call(this.arguments[1], this.source.property(array && array.length)))\r\n\t\t\t} else if (event.type === 'update') {\r\n\t\t\t\tif (this.getCollectionOf()) {\r\n\t\t\t\t\treturn // if it has typed items, we don't need to propagate update events, since they will be handled by the variable item.\r\n\t\t\t\t}\r\n\t\t\t\tvar object = event.parent.valueOf()\r\n\t\t\t\tvar array = contextualizedVariable.cachedValue\r\n\t\t\t\tvar index = event.key\r\n\t\t\t\tvar value = event.value\r\n\t\t\t\tif (index > -1) {\r\n\t\t\t\t\t// update was to an index property of this array variable\r\n\t\t\t\t\tvalue = object[index]\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// update was inside an object inside of our array\r\n\t\t\t\t\tindex = array && array.map && array.indexOf(object)\r\n\t\t\t\t}\r\n\t\t\t\tif (index > -1) {\r\n\t\t\t\t\tcontextualizedVariable.splice(index, 1, this.arguments[0].call(this.arguments[1], this.source.property(index)))\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn Transform.prototype.updated.call(this, event, by, isDownstream)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn Transform.prototype.updated.call(this, event, by, isDownstream)\r\n\t\t\t}\r\n\t\t}\r\n\t}, VArray)\r\n\tdefineArrayMethod('reduce', function Reduced() {})\r\n\tdefineArrayMethod('reduceRight', function Reduced() {})\r\n\tdefineArrayMethod('some', function Aggregated() {}, {}, VBoolean)\r\n\tdefineArrayMethod('every', function Aggregated() {}, {}, VBoolean)\r\n\tdefineArrayMethod('slice', function Aggregated() {}, {}, VArray)\r\n\tdefineArrayMethod('keyBy', function UniqueIndex(source, args) {}, {\r\n\t\tproperty: VMap.prototype.property,\r\n\t\tmethod: function(array, args) {\r\n\t\t\tvar index = new Map()\r\n\t\t\tvar keyGenerator = args[0]\r\n\t\t\tvar valueGenerator = args[1]\r\n\t\t\tvar hasKeyFunction = typeof keyGenerator === 'function'\r\n\t\t\tvar hasValueFunction = typeof valueGenerator === 'function'\r\n\t\t\tvar hasKey = !!keyGenerator\r\n\t\t\tfor (var i = 0, l = array.length; i < l; i++) {\r\n\t\t\t\tvar element = array[i]\r\n\t\t\t\tindex.set(\r\n\t\t\t\t\thasKeyFunction ? keyGenerator(element, emit) :\r\n\t\t\t\t\t\thasKey ? element[keyGenerator] : element,\r\n\t\t\t\t\thasValueFunction ? valueGenerator(element) : element)\r\n\t\t\t}\r\n\t\t\tfunction emit(key, value) {\r\n\t\t\t\tindex.set(key, value)\r\n\t\t\t}\r\n\t\t\treturn index\r\n\t\t}\r\n\t})\r\n\r\n\tdefineArrayMethod('groupBy', function UniqueIndex(source, args) {}, {\r\n\t\tproperty: VMap.prototype.property,\r\n\t\tmethod: function(array, args) {\r\n\t\t\tvar index = new Map()\r\n\t\t\tvar keyGenerator = args[0]\r\n\t\t\tvar valueGenerator = args[1]\r\n\t\t\tvar hasKeyFunction = typeof keyGenerator === 'function'\r\n\t\t\tvar hasValueFunction = typeof valueGenerator === 'function'\r\n\t\t\tvar hasKey = !!keyGenerator\r\n\t\t\tfor (var i = 0, l = array.length; i < l; i++) {\r\n\t\t\t\tvar element = array[i]\r\n\t\t\t\tvar key = hasKeyFunction ? keyGenerator(element) :\r\n\t\t\t\t\t\thasKey ? element[keyGenerator] : element\r\n\t\t\t\tvar group = index.get(key)\r\n\t\t\t\tif (!group) {\r\n\t\t\t\t\tindex.set(key, group = [])\r\n\t\t\t\t}\r\n\t\t\t\tgroup.push(hasValueFunction ? valueGenerator(element) : element)\r\n\t\t\t}\r\n\t\t\tfunction emit(key, value) {\r\n\t\t\t\tvar group = index.get(key)\r\n\t\t\t\tif (!group) {\r\n\t\t\t\t\tindex.set(key, group = [])\r\n\t\t\t\t}\r\n\t\t\t\tgroup.push(value)\r\n\t\t\t}\r\n\t\t\treturn index\r\n\t\t}\r\n\t})\r\n\r\n\tvar getGeneratorDescriptor = Variable.getGeneratorDescriptor = function(value) {\r\n\t\tvar variables\r\n\t\treturn {\r\n\t\t\tget: function() {\r\n\t\t\t\tif (!variables) {\r\n\t\t\t\t\t variables = new WeakMap()\r\n\t\t\t\t}\r\n\t\t\t\tvar variable = variables.get(this)\r\n\t\t\t\tif (!variable) {\r\n\t\t\t\t\tvariables.set(this, variable = new GeneratorVariable(value.bind(this)))\r\n\t\t\t\t}\r\n\t\t\t\treturn variable\r\n\t\t\t},\r\n\t\t\tenumerable: true\r\n\t\t}\r\n\t}\r\n\r\n\tVariable.all = all\r\n\tVariable.Context = Context\r\n\r\n\treturn exports\r\n}))\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Variable.js\n ** module id = 4\n ** module chunks = 0\n **/","(function (root, factory) { if (typeof define === 'function' && define.amd) {\r\n  define(['./util/lang', './operators', './Variable'], factory) } else if (typeof module === 'object' && module.exports) {        \r\n  module.exports = factory(require('./util/lang'), require('./operators'), require('./Variable')) // Node\r\n}}(this, function (lang, operators, VariableExports) {\r\n\r\n  var Transform = VariableExports.Transform\r\n  var Variable = VariableExports.Variable\r\n  var isGenerator = lang.isGenerator\r\n  var ObjectTransform = lang.compose(Transform, function ObjectTransform(source, transform, sources) {\r\n    this.sources = sources\r\n    Transform.apply(this, arguments)\r\n  }, {\r\n    _getAsObject: function() {\r\n      return this.transform.apply(this, preserveObjects(this.sources))\r\n    }\r\n  })\r\n  function preserveObjects(sources) {\r\n    for (var i = 0, l = sources.length; i < l; i++) {\r\n      var source = sources[i]\r\n      if (source && source._getAsObject) {\r\n        sources[i] = source._getAsObject()\r\n      }\r\n    }\r\n    return sources\r\n  }\r\n\tfunction react(generator, options) {\r\n    if (typeof generator !== 'function') {\r\n      throw new Error('react() must be called with a generator. You need to use the babel-plugin-transform-alkali plugin if you want to use reactive expressions')\r\n    }\r\n\t\tif (options && options.reverse) {\r\n\t\t\tgenerator.reverse = options.reverse\r\n\t\t}\r\n\t\treturn new VariableExports.GeneratorVariable(generator)\r\n\t}\r\n  lang.copy(react, operators)\r\n  react.from = function(value, options) {\r\n    if (value && value.property) {\r\n      return value\r\n    }\r\n    if (typeof value === 'function' && isGenerator(value)) {\r\n      return react(value, options)\r\n    }\r\n    return Variable.from(value)\r\n  }\r\n  react.prop = function(object, property) {\r\n    if (object) {\r\n      // TODO: Use a static set of public methods/properties that can be accessed\r\n      if (object.property) {\r\n        // it is a variable already, but check to see if we are using a method/property directly on the variable\r\n        var directPropertyValue = object[property]\r\n        return directPropertyValue !== undefined ? directPropertyValue : object.property(property)\r\n      }\r\n      return object[property]\r\n    }\r\n    // not even truthy, return undefined\r\n  }\r\n  react.cond = function(test, consequent, alternate) {\r\n    return operators.if(test, operators.choose(consequent, alternate))\r\n  }\r\n  react.fcall = function(target, args) {\r\n    if (target.property && typeof target === 'function') {\r\n      return target.apply(null, preserveObjects(args))\r\n    }\r\n    return new Transform(args[0], target, args)\r\n  }\r\n  react.mcall = function(target, key, args) {\r\n    var method = target[key]\r\n    if (typeof method === 'function' && method.property || key === 'bind') {\r\n      // for now we check to see if looks like it could handle a variable, or is a bind call\r\n      return method.apply(target, preserveObjects(args))\r\n    }\r\n    return new Transform(args[0], target[key].bind(target), args)\r\n  }\r\n  react.ncall = function(target, args) {\r\n    if (target.property && typeof target === 'function') {\r\n      return new (target.bind.apply(target, [null].concat(preserveObjects(args))))()\r\n    }\r\n    return new Transform(args[0], function() {\r\n      return new (target.bind.apply(target, [null].concat(arguments)))()\r\n    }, args)\r\n  }\r\n\r\n  react.obj = function(transform, sources) {\r\n    return new ObjectTransform(sources[0], transform, sources)\r\n  }\r\n\r\n\treturn react\r\n}))\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./react.js\n ** module id = 5\n ** module chunks = 0\n **/","(function (root, factory) { if (typeof define === 'function' && define.amd) {\r\n\tdefine(['./Variable'], factory) } else if (typeof module === 'object' && module.exports) {        \r\n  module.exports = factory(require('./Variable')) // Node\r\n}}(this, function (VariableExports) {\r\n\r\n\tvar VBoolean = VariableExports.VBoolean\r\n\tvar VNumber = VariableExports.VNumber\r\n\tvar operatingFunctions = {};\r\n\tvar operators = {};\r\n\tfunction getOperatingFunction(expression){\r\n\t\t// jshint evil: true\r\n\t\treturn operatingFunctions[expression] ||\r\n\t\t\t(operatingFunctions[expression] =\r\n\t\t\t\tnew Function('a', 'b', 'return ' + expression));\r\n\t}\r\n\tfunction operator(operator, type, name, precedence, forward, reverseA, reverseB){\r\n\t\t// defines the standard operators\r\n\t\tvar reverse = function(output, inputs){\r\n\t\t\tvar a = inputs[0],\r\n\t\t\t\tb = inputs[1]\r\n\t\t\tvar firstError\r\n\t\t\tif(a && a.put){\r\n\t\t\t\ttry {\r\n\t\t\t\t\treturn a.put(reverseA(output, b && b.valueOf()))\r\n\t\t\t\t} catch(error) {\r\n\t\t\t\t\tif (error.deniedPut) {\r\n\t\t\t\t\t\tfirstError = error\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthrow error\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(b && b.put){\r\n\t\t\t\tb.put(reverseB(output, a && a.valueOf()))\r\n\t\t\t} else {\r\n\t\t\t\tthrow (firstError && firstError.message ? firstError : new Error('Can not assign change value to constant operators'))\r\n\t\t\t}\r\n\t\t};\r\n\t\t// define a function that can lazily ensure the operating function\r\n\t\t// is available\r\n\t\tvar operatorHandler = {\r\n\t\t\tapply: function(instance, args){\r\n\t\t\t\tforward = getOperatingFunction(forward);\r\n\t\t\t\treverseA = reverseA && getOperatingFunction(reverseA);\r\n\t\t\t\treverseB = reverseB && getOperatingFunction(reverseB);\r\n\t\t\t\tforward.reverse = reverse;\r\n\t\t\t\toperators[operator] = operatorHandler = new VariableExports.Variable(forward);\r\n\r\n\t\t\t\taddFlags(operatorHandler);\r\n\t\t\t\targs = Array.prototype.slice.call(args);\r\n\t\t\t\treturn operatorHandler.apply(instance, args);\r\n\t\t\t}\r\n\t\t};\r\n\t\tfunction addFlags(operatorHandler){\r\n\t\t\toperatorHandler.precedence = precedence;\r\n\t\t\toperatorHandler.infix = reverseB !== false;\r\n\t\t}\r\n\t\taddFlags(operatorHandler);\r\n\t\toperators[operator] = operatorHandler;\r\n\t\toperators[name] = function() {\r\n\t\t\tvar result = operatorHandler.apply(null, arguments)\r\n\t\t\treturn type ? result.as(type) : result\r\n\t\t}\r\n\t}\r\n\t// using order precedence from:\r\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\r\n\toperator('+', VNumber, 'add', 6, 'a+b', 'a-b', 'a-b');\r\n\toperator('-', VNumber, 'subtract', 6, 'a-b', 'a+b', 'b-a');\r\n\toperator('*', VNumber, 'multiply', 5, 'a*b', 'a/b', 'a/b');\r\n\toperator('/', VNumber, 'divide', 5, 'a/b', 'a*b', 'b/a');\r\n//\toperator('^', 7, 'a^b', 'a^(-b)', 'Math.log(a)/Math.log(b)');\r\n\toperator('?', null, 'if', 16, 'b[a?0:1]', 'a===b[0]||(a===b[1]?false:(function(){throw new Error()})())', '[a,b]');\r\n\toperator(':', null, 'choose', 15, '[a,b]', 'a[0]?a[1]:(function(){throw new Error()})()', 'a[1]');\r\n\toperator('!', VBoolean, 'not', 4, '!a', '!a', false);\r\n\toperator('%', VNumber, 'remainder', 5, 'a%b');\r\n\toperator('>', VBoolean, 'greater', 8, 'a>b');\r\n\toperator('>=', VBoolean, 'greaterOrEqual', 8, 'a>=b');\r\n\toperator('<', VBoolean, 'less', 8, 'a<b');\r\n\toperator('<=', VBoolean, 'lessOrEqual', 8, 'a<=b');\r\n\toperator('===', VBoolean, 'strictEqual', 9, 'a===b');\r\n\toperator('==', VBoolean, 'equal', 9, 'a==b');\r\n\toperator('&', VBoolean, 'and', 8, 'a&&b');\r\n\toperator('|', VBoolean, 'or', 8, 'a||b');\r\n\toperator('round', 'round', 8, 'Math.round(a*Math.pow(10,b||1))/Math.pow(10,b||1)', 'a', 'a');\r\n\treturn operators;\r\n}))\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./operators.js\n ** module id = 6\n ** module chunks = 0\n **/","(function (root, factory) { if (typeof define === 'function' && define.amd) {\r\n\tdefine(['./util/lang', './Variable'], factory) } else if (typeof module === 'object' && module.exports) {        \r\n  module.exports = factory(require('./util/lang'), require('./Variable')) // Node\r\n}}(this, function (lang, VariableExports) {\r\n\tvar Variable = VariableExports.Variable\r\n\t\r\n\tfunction deepCopy(source, target, derivativeMap) {\r\n\t\tif (source && typeof source == 'object') {\r\n\t\t\tif (source instanceof Array) {\r\n\t\t\t\ttarget = [] // always create a new array for array targets\r\n\t\t\t\tfor(var i = 0, l = source.length; i < l; i++) {\r\n\t\t\t\t\ttarget[i] = deepCopy(source[i], null, derivativeMap)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (!target || typeof target !== 'object') {\r\n\t\t\t\t\ttarget = derivativeMap && derivativeMap.get(source)\r\n\t\t\t\t\tif (!target) {\r\n\t\t\t\t\t\ttarget = {}\r\n\t\t\t\t\t\tderivativeMap && derivativeMap.set(source, target)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor (var i in source) {\r\n\t\t\t\t\ttarget[i] = deepCopy(source[i], target[i], derivativeMap)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn target\r\n\t\t}\r\n\t\treturn source\r\n\t}\r\n\r\n\tvar Copy = lang.compose(Variable, function(copiedFrom) {\r\n\t\t// this is the variable that we derive from\r\n\t\tthis.copiedFrom = copiedFrom\r\n\t\tthis.derivativeMap = new lang.WeakMap(null, 'derivative')\r\n\t\tthis.isDirty = new Variable(false)\r\n\t}, {\r\n\t\tgetValue: function(sync, context) {\r\n\t\t\tif(this.state) {\r\n\t\t\t\tthis.state = null\r\n\t\t\t}\r\n\t\t\tvar value = this.copiedFrom.valueOf(context)\r\n\t\t\tif(value && typeof value == 'object') {\r\n\t\t\t\tvar derivative = this.derivativeMap.get(value)\r\n\t\t\t\tif (derivative == null) {\r\n\t\t\t\t\tthis.derivativeMap.set(value, derivative = deepCopy(value, undefined, this.derivativeMap))\r\n\t\t\t\t\tthis.setValue(derivative, context)\r\n\t\t\t\t}\r\n\t\t\t\treturn derivative\r\n\t\t\t}\r\n\t\t\tif(this.value === undefined) {\r\n\t\t\t\treturn value\r\n\t\t\t}\r\n\t\t\treturn this.value\r\n\t\t},\r\n\t\tgetCopyOf: function(value) {\r\n\t\t\tvar derivative = this.derivativeMap.get(value)\r\n\t\t\tif (derivative == null) {\r\n\t\t\t\tthis.derivativeMap.set(value, derivative = deepCopy(value, undefined, this.derivativeMap))\r\n\t\t\t}\r\n\t\t\treturn derivative\r\n\t\t},\r\n\t\tsave: function() {\r\n\t\t\t// copy back to the original object\r\n\t\t\tvar original = this.copiedFrom.valueOf()\r\n\t\t\tvar newCopiedFrom = deepCopy(this.valueOf(), original)\r\n\t\t\tif (this.copiedFrom.put) { // copiedFrom doesn't have to be a variable, it can be a plain object\r\n\t\t\t\t// assign it now\r\n\t\t\t\tthis.copiedFrom.put(newCopiedFrom)\r\n\t\t\t}\r\n\t\t\tthis.isDirty.put(false)\r\n\t\t\tthis.onSave && this.onSave()\r\n\t\t},\r\n\t\trevert: function() {\r\n\t\t\tvar original = this.copiedFrom.valueOf()\r\n\t\t\tthis.derivativeMap = new lang.WeakMap(null, 'derivative') // clear out the mapping, so we can start fresh\r\n\t\t\tthis.put(deepCopy(original, undefined, this.derivativeMap))\r\n\t\t\tthis.isDirty.put(false)\r\n\t\t},\r\n\t\tupdated: function() {\r\n\t\t\tthis.isDirty.put(true)\r\n\t\t\treturn Variable.prototype.updated.apply(this, arguments)\r\n\t\t}\r\n\t})\r\n\treturn Copy\r\n}))\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Copy.js\n ** module id = 7\n ** module chunks = 0\n **/"],"sourceRoot":""}