{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///index.js","webpack:///webpack/bootstrap 568c25c9aa6571e3ec24","webpack:///./index.js","webpack:///./Element.js","webpack:///./util/lang.js","webpack:///./Renderer.js","webpack:///./Variable.js","webpack:///./react.js","webpack:///./operators.js","webpack:///./Copy.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","apply","undefined","Element","Renderer","react","Copy","operators","VariableExports","lang","main","Object","create","copy","spawn","ElementRenderer","booleanStyle","options","element","value","key","style","defaultStyle","directStyle","layoutChildren","parent","children","container","prepend","fragment","length","doc","createDocumentFragment","i","l","childNode","child","currentParent","appendChild","isContentNode","contentNode","notifies","ref","isIterable","variableAsContent","Array","nodeType","Error","createTextNode","insertBefore","firstChild","content","textNode","renderer","TextRenderer","variable","bidirectionalHandler","InputPropertyRenderer","name","inputs","tagName","bindChanges","prototype","renderSelectValueUpdate","type","isNaN","noop","applyAttribute","AttributeRenderer","setAttribute","applySubProperties","SubPropertyRenderer","compose","PropertyRenderer","arguments","renderUpdate","subKey","subValue","assignProperties","properties","propertyHandlers","_propertyHandlers","constructor","VariableClass","hasOwn","put","styleDefinition","propertyHandler","styleDefinitions","StyleRenderer","slice","addEventListener","defineProperty","enumerable","configurable","writable","assignGenerators","customGenerators","styleGenerators","nativeGenerators","generators","_generators","GeneratorVariable","bind","buildContent","each","defineHasOwn","ItemClass","getCollectionOf","Item","itemVariable","from","_item","ListRenderer","forEach","item","childElement","buildInputContent","conversion","nextTurn","inputEvents","event","result","Context","deny","parseFloat","inputType","inputProperty","date","datetime","time","mergeObject","existing","applyToConstructor","argument","applyOnCreate","_applyOnCreate","Variable","isGenerator","classHandlers","TypeError","getApplySet","Class","hasOwnProperty","getForClass","parentApplySet","getPrototypeOf","keys","getOwnPropertyNames","propertyName","toLowerCase","renderDescriptor","renderMethod","map","WeakMap","get","has","set","makeElementConstructor","selector","withProperties","setPrototypeOf","ownedClasses","forTarget","property","propertyForElement","selectorMatch","match","SELECTOR_REGEX","operator","className","remaining","createElement","presumptiveParentMap","buggyConstructorSetter","ElementApplyOnCreate","created","shadow","attachShadow","mode","ready","append","defineTag","extendElement","customElements","extendClass","HTMLElement","extends","console","warn","getConstructor","tags","setupElement","props","elementPropertyHandlers","assigned","handlers","generate","elements","elementName","ElementClass","generateInputs","HTMLInputElement","target","From","Target","createInstance","elementMap","instanceMap","parentNode","ownedInstances","instance","subject","ThisElementVariable","_Variable","elementOverlay","alkaliRenderers","variableProperties","cleanup","renderers","stop","needsRestart","restart","elementAttached","attached","elementDetached","detached","firstVisit","node","state","__alkaliAttached__","action","body","contains","knownElementProperties","newValue","definition","ClassNameRenderer","currentClassName","changingClassName","removed","replace","document","tag","INPUT","TEXTAREA","testElement","originalConstructor","__proto__","display","visibility","color","opacity","zoom","minZoom","maxZoom","fontWeight","position","textDecoration","base","proto","classes","flag","class","for","role","render","dataset","attributes","styleObjectHandler","input","valueAsNumber","valueAsDate","checked","e","select","textarea","a","area","button","dialog","embed","form","frame","frameset","iframe","img","option","optgroup","output","label","td","th","script","track","link","meta","meter","progress","del","ins","source","video","keygen","object","param","radios","querySelectorAll","radio","dispatchEvent","Event","assign","within","aliases","Anchor","Image","Paragraph","Textarea","DList","UList","OList","ListItem","Text","TextInput","TableRow","TableCell","TableHeaderCell","TableHeader","TableBody","alias","to","refresh","moveLiveElementsEnabled","Symbol","hasInstance","extend","ExtendedElement","descriptor","getOwnPropertyDescriptor","MutationObserver","lifeStates","nodes","observer","mutations","il","mutation","j","jl","nodeIteration","k","kl","baseNode","currentNode","nextNode","nextSibling","observe","childList","subtree","specify","distinctive","generics","push","distinctSubject","subjectMap","specifiedInstance","defaultInstance","getContextualized","_contextMap","context","matches","merge","childContext","getDistinctElement","feature","hasFeatures","queue","listener","queuedListeners","indexOf","events","diff","previous","current","callback","queued","toJSONHidden","func","displayName","generator","next","stepReturn","generatorIterator","isThrowing","nextValue","done","nextVariable","run","then","error","requestAnimationFrame","promise","Promise","addKey","keyFlag","currentValue","targetAncestor","previousSet","previousGet","remove","timerStarted","setInterval","watchedObjects","watchedCopies","listeners","unobserve","splice","Hidden","toJSON","eval","processAnimationFrame","toRender","setTimeout","execute","resolve","reject","resolution","finished","errorResolution","isResolved","errback","handle","newError","values","mapProperty","intermediary","when","errorHandler","whenAll","promiseInvolved","callbackResult","resolved","onResolve","onError","onEach","readyInputs","lastPromiseResult","previousPromiseResult","Base","div","update","updateRendering","shouldRender","alwaysUpdate","updated","subscribe","valueOf","updateOnStart","contextualized","ContentRenderer","onElementRemoval","stopNotifies","invalidatedElements","nextId","version","updateEvent","by","invalidated","contextMatches","deferredRender","isCanceled","hash","newContext","integrate","addInput","invalidateElement","invalidatedParts","queueTask","processQueue","updateElement","getId","getSubject","always","thisElement","renderersOnShow","addElement","omitValueOf","started","renderLoading","oldValue","String","eventualValue","innerHTML","builtList","updates","replaceChild","childNodes","nodeValue","eachItem","childElements","removeChild","previousIndex","index","nextChild","newElement","onShowElement","shownElement","getElementsByClassName","includingTop","onlyChildren","getElementsByTagName","whenStrict","sources","NotifyingContext","registerListener","propertyListenersMap","listenerId","autoObserveObjects","listeningToObject","deregisterListener","RefreshEvent","visited","Set","PropertyChangeEvent","childEvent","AddEvent","args","DeleteEvent","forPropertyNotifyingValues","_properties","returnedVariable","hasChildNotifiers","subProperties","arrayToModify","cachedValue","array","results","cachedVersion","insertedAt","added","startingIndex","arrayLength","addedCount","arrayPosition","modifier","removedAt","removalCount","toArray","newArray","makeSubVar","Type","objectUpdated","_propertyChange","all","transform","Transform","argsToArray","VArray","as","keyMapping","valueArray","resultObject","createForInstance","generalizeClass","prototypeNames","getGeneralizedDescriptor","generalizeMethod","method","instanceForContext","VFunction","VMethod","VString","VNumber","Number","VBoolean","Boolean","VSet","VDate","Date","getType","primitives","of","typedObject","reactive","Reflect","getMetadata","log","typeScriptConversions","defineArrayMethod","returns","IterativeResults","IterativeMethod","noChange","RequestChange","RequestSet","NOT_MODIFIED","nextVersion","now","contextFromCache","contextualize","parentContext","contextMap","Math","max","versionWithChildren","sourceVariable","nextProperty","_logStackTrace","v","stack","split","test","shift","coalesce","_debugOpts","shortStackTrace","line","some","re","__debug","s","stackObject","join","VariablePrototype","_currentValue","valueContext","gotValue","getValue","ifModifiedSince","previousNotifyingValue","PropertyClass","propertyVariable","isPropertyClass","ContextualizedVariable","defaultContext","_changeValue","deniedPut","onPropertyChange","eachKey","forDependencies","hasNotifyingChild","init","dependency","handles","updateVersion","getVersion","getFullVersion","selectVariable","getUpdates","since","nextUpdateMap","isDownstream","add","contextualInstance","dependent","fixed","collection","invalidate","updateQueued","updateReceiver","unsubscribe","setValue","undefine","is","proxiedVariable","thisVariable","proxy","complete","onValue","toString","callbackOrItemClass","callbackOrContext","collectionOf","transformFunction","reverse","schema","parentSchemaProperties","validate","required","valid","isValid","validation","Validating","structured","structure","observeObject","observerCount","el","deliverChanges","_sN","_debug","random","_lastUpdated","NewType","names","ExtendedVariable","getGeneratorDescriptor","defineAs","_defaultInstance","iterator","VMap","Map","transformContext","contextualizedVariable","readyState","isFinite","argumentName","getArguments","originalValue","setReverse","generic","_isStrictArray","unshift","pop","ArrayClass","lastValue","resuming","oldSources","newLength","newSources","description","proxyHandler","deleteProperty","ownKeys","Proxy","_collectionOf","_collection","Collection","generalize","Function","returnValue","charAt","codeCharAt","lastIndexOf","substr","toUpperCase","toFixed","toExponential","toPrecision","toLocaleString","clear","delete","_array","toDateString","toTimeString","toGMTString","toUTCString","getTime","setTime","VPromise","string","number","boolean","__esModule","default","isStrictArray","_mappedItems","wrapped","filter","mapFunction","emit","keyGenerator","valueGenerator","hasKeyFunction","hasValueFunction","hasKey","group","variables","preserveObjects","_getAsObject","ObjectTransform","prop","directPropertyValue","cond","consequent","alternate","choose","fcall","mcall","ncall","concat","obj","getOperatingFunction","expression","operatingFunctions","precedence","forward","reverseA","reverseB","addFlags","operatorHandler","infix","firstError","b","message","deepCopy","derivativeMap","copiedFrom","isDirty","derivative","getCopyOf","save","original","newCopiedFrom","onSave","revert"],"mappings":"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AA8G,EACA/C,OAAA,SAAAjF,EAAAgB,GACAiE,EAAAjF,EAAAgB,IAEAO,SAAA,SAAAvB,EAAAgB,GACAhB,EAAAuB,SAAAP,GAEA8J,OAAA,SAAA9K,EAAAgB,GACAhB,EAAA8K,OAAA9J,IAoTAuE,YAuBAvF,GAAA6J,EAAAtK,KAAA,mBAAAgM,yBAAA,aAEAvL,IAAAmL,YACAnL,GAAAoT,OAAA,SAAA5G,EAAA5H,GACA,wBAAA4H,GAOA7H,EAAA6H,EAAA5H,IALA8D,EAAA8D,OACAtE,GAAAtD,EAAA4H,KAQAxM,GAAAqT,OAAA,SAAAtS,KAIAmL,GACA,QACA,SACA,QACA,QACA,KACA,IACA,QACA,QACA,WACA,WACA,QACA,QACA,QACA,KACA,QACA,MACA,WACA,KACA,KACA,UACA,MACA,MACA,QACA,SACA,OACA,QACA,SACA,SACA,SACA,IACA,QACA,WACA,MACA,UACA,QACA,IACA,SACA,SACA,WACA,SACA,KACA,MACA,IACA,MACA,QACA,OACA,OACA,MACA,OACA,SACA,QACA,KACA,SACA,QACA,MACA,SACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,WACA,QACA,OACA,OACA,QACA,KACA,OACA,OACA,MACA,IACA,UACA,QACA,OACA,SACA,SACA,aACA,SACA,OACA,OACA,WACA,MACA,UACA,OACA,UACA,MACA,MACA,SACA,UACA,WACA,KACA,SACA,SACA,OACA,KACA,OACA,MAEAI,GACA,WACA,WACA,SACA,QACA,QACA,OACA,WACA,QACA,QACA,SACA,QACA,SACA,MACA,OACA,MACA,QAEA,IAAAV,OAyDA0H,IACAC,OAAA,IACAC,MAAA,MACAC,UAAA,IACAC,SAAA,WACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,SAAA,KACAC,KAAA,QACAC,UAAA,QACAC,SAAA,KACAC,UAAA,KACAC,gBAAA,KACAC,YAAA,QACAC,UAAA,QAEA,QAAAC,MAAAhB,KACA,SAAAgB,EAAAC,GACA/T,OAAAiF,eAAAzF,GAAAsU,GACA9K,IAAA,WACA,MAAAxK,MAAAuV,OAGGD,GAAAhB,GAAAgB,IAGHtU,IAAAkL,SACAjL,EAAAiL,SACAlL,GAAAyB,UACAzB,GAAAwU,QAAAvU,EAAAuU,QACAxU,GAAAc,SACA2T,yBAAA,GAEAzU,GAAAgD,QAAA,SAAAjC,GAEA,OACAqB,eAAA,EACA3B,OAAAM,EAAAN,OAAA2F,KAAArF,KAIAf,GAAAqM,aAAA,aACA,mBAAAqI,SAEAlU,OAAAiF,eAAAzF,GAAAqM,aAAAqI,OAAAC,aAAmE3T,MAAA,SAAAwL,GACnE,MAAAA,MAAA/L,QAAA+L,aAKAxM,GAAA4U,OAAA,SAAAjM,EAAA/D,GACA,QAAAiQ,KACA,MAAAlM,GAAA7I,MAAAd,KAAAuF,WAEAuF,GAAA+K,EAAAlM,EACA,IAAAhF,GAAAkR,EAAAlR,UAAAnD,OAAAC,OAAAkI,EAAAhF,WACAoB,aAAiB/D,MAAA6T,IAUjB,OARArU,QAAAyI,oBAAArE,GAAAmC,QAAA,SAAA9F,GACA,GAAA6T,GAAAtU,OAAAuU,yBAAAnQ,EAAA3D,EACAuH,IAAAvH,GACAuH,GAAAvH,GAAA4T,EAAAC,EAAA9T,MAAAC,EAAA2D,GAEApE,OAAAiF,eAAA9B,EAAA1C,EAAA6T,KAGAD,EAgFA,IAAAnO,IAAA1G,GAAA0G,KAAArG,EAAAqG,IAiEA,sBAAAsO,kBAAA,CACA,GAAAC,MACA1R,KAAA,WACA2R,MAAA,eACA9G,OAAAN,IAEAvK,KAAA,WACA2R,MAAA,aACA9G,OAAAR,IAsBAuH,GAAA,GAAAH,kBAAA,SAAAI,GACA,OAAAtT,GAAA,EAAAuT,EAAAD,EAAAzT,OAAyCG,EAAAuT,EAAQvT,IAIjD,OAHAwT,GAAAF,EAAAtT,GAGAyT,EAAA,EAAAC,EAAAP,GAAAtT,OAA2C4T,EAAAC,EAAQD,IAAA,CACnD,GAAArH,GAAA+G,GAAAM,GACAL,EAAAI,EAAApH,EAAAgH,MAEAO,GACA,OAAAC,GAAA,EAAAC,EAAAT,EAAAvT,OAAuC+T,EAAAC,EAAQD,IAAA,CAC/C,GAAAE,GAAAV,EAAAQ,EACA,IAAA1H,EAAA4H,EAAA1H,GAAA,CAEA,GAAA2H,GAAAD,EAAA7S,UACA,IAAA8S,EACA,QACA,GAAAC,EAUA,IATA,IAAAD,EAAAlT,UAAAqL,EAAA6H,EAAA3H,IAEA4H,EAAAD,EAAA9S,WACA+S,IACAA,EAAAD,EAAAE,cAGAD,EAAAD,EAAAE,aAEAD,EAGA,EAEA,IADAD,IAAA/I,WACA+I,IAAAD,EACA,QAAAH,WAEWK,EAAAD,EAAAE,aAEXF,GAAAC,OAUAX,IAAAa,QAAApU,EAAAyM,MAAAzM,GACAqU,WAAA,EACAC,SAAA,IAuFA,MAnFA5V,GAAAI,KAAAL,EAAAmH,QAAA7D,WACAwS,QAAA,SAAA7N,GACA,GAAAvH,GAAA/B,KAAAiO,QACAmJ,GAAA,GACIpX,KAAAqX,WAAArX,KAAAqX,cAAAC,KAAAhO,EACJ,IACAtJ,KAAAuX,kBAAAxV,IACAqV,GAAA,EAEA,IAAAI,GAAAzV,EAAAgE,YAAAgF,YACA,IAAAyM,EAAA,CACA,GAAA3J,GAAA2J,EAAAhN,IAAAlB,EACA,IAAAuE,EASA,MARAuJ,KACApX,KAAAuX,gBAAAxV,GAEA0V,kBAAA5J,EAAArD,IAAAzI,GACA0V,mBACA5J,EAAAnD,IAAA3I,EAAA0V,kBAAA5J,EAAAF,eACAE,EAAAF,eAAA5L,GAAA,GAAAuH,IAEAmO,yBAGI1V,IAAA+L,YAAApC,GAAAlB,IAAAzI,GAEJ,OAAAuH,GAAAoO,iBAGAC,kBAAA,SAAAvT,GAEA,GAAArC,GAAA/B,KAAAiO,OACA,KAAAlM,EAEA,MAAAqC,EAEA,IAAAA,EAAAwT,YACA,GACA,GAAA5J,GAAA5J,EAAAwT,YAAApN,IAAAzI,EACA,IAAAiM,KAAA6J,QAAAC,QAAA/V,GACA,MAAAiM,SAEKjM,IAAA+L,YAAApC,GAAAlB,IAAAzI,GAEL,OAAAqC,GAAAyT,SAAAzT,EAAAyT,QAAAC,QAAA9X,KAAAiO,SAEA7J,EAFA,QAMA2T,MAAA,SAAAC,KACAhY,KAAAuX,iBACAvX,KAAAuX,kBAAAS,EAAAT,iBAAAvX,KAAAuX,gBAAAjI,SAAA0I,EAAAT,oBACAvX,KAAAuX,gBAAAS,EAAAT,oBAEAD,KAAAxW,MAAAd,KAAAqX,WAAArX,KAAAqX,aAAAW,EAAAX,WAEAY,mBAAA,SAAA3O,EAAAvH,GACA,GACA,GAAAyV,GAAAzV,EAAAgE,YAAAgF,YACA,IAAAyM,EAAA,CACA,GAAA3J,GAAA2J,EAAAhN,IAAAlB,EACA,IAAAuE,KAAApD,IAAA1I,GACA,MAAAA,UAGIA,IAAA+L,YAAApC,GAAAlB,IAAAzI,KAEJ+V,QAAA,SAAA/V,GACA,GAAAsV,GAAArX,KAAAqX,QACA,IAAAA,EACA,OAAAvU,GAAA,EAAAC,EAAAsU,EAAA1U,OAAwCG,EAAAC,EAAOD,IAC/C,GAAA9C,KAAAiY,mBAAAZ,EAAAvU,GAAAf,KAAA/B,KAAAuX,gBACA,QAIA,aAMAvW,MHoFM,SAASnB,OAAQD,QAASM,qBI1jDhC,GAAAS,gCAAAC,6BAAAC,+BAAA,SAAAnB,EAAAC,GACAiB,gCAAAD,+BAAA,EAAAE,8BAAA,kBAAAF,+DAAAG,MAAAlB,QAAAgB,8BAAAD,iCAAAI,SAAAF,gCAAAhB,OAAAD,QAAAiB,iCAEEb,KAAA,WAgBF,QAAAyK,KAAAyN,GACA,MAAAC,aAAAD,GAuFA,QAAAE,OAAAC,EAAAxE,EAAAtP,GACA+T,gBACAA,gBAAAC,QAAAF,SACAC,gBAAAhB,KAAAe,IAGAC,iBAAAD,GACA/W,KAAA8G,SAAA,WACAkQ,gBAAAvQ,QAAA,SAAAsQ,GACA,GAAAG,KACAH,GAAAzS,WAAAmC,QAAA,SAAAkD,GACAuN,EAAAlB,MAAmB9J,OAAA6K,EAAAxE,OAAAtP,KAAA0G,MAEnBoN,EAAAG,GACAH,EAAAxE,OAAA,KACAwE,EAAAzS,WAAA,OAEA0S,gBAAA,MACI,IAEJD,EAAAxE,QACA,IAAAjO,GAAAyS,EAAAzS,aAAAyS,EAAAzS,cACAA,GAAA2S,QAAAhU,SACAqB,EAAA0R,KAAA/S,GAqBA,QAAAkU,MAAAC,EAAAC,EAAAC,GAEA,GAAAC,EACA,QAAA/V,KAAA4V,GACAA,EAAA9O,eAAA9G,IAAA4V,EAAA5V,KAAA6V,EAAA7V,KAEA4V,EAAA5V,GAAA6V,EAAA7V,GACA+V,WAAAvB,MAAoC/S,KAAAzB,IAGpC,QAAAA,KAAA6V,GACAA,EAAA/O,eAAA9G,KAAA4V,EAAA9O,eAAA9G,KAEA4V,EAAA5V,GAAA6V,EAAA7V,GACA+V,WAAAvB,MAAoC/S,KAAAzB,IAGpC+V,IACAD,EAAAC,GAOA,QAAAC,gBACA,MAAAA,cA4NA,QAAAvP,aAAAwP,GACA,qBAAAA,GAAA,CACA,GAAAhT,GAAAgT,EAAAhT,WAEA,8BAAAA,EAAAiT,aAAAjT,EAAAxB,OAKA,QAAA5C,OAAAsX,GAMA,QAAAC,KACA,QACA,GAAAC,GAAAC,EAAAC,EAAA,gBAAAC,EACA,IAAAH,EAAAI,KACA,MAAAJ,GAAAnX,KAQA,IANAsX,EAAAH,EAAAnX,MAGA,kBAAAsX,IAAA/P,YAAAiQ,gBACAF,EAAAG,IAAAH,MAEAA,KAAAI,KAGA,MAAAJ,GAAAI,KAAA,SAAA1X,GAEA,MADAsX,GAAAtX,EACAkX,KACM,SAAAS,GAGN,MAFAL,GAAAK,EACAN,GAAA,EACAH,KAGAG,IAAA,GA7BA,GAEAC,GACAD,EAHAD,EAAA,kBAAAH,QAIA,OAAAC,KAvZA,GAAAnP,gBAAAvI,OAAAuI,gBAAA,SAAAiH,GAAgE,MAAAA,GAAAX,WAChEvF,eAAAtJ,OAAAsJ,gBAAA,SAAAkG,EAAAC,GAAuED,EAAAX,UAAAY,GACvEkH,aACAyB,sBAAA,mBAAAA,uBACAnT,eAAAjF,OAAAiF,gBAAA,WACA,IAEA,MADAjF,QAAAiF,kBAA4B,SAC5B,EACI,MAAAsL,QAGJ8H,QAAA,mBAAAC,SACA9D,iBAAA,mBAAAA,kBACAzL,QAAA,kBAAAA,UAQAyM,QACAvM,IAAA,kBACA,SAAA+C,EAAA6K,GASA,QAAA0B,GAAA9X,GACA,GAAA+X,GAAA,MAAA/X,CACA,KAAAjC,KAAAga,GAAA,CAGAha,KAAAga,IAAA,CAEA,IAEAlE,GAFAmE,EAAAzM,EAAAvL,GACAiY,EAAA1M,CAEA,GACAsI,GAAAtU,OAAAuU,yBAAAmE,EAAAjY,UACK6T,IAAAoE,EAAAnQ,eAAAmQ,IAEL,IAAApE,KAAApL,IAAA,CACA,GAAAyP,GAAArE,EAAApL,IACA0P,EAAAtE,EAAAtL,GACAhJ,QAAAiF,eAAA+G,EAAAvL,GACAuI,IAAA,WACA,MAAAyP,GAAAG,EAAA7Z,KAAAP,OAEA0K,IAAA,SAAA1I,GACAmY,EAAA5Z,KAAAP,KAAAgC,GACAiY,IAAAjY,IACAiY,EAAAjY,EACAqW,GACAA,IAAoB7K,OAAAxN,KAAAuE,KAAAtC,OAIpByE,WAAAoP,EAAApP,iBAGAlF,QAAAiF,eAAA+G,EAAAvL,GACAuI,IAAA,WACA,MAAAyP,IAEAvP,IAAA,SAAA1I,GACAiY,IAAAjY,IACAiY,EAAAjY,EACAqW,GACAA,IAAoB7K,OAAAxN,KAAAuE,KAAAtC,OAIpByE,YAAAoP,KAAApP,cA9CA,MAJA2R,GAAA0B,SACA1B,EAAAgC,OAAA,WACAhC,EAAA,MAEAA,GAoDA,SAAA7K,EAAA6K,GACAiC,eACAA,cAAA,EACAC,YAAA,WACA,OAAAzX,GAAA,EAAAC,EAAAyX,eAAA7X,OAA8CG,EAAAC,EAAOD,IACrD2V,KAAAgC,cAAA3X,GAAA0X,eAAA1X,GAAA4X,UAAA5X,KAEK,IAEL,IAAApB,KACA,QAAAoB,KAAA0K,GACAA,EAAA5D,eAAA9G,KACApB,EAAAoB,GAAA0K,EAAA1K,GAGA0X,gBAAAlD,KAAA9J,GACAiN,cAAAnD,KAAA5V,GACAgZ,UAAApD,KAAAe,IAEAC,gBA2BAqC,UAAAlQ,IAAA,WAAAjJ,OAAAmZ,UACA,SAAAnN,EAAA6K,GACAA,EAAAgC,QACAhC,EAAAgC,QAEA,QAAAvX,GAAA,EAAAC,EAAAyX,eAAA7X,OAA4CG,EAAAC,EAAOD,IACnD,GAAA0X,eAAA1X,KAAA0K,GAAAkN,UAAA5X,KAAAuV,EAIA,MAHAmC,gBAAAI,OAAA9X,EAAA,GACA2X,cAAAG,OAAA9X,EAAA,OACA4X,WAAAE,OAAA9X,EAAA,IAKA0X,kBACAC,iBACAC,aACAJ,cAAA,EAuBAja,GAAA,EAOAwa,OAAA,YAEAA,QAAAlW,UAAAmW,OAAAhC,YAEA,IAAAxM,YACA,KACAA,YAAAyO,KAAA,mDACE,MAAAhJ,IAEF,GAAAzQ,OACAsY,sBAAAnP,IAAA,yBAAAmP,sBACA,WAGA,QAAAoB,KACA,OAAAlY,GAAA,EAAoBA,EAAAmY,EAAAtY,OAAqBG,IACzCmY,EAAAnY,IAEAmY,MACApC,GAAA,EAEA,QAAAe,GAAA1V,GACA2U,IACAqC,WAAAF,GACAnC,GAAA,GAEAoC,EAAA3D,KAAApT,GAdA,GAAA+W,MACApC,GAAA,CAeA,OAAAe,MAEAE,QAAArP,IAAA,WAAAqP,QAAA,WACA,QAAAA,GAAAqB,GAGA,QAAAC,GAAApZ,GAEAA,KAAA0X,KAEA1X,EAAA0X,KAAA0B,EAAAC,IAEAC,EAAAtZ,EACAuZ,KAGA,QAAAF,GAAA1B,GAEA6B,EAAA7B,EACA4B,IAGA,QAAAA,KACAE,GAAA,CACA,QAAA3Y,GAAA,EAAAC,EAAAqV,EAAAzV,OAAqCG,EAAAC,EAAOD,IAC5CsV,EAAAtV,IAGAsV,GAAA,EAxBA,GAAAqD,GAAAH,EAAAE,EACApD,EAAA,CAyBA,OATA+C,GAAAC,EAAAC,IAUA3B,KAAA,SAAAd,EAAA8C,GACA,UAAA5B,GAAA,SAAAsB,EAAAC,GACA,QAAAM,KAEA,IACAH,IAAAE,EAEAL,EAAAG,GAGAJ,EAAAI,EACAE,EAAAF,GACA5C,EACAA,EAAA0C,MAES,MAAAM,GAETP,EAAAO,IAGAH,EAEAE,KAEAvD,WAAAd,KAAAqE,OAMA,MAAA7B,MAGAvP,QAAAE,IAAA,WAAAF,QACA,SAAAsR,EAAAtX,GACA,GAAAuX,GAAA,MAAAvX,GAAA,IAAAlE,IACA,OAAAoK,KAAA,mBAEAD,IAAA,SAAAvI,GACA,MAAAA,GAAA6Z,IAEApR,IAAA,SAAAzI,EAAAD,GACAR,OAAAiF,eAAAxE,EAAA6Z,GACA9Z,QACA0E,YAAA,OAKA8D,IAAA,SAAAvI,GACA,GAAA8Z,GAAA9Z,EAAA6Z,EACA,OAAAC,MAAA/Z,OAEA0I,IAAA,SAAAzI,EAAAD,GAEA,GAAA+Z,GAAA9Z,EAAA6Z,KAAA7Z,EAAA6Z,GAAA,GAAAjB,QACAkB,GAAA/Z,WAKAgV,gBACA2D,oBACArO,wBACA0P,KAAA,SAAAha,EAAA4W,EAAAqD,GACA,MAAAja,MAAA0X,KACA1X,EAAA0X,KAAAd,EAAAqD,IAAAja,EAAA4W,EAAA5W,IAEAka,QAAA,SAAA1X,EAAAoU,GAEA,OADAuD,GACArZ,EAAA,EAAAC,EAAAyB,EAAA7B,OAAoCG,EAAAC,EAAOD,IAC3C0B,EAAA1B,IAAA0B,EAAA1B,GAAA4W,OACAyC,GAAA,EAGA,IAAAA,EAAA,CAEA,GAAAC,GACAC,CACA,QACA3C,KAAA,SAAA4C,EAAAC,GA0BA,QAAAC,KACAhR,IACAA,IACA6Q,EACA9T,EAAA+T,EAAAF,IAEAC,GAAA,EACA9T,EAAA+T,EAAAF,EAAAxD,EAAA6D,MA5BA,OAHAlU,GAEAmU,EAHAlR,EAAA,EAEAiR,KAEA3Z,EAAA,EAAoBA,EAAA0B,EAAA7B,OAAmBG,IAAA,CACvC,GAAA6O,GAAAnN,EAAA1B,EACA0I,KACAmG,KAAA+H,MACA,SAAA5W,EAAA6Z,GACAD,EAAA/K,EAAA+H,KAAA,SAAA1X,GAGA,MAFAya,GAAA3Z,GAAAd,EACAwa,IACAhR,EAGAmR,EAFApU,GAIUgU,IACDzZ,EAAA4Z,IAETD,EAAA3Z,GAAA6O,EACA6K,KAeA,MAZAA,KAYAE,GAEAlY,UAIA,MAAAoU,GAAApU,IAGAa,QAAA,SAAAuX,EAAA7W,EAAAH,GACA,GAAAjB,GAAAoB,EAAApB,UAAAnD,OAAAC,OAAAmb,EAAAjY,UACAmG,gBAAA/E,EAAA6W,EACA,QAAA9Z,KAAA8C,GACAjB,EAAA7B,GAAA8C,EAAA9C,EAGA,OADA6B,GAAAoB,cACAA,GAEAqC,SAAAqC,IAAA,oBACA,SAAAmO,GAIA,GAAAiE,GAAA9M,SAAAtE,cAAA,OACA0K,EAAA,GAAAH,kBAAA4C,EACAzC,GAAAa,QAAA6F,GACApL,YAAA,IAEAoL,EAAA3X,aAAA,IAAA7E,OAEA,SAAAuY,GAEAsC,WAAAtC,EAAA,IAEAlX,KAAAF,OAAA4S,QAAA,SAAA5G,EAAAkG,GACA,OAAA5Q,KAAA4Q,GACAlG,EAAA1K,GAAA4Q,EAAA5Q,EAEA,OAAA0K,IA+CA,OArCAlM,MAAAiI,wBAoCAjI,KAAAK,YACAL,QJikDM,SAASzB,EAAQD,EAASM,GK1/DhC,GAAAS,GAAAC,EAAAC,GAAA,SAAAnB,EAAAC,GACAiB,GAAAV,EAAA,GAAAA,EAAA,IAAAS,EAAA,EAAAE,EAAA,kBAAAF,KAAAG,MAAAlB,EAAAgB,GAAAD,IAAAI,SAAAF,IAAAhB,EAAAD,QAAAiB,KAEEb,KAAA,SAAAsB,EAAAD,GASF,QAAAJ,GAAAa,GACA,GAAAsC,GAAAtC,EAAAsC,QAMA,IAJApE,KAAAoE,WACAtC,EAAA8I,WACA5K,KAAA4K,SAAA9I,EAAA8I,UAEA9I,EAAAqL,SAAA,CACAnN,KAAAmN,SAAArL,EAAAqL,SACAnN,KAAA+B,QAAA/B,KAAAmN,SAAA,EACA,QAAArK,GAAA,EAAAC,EAAA/C,KAAAmN,SAAAxK,OAA2CG,EAAAC,EAAOD,KAClD9C,KAAAmN,SAAArK,GAAAuL,kBAAArO,KAAAmN,SAAArK,GAAAuL,qBAAAiJ,KAAAtX,UAGA,KAAA8B,EAAAC,QAIA,SAAA6B,OAAA,kCAHA,IAAA7B,GAAA/B,KAAA+B,QAAAD,EAAAC,SACAA,EAAAsM,kBAAAtM,EAAAsM,qBAAAiJ,KAAAtX,MAgBA,GAZA8B,EAAAgb,SACA9c,KAAA+c,gBAAAjb,EAAAgb,QAEAhb,EAAAkb,eACAhd,KAAAgd,aAAAlb,EAAAkb,cAEAlb,EAAA0D,eACAxF,KAAAwF,aAAA1D,EAAA0D,cAEA1D,EAAAmb,eACAjd,KAAAid,aAAAnb,EAAAmb,eAEA7Y,EAAA8Y,QAAA,CAEA,GAAAhZ,GAAAlE,IACAoE,GAAA+Y,UAAA,SAAA7U,GAGApE,EAAAE,UACAgZ,QAAA,WACA,MAAA9U,GAAAtG,UAGAkC,EAAAgZ,YAGA,GAAApb,EAAAub,iBAAA,GAEArd,KAAAoE,SAAAgZ,QAAApd,KACA,IAAAsd,GAAAtd,KAAAsd,gBAAAtd,KAAAoE,QAEAkZ,GAAAha,SAAAtD,UAEAA,MAAA+c,iBAAA,GAiFA,QAAAnb,GAAAE,GACAb,EAAAV,KAAAP,KAAA8B,GAsFA,QAAAmD,GAAAnD,GACAA,EAAAyC,OACAvE,KAAAuE,KAAAzC,EAAAyC,MAEA3C,EAAAd,MAAAd,KAAAuF,WASA,QAAAD,GAAAxD,GACAA,EAAAyC,OACAvE,KAAAuE,KAAAzC,EAAAyC,MAEA3C,EAAAd,MAAAd,KAAAuF,WASA,QAAAjB,GAAAxC,GACAA,EAAAC,SAAA,WAAAD,EAAAC,QAAA0C,SAAA,UAAA3C,EAAAyC,OAEAvE,KAAAwF,aAAAxF,KAAA4E,yBAEAU,EAAAxE,MAAAd,KAAAuF,WAiCA,QAAAe,GAAAxE,GACAA,EAAAyC,OACAvE,KAAAuE,KAAAzC,EAAAyC,MAEA3C,EAAAd,MAAAd,KAAAuF,WASA,QAAAgY,GAAAzb,GACAF,EAAAd,MAAAd,KAAAuF,WAaA,QAAApB,GAAArC,GACA9B,KAAA8Q,SAAAhP,EAAAgP,SACA9Q,KAAAiE,SAAAnC,EAAAmC,SACArC,EAAAd,MAAAd,KAAAuF,WAwCA,QAAAuC,GAAAhG,GACAA,EAAAwF,OACAtH,KAAAsH,KAAAxF,EAAAwF,MAEA1F,EAAAd,MAAAd,KAAAuF,WA8GA,QAAAiY,GAAAzb,GAEA,GAAAA,EAAAsM,gBAEA,OADAG,GAAAzM,EAAAsM,gBACAvL,EAAA,EAAiBA,EAAA0L,EAAA7L,OAAsBG,IAAA,CACvC,GAAAoB,GAAAsK,EAAA1L,EACAoB,GAAAE,SAAAqZ,aAAAvZ,IAneA,GACAwZ,GACA7E,EACAoC,GAHA,mBAAAlL,wBAIA4N,EAAA,EACA/D,EAAAtY,EAAAsY,sBACApR,EAAAnH,EAAAmH,OA6eA,OAnbAvH,GAAA0D,WACAoB,YAAA9E,EACA2c,QAAA,WACAb,gBAAA,WACA,SAAAnZ,OAAA,iEAEAsZ,QAAA,SAAAW,EAAAC,EAAAjG,GACA,IAAA7X,KAAA+d,eACAlG,GAAA7X,KAAAge,eAAAnG,IAAA,CAEA7X,KAAA+d,aAAA,EACA/d,KAAAie,iBACAje,KAAAie,eAAAC,YAAA,EACAle,KAAAie,eAAA,KAEA,IAAA/Z,GAAAlE,IACA4Z,GAAA,WACA8D,EAAA,KACAxZ,EAAA6Y,gBAAA7Y,EAAA+Y,kBAKAkB,KAAA,aAGAC,WAAA,WACA,UAAA5V,GAAAxI,KAAA+B,UAEAsc,UAAA,SAAAxG,EAAAyF,GACAtd,KAAAse,SAAAhB,IAEAgB,SAAA,SAAAhB,GACAtd,KAAAoE,WAAAkZ,IACAtd,KAAAsd,mBAGA3F,kBAAA,WACA,MAAA3X,MAAAsd,gBAAAtd,KAAAoE,UAEA+S,QAAA,SAAA7N,GAEA,MAAAtJ,MAAAoe,aAAAjH,QAAA7N,IAEAyO,MAAA,aAGAiG,eAAA,SAAAnG,GACA,UAEA0G,kBAAA,SAAAxc,GACA2b,IACAA,EAAA,GAAAnT,SAAA,oBAEA,IAAAiU,GAAAd,EAAAlT,IAAAzI,EACA2b,GAAAhT,IAAA3I,EAAAyc,MACAA,EAAAne,MACAme,EAAAne,KAAA,GAEAwY,IACAvX,EAAAmd,UAAAC,cACA7F,GAAA,EAEA,IAAA3U,GAAAlE,IACAib,GAAA3D,KAAA,WACApT,EAAA6Z,aAAA,EACA7Z,EAAAya,cAAA5c,MAGA6c,MAAA,WACA,MAAA5e,MAAAK,KAAAL,KAAAK,GAAAsd,MAEAlP,KAAA,WACA,GAAA6O,GAAAtd,KAAAsd,gBAAAtd,KAAAoE,QACAkZ,GAAAG,aAAAzd,QAOA4B,EAAA+C,UAAAnD,OAAAC,OAAAR,EAAA0D,WACA/C,EAAA+C,UAAAqY,aAAA,SAAAjb,GACA,MAAAgO,UAAAV,KAAAC,SAAAvN,IAEAH,EAAA+C,UAAAka,WAAA,WACA,MAAA7e,MAAA+B,SAEAH,EAAA+C,UAAAoY,gBAAA,SAAA+B,EAAA/c,GACA,IAAAA,GAAA/B,KAAAmN,SAAA,CACA,GAAAA,GAAAnN,KAAAmN,QACA,KAAAA,EAAAxK,OAAA,CACA,IAAA3C,KAAA4K,SAGA,SAAAhH,OAAA,sDAEA,aAJAuJ,EAAA4C,SAAAiE,iBAAAhU,KAAA4K,WAMA,OAAA9H,GAAA,EAAAC,EAAAoK,EAAAxK,OAAsCG,EAAAC,EAAOD,IAC7C9C,KAAA+c,gBAAA+B,EAAA3R,EAAArK,QAEG,CACH,GAAAic,GAAAhd,GAAA/B,KAAA+B,OAEA,IAAA+c,GAAA9e,KAAAgd,aAAA+B,GAEA/e,KAAA2e,cAAAI,OACI,CACJ,GAAA1e,GAAAL,KAAA4e,QACApQ,EAAAuQ,EAAAC,eACAxQ,KACAA,EAAAuQ,EAAAC,mBACAD,EAAAxT,WAAA,sBAEAiD,EAAAnO,KACAmO,EAAAnO,GAAAL,SAKA4B,EAAA+C,UAAAsa,WAAA,SAAAld,GACA/B,KAAA4K,SACA7I,EAAAid,iBAAAhf,MAEAA,KAAAmN,SAAAmK,KAAAvV,GAGA/B,KAAA2e,cAAA5c,IAEAH,EAAA+C,UAAAga,cAAA,SAAA5c,GAEA,GADA/B,KAAA+d,aAAA,GACA/d,KAAAkf,YAAA,CACA,GAAAld,GAAAhC,KAAAoE,SAAAgZ,QAAApd,MACAsd,EAAAtd,KAAAsd,gBAAAtd,KAAAoE,QAEAkZ,GAAAha,SAAAtD,MAEA,GAAAe,SAAAiB,GAAAhC,KAAAmf,SAAAnf,KAAAkf,YAEA,GADAlf,KAAAmf,SAAA,EACAnd,KAAA0X,KAAA,CACA1Z,KAAAof,eACApf,KAAAof,cAAApd,EAAAD,EAEA,IAAAmC,GAAAlE,KACAie,EAAAje,KAAAie,eAAA,SAAAjc,GACAic,EAAAC,aACAD,IAAA/Z,EAAA+Z,iBACA/Z,EAAA+Z,eAAA,MAEA/Z,EAAAsB,aAAAxD,EAAAD,IAGAC,GAAA0X,KAAAuE,OAEAje,MAAAwF,aAAAxD,EAAAD,IAIAH,EAAA+C,UAAAa,aAAA,SAAAgK,EAAAzN,GACA,SAAA6B,OAAA,+CAEA3C,aACAA,EAAAW,kBAQAqD,EAAAN,UAAAnD,OAAAC,OAAAG,EAAA+C,WACAM,EAAAN,UAAAE,KAAA,oBACAI,EAAAN,UAAAa,aAAA,SAAAgK,EAAAzN,GACAA,EAAAmD,aAAAlF,KAAAuE,KAAAiL;EAEAvO,EAAAgE,oBAQAK,EAAAX,UAAAnD,OAAAC,OAAAG,EAAA+C,WACAW,EAAAX,UAAAE,KAAA,mBACAS,EAAAX,UAAAa,aAAA,SAAAgK,EAAAzN,GACAA,EAAA/B,KAAAuE,MAAAiL,GAEAvO,EAAAqE,mBASAhB,EAAAK,UAAAnD,OAAAC,OAAA6D,EAAAX,WACAL,EAAAK,UAAAE,KAAA,wBACAP,EAAAK,UAAAa,aAAA,SAAAgK,EAAAzN,IACA,MAAAyN,GAAA,WAAAzN,EAAA8C,MAAAC,MAAA0K,MACAA,EAAA,GAEA,IAAA6P,GAAAtd,EAAA/B,KAAAuE,KACA,iBAAA8a,IAAA,gBAAA7P,KACAA,EAAA,MAAAA,EAAA,GAAA8P,OAAA9P,IAEA6P,GAAA7P,IACAzN,EAAA/B,KAAAuE,MAAAiL,IAGAlL,EAAAK,UAAAC,wBAAA,SAAA4K,EAAAzN,GACAA,EAAAC,MAAAwN,EACAzN,EAAAC,OAAAwN,GAAAzN,EAAAC,MAUAD,EAAAwd,cAAAxe,QARAgB,EAAAwd,cAAA/P,EACAlO,EAAA8G,SAAA,WACArG,EAAAwd,gBACAxd,EAAAC,MAAAD,EAAAwd,cACAxd,EAAAwd,cAAAxe,YAOAE,EAAAqD,wBAQAgC,EAAA3B,UAAAnD,OAAAC,OAAAG,EAAA+C,WACA2B,EAAA3B,UAAAE,KAAA,gBACAyB,EAAA3B,UAAAa,aAAA,SAAAgK,EAAAzN,GACAA,EAAAG,MAAAlC,KAAAuE,MAAAiL,GAEAvO,EAAAqF,gBAKAiX,EAAA5Y,UAAAnD,OAAAC,OAAAG,EAAA+C,WACA4Y,EAAA5Y,UAAAE,KAAA,kBACA0Y,EAAA5Y,UAAAa,aAAA,SAAAgK,EAAAzN,GACAA,EAAAyd,UAAA,GACAze,SAAAyO,IACAA,EAAA,IAEAzN,EAAAoB,YAAA4M,SAAAlM,eAAA2L,KAEAvO,EAAAsc,kBAOApZ,EAAAQ,UAAAnD,OAAAC,OAAAG,EAAA+C,WACAR,EAAAQ,UAAAE,KAAA,eACAV,EAAAQ,UAAAuY,QAAA,SAAAW,EAAAhG,GACA7X,KAAAyf,YACA,YAAA5B,EAAAhZ,MACA7E,KAAAyf,WAAA,EACAzf,KAAAkf,aAAA,IAEAlf,KAAA0f,UAAA1f,KAAA0f,aAAApI,KAAAuG,IAGAjc,EAAA+C,UAAAuY,QAAA3c,KAAAP,KAAA6d,EAAAhG,IAEA1T,EAAAQ,UAAAa,aAAA,SAAAgK,EAAAzN,GACA,MAAAyN,IACAA,EAAA,IAEAA,EAAA/N,SACA+N,IAAA/N,QAA+Ba,OAAAP,KAE/ByN,EAAA7L,UACA3D,KAAAiE,UAAAjE,KAAAiE,SAAA6J,YAAA/L,EAEAA,EAAA4d,aAAAnQ,EAAAxP,KAAAiE,UAEAlC,EAAAoB,YAAAqM,GAEAxP,KAAAiE,SAAAuL,GACGA,YAAA9L,QACH1D,KAAAwF,aAAAsC,EAAAnD,UAAAa,aACAxF,KAAAkf,aAAA,EACAlf,KAAAwF,aAAAgK,EAAAzN,KAEA/B,KAAAiE,UAAAlC,EAAA6d,WAAA5f,KAAA8Q,WAAA+O,UAAArQ,GAGAvO,EAAAkD,eAQA2D,EAAAnD,UAAAnD,OAAAC,OAAAG,EAAA+C,WACAmD,EAAAnD,UAAAuY,QAAA,SAAAW,EAAAhG,GACA7X,KAAAyf,YACA,YAAA5B,EAAAhZ,MACA7E,KAAAyf,WAAA,EACAzf,KAAAkf,aAAA,IAEAlf,KAAA0f,UAAA1f,KAAA0f,aAAApI,KAAAuG,IAGAjc,EAAA+C,UAAAuY,QAAA3c,KAAAP,KAAA6d,EAAAhG,IAEA/P,EAAAnD,UAAAE,KAAA,eACAiD,EAAAnD,UAAAa,aAAA,SAAAgK,EAAAzN,GAuDA,QAAA+d,GAAA9X,GACA,GAAAC,EASA,OARAX,GAAA7F,OACAwG,EAAAX,EAAA7F,QAAgCa,OAAAyc,EAAAlX,MAAAG,KAEhCC,EAAAX,EAAAU,EAAA+W,GACA9W,EAAAxG,SACAwG,IAAAxG,QAAyCa,OAAAyc,EAAAlX,MAAAG,MAGzCC,EAhEA,GAAAzF,GACA8E,EAAAtH,KAAAsH,MAAA,SAAAU,GACA,MAAAA,IAEA+W,EAAA/e,KAAA+B,QACAmC,EAAAlE,IACA,IAAAA,KAAAyf,UAkBG,CACH,GAAAM,GAAA/f,KAAA+f,cACAL,EAAA1f,KAAA0f,OACAld,GAAAuc,EACAW,EAAA3X,QAAA,SAAA+U,GACA,eAAAA,EAAAjY,KAAA,CACAX,EAAAub,WAAA,CACA,QAAA3c,GAAA,EAAAC,EAAAgd,EAAApd,OAA8CG,EAAAC,EAAOD,IACrDic,EAAAiB,YAAAD,EAAAjd,GAEAoB,GAAAsB,mBAMA,IAJAsX,EAAAmD,mBACAlB,EAAAiB,YAAAD,EAAAjD,EAAAmD,gBACAF,EAAAnF,OAAAkC,EAAAmD,cAAA,IAEAnD,EAAAoD,SAAA,CACA,GAAAC,GAAAJ,EAAAjD,EAAAoD,OACAE,EAAAnf,EAAAiL,OAAA6S,EAAAe,EAAAhD,EAAA9a,OACAme,IACApB,EAAAjb,aAAAsc,EAAAD,GACAJ,EAAAnF,OAAAkC,EAAAoD,MAAA,EAAAE,IAEAL,EAAAzI,KAAA8I,MAKApgB,KAAA0f,eA9CA,CACA1f,KAAAyf,WAAA,EACAzf,KAAAkf,aAAA,EACAnd,EAAAyd,UAAA,EACA,IAAAO,GAAA/f,KAAA+f,gBACAzY,GAAAC,cACAD,EAAAC,eAEAiI,GACAA,EAAAzH,QAAA,SAAAC,GACA+X,EAAAzI,KAAArW,EAAAiL,OAAA6S,EAAAe,EAAA9X,MAGA,IAAAsV,GAAAtd,KAAAsd,gBAAAtd,KAAAoE,QACAkZ,GAAAha,SAAAtD,QA+CAiB,EAAA6G,eAEA7G,EAAAof,cAAA,SAAAC,GACA1G,EAAA,WACA8D,EAAA,IACA,IAAAvQ,MAAA5G,MAAAhG,KAAA+f,EAAAC,uBAAA,qBACA,IAAAD,EAAA/U,UAAAgN,QAAA,wBACA,GAAAiI,IAAAF,EACAE,GAAAlJ,KAAAxW,MAAA0f,EAAArT,GACAA,EAAAqT,EAEA,OAAA1d,GAAA,EAAAC,EAAAoK,EAAAxK,OAAuCG,EAAAC,EAAOD,IAAA,CAC9C,GAAAf,GAAAoL,EAAArK,GACA0L,EAAAzM,EAAAid,eACA,IAAAxQ,EAAA,CACAzM,EAAAid,gBAAA,KAEAjd,EAAAwJ,UAAAxJ,EAAAwJ,UAAAuE,QAAA,+BACA,QAAAzP,KAAAmO,GAAA,CACA,GAAAtK,GAAAsK,EAAAnO,EACA6D,GAAAya,cAAA5c,SAiBAd,EAAAuc,iBAAA,SAAAzb,EAAA0e,GACAA,GACAjD,EAAAzb,EAGA,QADAQ,GAAAR,EAAA2e,qBAAA,KACA5d,EAAA,EAAAC,EAAAR,EAAAI,OAAqCG,EAAAC,EAAOD,IAAA,CAC5C,GAAAG,GAAAV,EAAAO,EACAG,GAAAoL,iBACAmP,EAAAva,KAIAhC,KLkgEM,SAASpB,EAAQD,EAASM,GMz/EhC,GAAAS,GAAAC,EAAAC,GAAA,SAAAnB,EAAAC,GACAiB,GAAAV,EAAA,IAAAS,EAAA,EAAAE,EAAA,kBAAAF,KAAAG,MAAAlB,EAAAgB,GAAAD,IAAAI,SAAAF,IAAAhB,EAAAD,QAAAiB,KAEEb,KAAA,SAAAsB,GAyBF,QAAA0a,GAAAha,EAAA4W,GACA,MAAA5W,MAAA0X,KACA1X,EAAA0X,KAAAd,GAEAA,EAAA5W,GAEA,QAAA2e,GAAA3e,EAAA4W,GACA,MAAA5W,MAAA0X,OAAA1X,EAAAsB,SACAtB,EAAA0X,KAAAd,GAEAA,EAAA5W,GAGA,QAAAwG,GAAAyF,GACAjO,KAAAiO,UACAjO,KAAA4gB,WAiHA,QAAAC,GAAAxI,EAAApK,GACAjO,KAAAiO,UACAjO,KAAAqY,WAQA,QAAA6D,GAAA1X,EAAAoU,GAEA,OADAuD,GACArZ,EAAA,EAAAC,EAAAyB,EAAA7B,OAAoCG,EAAAC,EAAOD,IAC3C0B,EAAA1B,IAAA0B,EAAA1B,GAAA4W,OACAyC,GAAA,EAGA,OAAAA,GACA7a,EAAA4a,QAAA1X,EAAAoU,GAEAA,EAAApU,GAGA,QAAAsc,GAAA9e,EAAAqW,GACA,GAAAqC,GAAAqG,EAAAvW,IAAAxI,GACA3B,EAAAgY,EAAA2I,aAAA3I,EAAA2I,WAAA,IAAAA,IACAtG,GACAA,EAAAra,KAAAU,IACA2Z,EAAAra,GAAAqa,EAAApD,KAAAe,GAAA,IAGA0I,EAAArW,IAAA1I,EAAA0Y,GAAArC,IACAqC,EAAAra,GAAA,EACAiJ,EAAA2X,oBACAjK,QAAAhV,IAGAqW,EAAA6I,kBAAAlf,EAEA,QAAAmf,GAAA9I,GACA,GAAAA,EAAA6I,kBAAA,CACA,GAAAlf,GAAAqW,EAAA6I,iBACA7I,GAAA6I,kBAAA,IACA,IAAAxG,GAAAqG,EAAAvW,IAAAxI,EACA,IAAA0Y,EAAA,CACA,GAAAwF,GAAAxF,EAAArC,EAAA2I,WACAd,QACAxF,EAAAE,OAAAsF,EAAA,SACAxF,GAAArC,EAAA2I,eAMA,QAAAI,KACAphB,KAAAqhB,QAAA,GAAAC,KAIA,QAAAC,GAAAtf,EAAAuf,EAAAlf,GACAtC,KAAAiC,MACAjC,KAAAwhB,aACAxhB,KAAAsC,SACAtC,KAAAqhB,QAAAG,EAAAH,QAIA,QAAAI,GAAAC,GACA1hB,KAAAqhB,QAAA,GAAAC,IACA,QAAArf,KAAAyf,GACA1hB,KAAAiC,GAAAyf,EAAAzf,GAIA,QAAA0f,GAAAD,GACA1hB,KAAAqhB,QAAA,GAAAC,IACA,QAAArf,KAAAyf,GACA1hB,KAAAiC,GAAAyf,EAAAzf,GAKA,QAAA2f,GAAAxd,EAAAwB,EAAAgT,GACAxU,IAAAwB,GACAgc,EAAAxd,IAAAyd,YAAAjJ,EAEA,QAAA3W,KAAA2D,GAAA,CACA,GAAAqF,GAAArF,EAAA3D,EACA,IAAAgJ,KAAA3I,QAAA8B,IACA6G,EAAA6W,kBACAlJ,EAAA3N,EAAA6W,kBAEA7W,EAAA8W,mBAAA,CACA,GAAAC,GAAA/W,EAAA4W,WACAG,IACAJ,EAAA3W,IAAA2N,KAOA,QAAAtP,GAAAtH,GACA,MAAAhC,gBAAAsJ,QAEAtH,IAAAjB,EACAf,kBAAAe,IACAf,KAAAgC,MAAAhC,iBAGAA,KAAAgC,SAGAsH,UAAAtH,GA09BA,QAAAigB,GAAA7d,EAAAwU,GAEA,MAAAoD,GAAA5X,EAAA8d,aAAA9d,EAAAgZ,UAAA,SAAA+E,GACAA,GACA/d,EAAA8B,IAAAic,KAEA,IAAAC,GAAAxJ,EAAArY,KAAA6D,EAAA+d,EAEA,OADA/d,GAAAie,gBACAD,IAIA,QAAAE,GAAAle,EAAAme,EAAAC,EAAAC,GACA,GAAAC,GAAAH,EAAA5f,MAEA,IAAA+f,EAAA,GAEA,OADAC,GACA7f,EAAA2f,EAAAC,EAAyC5f,EAAA0f,GAAmB,CAC5D,GAAAG,GAAAve,IAAAtB,EACA6f,KACAve,EAAAtB,GAAA/B,EACA4hB,EAAA1gB,KAAAygB,EACAte,EAAAue,EAAA1gB,KAAA0gB,GAIA,OAAA7f,GAAA,EAAAC,EAAAwf,EAAA5f,OAAoCG,EAAAC,EAAOD,IAC3CsB,EAAA8Y,QAAA,GAAAuE,IACAzf,MAAAugB,EAAAzf,GACAod,MAAApd,EAAA0f,EACAI,SAAAxe,IACKA,IAKL,QAAAye,GAAAze,EAAAyL,EAAA2S,EAAAM,EAAAL,GAEA,GACAE,GADA7f,EAAA0f,EAAAM,CAEA,IAAAA,EAAA,GACA,OAAAhgB,GAAA0f,EAAAM,EAA6ChgB,EAAA2f,EAAAK,EAAgChgB,IAAA,CAC7E,GAAA6f,GAAAve,EAAAtB,EACA6f,KACAve,EAAAtB,GAAA/B,EACA4hB,EAAA1gB,KAAA6gB,EACA1e,EAAAue,EAAA1gB,KAAA0gB,GAIA,OAAA7f,GAAA,EAAkBA,EAAAggB,EAAkBhgB,IACpCsB,EAAA8Y,QAAA,GAAAyE,IACA1B,cAAAuC,EACAnD,SAAAxP,EAAA/M,GACA8f,SAAAxe,IACKA,EAELA,GAAAie,cAAAje,EAAAwZ,SA6UA,QAAAmF,GAAAZ,GACA,IAAAA,EACA,QAEA,IAAAA,EAAAxf,UACA,MAAAwf,EAEA,IAAAa,KAMA,OALAb,GAAApa,SACAoa,EAAApa,QAAA,SAAAC,GACAgb,EAAA1L,KAAAtP,KAGAgb,EA0HA,QAAAC,GAAAjV,EAAAhM,EAAAkhB,GACA,MAAAlV,aAAA1E,OACAA,GAAA/I,KAAAyN,EAAAhM,GAEAkhB,UAAAlhB,GAIA,QAAAmhB,GAAAtP,GAEA,GAAA6G,GAAAqG,EAAAvW,IAAAqJ,EACA,IAAA6G,EACA,OAAA5X,GAAA,EAAAC,EAAA2X,EAAA/X,OAAwCG,EAAAC,EAAOD,IAC/C4X,EAAA5X,GAAAsgB,gBAAA,KAAAvP,GAWA,QAAAwP,GAAAlB,EAAAmB,GAGA,GAAAnB,YAAAze,OAIA,MAHAye,GAAAxf,OAAA,IAGAwf,EAAAxf,OAAA,qBAAA2gB,GAEA,GAAAC,GAAApB,EAAA,qBAAAmB,KAAAE,GAAArB,GAEA,GAAAsB,OAGA,IAAAle,UAAA5C,OAAA,EAEA,UAAA4gB,GAAAhe,UAAA,GAAAie,GAAAje,WAAAme,GAAAD,GAEA,oBAAAtB,GAAA,CAEA,GAAAwB,MACAC,IACA,QAAA3hB,KAAAkgB,GACAwB,EAAArM,KAAArV,GACA2hB,EAAAtM,KAAA6K,EAAAlgB,GAEA,WAAAqH,GAAA,SAAA8Y,GAEA,OADAyB,MACA/gB,EAAA,EAAmBA,EAAAsf,EAAAzf,OAAoBG,IACvC+gB,EAAAF,EAAA7gB,IAAAsf,EAAAtf,EAEA,OAAA+gB,KACI/iB,MAAA,KAAA8iB,GAEJ,SAAAna,WAAA,kCAGA,QAAAxD,GAAAyH,EAAAoW,GAEA,GAAA/Y,GAAA/K,KAAA+K,eAAA/K,KAAA+K,aAAA,GAAAR,GAIA,OADAQ,GAAAL,IAAAgD,EAAAoW,GAAA,WAA4D,UAAApW,KAC5D1N,KAEA,QAAA+jB,KAGA,OAFApf,GAAA3E,KAAA2E,UACAqf,EAAAxiB,OAAAyI,oBAAAtF,GACA7B,EAAA,EAAAC,EAAAihB,EAAArhB,OAA2CG,EAAAC,EAAOD,IAAA,CAClD,GAAAyB,GAAAyf,EAAAlhB,EACAtB,QAAAiF,eAAAzG,KAAAuE,EAAA0f,EAAAziB,OAAAuU,yBAAApR,EAAAJ,KAAAvE,QAGA,QAAAikB,GAAAnO,EAAAvR,EAAAoF,GACA,wBAAAmM,GAAA9T,OAEAA,MAAAkiB,EAAAva,EAAApF,IAGAuR,EAGA,QAAAoO,GAAAva,EAAApF,GAIA,GAAA4f,GAAAxa,EAAApF,GAAA,WACA,GAAAyJ,GAAArE,SAAA3J,KACA,OAAAgO,GAAAzJ,GAAAzD,MAAAkN,EAAAzI,WAQA,OANA4e,UAAA,SAAAtM,GACA,GAAA7J,GAAArE,SAAAkO,EACA,mBACA,MAAA7J,GAAAzJ,GAAAzD,MAAAkN,EAAAzI,aAGA4e,EAeA,QAAAC,GAAAza,EAAAkO,GACA,MAAAA,GAGAA,EAAAV,QAAAxN,GAFAA,EAAA+N,gBAsHA,QAAA2M,MAmBA,QAAAC,MAmBA,QAAAC,GAAAviB,GACA,MAAAihB,GAAAjjB,KAAA,gBAAAgC,KAAAsd,OAAAtd,GAAAuiB,GAGA,QAAAC,GAAAxiB,GACA,MAAAihB,GAAAjjB,KAAA,gBAAAgC,KAAAyiB,OAAAziB,GAAAwiB,GAwBA,QAAAE,GAAA1iB,GACA,MAAAihB,GAAAjjB,KAAA,gBAAAgC,KAAA2iB,QAAA3iB,GAAA0iB,GAIA,QAAAE,GAAA5iB,GACA,MAAAihB,GAAAjjB,KAAAgC,YAAA0B,OAAA,GAAA4d,KAAAtf,KAAA4iB,GAcA,QAAAC,GAAA7iB,GACA,MAAAihB,GAAAjjB,KAAA,gBAAAgC,KAAA,GAAA8iB,MAAA9iB,GAAA6iB,GA6BA,QAAAE,GAAA7B,GACA,mBAAAA,GACA,MAAA8B,IAAA9B,EACG,oBAAAA,GAAA,CACH,GAAAA,YAAAxf,OACA,MAAA+f,IAAAwB,GAAAF,EAAA7B,EAAA,IAEA,IAAAgC,KACA,QAAAjjB,KAAAihB,GACAgC,EAAAjjB,GAAA8iB,EAAA7B,EAAAjhB,GAEA,OAAAqH,WAAA4b,GAEA,MAAAhC,GAgCA,QAAAiC,GAAA3X,EAAAvL,GACA,GAAAihB,GAAAkC,QAAAC,YAAA,cAAA7X,EAAAvL,EACAwK,SAAA6Y,IAAA,OAAApC,GACAA,EAAA5f,WACA4f,EAAAqC,GAAA/a,IAAA0Y,IAAA5Z,GAEA9H,OAAAiF,eAAA+G,EAAAvL,GACAuI,IAAA,WACA,MAAA2a,GAAA3a,IAAAxK,KAAAiC,EAAAihB,IAEAxY,IAAA,SAAA1I,GACAmjB,EAAAza,IAAA1K,KAAAiC,EAAAD,IAEA0E,YAAA,IAiEA,QAAA8e,GAAArB,EAAApe,EAAAH,EAAA6f,GACA,GAAAC,GAAApkB,EAAA+D,QAAAogB,IAAA/B,GAAAiC,OAAA5f,EAAAH,EACA8f,GAAA/gB,UAAAwf,SAAAuB,EAAA/gB,UAAAwf,UACA3iB,OAAAiF,eAAAif,EAAA/gB,UAAA,cAAmE3C,OAAA,IACnEyhB,GAAAU,GAAAV,GAAA9e,UAAAwf,GAAA,WACA,GAAA/B,GAAA,GAAAsD,GAAA1lB,KAGA,OAFAoiB,GAAA1O,OAAA1T,KACAoiB,EAAA7c,oBACA6c,GAntEA,GAMArhB,GANA0H,KACAmd,KACArb,EAAAjJ,EAAAiJ,QACAO,EAAAtJ,OAAAsJ,gBAAA,SAAAkG,EAAAC,GAAuED,EAAAX,UAAAY,GACvElH,EAAAvI,OAAAuI,gBAAA,SAAAiH,GAAgE,MAAAA,GAAAX,WAChE9G,EAAAjI,EAAAiI,YAGAsc,EAAA,EACAC,EAAA,EACAC,KAEAhF,EAAA,GAAAxW,GAAA,6BAEAyb,GADA,GAAAzb,GACAua,KAAAmB,OAQAjF,GANA1f,EAAA+D,QAAAkF,EAAA,cAEA6Y,gBAAA,SAAAlZ,GACAlK,KAAAoE,SAAAgf,gBAAAlZ,EAAAgc,iBAAAlmB,UAGA,EAmBAwI,GAAA7D,WACAoB,YAAAyC,EACA4V,WAAA,SAAAha,GACA,UAAAoE,GAAAxI,KAAAiO,UAGA2P,QAAA,EACAjP,QAAA,aAGAwX,cAAA,SAAA/hB,EAAAgiB,GAGA,GAAA9I,EACA,IAAAtd,KAAAuX,gBAAA,CACA,GAAA8O,GAAAjiB,EAAAwT,cAAAxT,EAAAwT,YAAA,GAAArN,GAEA,IADA+S,EAAA+I,EAAA7b,IAAAxK,KAAAuX,kBACA+F,EAAA,CACA+I,EAAA3b,IAAA1K,KAAAuX,gBAAA+F,EAAA9b,OAAAC,OAAA2C,IACAkZ,EAAA5C,WAAA,EACA4C,EAAAzF,QAAA7X,IAEA,QADA4gB,GAAA5gB,KAAA4gB,QACA9d,EAAA,EAAAC,EAAA6d,EAAAje,OAAwCG,EAAAC,EAAOD,IAC/Cwa,EAAAsD,EAAA9d,IAAA8d,IAAA9d,GAGA9C,KAAAsd,iBAEA8I,GACAA,EAAArO,MAAA/X,UAGAsd,GAAAlZ,CAKA,OAAAkZ,IAEAe,UAAA,SAAAxG,EAAAyF,GACAtd,KAAAse,SAAAhB,GACAtd,KAAAme,KAAAtG,EAAA+F,SACA5d,KAAAme,KAAAmI,KAAAC,IAAAjJ,EAAAM,SAAA,EAAAN,EAAAkJ,qBAAA,KAEArI,KAAA,SAAAP,GAgBA,GAAA9Y,MAAA8Y,GACA,SAAAha,OAAA,cAEA,OAAA5D,MAAA4d,QAAA0I,KAAAC,IAAAvmB,KAAA4d,YAEA7F,MAAA,SAAAC,GACAhY,KAAAuX,kBACAvX,KAAAuX,gBAAAS,EAAAT,kBAGAJ,QAAA,SAAA7N,GAEA,GAEAmO,GAFAxJ,EAAAjO,KAAAiO,QACAuJ,EAAAvJ,EAAAlI,YAAAgF,YAEA,IAAAyM,EAAA,CACAxX,KAAAuX,kBACAvX,KAAAuX,gBAAAtJ,EAEA,IAAAJ,GAAA2J,EAAAhN,IAAAlB,EACA,IAAAuE,EAKA,MAJA4J,GAAA5J,EAAArD,IAAAyD,GACAwJ,GACA5J,EAAAnD,IAAAuD,EAAAwJ,EAAA5J,EAAAF,eAAAE,EAAAF,eAAAM,GAAA,GAAA3E,IAEAmO,EAIA,MAAAnO,GAAAoO,iBAEAC,kBAAA,SAAAvT,GACA,IAAApE,KAAAiO,QAEA,MAAA7J,EAGA,IAAA4J,GAAA5J,EAAAwT,aAAA5X,KAAAiO,SAAA7J,EAAAwT,YAAApN,IAAAxK,KAAAiO,QACA,OAAAD,MAAA6J,SAAA7J,EAAA6J,QAAAC,QAAA9X,MACAgO,EADA,QAIAsQ,SAAA,SAAAmI,GACAzmB,KAAA4gB,QAAAtJ,KAAAtX,KAAA0mB,aAAAD,IAEA3O,QAAA,SAAAD,GAEA,MAAAA,GAAA5J,UAAAjO,KAAAiO,UAQA4S,EAAAlc,UAAAnD,OAAAC,OAAA+G,EAAA7D,WACAkc,EAAAlc,UAAAoB,YAAA8a,EACAA,EAAAlc,UAAA2Z,SAAA,SAAAhB,GACAA,EAAAha,SAAAtD,KAAAqY,WAkDA+I,EAAAzc,UAAAE,KAAA,UAQA0c,EAAA5c,UAAAE,KAAA,SAQA4c,EAAA9c,UAAAE,KAAA,MAOA8c,EAAAhd,UAAAE,KAAA,SAqCAyE,EAAAqd,eAAA,SAAAC,GACA,GAAAC,KAAA,GAAAjjB,QAAAijB,OAAA,IAAAC,MAAA,UACAD,GAAA,gBAAAE,KAAAF,EAAA,KAAAA,EAAAG,QACAH,EAAA,qBAAAE,KAAAF,EAAA,KAAAA,EAAAG,OACA,IAAAC,GAAAjnB,KAAAknB,YAAAlnB,KAAAknB,WAAAD,YACA,IAAAjnB,KAAAknB,YAAAlnB,KAAAknB,WAAAC,gBAAA,CAEA,GAAAC,EACAP,GAAAQ,KAAA,SAAAD,GACAH,EAAAI,KAAA,SAAAC,GACA,MAAAA,MAAAP,KAAAK,OAEAA,EAAAP,EAAA,MAGApa,QAAA6Y,IAAA,YAAAsB,EAAAW,QAAA,WAAAH,KAAAtX,QAAA,gBACG,CACH,GAAAmX,EAAAtkB,OAAA,CAGA,OADA2kB,GADAE,KAEA1kB,EAAA,EAAmBA,EAAA+jB,EAAAlkB,OAAkBG,IAAA,CACrC,GAAAskB,GAAAP,EAAA/jB,EACA,IAAAwkB,EAAA,CACA,GAAAA,EAAAP,KAAAK,GAAA,QACAE,GAAA,KAGAL,EAAAI,KAAA,SAAAC,GACA,MAAAA,QAAAP,KAAAK,KAEAA,IAAAtX,QAAA,WACAwX,GACAE,EAAAlQ,KAAA,IAAAgQ,EAAA/iB,KAAA,KAAA6iB,GACAE,QAEAE,EAAAlQ,KAAA8P,GAGAP,EAAAW,EAEA,GAAAC,GAAAznB,KAAAknB,YAAAlnB,KAAAknB,WAAAO,WACAA,GACAhb,QAAA6Y,IAAA,YAAAsB,EAAAW,QAAA,WAAAV,GAEApa,QAAA6Y,IAAA,YAAAsB,EAAAW,QAAA,eAAAV,EAAAa,KAAA,WAKApe,EAAA4d,YACAD,WAAc1iB,KAAA,SAAA+iB,GAAA,eAAsC/iB,KAAA,UAAA+iB,GAAA,gDACpDG,aAAA,EAGA,IAAAE,GAAAre,EAAA3E,WAEAijB,oBACA,MAAA5nB,MAAAod,WAEAwK,kBAAA5lB,GACAhC,KAAAkG,IAAAlE,IAEA+D,YAAAuD,EACA8T,QAAA,SAAAvF,GACA,GAAAgQ,EACA,OAAA7nB,MAAA8nB,SAAA9nB,KAAA+nB,SACA/nB,KAAA+nB,SAAAlQ,MAAAgQ,EAAAhQ,EAAAuG,eACApe,KAAAgC,MAAA6V,EAAAgQ,IAEAE,SAAA,SAAAlQ,EAAAgQ,GAIA,GAHAhQ,GACAA,EAAAsG,KAAAne,KAAA4d,SAEA5d,KAAAsC,OAAA,CACAuV,IACAgQ,IACAA,EAAAhQ,EAAAuG,cAEA,MAAAvG,EAAAmQ,kBAIAnQ,EAAAmQ,gBAAAjnB,GAGA,IAGA8S,GAHA5R,EAAAjC,KAAAiC,IAEAK,EAAAtC,KAAAsC,MAUA,IAJAuR,EAJAvR,EAAAylB,SAIAzlB,EAAAylB,SAAAlQ,EAAAgQ,GAEAvlB,EAAAN,MAEA6R,KAAA6F,OAAA7F,EAAAvQ,SACA,MAAA0Y,GAAAnI,EAAA,SAAAA,GACA,GAAA7R,GAAA,MAAA6R,EAAA9S,EACA,kBAAA8S,GAAA5I,SAAA4I,EAAA5I,SAAAhJ,GACA,kBAAA4R,GAAArJ,IAAAqJ,EAAArJ,IAAAvI,GAAA4R,EAAA5R,GAEAyY,EAAAqG,EAAAvW,IAAAqJ,EAQA,OAPA6G,MAAAvE,UAAAuE,EAAAvE,SAAA4D,QACAW,EAAAvE,SAAA4D,OAAA9X,GAGA4lB,GACAhQ,EAAAsG,KAAA0J,EAAAjK,SAEA5b,GAGA,IAAAA,GAAA,MAAA6R,EAAA9S,EACA,kBAAA8S,GAAA5I,SAAA4I,EAAA5I,SAAAhJ,GACA,kBAAA4R,GAAArJ,IAAAqJ,EAAArJ,IAAAvI,GAAA4R,EAAA5R,GAEAyY,EAAAqG,EAAAvW,IAAAqJ,EAQA,OAPA6G,MAAAvE,UAAAuE,EAAAvE,SAAA4D,QACAW,EAAAvE,SAAA4D,OAAA9X,GAGA4lB,GACAhQ,EAAAsG,KAAA0J,EAAAjK,SAEA5b,EAEA,MAAAhC,MAAAgC,OAEA8lB,SAAA,SAAA9lB,EAAAokB,EAAAvO,GACA,GAAAoQ,GAAAjoB,KAAA8hB,iBACA1d,EAAApE,IACA,IAAAioB,EAAA,CACA,GAAAjmB,IAAAimB,EAEA,MAAA7B,IACAvO,IACAA,EAAAuO,EAAAhI,cAEAvG,EAAA6O,aAAA,mBACA1kB,IAAAob,QAAAvF,GACAuO,EAAA/H,UAAAxG,IAAAsO,cAAAnmB,KAAAomB,IAAApmB,MACAgC,GAEAA,EAAAob,SAKAhZ,GAAAsW,WACAuN,EAAAxK,aAAArZ,GAEAA,EAAA0d,iBAAA,KAyBA,MAvBA9f,MAAAsB,WACAc,EAAA0d,iBAAA9f,EACAoC,EAAAsW,WACA1Y,EAAAsB,SAAAc,GAWAyT,KAAAuO,IAAAvO,EAAAuO,EAAAhI,cACAvG,IACAA,EAAA6O,aAAA,oBAEA1kB,IAAAob,QAAAvF,IAEA7V,IAAAjB,IACAiB,EAAAoC,cAEApC,KAAA0X,KACA1X,EAAA0X,KAAA,SAAA1X,GACA,MAAAA,MAAAmb,UACA7T,EAAA3E,UAAAmjB,SAAAvnB,KAAA6D,EAAApC,EAAAokB,EAAAvO,IAEAA,EACAuO,EAAA/H,UAAAxG,IAAAsO,cAAA/hB,EAAAgiB,IAAAhiB,GACMgiB,GACNA,EAAA9H,SAAAla,GAEApC,MAGA6V,GACAuO,EAAA/H,UAAAxG,IAAAsO,cAAAnmB,KAAAomB,IAAApmB,MAEAomB,IAOAvO,GACAuO,EAAA9H,SAAAte,OAGAgC,IAEAkmB,cAAA5e,EACA2B,SAAA,SAAAhJ,EAAAimB,GACA,GAAAC,GAAAnoB,KAAAiC,EAIA,IAHAkmB,KAAA7kB,WACA6kB,EAAAnoB,KAAA6hB,aAAA7hB,KAAA6hB,YAAA5f,IAEAkmB,GAiBI,GAAAD,KACJC,YAAAD,IACA,SAAAze,WAAA,yEAnBA,CAEA,GAAAE,GAAAue,CACAve,KACAA,EAAA3J,KAAA+F,YAAA9D,GACA,kBAAA0H,MAAAye,kBACAze,EAAA3J,KAAAkoB,gBAGAC,EAAA,GAAAxe,GACAwe,EAAAlmB,MACAkmB,EAAA7lB,OAAAtC,KACAA,KAAAiC,KAAAlB,EACAf,KAAAiC,GAAAkmB,GAEAnoB,KAAA6hB,cAAA7hB,KAAA6hB,iBAAgD5f,GAAAkmB,EAOhD,MAAAA,IAEA9W,MAAA,SAAApD,GAKA,MAJAA,MAAAT,SAAAS,EAAAlI,YAAA8D,cAEAoE,IAAAT,QAEAxN,KAAAsC,OACAtC,KAAAsC,OAAAtC,OAAAiO,GAAAhD,SAAAjL,KAAAiC,KAEA,GAAAomB,IAAAroB,KAAAiO,GAAAqa,KAEAC,aAAA,SAAA1Q,EAAAhT,EAAA2K,GACA,GAAAvN,GAAAjC,KAAAiC,IACAK,EAAAtC,KAAAsC,MACA,KAAAA,EACA,MAAAtC,MAAAkG,IAAAsJ,EAAAqI,EAEA,IAAAzT,GAAApE,IACA,OAAA2gB,GAAAre,EAAAylB,SAAAzlB,EAAAylB,SAAAlQ,GAAAvV,EAAAN,MAAA,SAAA6R,GACA,SAAAA,EAEAvR,EAAA4D,IAAA2N,EAAA,gBAAA5R,SAAyD4V,OACpD,oBAAAhE,GAAA,CAEL,GAAA8F,GAAA,GAAA/V,OAAA,qCAEA,MADA+V,GAAA6O,WAAA,EACA7O,EAGA,GAAA0F,GAAA,kBAAAxL,GAAArJ,IAAAqJ,EAAArJ,IAAAvI,GAAA4R,EAAA5R,EACA,IAAAod,IAAA7P,GAAA,gBAAAA,GAEA,MAAAoW,EAEA,mBAAA/R,GAAAnJ,IACAmJ,EAAAnJ,IAAAzI,EAAAuN,GAEA3K,GAAAghB,GAAAxG,KAAAnZ,MAAAsJ,KAAAtJ,IAEAmZ,EAAAnZ,IAAAsJ,GAEAqE,EAAA5R,GAAAuN,CAIA,IAAAlH,GAAA,GAAA8Y,EACA9Y,GAAA+W,WACA/W,EAAAkF,OAAApJ,EACAA,EAAA8Y,QAAA5U,EAAAlE,EAAAyT,EAGA,IAAA6C,GAAAqG,EAAAvW,IAAAqJ,EAGA,IAAA6G,EAAA,CACAA,IAAAnU,MAAA,EACA,QAAAzD,GAAA,EAAAC,EAAA2X,EAAA/X,OAA0CG,EAAAC,EAAOD,IAAA,CACjD,GAAAuV,GAAAqC,EAAA5X,EACAuV,KAAA/V,GAEA+V,EAAA+K,gBAAAnhB,EAAA4R,EAAAgE,EAAAhT,IAIA,MAAA2K,MAIA4T,gBAAA,SAAAlZ,EAAA2J,EAAAgE,EAAAhT,GACA7E,KAAAyoB,kBACAzoB,KAAAyoB,iBAAAve,EAAA2J,EAAAgE,GAEA7X,KAAAkd,QAAA,GAAAqE,GAAArX,EAAA,GAAAkX,GAAAphB,MAAA,KAAA6X,IAEA6Q,QAAA,SAAA9P,GACA,OAAA9V,KAAA9C,MAAA6hB,YACAjJ,EAAA9V,EAEA,QAAAA,KAAA9C,MACA,GAAAA,KAAA4J,eAAA9G,GAAA,CACA,GAAAd,GAAAhC,KAAA8C,EACAd,MAAAM,QAAAtC,MAAAgC,EAAA0Y,WACA9B,EAAA9V,KAKAhC,MAAA,SAAAkN,EAAA0T,GACA,UAAA6B,GAAA7B,EAAA,GAAA1hB,KAAA0hB,IAEAnhB,KAAA,SAAAyN,GACA,MAAAhO,MAAAc,MAAAkN,EAAAtK,MAAAiB,UAAA4B,MAAAhG,KAAAgF,UAAA,KAEAojB,gBAAA,SAAA/P,GACA5Y,KAAA8hB,kBACAlJ,EAAA5Y,KAAA8hB,kBAEA9hB,KAAA4oB,mBACAhH,EAAA5hB,UAAA4Y,GAEA5Y,KAAAsC,QACAsW,EAAA5Y,KAAAsC,SAGAumB,KAAA,WACA,GAAAzkB,GAAApE,IACAA,MAAA2oB,gBAAA,SAAAG,GACAA,EAAAxlB,SAAAc,KAGA,OAAApE,KAAAkhB,mBAGAlhB,KAAAod,WAGA7O,QAAA,WACAvO,KAAA0a,WAAA,CACA,IAAAqO,GAAA/oB,KAAA+oB,OACA,IAAAA,EACA,OAAAjmB,GAAA,EAAmBA,EAAAimB,EAAApmB,OAAoBG,IACvCimB,EAAAjmB,GAAAuX,QAGAra,MAAA+oB,QAAA,IACA,IACA3kB,IADApE,KAAA8hB,iBACA9hB,KACAA,MAAA2oB,gBAAA,SAAAG,GACAA,EAAArL,aAAArZ,MAIAwZ,QAAA,EACA4I,oBAAA,EAEAwC,cAAA,SAAApL,GACA5d,KAAA4d,QAAAoI,EAAAM,KAAAC,IAAAzB,KAAAmB,MAAAD,EAAA,IAGAiD,WAAA,SAAApR,GACA,MAAAyO,MAAAC,IAAAvmB,KAAA4d,QACA5d,KAAA8hB,kBAAA9hB,KAAA8hB,iBAAAmH,WAAAjpB,KAAA8hB,iBAAAoH,eAAArR,GAAA,EACA7X,KAAAsC,OAAAtC,KAAAsC,OAAA2mB,WAAApR,GAAA,IAEAqR,eAAA,SAAArR,GACA,MAAAyO,MAAAC,IAAAvmB,KAAAwmB,oBAAAxmB,KAAAipB,WAAApR,KAGAgH,WAAA,SAAAsK,GACA,MAAAnpB,MAAAiO,SAGAmb,WAAA,SAAAC,GACA,GAAA3J,MACA4J,EAAAtpB,KAAAspB,aACA,IAAAA,GAAAD,EACA,KAAAA,EAAAC,EAAA9e,IAAA6e,IACA,YAAAA,EAAAxkB,OAEA6a,MAEAA,EAAApI,KAAA+R,EAGA,OAAA3J,IAGAxC,QAAA,SAAAW,EAAAC,EAAAjG,EAAA0R,GAKA,GAJA1L,IACAA,EAAA,GAAAuD,GACAvD,EAAAnK,OAAA1T,MAEA6d,EAAAwD,QAAA5W,IAAAzK,MAEA,MAAA6d,EAEAA,GAAAwD,QAAAmI,IAAAxpB,MACAA,KAAAunB,SAEAje,EAAAqd,eAAA3mB,KAGA,IAAAypB,GAAA5R,KAAAF,kBAAA3X,KACAypB,IACAA,EAAAvM,QAAAW,EAAA7d,KAAA6X,GAcAgG,YAAA0D,GACAvhB,KAAAwmB,oBAAAF,KAAAC,IAAAzB,KAAAmB,MAAAD,EAAA,GACIuD,GACJvpB,KAAAgpB,eAGA,IAAAtO,GAAA1a,KAAA0a,SACA,IAAAA,EAAA,CACA,GAAAtW,GAAApE,IAEA0a,KAAAnU,OACA,QAAAzD,GAAA,EAAAC,EAAA2X,EAAA/X,OAAyCG,EAAAC,EAAOD,IAAA,CAChD,GAAA4mB,GAAAhP,EAAA5X,EACA+a,aAAA0D,IACAmI,EAAApnB,OACAonB,EAAAznB,MAAA4b,EAAA5b,KACAynB,EAAAxM,QAAAW,EAAA2D,WAAApd,EAAAyT,GAAA,GAGA6R,EAAAxM,QAAAW,EAAAzZ,EAAAyT,GAAA,IAkBA,MAdAgG,aAAA0D,KACAvhB,KAAA8hB,kBAAA9hB,KAAA2pB,OACA3pB,KAAA8hB,iBAAA5E,QAAAW,EAAA7d,KAAA6X,GAEA7X,KAAA+F,YAAA6jB,YACA5pB,KAAA+F,YAAA6jB,WAAA1M,QAAAW,EAAA7d,KAAA6X,IAGA7X,KAAAsC,QACAtC,KAAAsC,OAAA4a,QAAA,GAAAqE,GAAAvhB,KAAAiC,IAAA4b,EAAA7d,KAAAsC,QAAAtC,KAAA6X,GAEA7X,KAAA4pB,YACA5pB,KAAA4pB,WAAA1M,QAAAW,EAAA7d,KAAA6X,GAEAgG,GAGAgM,WAAA,WAEA7pB,KAAAkd,WAGA5Z,SAAA,SAAAkK,GACA,IAAAA,EACA,SAAA5J,OAAA,wCAEA,IAAA8W,GAAA1a,KAAA0a,SACAA,IAAA1a,KAAA4J,eAAA,aAGI8Q,EAAAnC,QAAA/K,SACJkN,EAAApD,KAAA9J,IAHAxN,KAAA0a,aAAAlN,GACAxN,KAAA6oB,SAKA1L,UAAA,SAAA9E,GAEA,GAAA6E,GACA4M,EACA1lB,EAAApE,IAEA,sBAAAqY,GAAA,CAEA,GAAAjU,GAAApE,KACAsI,GACAtG,MAAA,WACA,MAAAoC,GAAAgZ,WAGAF,GAAA,WACA4M,GAAA,EACAzR,EAAA/P,QAEI,KAAA+P,EAAAa,KAOJ,SAAAtV,OAAA,wGALAsZ,GAAA,WACA4M,GAAA,EACAzR,EAAAa,KAAA9U,EAAAgZ,YAKA,GAAA2M,IACA7M,QAAA,WACA4M,IAGAA,GAAA,EACAxoB,EAAA8G,SAAA8U,KAKA,OAFAA,KACAld,KAAAsD,SAAAymB,IAEAC,YAAA,WACA5lB,EAAAqZ,aAAAsM,MAIAtM,aAAA,SAAAiM,GACA,GAAAhP,GAAA1a,KAAA0a,SACA,IAAAA,EAAA,CACA,GAAAwF,GAAAxF,EAAAnC,QAAAmR,EACAxJ,QACAxF,EAAAE,OAAAsF,EAAA,GACA,IAAAxF,EAAA/X,QAGA3C,KAAAuO,aAKArI,IAAA,SAAAlE,EAAA6V,GACA,GAAAzT,GAAApE,IACA,OAAAA,MAAAsC,OACAtC,KAAAuoB,aAAA1Q,EAAAgO,EAAA7jB,GAEA2e,EAAA3gB,KAAA+nB,SAAA/nB,KAAA+nB,SAAAlQ,GAAA7X,KAAAgC,MAAA,SAAAqd,GACA,GAAAA,IAAArd,GAAA,gBAAAA,GACA,MAAA4jB,EAEA,IAAAvG,KAAAnZ,MAEA9B,EAAAulB,QAAA3nB,MAAAkE,KACA,IACA,MAAAmZ,GAAAnZ,IAAAlE,GACM,MAAA2X,GACN,IAAAA,EAAA6O,UACA,KAAA7O,GAIA,MAAAgH,GAAAvc,EAAA6lB,SAAAjoB,EAAA6V,GAAA,SAAA7V,GACA,GAAAsG,GAAA,GAAA8Y,EAIA,OAHA9Y,GAAA+W,WACA/W,EAAAkF,OAAApJ,EACAA,EAAA8Y,QAAA5U,EAAAlE,EAAAyT,GACA7V,OAIAwI,IAAA,SAAAvI,GACA,GAAAjC,KAAAiC,IAAAjC,KAAA6hB,aAAA7hB,KAAA6hB,YAAA5f,GACA,MAAAjC,MAAAiL,SAAAhJ,GAAAmb,SAEA,IAAAvJ,GAAA7T,KAAA+nB,UACA,IAAAlU,EAGA,wBAAAA,GAAArJ,IACAqJ,EAAArJ,IAAAvI,GAEA0e,EAAA9M,EAAA,SAAAA,GACA,GAAA7R,GAAA6R,EAAA5R,EACA,OAAAD,MAAAsB,SAEAtB,EAAAob,UAEApb,KAGA0I,IAAA,SAAAzI,EAAAD,GAEAhC,KAAAiL,SAAAhJ,GAAAsmB,aAAA,KAAAzC,EAAA9jB,IAEAkoB,SAAA,SAAAjoB,EAAA4V,GACA7X,KAAA0K,IAAAzI,EAAAlB,EAAA8W,IAEAsS,GAAA,SAAAC,GACA,GAAAC,GAAArqB,IAEA,OADAA,MAAA2pB,OAAA,EACAhJ,EAAA3gB,KAAAiqB,SAAAG,GAAA,SAAApoB,GAEA,MADAqoB,GAAAnN,QAAA,GAAAkE,GAAAiJ,GACAA,KAGAC,MAAA,SAAAF,GACA,MAAApqB,MAAAmqB,GAAAC,IAEAlR,KAAA,SAAAlX,GAEAhC,KAAAkG,IAAAlE,IAEA2X,MAAA,SAAAA,GAEA,GAAAe,GAAA1a,KAAA0a,SACAA,IAEAA,EAAA3S,QAAA,SAAA2hB,GAEAA,EAAA/P,YAIA4Q,SAAA,SAAAvoB,GAEAhC,KAAAkG,IAAAlE,IAEAioB,SAAA,SAAAjoB,GACAhC,KAAAgC,SAEAwoB,QAAA,SAAAnS,GACA,MAAArY,MAAAmd,UAAA,SAAA7U,GACA0T,EAAA1T,EAAAtG,QAAA,SAAAA,GACAqW,EAAArW,QAIA8Y,OAAA,WACA,MAAA9a,MAAAod,WAEAqN,SAAA,WACA,MAAAnL,QAAAtf,KAAAod,YAEArV,QAAA,SAAA2iB,EAAAC,EAAA9S,GAEA,GAAA6S,EAAApnB,SACA,MAAAtD,MAAA+H,QAAA,SAAAC,GACA,GAAAL,GAAA+iB,EAAA9iB,KAAAI,EACA2iB,GAAApqB,KAAAP,KAAA2H,IACKkQ,EAEL,IAAA+S,GAAA5qB,KAAA4qB,YACA,IAAAA,EAAA,CACA,GAAAxmB,GAAApE,IACA,OAAAgc,GAAAhc,KAAAod,QAAAuN,GAAA,SAAA3oB,GACAA,KAAA+F,SACA/F,EAAA+F,QAAA,SAAAC,EAAAkY,GACAwK,EAAAnqB,KAAA6D,IAAA6G,SAAAiV,EAAA0K,QAKA,MAAA5O,GAAAhc,KAAAod,QAAAuN,GAAA,SAAA3oB,GACA,GAAAA,KAAA+F,QACA/F,EAAA+F,QAAA2iB,OAEA,QAAA5nB,KAAAd,GACA0oB,EAAAnqB,KAAAyB,IAAAc,SAMAyS,GAAA,SAAAsV,EAAAC,GACA,qBAAAD,GAIA,KAHA,gBAAAA,IACA7qB,KAAAuV,GAAAsV,EAAArgB,IAAAqgB,EAAAngB,KAEA,GAAA9G,OAAA,oCAQA,OANAknB,KACAD,EAAAC,QAAA,SAAA9oB,EAAA0f,EAAA7J,GAEAiT,EAAAvqB,KAAAP,KAAAgC,EAAA0f,EAAA,GAAA7J,KAGAgT,EAAAlmB,oBAAA2E,GACA,GAAAuhB,GAAA7qB,MAEA,GAAAujB,GAAAvjB,KAAA6qB,IAEAvgB,IAAA,SAAAugB,GACA,MAAA7qB,MAAAuV,GAAA,SAAAvT,GACA,GAAAA,YAAA0B,OACA,SAAAE,OAAA,qBAEA,OAAAinB,GAAA7oB,MAGA0hB,GAAA,SAAA/Z,GAEA,UAAAA,GAAA3J,OAEA+qB,aAEA,GAAA/qB,KAAA8hB,iBACA,MAAA9hB,MAAA8hB,iBAAAiJ,MAEA,IAAA/qB,KAAAsC,OAAA,CACA,GAAA0oB,GAAAhrB,KAAAsC,OAAAyoB,OAAAnlB,YAAA5F,KAAAsC,OAAAyoB,MACA,OAAAC,MAAAhrB,KAAAiC,KAEA,MAAAjC,MAAA+F,aAEAglB,cAEAvpB,OAAAiF,eAAAzG,KAAA,UACAgC,MAAA+oB,KAGAE,SAAA,SAAAzd,EAAAud,GACA,GAAA/qB,KAAA8hB,iBACA,MAAA9hB,MAAA8hB,iBAAAmJ,SAAAzd,EAAAud,EAEA,IAAA/qB,KAAAsC,OACA,MAAAtC,MAAAsC,OAAA2oB,SAAAzd,EAAA4P,UAAA2N,EAEA,IAAAA,EAAA,CACA,GAAAA,EAAAlmB,MAAAkmB,EAAAlmB,aAAA2I,GACA,+BAAAA,GAAA,kCAAAud,EAAAlmB,KAEA,IAAAkmB,EAAAG,WAAA,MAAA1d,GAAA,IAAAA,GAAA,gBAAAA,IAAA1I,MAAA0I,IACA,4BAGA,GAAA2d,KAEA,OADAA,GAAAC,SAAA,EACAD,GAGAE,iBACA,GAAAA,GAAA,GAAAC,IAAAtrB,KAIA,OAHAwB,QAAAiF,eAAAzG,KAAA,cACAgC,MAAAqpB,IAEAA,GAEAA,kBAEA7pB,OAAAiF,eAAAzG,KAAA,cACAgC,MAAAqpB,KAGAE,eAAAC,GAIA,OAFAxhB,GAAAxI,OAAAwI,KAAAhK,MACA4F,EAAAoE,EAAArH,OAAA,GAAA3C,KAAA6hB,cAAA7hB,KAAA6hB,gBACA/e,EAAA,EAAAC,EAAAiH,EAAArH,OAAkCG,EAAAC,EAAOD,IAAA,CACzC,GAAAb,GAAA+H,EAAAlH,GACAd,EAAAhC,KAAAiC,EACA,IAAAD,YAAAsH,GAAA,CACA,GAAAL,GAAArD,EAAA3D,EACA,IAAAgH,EACAA,IAAAjH,GAEAiH,EAAA/C,IAAAlE,OAEM,CACN,GAAAA,EAAAM,OAAA,CACA,GAAAN,EAAAM,SAAAtC,KACA,QAGA,IAAAwP,GAAA,GAAAlG,EACAkG,GAAA8a,MAAAtoB,GACAA,EAAAwN,EAGAxN,EAAAC,MACAD,EAAAM,OAAAtC,KACA4F,EAAA3D,GAAAD,MAKA4c,MAAA,WACA,MAAA5e,MAAAK,KAAAL,KAAAK,GAAAiJ,EAAAqU,WAEA8N,cAAA,WACA,GAAArnB,GAAApE,IACA,OAAAgc,GAAAhc,KAAAod,UAAA,SAAAvJ,GACA,GAAA6G,GAAAqG,EAAAvW,IAAAqJ,EAIA,IAHA6G,GACAqG,EAAArW,IAAAmJ,EAAA6G,MAEAA,EAAAgR,cACAhR,EAAAgR,oBACK,CACLhR,EAAAgR,cAAA,CACA,IAAAvV,GAAAuE,EAAAvE,SAAA7U,EAAA0V,QAAAnD,EAAA,SAAA2E,GACA,OAAA1V,GAAA,EAAAC,EAAA2X,EAAA/X,OAA2CG,EAAAC,EAAOD,IAElD,OADAuV,GAAAqC,EAAA5X,GACAyT,EAAA,EAAAoV,EAAAnT,EAAA7V,OAA0C4T,EAAAoV,EAAQpV,IAAA,CAClD,GAAAjO,GAAAkQ,EAAAjC,EACA8B,GAAA+K,gBAAA9a,EAAA/D,KAAAsP,KAIA,IAAAsC,EAAA4D,OACA,OAAAjX,GAAA,EAAAC,EAAA2X,EAAA/X,OAA2CG,EAAAC,EAAOD,IAAA,CAClD,GAAAuV,GAAAqC,EAAA5X,EACAuV,GAAAqQ,QAAA,SAAAzmB,GACAkU,EAAA4D,OAAA9X,MAMA,MADA6e,GAAAjN,EAAAzP,IAEAiW,OAAA,WACA8G,EAAAtN,EAAAzP,KACAsW,EAAAgR,eACAhR,EAAAvE,SAAAkE,UAGAd,KAAA,WAEAjY,EAAAsqB,eAAAzV,GACAnW,KAAAqa,cAKA5S,gBAAA,WACA,MAAAzH,MAAA8hB,kBAAA9hB,KAAA8hB,iBAAA8I,cAAA5qB,KAAA+F,YAAA6kB,cAEAiB,IAAA,SAAAtnB,GAGA,MADAvE,MAAAuE,OACAvE,MAEA8rB,aAIA,MAHA9rB,MAAAunB,UAAAxmB,IACAf,KAAAunB,QAAAvnB,KAAAuE,OAAA+hB,KAAAyF,SAAA,IAAAxlB,MAAA,IAEAvG,KAAAunB,SAEAuE,cACA9rB,KAAAunB,QAAAuE,GAEAE,mBACA,UAAAlH,MAAA9kB,KAAAipB,eAMA,QAAAhnB,KAAA0lB,GACAnmB,OAAAiF,eAAA6C,EAAArH,EAAAT,OAAAuU,yBAAA4R,EAAA1lB,GAGAqH,GAAAoa,GAAA,SAAAR,GACA,GAAA+I,GAAAjsB,iBACAwN,EAAAye,EAAAtnB,UACAA,EAAAue,EAAAve,SACA,IAEA,OADAunB,GAAA1qB,OAAAyI,oBAAAtF,GACA7B,EAAA,EAAkBA,EAAAopB,EAAAvpB,OAAkBG,IAAA,CACpC,GAAAyB,GAAA2nB,EAAAppB,EACAtB,QAAAuU,yBAAAvI,EAAAjJ,IACA/C,OAAAiF,eAAA+G,EAAAjJ,EAAA/C,OAAAuU,yBAAApR,EAAAJ,IAGAI,EAAAoF,EAAApF,SACGA,OAAA2E,EAAA3E,UACH,OAAAsnB,IAGA3iB,UAAA,SAAA1D,EAAAumB,GAEA,GACAxnB,GADAiY,EAAA5c,IAmBA,OAjBAwB,QAAAuU,yBAAA/V,KAAA,aAAA4G,YAAA,GAEAulB,EAAA7qB,EAAAgL,YAAAtM,MACA2E,EAAAwnB,EAAAxnB,YAGAwnB,KAAA,WACA,MAAAnsB,gBAAAmsB,OACAvP,GAAA9b,MAAAd,KAAAuF,WAEA4mB,UAAAvmB,IAGAjB,EAAAwnB,EAAAxnB,UAAAnD,OAAAC,OAAAzB,KAAA2E,WACAA,EAAAoB,YAAAomB,EACArhB,EAAAqhB,EAAAnsB,OAEAmsB,EAAA/X,OAAAxO,IAEA0D,EAAA8K,OAAA,SAAAxO,GACA,GAAAjB,GAAA3E,KAAA2E,SACA,QAAA1C,KAAA2D,GAAA,CACA,GAAAkQ,GAAAtU,OAAAuU,yBAAAnQ,EAAA3D,GACAD,EAAA8T,EAAA9T,KACA,mBAAAA,IAAA,iBAAAC,IACAD,EAAAsB,UAEAwS,EAAA,SAAA7T,EAAA0H,GACA,OACAa,IAAA,WACA,GAAAS,IAAAjL,KAAA6hB,cAAA7hB,KAAA6hB,iBAAkE5f,EAUlE,OATAgJ,KACAjL,KAAA6hB,YAAA5f,GAAAgJ,EAAA,GAAAtB,GACAsB,EAAAhJ,MACAgJ,EAAA3I,OAAAtC,KACAiL,EAAAyP,WAEAzP,EAAA4d,QAGA5d,GAEAP,IAAA,SAAA1I,GACAhC,KAAAiC,GAAAsmB,aAAA,KAAAzC,EAAA9jB,IAEA0E,YAAA,IAEMzE,EAAAD,GACNA,IAAAsH,IACAtH,EAAAsH,KAEAtH,EAAAomB,iBAAA,GACK7e,EAAAvH,GACL8T,EAAAsW,GAAApqB,GACKA,EAAAqqB,SACLvW,EAAA9T,EAAAqqB,SAAApqB,GAEAD,EAAAkiB,EAAAliB,EAAAC,IAGAT,OAAAiF,eAAA9B,EAAA1C,EAAA6T,GACA9T,IAAAjB,EAEAf,KAAAiC,GAAAD,EAGAR,OAAAiF,eAAAzG,KAAAiC,EAAA6T,GAMA,MAHAlQ,MAAAK,QACAA,EAAA1F,KAAAP,KAAA4F,EAAAK,QAEAjG,MAGAwB,OAAAiF,eAAA6C,EAAA,mBACAkB,IAAA,WACA,MAAAxK,MAAA4J,eAAA,oBACA5J,KAAAssB,kBACAtsB,KAAAssB,iBAAA,GAAAtsB,MACAA,KAAAssB,iBAAAre,QAAAqa,GACAtoB,KAAAssB,qBAGAhjB,EAAArD,OAAA,SAAAyH,EAAAC,GACA,GAAAE,GAAA,GAAAtD,EACAsD,GAAAF,gBACA,IAAA6J,GAAAxX,KAAA+K,eAAA/K,KAAA+K,aAAA,GAAAR,GACAiN,GAAA9M,IAAAgD,EAAAG,IAiEA,mBAAA6H,UACApM,EAAA3E,UAAA+Q,OAAA6W,UAAA,WACA,GAAAA,GAAAvsB,KAAAod,UAAA1H,OAAA6W,YACAnoB,EAAApE,KACA4qB,EAAA5qB,KAAA4qB,YACA,IAAAA,EAAA,CACA,GACA9nB,GAAA,CACA,QACAoW,KAAA,WACA,GAAA3Q,GAAAgkB,EAAArT,MAIA,OAHA3Q,GAAAgR,OACAhR,EAAAvG,MAAAoC,EAAA6G,SAAAnI,IAAA8nB,IAEAriB,IAIA,MAAAgkB,IAIA,IAAAC,GAAAljB,EAAAkjB,KAAAlrB,EAAA+D,QAAAiE,EAAA,SAAAtH,GACAhC,KAAAgC,MAAA,mBAAAA,GAAAhC,gBAAAgC,IAEA2nB,OAAA,EAEA1e,SAAA,SAAAhJ,EAAAimB,GACA,GAAAtiB,GAAA5F,KAAA6hB,cAAA7hB,KAAA6hB,YAAA,GAAA4K,MACAtE,EAAAviB,EAAA4E,IAAAvI,EAYA,OAXAkmB,KAEAA,EAAA,IAAAD,GAAAloB,KAAAkoB,eACAC,EAAAlmB,MACAkmB,EAAA7lB,OAAAtC,KACAmoB,EAAAzN,WAEAyN,EAAAU,OAEAjjB,EAAA8E,IAAAzI,EAAAkmB,IAEAA,KAIA5E,EAAAja,EAAAia,UAAAjiB,EAAA+D,QAAAiE,EAAA,SAAAoK,EAAA4P,EAAA1C,GAIA,IAHAlN,IAAA3S,GAAA6f,KACA5gB,KAAA0T,UAEA4P,IACAtjB,KAAAsjB,YACA1C,GACA,OAAA9d,GAAA,EAAAC,EAAA6d,EAAAje,OAAuCG,EAAAC,EAAOD,IAC9C9C,KAAA,SAAA8C,GAAA8d,EAAA9d,KAKAilB,SAAA,SAAAlQ,EAAA6U,GAEA,GAAAC,GAAA9U,IAAAF,kBAAA3X,WACA4sB,EAAA,IACA,IAAAD,EAAA,CACA,kBAAAA,EAAAC,WACAA,EAAAD,EAAAC,WAAA5G,EAAAyE,eACA,IAAAoC,SAAAF,EAAAC,iBAEK,IAAAD,EAAAjS,WAAAiS,EAAAtK,iBAML,MAJAqK,KACAA,EAAA9O,QAAA+O,EAAAtK,cACAqK,EAAAvG,cAAAwG,EAAA9U,IAEA8U,EAAAzK,aAEAliB,KAAA4J,eAAA,YAAAiO,EAOA+U,EAAAD,EAAAC,WAEAF,IACAA,EAAA7U,IAAAuG,aAAA,GAAA5V,IAGAkkB,EAAAhG,aAAA,WACA,IAAApD,GAAAtjB,KAAAsjB,WAAAtjB,KAAAsjB,UAAAlG,QAAAsP,GACAhL,IACA1hB,MAAA4d,SAEA8O,EAAAvO,KAAAne,KAAA4d,SAEA+O,GAAA3sB,KAAAqiB,eAAAqK,EAAA9O,SAAA+O,EAAAtK,mBAAAriB,KAAA4J,eAAA,aACA8iB,EAAA1E,gBAAA2E,EAAAtK,cAGA,QADAlZ,GAAA2jB,EACAhqB,EAAA,GAAkBqG,EAAAnJ,KAAA8sB,EAAAhqB,EAAA,WAAAA,EAAA,YAAAgqB,IAAA9sB,MAA2F8C,IAC7G4pB,IACAA,EAAAhG,aAAAoG,GAEApL,EAAA5e,GAAAqG,KAAAiU,QAAAsP,EAEA,IAAAtoB,GAAApE,IACA,OAAAkc,GAAAwF,EAAA,SAAArF,GACAqQ,EAAA1E,kBAAAjnB,IACA2rB,EAAA1E,gBAAAjnB,EAEA,IAAA4rB,GAAAD,EAAAvG,cAAA/hB,EAAAyT,GACA+F,EAAA8O,EAAA9O,OACA,IAAA+O,KAAAtK,gBAAAzE,EAGA,MADA+O,GAAAC,WAAA,aACA/U,KAAAmQ,iBAAApK,IAAA+O,EAAA7K,iBACAiE,EAGA4G,EAAAzK,WAEA,IAAA7F,EAAA,IAAA0J,EACA,SAAAniB,OAAA,yJAAAga,EACA,2BAAA+O,EAAA/O,QAAA,oBACA+O,EAAAtK,cAAA,qBACAqK,EAAA1E,gBACA,oBAAA2E,EAAAjZ,OAAAkK,QACA,2BAAA+O,EAAAjZ,OAAA2O,cAEA,IAAA9Z,GAAA+a,IAAAxiB,MAAAsD,EAAAiY,KAAA,EAmBA,OAjBAuQ,IAAAD,EAAAC,YAAA,OAAAA,IACAD,EAAAC,aACAD,EAAAC,WAAA,cAEAD,EAAAtK,cAAAqK,EAAA9O,QACA+O,EAAAzK,YAAA3Z,EACAA,KAAAmR,MACAnR,EAAAmR,KAAA,WAEAiT,EAAAtK,cAAAqK,EAAA9O,SACO,WAEP+O,EAAAzK,YAAA,KACAyK,EAAAtK,cAAA,KAIA9Z,KAGAogB,gBAAA,SAAA/P,GAEAtP,EAAA3E,UAAAgkB,gBAAApoB,KAAAP,KAAA4Y,EAEA,QADAzP,GAAA2jB,EACAhqB,EAAA,GAAkBqG,EAAAnJ,KAAA8sB,EAAAhqB,EAAA,WAAAA,EAAA,YAAAgqB,IAAA9sB,MAA2F8C,IAC7GqG,KAAA7F,UACAsV,EAAAzP,IAKA+T,QAAA,SAAAW,EAAAC,EAAAjG,EAAA0R,GAEA,GADAvpB,KAAA4sB,WAAA,cACA9O,IAAA9d,KAAA8hB,kBAAAjE,GAAA,YAAAA,EAAAhZ,KAGA,OADAsE,GAAA2jB,EACAhqB,EAAA,GAAmBqG,EAAAnJ,KAAA8sB,EAAAhqB,EAAA,WAAAA,EAAA,YAAAgqB,IAAA9sB,MAA2F8C,IAC9GqG,IAAA2U,IAEAD,EAAA,GAAAuD,GAKA,OAAA9X,GAAA3E,UAAAuY,QAAA3c,KAAAP,KAAA6d,EAAAC,EAAAjG,EAAA0R,IAGAH,WAAA,SAAAC,GAEA,IAAAA,KAAAzL,QAAAqL,aACA,UAAA7H,KAIA2L,aAAA,WAGA,OADA5jB,GAAA2jB,EADApL,KAEA5e,EAAA,GAAkBqG,EAAAnJ,KAAA8sB,EAAAhqB,EAAA,WAAAA,EAAA,YAAAgqB,IAAA9sB,MAA2F8C,IAC7G4e,EAAApK,KAAAnO,EAEA,OAAAuY,IAEAxb,IAAA,SAAAlE,EAAA6V,GACA,GAAAtX,GAAAP,IACA,OAAAgc,GAAAhc,KAAAod,QAAAvF,GAAA,SAAAmV,GACA,GAAAA,IAAAhrB,GAAA,gBAAAA,GACA,MAAA4jB,EAEA,IAAAtC,GAAA/iB,EAAA+iB,UAAAlG,QAAAvF,EACA,KAAAyL,EAAAwH,QAGK,IAAAkC,KAAA9mB,IACL,MAAA8mB,GAAA9mB,IAAAlE,EAEA,IAAA2X,GAAA,GAAA/V,OAAA,oEAEA,MADA+V,GAAA6O,WAAA,EACA7O,EAPA2J,EAAA,QAAA/iB,OAAAyB,EAAAzB,EAAAwsB,eAAAlV,GACAtX,EAAA2c,QAAA,UAAArF,MAUAoV,WAAA,SAAAnC,GAEA,MADA9qB,MAAAsjB,UAAAlG,UAAA0N,UACA9qB,QAIA0H,EAAApG,EAAA+D,QAAAiE,EAAA,SAAAtH,EAAAgC,GACAhE,KAAAgC,QACAhC,KAAA4pB,WAAA5lB,OAGAqkB,GAAA/mB,EAAA+D,QAAAiE,EAAA,SAAA4jB,EAAAjf,GACAjO,KAAAktB,UACAltB,KAAAiO,YAEAmP,QAAA,WAEA,GAAAnP,GAAAjO,KAAAiO,OACA,OAAAjO,MAAAktB,QAAA9P,QAAAnP,EAAA0J,kBAAA1J,EAAA,GAAAzF,GAAAyF,KAGA0a,gBAAA,SAAA/P,GACA5Y,KAAA4gB,SAAA5gB,KAAA4gB,QAAA7Y,QAAA6Q,IAGAqQ,WAAA,WAGA,OAFArL,GAAAtU,EAAA3E,UAAAskB,WAAA1oB,KAAAP,MACA4gB,EAAA5gB,KAAA4gB,SAAA,EACA9d,EAAA,EAAAC,EAAA6d,EAAAje,OAAsCG,EAAAC,EAAOD,IAAA,CAC7C,GAAA4Q,GAAAkN,EAAA9d,EACA4Q,GAAAwV,iBACAtL,EAAA0I,KAAAC,IAAA3I,EAAAlK,EAAAwV,mBAGA,MAAAtL,IAGA1X,IAAA,SAAAlE,GACA,GAAAiM,GAAAjO,KAAAiO,OACA,OAAAjO,MAAAktB,QAAAhnB,IAAAlE,EAAAiM,EAAA0J,kBAAA1J,EAAA,GAAAzF,GAAAyF,OAIAwV,GAAAna,EAAAma,OAAAniB,EAAA+D,QAAAiE,EAAA,QAAAma,IAAAzhB,GACA,MAAAihB,GAAAjjB,KAAAgC,EAAAyhB,MAEA0J,gBAAA,EAgBAliB,SAAA,SAAAhJ,EAAAimB,GACA,MAAA5e,GAAA3E,UAAAsG,SAAA1K,KAAAP,KAAAiC,EAAAimB,GAAA,gBAAAjmB,IAAAjC,KAAA4qB,eAEAhQ,OAAA,SAAA4H,EAAAM,GACA,GAAApB,GAAAnc,SACA,OAAA0c,GAAAjiB,KAAA,SAAAmiB,GACAK,EAAA,IACAA,EAAAL,EAAAxf,OAAA6f,EAEA,IAAAJ,GAAAD,EAAAvH,OAAA9Z,MAAAqhB,EAAAT,EAGA,OAFAmB,GAAA7iB,KAAAoiB,EAAAI,EAAAM,EAAAX,EAAAxf,QACA2f,EAAAtiB,QAAAuG,MAAAhG,KAAAmhB,EAAA,GAAAc,EAAAL,EAAAxf,QACAyf,KAGA9K,KAAA,WACA,GAAAoK,GAAAnc,SACA,OAAA0c,GAAAjiB,KAAA,SAAAmiB,GACA,GAAAC,GAAAD,EAAA7K,KAAAxW,MAAAqhB,EAAAT,EAEA,OADAY,GAAAtiB,KAAA0hB,EAAAS,EAAAxf,OAAA+e,EAAA/e,OAAAwf,EAAAxf,QACAyf,KAGAgL,QAAA,WACA,GAAA1L,GAAAnc,SACA,OAAA0c,GAAAjiB,KAAA,SAAAmiB,GACA,GAAAC,GAAAD,EAAAiL,QAAAtsB,MAAAqhB,EAAAT,EAEA,OADAY,GAAAtiB,KAAA0hB,EAAA,EAAAS,EAAAxf,QACAyf,KAGAiL,IAAA,WACA,MAAApL,GAAAjiB,KAAA,SAAAmiB,GACA,GAAAC,GAAAD,EAAAkL,KAEA,OADAxK,GAAA7iB,MAAAoiB,GAAAD,EAAAxf,OAAA,GACAyf,KAGA4E,MAAA,WACA,MAAA/E,GAAAjiB,KAAA,SAAAmiB,GACA,GAAAC,GAAAD,EAAA6E,OAEA,OADAnE,GAAA7iB,MAAAoiB,GAAA,IAAAD,EAAAxf,QACAyf,MAIAqB,IAAAwB,GAAA,SAAA2F,GACA,GAAA0C,GAAA7J,IAA2BmH,gBAC3B,OAAA5qB,QAAAyjB,GAEA,GAAA6J,GAEAA,EAmBA,IACAnmB,IAAA7F,EAAA+D,QAAAke,EAAA,SAAAtK,GACAjZ,KAAAiZ,cAEAqK,WACAlG,QAAA,SAAAvF,GAGA,QAAAqB,KACA,GAAAqU,GACAzqB,EACAsW,EACAC,CAgBA,KAfAmU,GAEApU,EAAAoU,EAAAjB,SACAzpB,EAAA0qB,EAAA1qB,EACAyqB,EAAAC,EAAAxrB,MACAqX,EAAAmU,EAAAnU,aAEAxB,GAEAA,EAAAlJ,UAEA7L,EAAA,EACAsW,EAAApZ,KAAAiZ,eAGA,CACA,GAAAE,GAAAC,EAAAC,EAAA,gBAAAkU,EACA,IAAApU,EAAAI,KAAA,CAIA,IAHA,GAAAkU,GAAAztB,KAAA4gB,YACA8M,EAAA5qB,EACA6qB,KACA3tB,KAAA8sB,EAAAhqB,EAAA,WAAAA,EAAA,WAEA9C,KAAA8sB,GAAA/rB,EACA+B,GAEA,KAAAA,EAAA,EAAkBA,EAAA4qB,EAAe5qB,IAAA,CAEjC,GAAAgqB,GAAAhqB,EAAA,WAAAA,EAAA,QACA9C,MAAA8sB,IAAA9sB,KAAA8sB,GAAAxpB,UACAqqB,EAAArW,KAAAtX,KAAA8sB,IAGA,IAAAhqB,EAAA,EAAkBA,EAAA2qB,EAAA9qB,OAAuBG,IACzC6qB,EAAApV,QAAAkV,EAAA3qB,SACA2qB,EAAA3qB,GAAA2a,aAAAzd,KAIA,OADAA,MAAA4gB,QAAA+M,EACAxU,EAAAnX,MAEA,GAAAwX,GAAAL,EAAAnX,KAGA,KACA,GAAA8qB,GAAAhqB,EAAA,WAAAA,EAAA,QAwBA,IAvBA9C,KAAA8sB,KAAAtT,GAAAxZ,KAAA8sB,KAAA/rB,IAEAyY,KAAAlW,UACAtD,KAAA0a,WACAlB,EAAAlW,SAAAtD,MAEAA,KAAA8sB,GAAAtT,GACS,kBAAAA,IAAAjQ,EAAAiQ,IACTgU,GACA1qB,IACAypB,SAAA/S,KAEAN,EAAA3Y,KAAAP,MACA8C,EAAA0qB,EAAA1qB,GAEA9C,KAAA8sB,GAAA,MAGAhqB,IACA+U,IACAA,EAAA6O,aAAAoG,GAEAS,EAAA/T,KAAA4D,QAAAvF,GACA0V,KAAA7T,KAAA,CAEA,GAAAtV,GAAApE,IAMA,OALAwtB,IACA1qB,IACAypB,SAAAnT,GAGAmU,EAAA7T,KAAA,SAAA1X,GAEA,MADAwrB,GAAAxrB,QACAkX,EAAA3Y,KAAA6D,IACS,SAAAuV,GAGT,MAFA6T,GAAAxrB,MAAA2X,EACA6T,EAAAnU,YAAA,EACAH,EAAA3Y,KAAA6D,KAGAiV,GAAA,EACO,MAAAM,GACPN,GAAA,EACAkU,EAAA5T,IAhGA,GAAA6T,EACA,OAAAtU,OAuGAoS,GAAAhqB,EAAA+D,QAAAke,EAAA,SAAA7P,GACA1T,KAAA0T,WAEA4P,UAAA,SAAA9V,GACA,GAAAA,GAAAxN,KAAA0T,MACA,OAAAlG,GAAAyd,SAAAzd,IAAAud,WAsBAvH,IACA1iB,MAAA,SAAAkN,EAAA0T,GACA,MAAAA,KAmFA4G,IACA/jB,KAAA,kBACAqpB,YAAA,sGACA7nB,aACA8D,YAAA,SAAAoE,EAAAtE,GACA,MAAAA,GAAA+N,kBAGApI,SAAA,WACA,UAYAhG,GAAA8T,QAAA,SAAAvF,GAEA,MAAAuM,GAAApkB,KAAA6X,GAAAuF,QAAAvF,IAEAvO,EAAAye,SAAA,SAAAlQ,GAEA,MAAAuM,GAAApkB,KAAA6X,IAEAvO,EAAApD,IAAA,SAAAlE,EAAA6V,GAEA,MAAAuM,GAAApkB,KAAA6X,GAAA3R,IAAAlE,EAAA6V,IAEAvO,SAAA,SAAA2E,GACA,SAAAA,EAAA,CACAA,EAAAT,SAAAS,EAAAlI,YAAA8D,cAEAoE,IAAAT,OAEA,IAAAQ,EAMA,OALAA,GAAA,GAAAxF,GAAAyF,GAAAkJ,QAAAnX,MACAgO,MAAAC,UACAD,EAAAC,WAGAD,GAAAhO,KAAA0X,gBAEA,MAAA1X,MAAA0X,iBAGApO,EAAA1B,KAAA,SAAA5F,GACA,GAAAA,GAAA,gBAAAA,GAAA,CAEA,GAAA6L,GAAA7N,KAAA6N,cAAA7N,KAAA6N,YAAA,GAAAtD,IACAyD,EAAAH,EAAArD,IAAAxI,EAIA,OAHAgM,IACAH,EAAAnD,IAAA1I,EAAAgM,EAAA,GAAAhO,MAAAgC,IAEAgM,EAGA,UAAAhO,MAAAgC,IAGAsH,EAAAhG,SAAA,SAAAkK,GACAxN,KAAA0X,gBAAApU,SAAAkK,IAEAlE,EAAAmU,aAAA,SAAAjQ,GACAxN,KAAA0X,gBAAA+F,aAAAjQ,IAEAlE,EAAA7B,gBAAA,WACA,MAAAzH,MAAA4qB,cAEAthB,EAAA4T,QAAA,SAAAW,EAAAC,EAAAjG,GACA,MAAAuM,GAAApkB,KAAA6X,GAAAqF,QAAAW,EAAAC,EAAAjG,GAEA,IAAAgW,KACArjB,IAAA,SAAAgD,EAAAjJ,GACA,GAAAvC,GAAAwL,EAAAjJ,EACA,OAAAvC,KAAAjB,EAAAyM,EAAAvC,SAAA1G,GAAAvC,GAEA0I,IAAA,SAAA8C,EAAAjJ,EAAAvC,GACA,GAAAqd,GAAA7R,EAAAjJ,EAOA,OANA8a,MAAAnZ,IAEAmZ,EAAAnZ,IAAAlE,GAEAwL,EAAA9C,IAAAnG,EAAAvC,IAEA,GAEAyI,IAAA,SAAA+C,EAAAjJ,GACA,MAAAA,KAAAiJ,IAAAjJ,IAAAiJ,GAAA4P,WAEA0Q,eAAA,SAAAtgB,EAAAjJ,GACA,MAAAspB,IAAAnjB,IAAA8C,EAAAjJ,EAAAxD,IAEAgtB,QAAA,SAAAvgB,GACA,MAAAhM,QAAAyI,oBAAAuD,EAAA4P,YAGA9T,GAAAghB,MAAA,SAAA5W,GAEA,UAAAsa,OAAAta,YAAA1T,MAAA0T,EAAA1T,KAAA4H,KAAA8L,GAAAma,KAEArsB,OAAAiF,eAAA6C,EAAA,gBACAkB,IAAA,WACA,MAAAxK,MAAAiuB,eAEAvjB,IAAA,SAAAlD,GACAxH,KAAAiuB,eAAAzmB,IACAxH,KAAAiuB,cAAAzmB,EACAA,EAAAoiB,WAAA5pB,SAIAwB,OAAAiF,eAAA6C,EAAA,cACAkB,IAAA,WACA,MAAAxK,MAAAkuB,aAEAxjB,IAAA,SAAAyjB,GACAnuB,KAAAkuB,aAAAC,IACAnuB,KAAAkuB,YAAAC,EACAA,EAAAvD,aAAA5qB,SAIAsJ,EAAA0c,YAAAlB,KAAAmB,MACA3c,EAAA8kB,WAAArK,EACAza,EAAA/I,KAAA8tB,SAAA1pB,UAAApE,KACA+I,EAAAxI,MAAAutB,SAAA1pB,UAAA7D,MAIAujB,EAAAoB,QAAA,SAAAvC,GACA,QAAAmB,MAaA,MAZAA,GAAAgI,SAAA,SAAAlI,GACA,OACAniB,MAAA,WACA,GAAA0f,GAAAnc,SAGA,WAAA2d,GAAA,GAAAK,GAAAvjB,KAAA,SAAAgC,GACA,aAAAA,EAAAjB,EAAAiB,EAAAmiB,GAAArjB,MAAAkB,EAAA0f,SAKA2C,GAKAC,EAAA+H,SAAA,SAAAlI,GACA,OACAniB,MAAA,WACA,GAAA0f,GAAAnc,UAGAnB,EAAApE,IACA,OAAAgc,GAAAhc,KAAAod,UAAA,SAAApb,GACA,GAAAssB,GAAAtsB,EAAAmiB,GAAArjB,MAAAkB,EAAA0f,EACA,OAAA1F,GAAA5X,EAAA8B,IAAAlE,GAAA,WACA,MAAAssB,UAeA/J,EAAAjb,WACAilB,OAAAlK,EAAAoB,QAAAlB,GACAiK,WAAAnK,EAAAoB,QAAAjB,GACAjM,QAAA8L,EAAAoB,QAAAjB,GACAiK,YAAApK,EAAAoB,QAAAjB,GACApZ,MAAAiZ,EAAAoB,QAAAhC,IACA3T,QAAAuU,EAAAoB,QAAAlB,GACAmK,OAAArK,EAAAoB,QAAAlB,GACAhe,MAAA8d,EAAAoB,QAAAlB,GACAoK,YAAAtK,EAAAoB,QAAAlB,GACApa,YAAAka,EAAAoB,QAAAlB,GACA5hB,OAAA6hB,GACED,GAEFC,EAAAlb,WACAslB,QAAAvK,EAAAoB,QAAAlB,GACAsK,cAAAxK,EAAAoB,QAAAlB,GACAuK,YAAAzK,EAAAoB,QAAAlB,GACAwK,eAAA1K,EAAAoB,QAAAlB,IACEC,GAKFE,EAAApb,aAA4Bob,GAK5BE,EAAAtb,WACAmB,IAAA4Z,EAAAoB,QAAAf,GACA8E,IAAAlF,EACA0K,MAAA1K,EACA2K,SAAA3K,GACEM,GACFpjB,OAAAiF,eAAAme,EAAAjgB,UAAA,SACA6F,IAAA,WACA,MAAAxK,MAAAkvB,SAAAlvB,KAAAkvB,OAAAlvB,KAAAuV,GAAAwN,GAAAW,GAAAD,QAOAoB,EAAAvb,WACA6lB,aAAA9K,EAAAoB,QAAAlB,GACA6K,aAAA/K,EAAAoB,QAAAlB,GACA8K,YAAAhL,EAAAoB,QAAAlB,GACA+K,YAAAjL,EAAAoB,QAAAlB,GACAgL,QAAAlL,EAAAoB,QAAAjB,GACAgL,QAAAlL,GACEO,EAEF,IAAA4K,IAAAnuB,EAAA+D,QAAAiE,EAAA,QAAAmmB,IAAAztB,GACA,MAAAihB,GAAAjjB,KAAAgC,EAAAytB,MAEA/V,KAAA,SAAA4C,EAAAC,GAEA,GAAAva,GAAAhC,KAAAod,SACA,OAAApb,MAAA0X,KACA1X,EAAA0X,KAAA4C,EAAAC,GAEAD,EAAAta,MAIAgjB,IACA0K,OAAAnL,EACAoL,OAAAnL,EACAoL,UAAAlL,GAiBA9kB,IACAiwB,YAAA,EACAvmB,WACAma,UACAqM,UAAAxmB,EACAib,UACAC,UACAE,WACA+K,YACA5K,QACAD,OACA4H,OACAjJ,YACA9a,OACAmd,WACApd,UACArB,qBACAO,OACAmZ,mBACArY,UACA6a,MACAF,gBACAgC,WACAY,gBAEAR,GAAA,GAAAkH,IACAlH,IAAA7a,IAAAhH,MAAA+f,IACA8B,GAAA7a,IAAA4U,OAAAiF,GACAgB,GAAA7a,IAAA+Z,OAAAD,GACAe,GAAA7a,IAAAia,QAAAD,GAiBAS,EAAA3a,IAAA,SAAAgD,EAAAvL,EAAAihB,GACA,GAAAjY,IAAAuC,EAAAqU,cAAArU,EAAAqU,iBAAkE5f,EAYlE,OAXAgJ,KACAuC,EAAAqU,YAAA5f,GAAAgJ,EAAA,IAAA8Z,EAAA7B,IACA1V,EAAAua,WACA9c,EAAAhJ,MACAgJ,EAAA3I,OAAAkL,EACAvC,EAAAyP,WAEAzP,EAAA4d,SAIA5d,GAEAka,EAAAza,IAAA,SAAA8C,EAAAvL,EAAAD,GACA,GAAAiJ,GAAAuC,EAAAvL,EACAgJ,GAAA3I,OAAA2I,EAAAsd,aAAA,KAAAzC,EAAA9jB,GAAAiJ,EAAA/E,IAAAlE,GAIA,IAAA2jB,IAAArkB,EAAA+D,QAAAke,EAAA,SAAA7P,EAAAyQ,EAAAzC,GACA1hB,KAAA0T,SAEA1T,KAAAmkB,SACAnkB,KAAAuF,UAAAmc,IAEA4B,UAAA,SAAAnB,GACA,GAAAgC,GAAAnkB,KAAAmkB,OACA4L,EAAA/vB,KAAA0T,QAAA1T,KAAA0T,OAAAyZ,cAUA,OATAhL,MAAApa,UAIAoa,EADI4N,MAIJ5N,IAEA,gBAAAgC,GAEAhC,EAAAgC,GAAArjB,MAAAqhB,EAAAniB,KAAAuF,WAEA4e,EAAAhC,EAAAniB,KAAAuF,YAGAyqB,aAAA,SAAA7N,GACA,GAAAzO,GAAA1T,KAAA0T,OACAkX,EAAAlX,KAAAkX,YACA,OAAAA,GAAAzI,EAAA7X,IAAA,SAAAtC,EAAAlF,GACA,GAAAmtB,GAAArF,EAAAhjB,KAAAI,EAEA,OADAioB,GAAArG,WAAAlW,EACAuc,IACI9N,GAGJ1a,gBAAA,WACA,MAAAzH,MAAA0T,OAAAjM,mBAEA0lB,gBAAA,GAeA3H,GAAA,uBACAtI,QAAA,SAAA5U,EAAAwV,EAAAjG,EAAA0R,GACA,IAAAjhB,KAAAsa,WAAA5iB,MAAAsI,EAAAsa,UAAAta,EAAAsa,SAAA7c,cAAA/F,KACA,MAAAujB,GAAA5e,UAAAuY,QAAA3c,KAAAP,KAAAsI,EAAAwV,EAAAjG,EAEA,IAAA8U,GAAA9U,KAAAF,kBAAA3X;AACA,cAAAsI,EAAAzD,KAAA,CACA,GAAAqb,GAAAyM,EAAAzK,YAAA3J,QAAAjQ,EAAA+W,SACAa,OACAyM,EAAA/R,OAAAsF,EAAA,OAEI,YAAA5X,EAAAzD,KAIA,eAAAyD,EAAAzD,KAAA,CACJ,GAAAgP,GAAAvL,EAAAhG,OAAA8a,QAAAvF,GACAqI,EAAAyM,EAAAzK,YAAA3J,QAAA1E,GACAiE,GAAAjE,GAAAqc,OAAAlwB,KAAAuF,UAAA,IAAA5C,OAAA,CACA,IAAAud,KAAA,CACA,GAAApI,EACA,UAAAyJ,GAAArB,EAAA5X,EAAAqkB,EAAAzK,YAEArO,EAEA8Y,GAAA/R,OAAAsF,EAAA,OAGApI,IACA6U,EAAArV,KAAAzD,EAIA,QAEA,MAAA0P,GAAA5e,UAAAuY,QAAA3c,KAAAP,KAAAsI,EAAAwV,EAAAjG,EAAA0R,IAvBAjhB,EAAAtG,OAAAkuB,OAAAlwB,KAAAuF,UAAA,IAAA5C,OAAA,GACAgqB,EAAArV,KAAAhP,EAAAtG,UAyBEyhB,IACF+B,EAAA,eAAA9R,GACA1T,KAAAmtB,eAAAzZ,EAAAyZ,iBAEA7J,UAAA,SAAAnB,GACA,GAAA4N,GAAA/vB,KAAA0T,QAAA1T,KAAA0T,OAAAyZ,eACAgD,EAAAnwB,KAAAuF,UAAA,EACA,IAAA4c,KAAA7X,IAAA,CACA,GAAAoJ,GAAA1T,KAAA0T,OACAkX,EAAAlX,KAAAkX,YACA,OAAAzI,GAAA7X,IAAAsgB,EAAA,SAAA5iB,EAAAlF,GACA,MAAAqtB,GAAAzc,EAAAzI,SAAAnI,OACKqtB,GACD,MAAAJ,IACJ,QAAA5L,OAKAwB,GAAAhhB,UAAA2e,UAAA/iB,KAAAP,KAAAmiB,GAHAgO,EAAAhO,IAKAjF,QAAA,SAAA5U,EAAAwV,EAAAjG,EAAA0R,GACA,IAAAjhB,KAAAsa,WAAA5iB,MAAAsI,EAAAsa,UAAAta,EAAAsa,SAAA7c,cAAA/F,KACA,MAAAsJ,GAAA3E,UAAAuY,QAAA3c,KAAAP,KAAAsI,EAAAwV,EAAAjG,EAEA,IAAA8U,GAAA9U,KAAAF,kBAAA3X,WACA,eAAAsI,EAAAzD,KACA8nB,EAAA/R,OAAAtS,EAAA2X,cAAA,OACI,YAAA3X,EAAAzD,KAAA,CACJ,GAAAsd,GAAAwK,EAAAzK,WACAyK,GAAArV,KAAAtX,KAAAuF,UAAA,GAAAhF,KAAAP,KAAAuF,UAAA,GAAAvF,KAAA0T,OAAAzI,SAAAkX,KAAAxf,cACI,eAAA2F,EAAAzD,KAqBJ,MAAA0e,GAAA5e,UAAAuY,QAAA3c,KAAAP,KAAAsI,EAAAwV,EAAAjG,EAAA0R,EApBA,IAAAvpB,KAAAyH,kBACA,MAEA,IAAAoM,GAAAvL,EAAAhG,OAAA8a,QAAAvF,GACAsK,EAAAwK,EAAAzK,YACAhC,EAAA5X,EAAArG,IACAD,EAAAsG,EAAAtG,KAQA,IAPAke,KAEAle,EAAA6R,EAAAqM,GAGAA,EAAAiC,KAAA7X,KAAA6X,EAAA5J,QAAA1E,KAEAqM,MAGA,MAAAqD,GAAA5e,UAAAuY,QAAA3c,KAAAP,KAAAsI,EAAAwV,EAAAjG,EAAA0R,EAFAoD,GAAA/R,OAAAsF,EAAA,EAAAlgB,KAAAuF,UAAA,GAAAhF,KAAAP,KAAAuF,UAAA,GAAAvF,KAAA0T,OAAAzI,SAAAiV,QAQEuD,IACF+B,EAAA,uBACAA,EAAA,4BACAA,EAAA,uBAAuDd,GACvDc,EAAA,wBAAwDd,GACxDc,EAAA,wBAAwD/B,IACxD+B,EAAA,iBAAA9R,EAAAgO,MACAzW,SAAAuhB,EAAA7nB,UAAAsG,SACAkZ,OAAA,SAAAhC,EAAAT,GAcA,QAAA0O,GAAAnuB,EAAAD,GACAke,EAAAxV,IAAAzI,EAAAD,GARA,OANAke,GAAA,GAAAuM,KACA4D,EAAA3O,EAAA,GACA4O,EAAA5O,EAAA,GACA6O,EAAA,kBAAAF,GACAG,EAAA,kBAAAF,GACAG,IAAAJ,EACAvtB,EAAA,EAAAC,EAAAof,EAAAxf,OAAoCG,EAAAC,EAAOD,IAAA,CAC3C,GAAAf,GAAAogB,EAAArf,EACAod,GAAAxV,IACA6lB,EAAAF,EAAAtuB,EAAAquB,GACAK,EAAA1uB,EAAAsuB,GAAAtuB,EACAyuB,EAAAF,EAAAvuB,MAKA,MAAAme,MAIAsF,EAAA,mBAAA9R,EAAAgO,MACAzW,SAAAuhB,EAAA7nB,UAAAsG,SACAkZ,OAAA,SAAAhC,EAAAT,GAOA,OANAxB,GAAA,GAAAuM,KACA4D,EAAA3O,EAAA,GACA4O,EAAA5O,EAAA,GACA6O,EAAA,kBAAAF,GACAG,EAAA,kBAAAF,GACAG,IAAAJ,EACAvtB,EAAA,EAAAC,EAAAof,EAAAxf,OAAoCG,EAAAC,EAAOD,IAAA,CAC3C,GAAAf,GAAAogB,EAAArf,GACAb,EAAAsuB,EAAAF,EAAAtuB,GACA0uB,EAAA1uB,EAAAsuB,GAAAtuB,EACA2uB,EAAAxQ,EAAA1V,IAAAvI,EACAyuB,IACAxQ,EAAAxV,IAAAzI,EAAAyuB,MAEAA,EAAApZ,KAAAkZ,EAAAF,EAAAvuB,MASA,MAAAme,KAIA,IAAAkM,IAAA9iB,EAAA8iB,uBAAA,SAAApqB,GACA,GAAA2uB,EACA,QACAnmB,IAAA,WACAmmB,IACAA,EAAA,GAAApmB,GAEA,IAAAnG,GAAAusB,EAAAnmB,IAAAxK,KAIA,OAHAoE,IACAusB,EAAAjmB,IAAA1K,KAAAoE,EAAA,GAAA+C,IAAAnF,EAAAoF,KAAApH,QAEAoE,GAEAsC,YAAA,GAOA,OAHA4C,GAAA+Z,MACA/Z,EAAAd,UAEA5I,MNigFM,SAASC,EAAQD,EAASM,GOx4JhC,GAAAS,GAAAC,EAAAC,GAAA,SAAAnB,EAAAC,GACAiB,GAAAV,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAS,EAAA,EAAAE,EAAA,kBAAAF,KAAAG,MAAAlB,EAAAgB,GAAAD,IAAAI,SAAAF,IAAAhB,EAAAD,QAAAiB,KAEEb,KAAA,SAAAsB,EAAAF,EAAAC,GAaF,QAAAuvB,GAAAhQ,GACA,OAAA9d,GAAA,EAAAC,EAAA6d,EAAAje,OAAuCG,EAAAC,EAAOD,IAAA,CAC9C,GAAA4Q,GAAAkN,EAAA9d,EACA4Q,MAAAmd,eACAjQ,EAAA9d,GAAA4Q,EAAAmd,gBAGA,MAAAjQ,GAEA,QAAA1f,GAAA+X,EAAAnX,GACA,qBAAAmX,GACA,SAAArV,OAAA,4IAKA,OAHA9B,MAAAgpB,UACA7R,EAAA6R,QAAAhpB,EAAAgpB,SAEA,GAAAzpB,GAAA8F,kBAAA8R,GA3BA,GAAAsK,GAAAliB,EAAAkiB,UACAja,EAAAjI,EAAAiI,SACAC,EAAAjI,EAAAiI,YACAunB,EAAAxvB,EAAA+D,QAAAke,EAAA,SAAA7P,EAAA4P,EAAA1C,GACA5gB,KAAA4gB,UACA2C,EAAAziB,MAAAd,KAAAuF,aAEAsrB,aAAA,WACA,MAAA7wB,MAAAsjB,UAAAxiB,MAAAd,KAAA4wB,EAAA5wB,KAAA4gB,YAyEA,OApDAtf,GAAAI,KAAAR,EAAAE,GACAF,EAAA0G,KAAA,SAAA5F,EAAAF,GACA,MAAAE,MAAAiJ,SACAjJ,EAEA,kBAAAA,IAAAuH,EAAAvH,GACAd,EAAAc,EAAAF,GAEAwH,EAAA1B,KAAA5F,IAEAd,EAAA6vB,KAAA,SAAAld,EAAA5I,GACA,GAAA4I,EAAA,CAEA,GAAAA,EAAA5I,SAAA,CAEA,GAAA+lB,GAAAnd,EAAA5I,EACA,OAAAlK,UAAAiwB,IAAAnd,EAAA5I,YAEA,MAAA4I,GAAA5I,KAIA/J,EAAA+vB,KAAA,SAAAlK,EAAAmK,EAAAC,GACA,MAAA/vB,SAAA2lB,EAAA3lB,EAAAgwB,OAAAF,EAAAC,KAEAjwB,EAAAmwB,MAAA,SAAA7jB,EAAAkU,GACA,MAAAlU,GAAAvC,UAAA,kBAAAuC,GACAA,EAAA1M,MAAA,KAAA8vB,EAAAlP,IAEA,GAAA6B,GAAA7B,EAAA,GAAAlU,EAAAkU,IAEAxgB,EAAAowB,MAAA,SAAA9jB,EAAAvL,EAAAyf,GACA,GAAAyC,GAAA3W,EAAAvL,EACA,yBAAAkiB,MAAAlZ,UAAA,SAAAhJ,EAEAkiB,EAAArjB,MAAA0M,EAAAojB,EAAAlP,IAEA,GAAA6B,GAAA7B,EAAA,GAAAlU,EAAAvL,GAAAmF,KAAAoG,GAAAkU,IAEAxgB,EAAAqwB,MAAA,SAAA/jB,EAAAkU,GACA,MAAAlU,GAAAvC,UAAA,kBAAAuC,GACA,IAAAA,EAAApG,KAAAtG,MAAA0M,GAAA,MAAAgkB,OAAAZ,EAAAlP,MAEA,GAAA6B,GAAA7B,EAAA,cACA,WAAAlU,EAAApG,KAAAtG,MAAA0M,GAAA,MAAAgkB,OAAAjsB,cACKmc,IAGLxgB,EAAAuwB,IAAA,SAAAnO,EAAA1C,GACA,UAAAkQ,GAAAlQ,EAAA,GAAA0C,EAAA1C,IAGA1f,KP+4JM,SAASrB,EAAQD,EAASM,GQr+JhC,GAAAS,GAAAC,EAAAC,GAAA,SAAAnB,EAAAC,GACAiB,GAAAV,EAAA,IAAAS,EAAA,EAAAE,EAAA,kBAAAF,KAAAG,MAAAlB,EAAAgB,GAAAD,IAAAI,SAAAF,IAAAhB,EAAAD,QAAAiB,KAEEb,KAAA,SAAAqB,GAMF,QAAAqwB,GAAAC,GAEA,MAAAC,GAAAD,KACAC,EAAAD,GACA,GAAAtD,UAAA,kBAAAsD,IAEA,QAAArmB,KAAAzG,EAAAN,EAAAstB,EAAAC,EAAAC,EAAAC,GAsCA,QAAAC,GAAAC,GACAA,EAAAL,aACAK,EAAAC,MAAAH,KAAA,EAtCA,GAAAlH,GAAA,SAAAhY,EAAAtO,GACA,GAEA4tB,GAFAlgB,EAAA1N,EAAA,GACA6tB,EAAA7tB,EAAA,EAEA,IAAA0N,KAAAhM,IACA,IACA,MAAAgM,GAAAhM,IAAA6rB,EAAAjf,EAAAuf,KAAAjV,YACK,MAAAzD,GACL,IAAAA,EAAA6O,UAGA,KAAA7O,EAFAyY,GAAAzY,EAMA,IAAA0Y,MAAAnsB,IAGA,KAAAksB,MAAAE,QAAAF,EAAA,GAAAxuB,OAAA,oDAFAyuB,GAAAnsB,IAAA8rB,EAAAlf,EAAAZ,KAAAkL,aAOA8U,GACApxB,MAAA,SAAAkN,EAAA0T,GASA,MARAoQ,GAAAJ,EAAAI,GACAC,KAAAL,EAAAK,GACAC,KAAAN,EAAAM,GACAF,EAAAhH,UACA1pB,EAAAkK,GAAA4mB,EAAA,GAAA7wB,GAAAiI,SAAAwoB,GAEAG,EAAAC,GACAxQ,EAAAhe,MAAAiB,UAAA4B,MAAAhG,KAAAmhB,GACAwQ,EAAApxB,MAAAkN,EAAA0T,IAOAuQ,GAAAC,GACA9wB,EAAAkK,GAAA4mB,EACA9wB,EAAAmD,GAAA,WACA,GAAAgE,GAAA2pB,EAAApxB,MAAA,KAAAyE,UACA,OAAAV,GAAA0D,EAAAmb,GAAA7e,GAAA0D,GAxDA,GAAAmc,GAAArjB,EAAAqjB,SACAF,EAAAnjB,EAAAmjB,QACAoN,KACAxwB,IA4EA,OAlBAkK,GAAA,IAAAkZ,EAAA,2BACAlZ,EAAA,IAAAkZ,EAAA,gCACAlZ,EAAA,IAAAkZ,EAAA,gCACAlZ,EAAA,IAAAkZ,EAAA,8BAEAlZ,EAAA,2FAAoG,SACpGA,EAAA,2EAAqF,QACrFA,EAAA,IAAAoZ,EAAA,sBACApZ,EAAA,IAAAkZ,EAAA,qBACAlZ,EAAA,IAAAoZ,EAAA,mBACApZ,EAAA,KAAAoZ,EAAA,2BACApZ,EAAA,IAAAoZ,EAAA,gBACApZ,EAAA,KAAAoZ,EAAA,wBACApZ,EAAA,MAAAoZ,EAAA,yBACApZ,EAAA,KAAAoZ,EAAA,kBACApZ,EAAA,IAAAoZ,EAAA,gBACApZ,EAAA,IAAAoZ,EAAA,eACApZ,EAAA,+EACAlK,KR4+JM,SAASvB,EAAQD,EAASM,GShkKhC,GAAAS,GAAAC,EAAAC,GAAA,SAAAnB,EAAAC,GACAiB,GAAAV,EAAA,GAAAA,EAAA,IAAAS,EAAA,EAAAE,EAAA,kBAAAF,KAAAG,MAAAlB,EAAAgB,GAAAD,IAAAI,SAAAF,IAAAhB,EAAAD,QAAAiB,KAEEb,KAAA,SAAAsB,EAAAD,GAGF,QAAAkxB,GAAA7e,EAAAlG,EAAAglB,GACA,GAAA9e,GAAA,gBAAAA,GAAA,CACA,GAAAA,YAAAhQ,OAAA,CACA8J,IACA,QAAA1K,GAAA,EAAAC,EAAA2Q,EAAA/Q,OAAqCG,EAAAC,EAAOD,IAC5C0K,EAAA1K,GAAAyvB,EAAA7e,EAAA5Q,GAAA,KAAA0vB,OAEI,CACJhlB,GAAA,gBAAAA,KACAA,EAAAglB,KAAAhoB,IAAAkJ,GACAlG,IACAA,KACAglB,KAAA9nB,IAAAgJ,EAAAlG,IAGA,QAAA1K,KAAA4Q,GACAlG,EAAA1K,GAAAyvB,EAAA7e,EAAA5Q,GAAA0K,EAAA1K,GAAA0vB,GAGA,MAAAhlB,GAEA,MAAAkG,GAvBA,GAAApK,GAAAjI,EAAAiI,SA0BAnI,EAAAG,EAAA+D,QAAAiE,EAAA,SAAAmpB,GAEAzyB,KAAAyyB,aACAzyB,KAAAwyB,cAAA,GAAAlxB,GAAAiJ,QAAA,mBACAvK,KAAA0yB,QAAA,GAAAppB,KAAA,MAEAye,SAAA,SAAAlQ,GACA7X,KAAAkP,QACAlP,KAAAkP,MAAA,KAEA,IAAAlN,GAAAhC,KAAAyyB,WAAArV,QAAAvF,EACA,IAAA7V,GAAA,gBAAAA,GAAA,CACA,GAAA2wB,GAAA3yB,KAAAwyB,cAAAhoB,IAAAxI,EAKA,OAJA,OAAA2wB,IACA3yB,KAAAwyB,cAAA9nB,IAAA1I,EAAA2wB,EAAAJ,EAAAvwB,EAAAjB,OAAAf,KAAAwyB,gBACAxyB,KAAAiqB,SAAA0I,EAAA9a,IAEA8a,EAEA,MAAA5xB,UAAAf,KAAAgC,MACAA,EAEAhC,KAAAgC,OAEA4wB,UAAA,SAAA5wB,GACA,GAAA2wB,GAAA3yB,KAAAwyB,cAAAhoB,IAAAxI,EAIA,OAHA,OAAA2wB,GACA3yB,KAAAwyB,cAAA9nB,IAAA1I,EAAA2wB,EAAAJ,EAAAvwB,EAAAjB,OAAAf,KAAAwyB,gBAEAG,GAEAE,KAAA,WAEA,GAAAC,GAAA9yB,KAAAyyB,WAAArV,UACA2V,EAAAR,EAAAvyB,KAAAod,UAAA0V,EACA9yB,MAAAyyB,WAAAvsB,KAEAlG,KAAAyyB,WAAAvsB,IAAA6sB,GAEA/yB,KAAA0yB,QAAAxsB,KAAA,GACAlG,KAAAgzB,QAAAhzB,KAAAgzB,UAEAC,OAAA,WACA,GAAAH,GAAA9yB,KAAAyyB,WAAArV,SACApd,MAAAwyB,cAAA,GAAAlxB,GAAAiJ,QAAA,mBACAvK,KAAAkG,IAAAqsB,EAAAO,EAAA/xB,OAAAf,KAAAwyB,gBACAxyB,KAAA0yB,QAAAxsB,KAAA,IAEAgX,QAAA,WAEA,MADAld,MAAA0yB,QAAAxsB,KAAA,GACAoD,EAAA3E,UAAAuY,QAAApc,MAAAd,KAAAuF,aAGA,OAAApE","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"alkali\"] = factory();\n\telse\n\t\troot[\"alkali\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"alkali\"] = factory();\n\telse\n\t\troot[\"alkali\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/// <reference path=\"./typings.d.ts\" />\r\n\t(function (root, factory) { if (true) {\r\n\t  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1), __webpack_require__(3), __webpack_require__(5), __webpack_require__(7), __webpack_require__(6), __webpack_require__(4), __webpack_require__(2)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) } else if (typeof module === 'object' && module.exports) {        \r\n\t  module.exports = factory(require('./Element'), require('./Renderer'), require('./react'), require('./Copy'), require('./operators'), require('./Variable'), require('./util/lang')) // Node\r\n\t}}(this, function (Element, Renderer, react, Copy, operators, VariableExports, lang) {\r\n\t\r\n\t\tvar main = Object.create(Element)\r\n\t\tmain.Copy = Copy\r\n\t\tmain.Element = Element\r\n\t\tlang.copy(main, VariableExports)\r\n\t\tmain.react = react\r\n\t\tmain.spawn = lang.spawn\r\n\t\tmain.Renderer = Renderer.ElementRenderer\r\n\t\tlang.copy(main, Renderer)\r\n\t\tlang.copy(main, operators)\r\n\t\tmain.default = undefined // no default export\r\n\t\treturn main\r\n\t}))\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) { if (true) {\r\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2), __webpack_require__(3), __webpack_require__(4)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) } else if (typeof module === 'object' && module.exports) {        \r\n\t  module.exports = factory(require('./util/lang'), require('./Renderer'), require('./Variable')) // Node\r\n\t}}(this, function (lang, Renderer, VariableExports) {\r\n\t\tvar Variable = VariableExports.Variable\r\n\t\tvar knownElementProperties = [\r\n\t\t\t'textContent', // Node\r\n\t\t\t'id', 'className', 'innerHTML', // Element\r\n\t\t\t'title', 'lang', 'translate', 'dir', 'tabIndex', 'accessKey', 'draggable', 'spellcheck', 'contentEditable', 'innerText', 'webkitdropzone'] // HTMLElement\r\n\t\r\n\t\tvar SELECTOR_REGEX = /^(\\.|#)([-\\w]+)(.+)?/\r\n\t\tvar isGenerator = lang.isGenerator\r\n\t\tvar Context = VariableExports.Context\r\n\t\tvar PropertyRenderer = Renderer.PropertyRenderer\r\n\t\tvar InputPropertyRenderer = Renderer.InputPropertyRenderer\r\n\t\tvar AttributeRenderer = Renderer.AttributeRenderer\r\n\t\tvar StyleRenderer = lang.compose(Renderer.StyleRenderer, function StyleRenderer() {\r\n\t\t\tRenderer.StyleRenderer.apply(this, arguments)\r\n\t\t}, {\r\n\t\t\trenderUpdate: function(newValue, element) {\r\n\t\t\t\tvar definition = styleDefinitions[this.name]\r\n\t\t\t\tif (definition) {\r\n\t\t\t\t\tdefinition(element, newValue, this.name)\r\n\t\t\t\t} else {\r\n\t\t\t\t\telement.style[this.name] = newValue\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\tvar ClassNameRenderer = lang.compose(Renderer.ElementRenderer, function ClassNameRenderer(options) {\r\n\t\t\tthis.className = options.className\r\n\t\t\tRenderer.apply(this, arguments)\r\n\t\t}, {\r\n\t\t\trenderUpdate: function(newValue, element) {\r\n\t\t\t\tvar currentClassName = element.className\r\n\t\t\t\tvar changingClassName = this.className\r\n\t\t\t\t// remove the className (needed for addition or removal)\r\n\t\t\t\t// see http://jsperf.com/remove-class-name-algorithm/2 for some tests on this\r\n\t\t\t\tvar removed = currentClassName && (' ' + currentClassName + ' ').replace(' ' + changingClassName + ' ', ' ')\r\n\t\t\t\tif (newValue) {\r\n\t\t\t\t\t// addition, add the className\r\n\t\t\t\t\tchangingClassName = currentClassName ? (removed + changingClassName).slice(1) : changingClassName;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// we already have removed the class, just need to trim\r\n\t\t\t\t\tchangingClassName = removed.slice(1, removed.length - 1)\r\n\t\t\t\t}\r\n\t\t\t\t// only assign if it changed, this can save a lot of time\r\n\t\t\t\tif (changingClassName != currentClassName) {\r\n\t\t\t\t\telement.className = changingClassName\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\t// TODO: check for renderContent with text updater\r\n\t\tvar TextRenderer = Renderer.TextRenderer\r\n\t\tvar ListRenderer = Renderer.ListRenderer\r\n\t\r\n\t\tvar doc = typeof document !== 'undefined' ? document : {\r\n\t\t\tcreateElement: function(tag) {\r\n\t\t\t\treturn {}\r\n\t\t\t},\r\n\t\t\taddEventListener: function() {\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tvar inputs = {\r\n\t\t\tINPUT: 1,\r\n\t\t\tTEXTAREA: 1\r\n\t\t\t// SELECT: 1, we exclude this, so the default \"content\" of the element can be the options\r\n\t\t}\r\n\t\r\n\t\tvar buggyConstructorSetter = false\r\n\t\tvar testElement = doc.createElement('font')\r\n\t\tvar originalConstructor = testElement.constructor\r\n\t\ttestElement.constructor = function(){}\r\n\t\tif (doc.createElement('font').constructor == testElement.constructor) {\r\n\t\t\t// In safari, setting the constructor can actually assign it at the prototype level, instead of at the instance\r\n\t\t\ttestElement.__proto__.constructor = originalConstructor // restore the original constructor\r\n\t\t\tbuggyConstructorSetter = true\r\n\t\t}\r\n\t\r\n\t\r\n\t\tfunction booleanStyle(options) {\r\n\t\t\treturn function(element, value, key) {\r\n\t\t\t\tif (typeof value !== 'string') {\r\n\t\t\t\t\t// use the boolean conversion\r\n\t\t\t\t\tvalue = options[value ? 0 : 1]\r\n\t\t\t\t}\r\n\t\t\t\telement.style[key] = value\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction defaultStyle(element, value, key) {\r\n\t\t\tif (typeof value === 'number') {\r\n\t\t\t\tvalue = value + 'px'\r\n\t\t\t}\r\n\t\t\telement.style[key] = value\r\n\t\t}\r\n\t\tfunction directStyle(element, value, key) {\r\n\t\t\telement.style[key] = value\r\n\t\t}\r\n\t\r\n\t\tvar styleDefinitions = {\r\n\t\t\tdisplay: booleanStyle(['', 'none']),\r\n\t\t\tvisibility: booleanStyle(['visible', 'hidden']),\r\n\t\t\tcolor: directStyle,\r\n\t\t\topacity: directStyle,\r\n\t\t\tzoom: directStyle,\r\n\t\t\tminZoom: directStyle,\r\n\t\t\tmaxZoom: directStyle,\r\n\t\t\tfontWeight: directStyle,\r\n\t\t\tposition: booleanStyle(['absolute', '']),\r\n\t\t\ttextDecoration: booleanStyle(['underline', '']),\r\n\t\t\tfontWeight: directStyle // numbers are allowed here (TODO: eventually allow booleans too)\r\n\t\t}\r\n\t\t;[\"alignContent\",\"alignItems\",\"alignSelf\",\"animation\",\"animationDelay\",\"animationDirection\",\"animationDuration\",\"animationFillMode\",\"animationIterationCount\",\"animationName\",\"animationPlayState\",\"animationTimingFunction\",\"backfaceVisibility\",\"background\",\"backgroundAttachment\",\"backgroundBlendMode\",\"backgroundClip\",\"backgroundColor\",\"backgroundImage\",\"backgroundOrigin\",\"backgroundPosition\",\"backgroundPositionX\",\"backgroundPositionY\",\"backgroundRepeat\",\"backgroundRepeatX\",\"backgroundRepeatY\",\"backgroundSize\",\"baselineShift\",\"border\",\"borderBottom\",\"borderBottomColor\",\"borderBottomLeftRadius\",\"borderBottomRightRadius\",\"borderBottomStyle\",\"borderBottomWidth\",\"borderCollapse\",\"borderColor\",\"borderImage\",\"borderImageOutset\",\"borderImageRepeat\",\"borderImageSlice\",\"borderImageSource\",\"borderImageWidth\",\"borderLeft\",\"borderLeftColor\",\"borderLeftStyle\",\"borderLeftWidth\",\"borderRadius\",\"borderRight\",\"borderRightColor\",\"borderRightStyle\",\"borderRightWidth\",\"borderSpacing\",\"borderStyle\",\"borderTop\",\"borderTopColor\",\"borderTopLeftRadius\",\"borderTopRightRadius\",\"borderTopStyle\",\"borderTopWidth\",\"borderWidth\",\"bottom\",\"boxShadow\",\"boxSizing\",\"bufferedRendering\",\"captionSide\",\"clear\",\"clip\",\"clipPath\",\"clipRule\",\"color\",\"colorInterpolation\",\"colorInterpolationFilters\",\"colorRendering\",\"counterIncrement\",\"counterReset\",\"cursor\",\"direction\",\"display\",\"emptyCells\",\"fill\",\"fillOpacity\",\"fillRule\",\"filter\",\"flex\",\"flexBasis\",\"flexDirection\",\"flexFlow\",\"flexGrow\",\"flexShrink\",\"flexWrap\",\"float\",\"floodColor\",\"floodOpacity\",\"font\",\"fontFamily\",\"fontFeatureSettings\",\"fontKerning\",\"fontSize\",\"fontStretch\",\"fontStyle\",\"fontVariant\",\"fontVariantLigatures\",\"fontWeight\",\"height\",\"imageRendering\",\"isolation\",\"justifyContent\",\"left\",\"letterSpacing\",\"lightingColor\",\"lineHeight\",\"listStyle\",\"listStyleImage\",\"listStylePosition\",\"listStyleType\",\"margin\",\"marginBottom\",\"marginLeft\",\"marginRight\",\"marginTop\",\"marker\",\"markerEnd\",\"markerMid\",\"markerStart\",\"mask\",\"maskType\",\"maxHeight\",\"maxWidth\",\"maxZoom\",\"minHeight\",\"minWidth\",\"minZoom\",\"mixBlendMode\",\"motion\",\"motionOffset\",\"motionPath\",\"motionRotation\",\"objectFit\",\"objectPosition\",\"opacity\",\"order\",\"orientation\",\"orphans\",\"outline\",\"outlineColor\",\"outlineOffset\",\"outlineStyle\",\"outlineWidth\",\"overflow\",\"overflowWrap\",\"overflowX\",\"overflowY\",\"padding\",\"paddingBottom\",\"paddingLeft\",\"paddingRight\",\"paddingTop\",\"page\",\"pageBreakAfter\",\"pageBreakBefore\",\"pageBreakInside\",\"paintOrder\",\"perspective\",\"perspectiveOrigin\",\"pointerEvents\",\"position\",\"quotes\",\"resize\",\"right\",\"shapeImageThreshold\",\"shapeMargin\",\"shapeOutside\",\"shapeRendering\",\"size\",\"speak\",\"src\",\"stopColor\",\"stopOpacity\",\"stroke\",\"strokeDasharray\",\"strokeDashoffset\",\"strokeLinecap\",\"strokeLinejoin\",\"strokeMiterlimit\",\"strokeOpacity\",\"strokeWidth\",\"tabSize\",\"tableLayout\",\"textAlign\",\"textAlignLast\",\"textAnchor\",\"textCombineUpright\",\"textDecoration\",\"textIndent\",\"textOrientation\",\"textOverflow\",\"textRendering\",\"textShadow\",\"textTransform\",\"top\",\"touchAction\",\"transform\",\"transformOrigin\",\"transformStyle\",\"transition\",\"transitionDelay\",\"transitionDuration\",\"transitionProperty\",\"transitionTimingFunction\",\"unicodeBidi\",\"unicodeRange\",\"userZoom\",\"vectorEffect\",\"verticalAlign\",\"visibility\",\"whiteSpace\",\"widows\",\"width\",\"willChange\",\"wordBreak\",\"wordSpacing\",\"wordWrap\",\"writingMode\",\"zIndex\",\"zoom\"].forEach(function(property) {\r\n\t\t\tstyleDefinitions[property] = styleDefinitions[property] || defaultStyle\r\n\t\t})\r\n\t\tvar styleSheet\r\n\t\tvar presumptiveParentMap = new WeakMap()\r\n\t\r\n\t\tvar setPrototypeOf = Object.setPrototypeOf || (function(base, proto) { base.__proto__ = proto})\r\n\t\tvar getPrototypeOf = Object.getPrototypeOf || (function(base) { return base.__proto__ })\r\n\t\tfunction createCssRule(selector) {\r\n\t\t\tif (!styleSheet) {\r\n\t\t\t\tvar styleSheetElement = doc.createElement(\"style\")\r\n\t\t\t\tstyleSheetElement.setAttribute(\"type\", \"text/css\")\r\n\t//\t\t\tstyleSheet.appendChild(doc.createTextNode(css))\r\n\t\t\t\tdoc.head.insertBefore(styleSheetElement, doc.head.firstChild)\r\n\t\t\t\tstyleSheet = styleSheetElement.sheet\r\n\t\t\t}\r\n\t\t\tvar cssRules = styleSheet.cssRules || styleSheet.rules\r\n\t\t\treturn cssRules[styleSheet.addRule(selector, ' ', cssRules.length)]\r\n\t\t}\r\n\t\r\n\t\t// TODO: Need to do some more testing to see if that would improve performance:\r\n\t\t// var fragmentThresholdHeuristic = (typeof navigator !== 'undefined' && navigator.userAgent.indexOf('Chrome') > 0) ? 1 : 3\r\n\t\r\n\t\tfunction layoutChildren(parent, children, container, prepend) {\r\n\t\t\tvar fragment = (children.length > 1 || prepend) ? doc.createDocumentFragment() : parent\r\n\t\t\tfor(var i = 0, l = children.length; i < l; i++) {\r\n\t\t\t\tvar child = children[i]\r\n\t\t\t\tvar childNode\r\n\t\t\t\tif (child != null) { // we just skip nulls and undefined, helps make it easier to write conditional element logic\r\n\t\t\t\t\tif (child.create) {\r\n\t\t\t\t\t\t// an element constructor\r\n\t\t\t\t\t\tcurrentParent = parent\r\n\t\t\t\t\t\tchildNode = child.create()\r\n\t\t\t\t\t\tfragment.appendChild(childNode)\r\n\t\t\t\t\t\tif (child.isContentNode) {\r\n\t\t\t\t\t\t\tcontainer.contentNode = childNode\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (child.notifies) {\r\n\t\t\t\t\t\t// a variable\r\n\t\t\t\t\t\tvar ref = child.isIterable ? fragment : parent\r\n\t\t\t\t\t\tfragment.appendChild(childNode = variableAsContent(ref, child))\r\n\t\t\t\t\t} else if (typeof child == 'object') {\r\n\t\t\t\t\t\tif (child instanceof Array) {\r\n\t\t\t\t\t\t\t// array of sub-children\r\n\t\t\t\t\t\t\tcontainer = container || parent\r\n\t\t\t\t\t\t\tchildNode = childNode || parent\r\n\t\t\t\t\t\t\tlayoutChildren(childNode.contentNode || childNode, child, container)\r\n\t\t\t\t\t\t} else if (child.nodeType) {\r\n\t\t\t\t\t\t\t// an element itself\r\n\t\t\t\t\t\t\tfragment.appendChild(childNode = child)\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// TODO: apply properties to last child, but with binding to the parent (for events)\r\n\t\t\t\t\t\t\tthrow new Error('Unknown child type ' + child)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// a primitive value\r\n\t\t\t\t\t\tchildNode = doc.createTextNode(child)\r\n\t\t\t\t\t\tfragment.appendChild(childNode)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (fragment != parent) {\r\n\t\t\t\tif (prepend) {\r\n\t\t\t\t\tparent.insertBefore(fragment, parent.firstChild)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tparent.appendChild(fragment)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn childNode\r\n\t\t}\r\n\t\tfunction variableAsContent(parent, content) {\r\n\t\t\tif (content == null) {\r\n\t\t\t\treturn doc.createTextNode('')\r\n\t\t\t}\r\n\t\t\tvar textNode\r\n\t\t\tif (content.notifies) {\r\n\t\t\t\ttextNode = doc.createTextNode('')\r\n\t\t\t\tvar renderer = new TextRenderer({\r\n\t\t\t\t\telement: parent,\r\n\t\t\t\t\ttextNode: textNode,\r\n\t\t\t\t\tvariable: content\r\n\t\t\t\t})\r\n\t\t\t\ttextNode = renderer.textNode // it can be swapped for another node\r\n\t\t\t} else {\r\n\t\t\t\ttextNode = doc.createTextNode(content)\r\n\t\t\t}\r\n\t\t\treturn textNode\r\n\t\t}\r\n\t\r\n\t\tfunction bidirectionalHandler(element, value, key) {\r\n\t\t\tif (value && value.notifies) {\r\n\t\t\t\tnew InputPropertyRenderer({\r\n\t\t\t\t\tname: key,\r\n\t\t\t\t\tvariable: value,\r\n\t\t\t\t\telement: element\r\n\t\t\t\t})\r\n\t\t\t\tif (inputs[element.tagName] || element.tagName === 'SELECT') {\r\n\t\t\t\t\tbindChanges(element, value, key)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (element.tagName === 'SELECT' && key === 'value') {\r\n\t\t\t\t\t// use the deferred <select> value assignment\r\n\t\t\t\t\tInputPropertyRenderer.prototype.renderSelectValueUpdate(value, element)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (element.type === 'number') {\r\n\t\t\t\t\t\tif (isNaN(value)) {\r\n\t\t\t\t\t\t\tvalue = ''\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telement[key] = value\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction noop() {}\r\n\t\tvar propertyHandlers = {\r\n\t\t\tchildren: noop,\r\n\t\t\ttagName: noop,\r\n\t\t\t_generators: noop,\r\n\t\t\tclasses: function(element, classes) {\r\n\t\t\t\tif (!(classes.length > -1)) {\r\n\t\t\t\t\t// index the classes, if necessary\r\n\t\t\t\t\tvar i = 0\r\n\t\t\t\t\tfor (var key in classes) {\r\n\t\t\t\t\t\tif (!classes[i]) {\r\n\t\t\t\t\t\t\tclasses[i] = key\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ti++\r\n\t\t\t\t\t}\r\n\t\t\t\t\tclasses.length = i\r\n\t\t\t\t}\r\n\t\t\t\tfor (var i = 0, l = classes.length; i < l; i++) {\r\n\t\t\t\t\t// find each class name\r\n\t\t\t\t\tvar className = classes[i]\r\n\t\t\t\t\tvar flag = classes[className]\r\n\t\t\t\t\tif (flag && flag.notifies) {\r\n\t\t\t\t\t\t// if it is a variable, we react to it\r\n\t\t\t\t\t\tnew ClassNameRenderer({\r\n\t\t\t\t\t\t\telement: element,\r\n\t\t\t\t\t\t\tclassName: className,\r\n\t\t\t\t\t\t\tvariable: flag\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} else if (flag || flag === undefined) {\r\n\t\t\t\t\t\telement.className += ' ' + className\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tclass: applyAttribute,\r\n\t\t\tfor: applyAttribute, // TODO: move to label?\r\n\t\t\trole: applyAttribute,\r\n\t\t\trender: function(element, value, key, properties) {\r\n\t\t\t\t// TODO: This doesn't need to be a property updater (is in place for *render())\r\n\t\t\t\t// we should also verify it is a generator\r\n\t\t\t\t// and maybe, at some point, find an optimization to eliminate the bind()\r\n\t\t\t\tnew PropertyRenderer({\r\n\t\t\t\t\tname: key,\r\n\t\t\t\t\tvariable: new VariableExports.GeneratorVariable(value.bind(element, properties)),\r\n\t\t\t\t\telement: element\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tdataset: applySubProperties(function(newValue, element, key) {\r\n\t\t\t\telement.dataset[key || this.name] = newValue\r\n\t\t\t}),\r\n\t\t\tattributes: applySubProperties(function(newValue, element, key) {\r\n\t\t\t\telement.setAttribute(key || this.name, newValue)\r\n\t\t\t}),\r\n\t\t\tstyle: function(element, value, key) {\r\n\t\t\t\tif (typeof value === 'string') {\r\n\t\t\t\t\telement.setAttribute('style', value)\r\n\t\t\t\t} else if (value && value.notifies) {\r\n\t\t\t\t\tnew AttributeRenderer({\r\n\t\t\t\t\t\tname: 'style',\r\n\t\t\t\t\t\tvariable: value,\r\n\t\t\t\t\t\telement: element\r\n\t\t\t\t\t})\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstyleObjectHandler(element, value, key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tknownElementProperties.forEach(function(property) {\r\n\t\t\tpropertyHandlers[property] = true\r\n\t\t})\r\n\t\tif (typeof HTMLElement !== 'undefined') {\r\n\t\t\tHTMLElement.prototype._propertyHandlers = propertyHandlers // inherit this, at least for now\r\n\t\t}\r\n\t\tvar elementPropertyHandlers = {\r\n\t\t\tinput: lang.copy(['accept', 'alt', 'autocomplete', 'autofocus', 'capture', 'defaultChecked', 'dirName', 'disabled', 'form', 'files', 'formAction', 'formEnctype', 'formMethod', 'formNoValidate', 'formTarget', 'indeterminate', 'inputMode', 'list', 'max', 'maxLength', 'min', 'minLength', 'multiple', 'name', 'pattern', 'placeholder', 'readOnly', 'required', 'size', 'src', 'step', 'type', 'defaultValue', 'willValidate', 'validity', 'validationMessage', 'useMap', 'autocapitalize', 'webkitdirectory', 'incremental', 'stepUp', 'stepDown'], {\r\n\t\t\t\tvalue: bidirectionalHandler,\r\n\t\t\t\tvalueAsNumber: bidirectionalHandler,\r\n\t\t\t\tvalueAsDate: bidirectionalHandler,\r\n\t\t\t\tchecked: bidirectionalHandler,\r\n\t\t\t\ttype: function(element, value) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\telement.type = value\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\t// IE 11 will throw an error here\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}),\r\n\t\t\tselect: lang.copy(['name', 'size', 'type', 'selectedIndex', 'validationMessage'], {\r\n\t\t\t\tvalue: bidirectionalHandler\r\n\t\t\t}),\r\n\t\t\ttextarea: lang.copy(['cols', 'dirName', 'maxLength', 'minLength', 'name', 'placeholder', 'rows', 'wrap', 'type', 'defaultValue', 'textLength', 'validationMessage', 'autocapitalize'], {\r\n\t\t\t\tvalue: bidirectionalHandler\r\n\t\t\t}),\r\n\t\t\ta: ['target', 'download', 'ping', 'rel', 'hreflang', 'type', 'referrerPolicy', 'href', 'media'],\r\n\t\t\tarea: ['target', 'download', 'coords', 'rel', 'hreflang', 'type', 'referrerPolicy', 'href', 'media', 'alt', 'shape'],\r\n\t\t\tbutton: ['formAction', 'formEnctype', 'formMethod', 'formTarget', 'name', 'type', 'value', 'validationMessage'],\r\n\t\t\tdialog: ['open'],\r\n\t\t\tembed: ['src', 'type', 'name'],\r\n\t\t\tform: ['acceptCharset', 'action', 'autocomplete', 'enctype', 'encoding', 'method', 'name', 'target', 'novalidate'],\r\n\t\t\tframe: ['name', 'scrolling', 'src', 'frameBorder'],\r\n\t\t\tframeset: ['cols', 'rows'],\r\n\t    iframe: ['src', 'srcdoc', 'name', 'referrerPolicy', 'align', 'scrolling', 'frameBorder', 'longDesc'],\r\n\t    img: ['src', 'alt', 'crossorigin', 'ismap', 'longdesc', 'sizes', 'srcset', 'usemap', 'referrerpolicy'],\r\n\t    option: ['label', 'value', 'text', 'index'],\r\n\t    optgroup: ['label'],\r\n\t    output: ['name', 'type', 'defaultValue', 'value', 'validationMessage'],\r\n\t    label: ['htmlFor'],\r\n\t    td: ['colSpan', 'rowSpan'],\r\n\t    th: ['colSpan', 'rowSpan'],\r\n\t    script: ['src', 'type', 'charset', 'text', 'event', 'htmlFor', 'integrity'],\r\n\t    style: ['media', 'type'],\r\n\t    track: ['kind', 'src', 'srclang', 'label'],\r\n\t    link: ['href', 'rel', 'media', 'hreflang', 'type', 'charset', 'rev', 'target', 'integrity', 'as'],\r\n\t    meta: ['name', 'httpEquiv', 'content', 'scheme'],\r\n\t    meter: ['value', 'min', 'max', 'low', 'high', 'optimum'],\r\n\t    progress: ['value', 'max', 'position'],\r\n\t    del: ['cite', 'dateTime'],\r\n\t    ins: ['cite', 'dateTime'],\r\n\t    source: ['src', 'type', 'srcset', 'sizes', 'media'],\r\n\t    video: ['videoWidth', 'videoHeight', 'poster', 'webkitDecodedFrameCount', 'webkitDroppedFrameCount'],\r\n\t    keygen: ['challenge', 'keytype', 'name', 'type', 'validationMessage'],\r\n\t    object: ['data', 'type', 'name', 'useMap', 'validationMessage', 'archive', 'code', 'hspace', 'standby', 'vspace', 'codeBase', 'codeType'],\r\n\t    param: ['name', 'value', 'type', 'valueType']\r\n\t\t}\r\n\t\r\n\t\tfunction applyAttribute(element, value, key) {\r\n\t\t\tif (value && value.notifies) {\r\n\t\t\t\tnew AttributeRenderer({\r\n\t\t\t\t\tname: key,\r\n\t\t\t\t\tvariable: value,\r\n\t\t\t\t\telement: element\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\telement.setAttribute(key, value)\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tvar styleObjectHandler = applySubProperties(function(newValue, element, key) {\r\n\t\t\telement.style[key || this.name] = newValue\r\n\t\t})\r\n\t\r\n\t\tfunction applySubProperties(renderer) {\r\n\t\t\tvar SubPropertyRenderer = lang.compose(PropertyRenderer, function SubPropertyRenderer(options) {\r\n\t\t\t\tPropertyRenderer.apply(this, arguments)\r\n\t\t\t}, {\r\n\t\t\t\trenderUpdate: renderer\r\n\t\t\t})\r\n\t\t\treturn function(element, value, key) {\r\n\t\t\t\tfor (var subKey in value) {\r\n\t\t\t\t\tvar subValue = value[subKey]\r\n\t\t\t\t\tif (subValue && subValue.notifies) {\r\n\t\t\t\t\t\tnew SubPropertyRenderer({\r\n\t\t\t\t\t\t\tname: subKey,\r\n\t\t\t\t\t\t\tvariable: subValue,\r\n\t\t\t\t\t\t\telement: element\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\trenderer(subValue, element, subKey)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction assignProperties(element, properties) {\r\n\t\t\tvar propertyHandlers = element._propertyHandlers\r\n\t\t\tvar Element = element.constructor\r\n\t\t\tfor (var key in properties) {\r\n\t\t\t\tvar value = properties[key]\r\n\t\t\t\tvar VariableClass = Element[key]\r\n\t\t\t\tif (typeof VariableClass === 'function' && VariableClass.notifies && VariableClass !== value) {\r\n\t\t\t\t\thasOwn(Element, VariableClass)\r\n\t\t\t\t\t// if (value instanceof VariableClass) { TODO: assign the value as the owned instance\r\n\t\t\t\t\tVariableClass.for(element).put(value)\r\n\t\t\t\t}\r\n\t\t\t\tvar styleDefinition\r\n\t\t\t\tvar propertyHandler = propertyHandlers[key]\r\n\t\t\t\tif (propertyHandler) {\r\n\t\t\t\t\tif (propertyHandler === true) {\r\n\t\t\t\t\t\tif (value && value.notifies) {\r\n\t\t\t\t\t\t// a standard, known element property\r\n\t\t\t\t\t\t\tnew PropertyRenderer({\r\n\t\t\t\t\t\t\t\tname: key,\r\n\t\t\t\t\t\t\t\tvariable: value,\r\n\t\t\t\t\t\t\t\telement: element\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\telement[key] = value\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpropertyHandler(element, value, key, properties)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if ((styleDefinition = styleDefinitions[key])) {\r\n\t\t\t\t\tif (value && value.notifies) {\r\n\t\t\t\t\t\tnew StyleRenderer({\r\n\t\t\t\t\t\t\tname: key,\r\n\t\t\t\t\t\t\tvariable: value,\r\n\t\t\t\t\t\t\telement: element\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tstyleDefinition(element, value, key)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (element[key] == null) {\r\n\t\t\t\t\t// we are working an unknown/unstandard property (or an event listener)\r\n\t\t\t\t\t// undefined or null means we can safely set\r\n\t\t\t\t\t// TODO: we may want to do the event listener check first so we can handle oncustomevent (that needs an addEventListener call to work)\r\n\t\t\t\t\telement[key] = value\r\n\t\t\t\t} else if (typeof value === 'function' && key.slice(0, 2) === 'on') {\r\n\t\t\t\t\t// event listener with one already defined on the prototype\r\n\t\t\t\t\telement.addEventListener(key.slice(2), value)\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// otherwise bypass/override the native getter/setter\r\n\t\t\t\t\tObject.defineProperty(element, key, {\r\n\t\t\t\t\t\tvalue: value,\r\n\t\t\t\t\t\tenumerable: true,\r\n\t\t\t\t\t\tconfigurable: true,\r\n\t\t\t\t\t\twritable: true\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction assignGenerators(element, properties) {\r\n\t\t\tvar generators = properties._generators\r\n\t\t\tvar customGenerators\r\n\t\t\tvar styleGenerators\r\n\t\t\tvar nativeGenerators\r\n\t\t\tvar propertyHandlers = element._propertyHandlers\r\n\t\t\tfor (var key in generators) {\r\n\t\t\t\tvar variable = new VariableExports.GeneratorVariable(generators[key].bind(element, properties))\r\n\t\t\t\tif (propertyHandlers[key]) {\r\n\t\t\t\t\t(nativeGenerators || (nativeGenerators = {}))[key] = variable\r\n\t\t\t\t} else if (styleDefinitions[key]) {\r\n\t\t\t\t\t(styleGenerators || (styleGenerators = {}))[key] = variable\r\n\t\t\t\t} else {\r\n\t\t\t\t\t(customGenerators || (customGenerators = {}))[key] = variable\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (customGenerators) {\r\n\t\t\t\t// custom ones must go first\r\n\t\t\t\tassignProperties(element, customGenerators)\r\n\t\t\t}\r\n\t\t\tif (styleGenerators) {\r\n\t\t\t\tassignProperties(element, styleGenerators)\r\n\t\t\t}\r\n\t\t\tif (nativeGenerators) {\r\n\t\t\t\t// native ones must come last so they can access custom ones\r\n\t\t\t\tassignProperties(element, nativeGenerators)\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction buildContent(element, content, key, properties) {\r\n\t\t\tvar each = element.each || properties.each\r\n\t\t\tif (each && content) {\r\n\t\t\t\t// render as list\r\n\t\t\t\tif (each.create) {\r\n\t\t\t\t\teach.defineHasOwn = function () {\r\n\t\t\t\t\t\tvar ItemClass = content.getCollectionOf && content.getCollectionOf() || Item\r\n\t\t\t\t\t\thasOwn(each, ItemClass, function (element) {\r\n\t\t\t\t\t\t\tvar itemVariable = ItemClass.from(element._item)\r\n\t\t\t\t\t\t\treturn itemVariable\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (content.notifies) {\r\n\t\t\t\t\tnew ListRenderer({\r\n\t\t\t\t\t\teach: each,\r\n\t\t\t\t\t\tvariable: content,\r\n\t\t\t\t\t\telement: element\r\n\t\t\t\t\t})\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar fragment = doc.createDocumentFragment()\r\n\t\t\t\t\tif (each.defineHasOwn) {\r\n\t\t\t\t\t\teach.defineHasOwn()\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontent.forEach(function(item) {\r\n\t\t\t\t\t\tif (each.create) {\r\n\t\t\t\t\t\t\tchildElement = each.create({parent: element, _item: item}) // TODO: make a faster object here potentially\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tchildElement = each(item, element)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfragment.appendChild(childElement)\r\n\t\t\t\t\t})\r\n\t\t\t\t\telement.appendChild(fragment)\r\n\t\t\t\t}\r\n\t\t\t} else if (inputs[element.tagName]) {\r\n\t\t\t\t// render into input\r\n\t\t\t\tbuildInputContent(element, content)\r\n\t\t\t} else if (content instanceof Array) {\r\n\t\t\t\t// treat array as children (potentially of the content node)\r\n\t\t\t\telement = element.contentNode || element\r\n\t\t\t\tlayoutChildren(element, content, element)\r\n\t\t\t} else {\r\n\t\t\t\t// render as string\r\n\t\t\t\telement.appendChild(variableAsContent(element, content))\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction bindChanges(element, variable, key, conversion) {\r\n\t\t\tlang.nextTurn(function() { // wait for next turn in case inputChanges isn't set yet\r\n\t\t\t\tvar inputEvents = element.inputEvents || ['change', 'alkali-change']\r\n\t\t\t\tfor (var i = 0, l = inputEvents.length; i < l; i++) {\r\n\t\t\t\t\telement.addEventListener(inputEvents[i], function (event) {\r\n\t\t\t\t\t\tvar value = element[key]\r\n\t\t\t\t\t\tvar result = variable.put(conversion ? conversion(value, element) : value, new Context(element))\r\n\t\t\t\t\t\tif (result === VariableExports.deny) {\r\n\t\t\t\t\t\t\tthrow new Error('Variable change denied')\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\r\n\t\tdoc.addEventListener('click', function(event) {\r\n\t\t\tvar target = event.target\r\n\t\t\tif (target.type === 'radio') {\r\n\t\t\t\tvar radios = doc.querySelectorAll('input[type=radio]')\r\n\t\t\t\tfor (var i = 0, l = radios.length; i < l; i++) {\r\n\t\t\t\t\tvar radio = radios[i]\r\n\t\t\t\t\tif (radio.name === target.name && radio !== target) {\r\n\t\t\t\t\t\tradio.dispatchEvent(new Event('alkali-change', {}))\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\tfunction conversion(value, element) {\r\n\t\t\tif (element.type == 'number') {\r\n\t\t\t\treturn parseFloat(value)\r\n\t\t\t}\r\n\t\t\treturn value\r\n\t\t}\r\n\t\r\n\t\tfunction buildInputContent(element, content) {\r\n\t\t\tvar inputType = element.type\r\n\t\t\tvar inputProperty = inputType in {date: 1, datetime: 1, time: 1} ?\r\n\t\t\t\t\t'valueAsDate' : (inputType === 'checkbox' || inputType === 'radio') ?\r\n\t\t\t\t\t\t'checked' : 'value'\r\n\t\r\n\t\t\tif (content && content.notifies) {\r\n\t\t\t\t// a variable, respond to changes\r\n\t\t\t\tnew InputPropertyRenderer({\r\n\t\t\t\t\tvariable: content,\r\n\t\t\t\t\tname: inputProperty,\r\n\t\t\t\t\telement: element\r\n\t\t\t\t})\r\n\t\t\t\t// and bind the other way as well, updating the variable in response to input changes\r\n\t\t\t\tbindChanges(element, content, inputProperty, conversion)\r\n\t\t\t} else {\r\n\t\t\t\t// primitive\r\n\t\t\t\telement[inputProperty] = content\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction mergeObject(Element, value, key, properties) {\r\n\t\t\tvar existing = properties[key]\r\n\t\t\tif (existing) {\r\n\t\t\t\tfor (var subKey in value) {\r\n\t\t\t\t\texisting[subKey] = value[subKey]\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tproperties[key] = value\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tvar classHandlers = {\r\n\t\t\tclasses: mergeObject,\r\n\t\t\t_generators: mergeObject,\r\n\t\t\tdataset: mergeObject,\r\n\t\t\tattributes: mergeObject,\r\n\t\t\tstyle: mergeObject,\r\n\t\t\thasOwn: function(Element, value) {\r\n\t\t\t\thasOwn(Element, value)\r\n\t\t\t},\r\n\t\t\tchildren: function(Element, value) {\r\n\t\t\t\tElement.children = value\r\n\t\t\t},\r\n\t\t\tshadow: function(Element, value) {\r\n\t\t\t\tElement.shadow = value\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction applyToConstructor(argument, Element) {\r\n\t\t\tvar applyOnCreate = Element._applyOnCreate\r\n\t\t\tif (argument && typeof argument === 'object') {\r\n\t\t\t\tif (argument instanceof Array || argument.notifies) {\r\n\t\t\t\t\tapplyOnCreate.content = argument\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (var key in argument) {\r\n\t\t\t\t\t// TODO: eventually we want to be able to set these as rules statically per element\r\n\t\t\t\t\t/*if (styleDefinitions[key]) {\r\n\t\t\t\t\t\tvar styles = Element.styles || (Element.styles = [])\r\n\t\t\t\t\t\tstyles.push(key)\r\n\t\t\t\t\t\tstyles[key] = descriptor.value\r\n\t\t\t\t\t} else {*/\r\n\t\t\t\t\t\tvar value = argument[key]\r\n\t\t\t\t\t\tvar VariableClass = Element[key]\r\n\t\t\t\t\t\tif (typeof value === 'function') {\r\n\t\t\t\t\t\t\tif (value.notifies) {\r\n\t\t\t\t\t\t\t\tif (value === Variable) {\r\n\t\t\t\t\t\t\t\t\tvalue = Variable() // create a branded variable if we are using a generic one\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// for Variable classes we make them statically available on the element\r\n\t\t\t\t\t\t\t\tElement[key] = value\r\n\t\t\t\t\t\t\t} else if (isGenerator(value)) {\r\n\t\t\t\t\t\t\t\tif (key.slice(0, 4) === 'get_') {\r\n\t\t\t\t\t\t\t\t\tkey = key.slice(4)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t(applyOnCreate._generators || (applyOnCreate._generators = {}))[key] = value\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if (value && value.notifies) {\r\n\t\t\t\t\t\t\t// also store any variables as statically available properties\r\n\t\t\t\t\t\t\tElement[key] = value\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (classHandlers[key]) { // Could eliminate this if we got rid of hasOwn\r\n\t\t\t\t\t\t\tclassHandlers[key](Element, value, key, applyOnCreate)\r\n\t\t\t\t\t\t} else if (typeof VariableClass === 'function' && VariableClass.notifies) {\r\n\t\t\t\t\t\t\tapplyOnCreate[key] = new VariableClass(value)\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tapplyOnCreate[key] = value\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (typeof argument === 'function' && !argument.for) {\r\n\t\t\t\tthrow new TypeError('Function as argument not supported')\r\n\t\t\t} else {\r\n\t\t\t\tapplyOnCreate.content = argument\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction getApplySet(Class) {\r\n\t\t\tif (Class.hasOwnProperty('_applyOnCreate')) {\r\n\t\t\t\treturn Class._applyOnCreate\r\n\t\t\t}\r\n\t\t\t// this means we didn't extend and evaluate the prototype yet\r\n\t\t\tif (Class.getForClass) {\r\n\t\t\t\t// we are extending an alkali constructor\r\n\t\t\t\t// if this class is inheriting from an alkali constructor, work our way up the chain\r\n\t\t\t\tvar applyOnCreate = Class._applyOnCreate = {}\r\n\t\t\t\tvar parentApplySet = getApplySet(getPrototypeOf(Class))\r\n\t\t\t\tfor (var key in parentApplySet) {\r\n\t\t\t\t\tapplyOnCreate[key] = classHandlers[key] ? Object.create(parentApplySet[key]) : parentApplySet[key]\r\n\t\t\t\t}\r\n\t\t\t\t// we need to check the prototype for event handlers\r\n\t\t\t\tvar prototype = Class.prototype\r\n\t\t\t\tvar propertyHandlers\r\n\t\t\t\tvar keys = Object.getOwnPropertyNames(prototype)\r\n\t\t\t\tfor (var i = 0, l = keys.length; i < l; i++) {\r\n\t\t\t\t\tvar key = keys[i]\r\n\t\t\t\t\tif (key.slice(0, 2) === 'on' || (key === 'render' && isGenerator(prototype[key]))) {\r\n\t\t\t\t\t\tapplyOnCreate[key] = prototype[key]\r\n\t\t\t\t\t} else if (key.slice(0, 6) === 'render') {\r\n\t\t\t\t\t\tvar propertyName = key[6].toLowerCase() + key.slice(7)\r\n\t\t\t\t\t\tif (!propertyHandlers) {\r\n\t\t\t\t\t\t\tpropertyHandlers = prototype._propertyHandlers = Object.create(prototype._propertyHandlers)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tpropertyHandlers[propertyName] = true // TODO: is it better to implement this with property handlers?\r\n\t\t\t\t\t\tObject.defineProperty(prototype, propertyName, renderDescriptor(key))\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn applyOnCreate\r\n\t\t\t}\r\n\t\t\treturn null\r\n\t\t}\r\n\t\r\n\t\tfunction renderDescriptor(renderMethod) {\r\n\t\t\tvar map = new WeakMap()\r\n\t\t\treturn {\r\n\t\t\t\tget: function() {\r\n\t\t\t\t\treturn map.has(this) ? map.get(this) : null\r\n\t\t\t\t},\r\n\t\t\t\tset: function(value) {\r\n\t\t\t\t\tmap.set(this, value)\r\n\t\t\t\t\tthis[renderMethod](value)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction makeElementConstructor() {\r\n\t\t\tfunction Element(selector, properties) {\r\n\t\t\t\tif (this instanceof Element){\r\n\t\t\t\t\t// create DOM element\r\n\t\t\t\t\t// Need to detect if we have registered the element and `this` is actually already the correct instance\r\n\t\t\t\t\treturn create.apply(Element.prototype === getPrototypeOf(this) ? Element :// this means it is from this constructor\r\n\t\t\t\t\t\tthis.constructor, // this means it was constructed from a subclass\r\n\t\t\t\t\t\targuments)\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// extend to create new class\r\n\t\t\t\t\treturn withProperties.apply(Element, arguments)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn Element\r\n\t\t}\r\n\t\r\n\t\tfunction withProperties(selector, properties) {\r\n\t\t\tvar Element = makeElementConstructor()\r\n\t\t\tif (this.with) {\r\n\t\t\t\t// TODO: Might consider only doing this for derivatives of derivatives, since we don't need to inherit from base constructors\r\n\t\t\t\t// or only doing this in the case of element having custom properties (could mark it with a flag)\r\n\t\t\t\tsetPrototypeOf(Element, this)\r\n\t\t\t\tElement.ownedClasses = null\r\n\t\t\t} else {\r\n\t\t\t\tElement.create = create\r\n\t\t\t\tElement.with = withProperties\r\n\t\t\t\tElement.for = forTarget\r\n\t\t\t\tElement.property = propertyForElement\r\n\t\t\t\tElement.getForClass = getForClass\r\n\t\t\t}\r\n\t\t\tElement.prototype = this.prototype\r\n\t\r\n\t\t\tvar applyOnCreate = Element._applyOnCreate = {}\r\n\t\t\tvar parentApplySet = getApplySet(this)\r\n\t\t\t// copy parent properties\r\n\t\t\tfor (var key in parentApplySet) {\r\n\t\t\t\tapplyOnCreate[key] = classHandlers[key] ? Object.create(parentApplySet[key]) : parentApplySet[key]\r\n\t\t\t}\r\n\t\r\n\t\t\tvar i = 0 // for arguments\r\n\t\t\tif (typeof selector === 'string') {\r\n\t\t\t\tvar selectorMatch = selector.match(SELECTOR_REGEX)\r\n\t\t\t\tif (selectorMatch) {\r\n\t\t\t\t\tdo {\r\n\t\t\t\t\t\tvar operator = selectorMatch[1]\r\n\t\t\t\t\t\tvar name = selectorMatch[2]\r\n\t\t\t\t\t\tif (operator == '.') {\r\n\t\t\t\t\t\t\tif (applyOnCreate.className) {\r\n\t\t\t\t\t\t\t\tapplyOnCreate.className += ' ' + name\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tapplyOnCreate.className = name\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tapplyOnCreate.id = name\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar remaining = selectorMatch[3]\r\n\t\t\t\t\t\tselectorMatch = remaining && remaining.match(SELECTOR_REGEX)\r\n\t\t\t\t\t} while (selectorMatch)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tapplyOnCreate.content = selector\r\n\t\t\t\t}\r\n\t\t\t\ti++ // skip the first argument\r\n\t\t\t}\r\n\t\r\n\t\t\tfor (var l = arguments.length; i < l; i++) {\r\n\t\t\t\tapplyToConstructor(arguments[i], Element)\r\n\t\t\t}\r\n\t\t\treturn Element\r\n\t\t}\r\n\t\tvar currentParent\r\n\t\tfunction create(selector, properties) {\r\n\t\t\t// TODO: make this a symbol\r\n\t\t\tvar applyOnCreate = getApplySet(this)\r\n\t\t\tif (currentParent) {\r\n\t\t\t\tvar parent = currentParent\r\n\t\t\t\tcurrentParent = null\r\n\t\t\t}\r\n\t/*\t\tif (this._initialized != this) {\r\n\t\t\t\tthis._initialized = this\r\n\t\t\t\tthis.initialize && this.initialize()\r\n\t\t\t\tvar styles = this.styles\r\n\t\t\t\tif (styles) {\r\n\t\t\t\t\tvar rule = createCssRule(getUniqueSelector(this))\r\n\t\t\t\t\tfor (var i = 0, l = styles.length; i < l; i++) {\r\n\t\t\t\t\t\tvar key = styles[i]\r\n\t\t\t\t\t\tvar value = styles[key]\r\n\t\t\t\t\t\t// TODO: if it is a contextualized variable, do this on the element\r\n\t\t\t\t\t\tvar styleDefinition = styleDefinitions[key]\r\n\t\t\t\t\t\tif (styleDefinition) {\r\n\t\t\t\t\t\t\tstyleDefinition(rule, value, key)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!this.hasOwnProperty('_applyOnCreate')) {\r\n\t\t\t\t\tapplyOnCreate = getApplySet(this)\r\n\t\t\t\t}\r\n\t\t\t}*/\r\n\t\t\tvar element = doc.createElement(this.tagName)\r\n\t\t\tif (selector && selector.parent) {\r\n\t\t\t\tparent = selector.parent\r\n\t\t\t}\r\n\t\t\tif (parent) {\r\n\t\t\t\tpresumptiveParentMap.set(element, parent)\r\n\t\t\t}\r\n\t\t\tif (!(element instanceof this)) {\r\n\t\t\t\t// ideally we want to avoid this call, as it is expensive, but for classes that\r\n\t\t\t\t// don't register a tag name, we have to make sure the prototype chain is correct\r\n\t\t\t\tsetPrototypeOf(element, this.prototype)\r\n\t\t\t}\r\n\t\t\tif (element.constructor != this) {\r\n\t\t\t\tif (buggyConstructorSetter) {\r\n\t\t\t\t\t// in safari, directly setting the constructor messes up the native prototype\r\n\t\t\t\t\tObject.defineProperty(element, 'constructor', { value: this })\r\n\t\t\t\t} else {\r\n\t\t\t\t\telement.constructor = this // need to do this for hasOwn contextualization to work\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (arguments.length > 0) {\r\n\t\t\t\t// copy applyOnCreate when we have arguments\r\n\t\t\t\tvar ElementApplyOnCreate = applyOnCreate\r\n\t\t\t\tapplyOnCreate = {}\r\n\t\t\t\tfor (var key in ElementApplyOnCreate) {\r\n\t\t\t\t\tapplyOnCreate[key] = classHandlers[key] ? Object.create(ElementApplyOnCreate[key]) : ElementApplyOnCreate[key]\r\n\t\t\t\t}\r\n\t\t\t\tvar i = 0\r\n\t\t\t\tif (typeof selector == 'string') {\r\n\t\t\t\t\ti++\r\n\t\t\t\t\tvar selectorMatch = selector.match(SELECTOR_REGEX)\r\n\t\t\t\t\tif (selectorMatch) {\r\n\t\t\t\t\t\tdo {\r\n\t\t\t\t\t\t\tvar operator = selectorMatch[1]\r\n\t\t\t\t\t\t\tvar name = selectorMatch[2]\r\n\t\t\t\t\t\t\tif (operator == '.') {\r\n\t\t\t\t\t\t\t\tif (applyOnCreate.className) {\r\n\t\t\t\t\t\t\t\t\tapplyOnCreate.className += ' ' + name\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tif (element.className) {\r\n\t\t\t\t\t\t\t\t\t\t\telement.className += ' ' + name\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\telement.className = name\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tif (applyOnCreate.id) {\r\n\t\t\t\t\t\t\t\t\tapplyOnCreate.id = name\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// just skip right to the element\r\n\t\t\t\t\t\t\t\t\telement.id = name\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar remaining = selectorMatch[3]\r\n\t\t\t\t\t\t\tselectorMatch = remaining && remaining.match(SELECTOR_REGEX)\r\n\t\t\t\t\t\t} while (selectorMatch)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tapplyOnCreate.content = selector\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (selector && selector._item) {\r\n\t\t\t\t\t// this is kind of hack, to get the Item available before the properties, eventually we may want to\r\n\t\t\t\t\t// order static properties before variable binding applications, but for now.\r\n\t\t\t\t\telement._item = selector._item\r\n\t\t\t\t}\r\n\t\t\t\tfor (var l = arguments.length; i < l; i++) {\r\n\t\t\t\t\tvar argument = arguments[i]\r\n\t\t\t\t\tif (argument && typeof argument === 'object') {\r\n\t\t\t\t\t\tif (argument instanceof Array || argument.notifies) {\r\n\t\t\t\t\t\t\tapplyOnCreate.content = argument\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tfor (var key in argument) {\r\n\t\t\t\t\t\t\t\tif (classHandlers[key]) {\r\n\t\t\t\t\t\t\t\t\tclassHandlers[key](this, argument[key], key, applyOnCreate)\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tapplyOnCreate[key] = argument[key]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (typeof argument === 'function' && argument.for) {\r\n\t\t\t\t\t\tapplyOnCreate.content = argument.for(element)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tapplyOnCreate.content = argument\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (element.created) {\r\n\t\t\t\tapplyOnCreate = element.created(applyOnCreate) || applyOnCreate\r\n\t\t\t} else if (applyOnCreate.created) {\r\n\t\t\t\tapplyOnCreate = applyOnCreate.created.call(element, applyOnCreate) || applyOnCreate\r\n\t\t\t}\r\n\t\t\t// TODO: inline this for better performance, possibly\r\n\t\t\tassignProperties(element, applyOnCreate)\r\n\t\r\n\t\t\tif (applyOnCreate._generators) {\r\n\t\t\t\tassignGenerators(element, applyOnCreate)\r\n\t\t\t}\r\n\t\r\n\t\t\tif (this.children) {\r\n\t\t\t\tlayoutChildren(element, this.children, element)\r\n\t\t\t}\r\n\t\t\tif (this.shadow) {\r\n\t\t\t\tlayoutChildren(element.attachShadow({mode: 'open'}), this.shadow, element)\r\n\t\t\t}\r\n\t\t\t// always do this last, so it can be properly inserted inside the children\r\n\t\t\tif (element.content != null) {\r\n\t\t\t\tbuildContent(element, element.content, 'content', applyOnCreate)\r\n\t\t\t}\r\n\t\t\telement.ready && element.ready(applyOnCreate)\r\n\t\t\treturn element\r\n\t\t}\r\n\t\r\n\t\tvar slice = [].slice\r\n\t\tfunction append(parent){\r\n\t\t\treturn this.nodeType ?\r\n\t\t\t\tlayoutChildren(this, arguments, this) : // called as a method\r\n\t\t\t\tlayoutChildren(parent, slice.call(arguments, 1), parent) // called as a function\r\n\t\t}\r\n\t\r\n\t\tfunction prepend(parent){\r\n\t\t\treturn this.nodeType ?\r\n\t\t\t\tlayoutChildren(this, arguments, this, true) : // called as a method\r\n\t\t\t\tlayoutChildren(parent, slice.call(arguments, 1), parent, true) // called as a function\r\n\t\t}\r\n\t\r\n\t\tfunction defineTag(tagName, Element) {\r\n\t\t\tvar extendElement = Element.tagName\r\n\t\t\tElement.tagName = tagName\r\n\t\t\tif (typeof customElements === 'object') {\r\n\t\t\t\tcustomElements.define(tagName, lang.extendClass(HTMLElement), { extends: extendElement })\r\n\t\t\t} else {\r\n\t\t\t\tconsole.warn('This browser does not support customElements, ensure that the constructor is used to create new elements')\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tvar Element = withProperties.call(typeof HTMLElement !== 'undefined' ? HTMLElement : function() {})\r\n\t\r\n\t\tElement.defineTag = defineTag\r\n\t\tElement.assign = function(target, properties) {\r\n\t\t\tif (typeof target === 'function') {\r\n\t\t\t\t// assign properties to an existing constructor/class\r\n\t\t\t\tgetApplySet(target) // make sure we have our own applyOnCreate first\r\n\t\t\t\tapplyToConstructor(properties, target)\r\n\t\t\t} else {\r\n\t\t\t\t// assign to an element\r\n\t\t\t\t// TODO: Handle content property separately\r\n\t\t\t\treturn assignProperties(target, properties)\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tElement.within = function(element){\r\n\t\t\t// find closest child\r\n\t\t}\r\n\t\r\n\t\tgenerate([\r\n\t\t\t'Video',\r\n\t\t\t'Source',\r\n\t\t\t'Media',\r\n\t\t\t'Audio',\r\n\t\t\t'UL',\r\n\t\t\t'U',\r\n\t\t\t'Track',\r\n\t\t\t'Title',\r\n\t\t\t'TextArea',\r\n\t\t\t'Template',\r\n\t\t\t'TBody',\r\n\t\t\t'THead',\r\n\t\t\t'TFoot',\r\n\t\t\t'TR',\r\n\t\t\t'Table',\r\n\t\t\t'Col',\r\n\t\t\t'ColGroup',\r\n\t\t\t'TH',\r\n\t\t\t'TD',\r\n\t\t\t'Caption',\r\n\t\t\t'Sup',\r\n\t\t\t'Sub',\r\n\t\t\t'Style',\r\n\t\t\t'Strong',\r\n\t\t\t'Span',\r\n\t\t\t'Small',\r\n\t\t\t'Shadow',\r\n\t\t\t'Select',\r\n\t\t\t'Script',\r\n\t\t\t'S',\r\n\t\t\t'Quote',\r\n\t\t\t'Progress',\r\n\t\t\t'Pre',\r\n\t\t\t'Picture',\r\n\t\t\t'Param',\r\n\t\t\t'P',\r\n\t\t\t'Output',\r\n\t\t\t'Option',\r\n\t\t\t'Optgroup',\r\n\t\t\t'Object',\r\n\t\t\t'OL',\r\n\t\t\t'Ins',\r\n\t\t\t'I',\r\n\t\t\t'Del',\r\n\t\t\t'Meter',\r\n\t\t\t'Meta',\r\n\t\t\t'Menu',\r\n\t\t\t'Map',\r\n\t\t\t'Link',\r\n\t\t\t'Legend',\r\n\t\t\t'Label',\r\n\t\t\t'LI',\r\n\t\t\t'KeyGen',\r\n\t\t\t'Input',\r\n\t\t\t'Img',\r\n\t\t\t'IFrame',\r\n\t\t\t'H1',\r\n\t\t\t'H2',\r\n\t\t\t'H3',\r\n\t\t\t'H4',\r\n\t\t\t'H5',\r\n\t\t\t'H6',\r\n\t\t\t'Hr',\r\n\t\t\t'FrameSet',\r\n\t\t\t'Frame',\r\n\t\t\t'Form',\r\n\t\t\t'Font',\r\n\t\t\t'Embed',\r\n\t\t\t'Em',\r\n\t\t\t'Code',\r\n\t\t\t'Cite',\r\n\t\t\t'Dfn',\r\n\t\t\t'B',\r\n\t\t\t'Article',\r\n\t\t\t'Aside',\r\n\t\t\t'Abbr',\r\n\t\t\t'Footer',\r\n\t\t\t'Figure',\r\n\t\t\t'FigCaption',\r\n\t\t\t'Header',\r\n\t\t\t'Main',\r\n\t\t\t'Mark',\r\n\t\t\t'MenuItem',\r\n\t\t\t'Nav',\r\n\t\t\t'Section',\r\n\t\t\t'Slot',\r\n\t\t\t'Summary',\r\n\t\t\t'WBr',\r\n\t\t\t'Div',\r\n\t\t\t'Dialog',\r\n\t\t\t'Details',\r\n\t\t\t'DataList',\r\n\t\t\t'DL',\r\n\t\t\t'Canvas',\r\n\t\t\t'Button',\r\n\t\t\t'Base',\r\n\t\t\t'Br',\r\n\t\t\t'Area',\r\n\t\t\t'A'\r\n\t\t])\r\n\t\tgenerateInputs([\r\n\t\t\t'Checkbox',\r\n\t\t\t'Password',\r\n\t\t\t'Submit',\r\n\t\t\t'Radio',\r\n\t\t\t'Color',\r\n\t\t\t'Date',\r\n\t\t\t'DateTime',\r\n\t\t\t'Email',\r\n\t\t\t'Month',\r\n\t\t\t'Number',\r\n\t\t\t'Range',\r\n\t\t\t'Search',\r\n\t\t\t'Tel',\r\n\t\t\t'Time',\r\n\t\t\t'Url',\r\n\t\t\t'Week'])\r\n\t\r\n\t\tvar tags = {}\r\n\t\tfunction getConstructor(tagName) {\r\n\t\t\ttagName = tagName.toLowerCase()\r\n\t\t\treturn tags[tagName] ||\r\n\t\t\t\t(tags[tagName] =\r\n\t\t\t\t\tsetupElement(withProperties.call(doc.createElement(tagName).constructor), tagName))\r\n\t\t}\r\n\t\r\n\t\tfunction setupElement(Element, tagName) {\r\n\t\t\tvar props = elementPropertyHandlers[tagName]\r\n\t\t\tif (props && !props.assigned) {\r\n\t\t\t\tvar handlers = Element.prototype._propertyHandlers = Object.create(propertyHandlers)\r\n\t\t\t\tfor (var i = 0, l = props.length; i < l; i++) {\r\n\t\t\t\t\thandlers[props[i]] = true\r\n\t\t\t\t}\r\n\t\t\t\tif (props.value) {\r\n\t\t\t\t\tfor (var i in props) {\r\n\t\t\t\t\t\tif (!(i > -1)) { // assign any string properties if necessary\r\n\t\t\t\t\t\t\thandlers[i] = props[i]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tprops.assigned = true\r\n\t\t\t}\r\n\t\t\tElement.tagName = tagName\r\n\t\t\treturn Element\r\n\t\t}\r\n\t\tfunction generate(elements) {\r\n\t\t\telements.forEach(function(elementName) {\r\n\t\t\t\tvar ElementClass\r\n\t\t\t\tObject.defineProperty(Element, elementName, {\r\n\t\t\t\t\tget: function() {\r\n\t\t\t\t\t\treturn ElementClass || (ElementClass = getConstructor(elementName))\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\t\tfunction generateInputs(elements) {\r\n\t\t\telements.forEach(function(inputType) {\r\n\t\t\t\tvar ElementClass\r\n\t\t\t\tObject.defineProperty(Element, inputType, {\r\n\t\t\t\t\tget: function() {\r\n\t\t\t\t\t\t// TODO: make all inputs extend from input generated from generate\r\n\t\t\t\t\t\treturn ElementClass || (ElementClass = setupElement(withProperties.call(HTMLInputElement, {\r\n\t\t\t\t\t\t\ttype: inputType.toLowerCase()\r\n\t\t\t\t\t\t}), 'input'))\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t// alias all the inputs with an Input suffix\r\n\t\t\t\tObject.defineProperty(Element, inputType + 'Input', {\r\n\t\t\t\t\tget: function() {\r\n\t\t\t\t\t\treturn this[inputType]\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\t\r\n\t\tvar aliases = {\r\n\t\t\tAnchor: 'A',\r\n\t\t\tImage: 'Img',\r\n\t\t\tParagraph: 'P',\r\n\t\t\tTextarea: 'TextArea',\r\n\t\t\tDList: 'DL',\r\n\t\t\tUList: 'UL',\r\n\t\t\tOList: 'OL',\r\n\t\t\tListItem: 'LI',\r\n\t\t\tText: 'Input',\r\n\t\t\tTextInput: 'Input',\r\n\t\t\tTableRow: 'TR',\r\n\t\t\tTableCell: 'TD',\r\n\t\t\tTableHeaderCell: 'TH',\r\n\t\t\tTableHeader: 'THead',\r\n\t\t\tTableBody: 'TBody'\r\n\t\t}\r\n\t\tfor (var alias in aliases) {\r\n\t\t\t(function(alias, to) {\r\n\t\t\t\tObject.defineProperty(Element, alias, {\r\n\t\t\t\t\tget: function() {\r\n\t\t\t\t\t\treturn this[to]\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t})(alias, aliases[alias])\r\n\t\t}\r\n\t\r\n\t\tElement.append = append\r\n\t\tRenderer.append = append // make it available to the renderer\r\n\t\tElement.prepend = prepend\r\n\t\tElement.refresh = Renderer.refresh\r\n\t\tElement.options = {\r\n\t\t\tmoveLiveElementsEnabled: true,\r\n\t\t}\r\n\t\tElement.content = function(element){\r\n\t\t\t// container marker\r\n\t\t\treturn {\r\n\t\t\t\tisContentNode: true,\r\n\t\t\t\tcreate: element.create.bind(element)\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tElement.ElementClass = function() {}\r\n\t\tif (typeof Symbol !== 'undefined') {\r\n\t\t\t// make instanceof work for Element\r\n\t\t\tObject.defineProperty(Element.ElementClass, Symbol.hasInstance, { value: function(target) {\r\n\t\t\t\treturn target && (target.create && target.with)\r\n\t\t\t}})\r\n\t\t}\r\n\t\r\n\t\t// TODO: unify this in lang\r\n\t\tElement.extend = function(Class, properties) {\r\n\t\t\tfunction ExtendedElement() {\r\n\t\t\t\treturn Class.apply(this, arguments)\r\n\t\t\t}\r\n\t\t\tsetPrototypeOf(ExtendedElement, Class)\r\n\t\t\tvar prototype = ExtendedElement.prototype = Object.create(Class.prototype, {\r\n\t\t\t\tconstructor: { value: ExtendedElement }\r\n\t\t\t})\r\n\t\t\tObject.getOwnPropertyNames(properties).forEach(function(key) {\r\n\t\t\t\tvar descriptor = Object.getOwnPropertyDescriptor(properties, key)\r\n\t\t\t\tif (classHandlers[key]) {\r\n\t\t\t\t\tclassHandlers[key](ExtendedElement, descriptor.value, key, properties)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tObject.defineProperty(prototype, key, descriptor)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\treturn ExtendedElement\r\n\t\t}\r\n\t\r\n\t\tfunction forTarget(target) {\r\n\t\t\treturn target.constructor.getForClass(target, this)\r\n\t\t}\r\n\t\r\n\t\tfunction hasOwn(From, Target, createInstance) {\r\n\t\t\tif (typeof Target === 'object') {\r\n\t\t\t\t// we were given an actual instance, use that\r\n\t\t\t\tvar elementMap = From.ownedClasses || (From.ownedClasses = new WeakMap())\r\n\t\t\t\tvar instanceMap = {get: function () {\r\n\t\t\t\t\treturn Target\r\n\t\t\t\t}}\r\n\t\t\t\telementMap.set(Target.constructor, instanceMap)\r\n\t\t\t\treturn hasOwn(From, Target.Class, Target.createInstance)\r\n\t\t\t}\r\n\t\t\tif (Target instanceof Array) {\r\n\t\t\t\treturn Target.forEach(function(Target) {\r\n\t\t\t\t\thasOwn(From, Target)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tvar elementMap = From.ownedClasses || (From.ownedClasses = new WeakMap())\r\n\t\t\t// TODO: Go up through prototype chain of Target and set each one\r\n\t\t\tif (!elementMap.has(Target)) {\r\n\t\t\t\tvar instanceMap = new WeakMap()\r\n\t\t\t\tinstanceMap.createInstance = createInstance\r\n\t\t\t\telementMap.set(Target, instanceMap)\r\n\t\t\t}\r\n\t\t\treturn From\r\n\t\t}\r\n\t\r\n\t\tfunction getForClass(element, Target) {\r\n\t\t\tvar createInstance\r\n\t\t\twhile (element && !(createInstance = element.constructor.ownedClasses && element.constructor.ownedClasses.get(Target))) {\r\n\t\t\t\telement = element.parentNode || presumptiveParentMap.get(element)\r\n\t\t\t}\r\n\t\t\tif (createInstance) {\r\n\t\t\t\tvar ownedInstances = element.ownedInstances || (element.ownedInstances = new WeakMap())\r\n\t\t\t\tvar instance = ownedInstances.get(Target)\r\n\t\t\t\tif (instance === undefined) {\r\n\t\t\t\t\townedInstances.set(Target, instance = createInstance(element))\r\n\t\t\t\t\tinstance.subject = element\r\n\t\t\t\t}\r\n\t\t\t\treturn instance\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction propertyForElement(key) {\r\n\t\t\t// we just need to establish one Variable class for each element, so we cache it\r\n\t\t\tThisElementVariable = this._Variable\r\n\t\t\tif (!ThisElementVariable) {\r\n\t\t\t\t// need our own branded variable class for this element class\r\n\t\t\t\tThisElementVariable = this._Variable = Variable()\r\n\t\r\n\t\t\t\thasOwn(this, ThisElementVariable, function(element) {\r\n\t\t\t\t\t// TODO: we might want to do this in init instead\r\n\t\t\t\t\tvar elementOverlay\r\n\t\t\t\t\tif (element.alkaliRenderers) {\r\n\t\t\t\t\t\tvar variableProperties = {}\r\n\t\t\t\t\t\tfor (var i = 0; i < element.alkaliRenderers.length; i++){\r\n\t\t\t\t\t\t\tvar renderer = element.alkaliRenderers[i]\r\n\t\t\t\t\t\t\tif (renderer.name) {\r\n\t\t\t\t\t\t\t\tvariableProperties[renderer.name] = {value: renderer.variable}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telementOverlay = Object.create(element, variableProperties)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\telementOverlay = element\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar instance = new ThisElementVariable(elementOverlay)\r\n\t\t\t\t\t// we are not observing, because you can't delegate getters and setters in safari\r\n\t\t\t\t\t// instance.observeObject()\r\n\t\t\t\t\treturn instance\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\t// now actually get the property class\r\n\t\t\treturn ThisElementVariable.property(key)\r\n\t\t}\r\n\t\r\n\t\tvar Item = Element.Item = VariableExports.Item\r\n\t\r\n\t\tfunction enterRenderer(Renderer, options/*, target*/) {\r\n\t\t\t// this will be used for optimized class-level variables\r\n\t\t\t/*if (target.started) { // TODO: Might want to pass in started as a parameter\r\n\t\t\t\t// this means that the renderer has already been created, so we just need to add this instance\r\n\t\t\t\tRenderer.prototype.renderUpdate.call(options, element)\r\n\t\t\t} else {*/\r\n\t\t\tnew Renderer(options)\r\n\t\t\t//}\r\n\t\t}\r\n\t\r\n\t\tfunction cleanup(target) {\r\n\t\t\tvar renderers = target.alkaliRenderers\r\n\t\t\tif (renderers) {\r\n\t\t\t\tfor (var i = 0, l = renderers.length; i < l; i++) {\r\n\t\t\t\t\trenderers[i].stop()\r\n\t\t\t\t}\r\n\t\t\t\ttarget.needsRestart = true\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction restart(target) {\r\n\t\t\tvar renderers = target.alkaliRenderers\r\n\t\t\tif (renderers) {\r\n\t\t\t\tfor (var i = 0, l = renderers.length; i < l; i++) {\r\n\t//\t\t\t\tupdaters[i].start()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// setup the mutation observer so we can be notified of attachments and removals\r\n\t\tfunction elementAttached(element) {\r\n\t\t\tvar Class = element.constructor\r\n\t\t\tif (Class.create) {\r\n\t/*\t\t\tif (Class.attachedInstances) {\r\n\t\t\t\t\tClass.attachedInstances.push(element)\r\n\t\t\t\t\tif (Class.attachedInstances.length === 1 && Class.needsRestart) {\r\n\t\t\t\t\t\trestart(Class)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tClass.attachedInstances = [element]\r\n\t\t\t\t}*/\r\n\t\t\t\tif (element.attached) {\r\n\t\t\t\t\telement.attached()\r\n\t\t\t\t}\r\n\t\t\t\tif (element.needsRestart) {\r\n\t\t\t\t\trestart(element)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction elementDetached(element) {\r\n\t\t\t/*var attachedInstances = element.constructor.attachedInstances\r\n\t\t\tif (attachedInstances) {\r\n\t\t\t\tvar index = attachedInstances.indexOf(element)\r\n\t\t\t\tif (index > -1) {\r\n\t\t\t\t\tattachedInstances.splice(index, 1)\r\n\t\t\t\t\tif (attachedInstances.length === 0) {\r\n\t\t\t\t\t\tcleanup(Class)\r\n\t\t\t\t\t}\r\n\t\t\t\t}*/\r\n\t\t\t\tif (element.detached) {\r\n\t\t\t\t\telement.detached()\r\n\t\t\t\t}\r\n\t\t\t\tcleanup(element)\r\n\t\t\t//}\r\n\t\t}\r\n\t\tif (typeof MutationObserver === 'function') {\r\n\t\t\tvar lifeStates = [{\r\n\t\t\t\tname: 'detached',\r\n\t\t\t\tnodes: 'removedNodes',\r\n\t\t\t\taction: elementDetached\r\n\t\t\t}, {\r\n\t\t\t\tname: 'attached',\r\n\t\t\t\tnodes: 'addedNodes',\r\n\t\t\t\taction: elementAttached\r\n\t\t\t}]\r\n\t\t\tfunction firstVisit(node, state) {\r\n\t\t\t\tif (state.name === 'attached') {\r\n\t\t\t\t\tif (node.__alkaliAttached__) {\r\n\t\t\t\t\t\treturn false\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnode.__alkaliAttached__ = true\r\n\t\t\t\t\t\tstate.action(node)\r\n\t\t\t\t\t\treturn true\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (node.__alkaliAttached__) {\r\n\t\t\t\t\tif (doc.body.contains(node)) {\r\n\t\t\t\t\t\t// detached event, but it is actually still attached (will get attached in a later mutation record)\r\n\t\t\t\t\t\t// so don't get through the detached/attached lifecycle\r\n\t\t\t\t\t\treturn false\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnode.__alkaliAttached__ = false\r\n\t\t\t\t\tstate.action(node)\r\n\t\t\t\t}\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t\tvar observer = new MutationObserver(function(mutations) {\r\n\t\t\t\tfor (var i = 0, il = mutations.length; i < il; i++) {\r\n\t\t\t\t\tvar mutation = mutations[i]\r\n\t\t\t\t\t// invoke action on element if we haven't already\r\n\t\t\t\t\tactionIteration:\r\n\t\t\t\t\tfor (var j = 0, jl = lifeStates.length; j < jl; j++) { // two steps, removed nodes and added nodes\r\n\t\t\t\t\t\tvar state = lifeStates[j]\r\n\t\t\t\t\t\tvar nodes = mutation[state.nodes]\r\n\t\t\t\t\t\t// iterate over node list\r\n\t\t\t\t\t\tnodeIteration:\r\n\t\t\t\t\t\tfor (var k = 0, kl = nodes.length; k < kl; k++) {\r\n\t\t\t\t\t\t\tvar baseNode = nodes[k]\r\n\t\t\t\t\t\t\tif (firstVisit(baseNode, state)) {\r\n\t\t\t\t\t\t\t\t// start traversal with child, if it exists\r\n\t\t\t\t\t\t\t\tvar currentNode = baseNode.firstChild\r\n\t\t\t\t\t\t\t\tif (currentNode) {\r\n\t\t\t\t\t\t\t\t\tdo {\r\n\t\t\t\t\t\t\t\t\t\tvar nextNode\r\n\t\t\t\t\t\t\t\t\t\tif (currentNode.nodeType === 1 && firstVisit(currentNode, state)) {\r\n\t\t\t\t\t\t\t\t\t\t\t// depth-first search\r\n\t\t\t\t\t\t\t\t\t\t\tnextNode = currentNode.firstChild\r\n\t\t\t\t\t\t\t\t\t\t\tif (!nextNode) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tnextNode = currentNode.nextSibling\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tnextNode = currentNode.nextSibling\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tif (!nextNode) {\r\n\t\t\t\t\t\t\t\t\t\t\t// come back out to parents\r\n\t\t\t\t\t\t\t\t\t\t\t// TODO: try keeping a stack to make this faster\r\n\t\t\t\t\t\t\t\t\t\t\tdo {\r\n\t\t\t\t\t\t\t\t\t\t\t\tcurrentNode = currentNode.parentNode\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (currentNode === baseNode) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontinue nodeIteration\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t} while (!(nextNode = currentNode.nextSibling))\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tcurrentNode = nextNode\r\n\t\t\t\t\t\t\t\t\t} while (true)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// if (options.moveLiveElementsEnabled) {\r\n\t\t\t\t\t\t\t// TODO: any options that we can really do here?\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tobserver.observe(doc.body || doc, {\r\n\t\t\t\tchildList: true,\r\n\t\t\t\tsubtree: true\r\n\t\t\t})\r\n\t\t}\r\n\t\r\n\t\tlang.copy(VariableExports.Context.prototype, {\r\n\t\t\tspecify: function(Variable) {\r\n\t\t\t\tvar element = this.subject\r\n\t\t\t\tvar distinctive = true\r\n\t\t\t\t;(this.generics || (this.generics = [])).push(Variable)\r\n\t\t\t\tdo {\r\n\t\t\t\t\tif (this.distinctSubject === element) {\r\n\t\t\t\t\t\tdistinctive = false\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar subjectMap = element.constructor.ownedClasses\r\n\t\t\t\t\tif (subjectMap) {\r\n\t\t\t\t\t\tvar instanceMap = subjectMap.get(Variable)\r\n\t\t\t\t\t\tif (instanceMap) {\r\n\t\t\t\t\t\t\tif (distinctive) {\r\n\t\t\t\t\t\t\t\tthis.distinctSubject = element\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tspecifiedInstance = instanceMap.get(element)\r\n\t\t\t\t\t\t\tif (!specifiedInstance) {\r\n\t\t\t\t\t\t\t\tinstanceMap.set(element, specifiedInstance = instanceMap.createInstance ?\r\n\t\t\t\t\t\t\t\t\tinstanceMap.createInstance(element) : new Variable())\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn specifiedInstance\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} while ((element = element.parentNode || presumptiveParentMap.get(element)))\r\n\t\t\t\t// else if no specific context is found, return default instance\r\n\t\t\t\treturn Variable.defaultInstance\r\n\t\t\t},\r\n\t\r\n\t\t\tgetContextualized: function(variable) {\r\n\t\t\t\t// returns a variable that has already been contextualized\r\n\t\t\t\tvar element = this.subject\r\n\t\t\t\tif (!element) {\r\n\t\t\t\t\t// no element, just use the default variable\r\n\t\t\t\t\treturn variable\r\n\t\t\t\t}\r\n\t\t\t\tif (variable._contextMap) {\r\n\t\t\t\t\tdo {\r\n\t\t\t\t\t\tvar instance = variable._contextMap.get(element)\r\n\t\t\t\t\t\tif (instance && instance.context.matches(element)) {\r\n\t\t\t\t\t\t\treturn instance\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} while ((element = element.parentNode || presumptiveParentMap.get(element)))\r\n\t\t\t\t}\r\n\t\t\t\tif (variable.context && variable.context.matches(this.subject)) {\r\n\t\t\t\t\t// check if the default variable is allowed\r\n\t\t\t\t\treturn variable\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\tmerge: function(childContext) {\r\n\t\t\t\tif (!this.distinctSubject ||\r\n\t\t\t\t\t\t(this.distinctSubject !== childContext.distinctSubject && this.distinctSubject.contains(childContext.distinctSubject))) {\r\n\t\t\t\t\tthis.distinctSubject = childContext.distinctSubject\r\n\t\t\t\t}\r\n\t\t\t\t[].push.apply(this.generics || (this.generics = []), childContext.generics)\r\n\t\t\t},\r\n\t\t\tgetDistinctElement: function(Variable, element) {\r\n\t\t\t\tdo {\r\n\t\t\t\t\tvar subjectMap = element.constructor.ownedClasses\r\n\t\t\t\t\tif (subjectMap) {\r\n\t\t\t\t\t\tvar instanceMap = subjectMap.get(Variable)\r\n\t\t\t\t\t\tif (instanceMap && instanceMap.has(element)) {\r\n\t\t\t\t\t\t\treturn element\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} while ((element = element.parentNode || presumptiveParentMap.get(element)))\r\n\t\t\t},\r\n\t\t\tmatches: function(element) {\r\n\t\t\t\tvar generics = this.generics\r\n\t\t\t\tif (generics) {\r\n\t\t\t\t\tfor (var i = 0, l = generics.length; i < l; i++) {\r\n\t\t\t\t\t\tif (this.getDistinctElement(generics[i], element) !== this.distinctSubject) {\r\n\t\t\t\t\t\t\treturn false\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\r\n\t\r\n\t\treturn Element\r\n\t}))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) { if (true) {\r\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) } else if (typeof module === 'object' && module.exports) {        \r\n\t  module.exports = factory() // Node\r\n\t}}(this, function () {\r\n\t\tvar getPrototypeOf = Object.getPrototypeOf || (function(base) { return base.__proto__ })\r\n\t\tvar setPrototypeOf = Object.setPrototypeOf || (function(base, proto) { base.__proto__ = proto})\r\n\t\tvar hasFeatures = {\r\n\t\t\trequestAnimationFrame: typeof requestAnimationFrame != 'undefined',\r\n\t\t\tdefineProperty: Object.defineProperty && (function() {\r\n\t\t\t\ttry{\r\n\t\t\t\t\tObject.defineProperty({}, 't', {})\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}catch(e) {\r\n\t\t\t\t}\r\n\t\t\t})(),\r\n\t\t\tpromise: typeof Promise !== 'undefined',\r\n\t\t\tMutationObserver: typeof MutationObserver !== 'undefined',\r\n\t\t\t'WeakMap': typeof WeakMap === 'function'\r\n\t\t}\r\n\t\tfunction has(feature) {\r\n\t\t\treturn hasFeatures[feature]\r\n\t\t}\r\n\t\t// This is an polyfill for Object.observe with just enough functionality\r\n\t\t// for what Variables need\r\n\t\t// An observe function, with polyfile\r\n\t\tvar observe =\r\n\t\t\thas('defineProperty') ? \r\n\t\t\tfunction observe(target, listener) {\r\n\t\t\t\t/*for(var i in target) {\r\n\t\t\t\t\taddKey(i)\r\n\t\t\t\t}*/\r\n\t\t\t\tlistener.addKey = addKey\r\n\t\t\t\tlistener.remove = function() {\r\n\t\t\t\t\tlistener = null\r\n\t\t\t\t}\r\n\t\t\t\treturn listener\r\n\t\t\t\tfunction addKey(key) {\r\n\t\t\t\t\tvar keyFlag = 'key' + key\r\n\t\t\t\t\tif(this[keyFlag]) {\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis[keyFlag] = true\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar currentValue = target[key]\r\n\t\t\t\t\tvar targetAncestor = target\r\n\t\t\t\t\tvar descriptor\r\n\t\t\t\t\tdo {\r\n\t\t\t\t\t\tdescriptor = Object.getOwnPropertyDescriptor(targetAncestor, key)\r\n\t\t\t\t\t} while(!descriptor && (targetAncestor = getPrototypeOf(targetAncestor)))\r\n\t\r\n\t\t\t\t\tif(descriptor && descriptor.set) {\r\n\t\t\t\t\t\tvar previousSet = descriptor.set\r\n\t\t\t\t\t\tvar previousGet = descriptor.get\r\n\t\t\t\t\t\tObject.defineProperty(target, key, {\r\n\t\t\t\t\t\t\tget: function() {\r\n\t\t\t\t\t\t\t\treturn (currentValue = previousGet.call(this))\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tset: function(value) {\r\n\t\t\t\t\t\t\t\tpreviousSet.call(this, value)\r\n\t\t\t\t\t\t\t\tif(currentValue !== value) {\r\n\t\t\t\t\t\t\t\t\tcurrentValue = value\r\n\t\t\t\t\t\t\t\t\tif(listener) {\r\n\t\t\t\t\t\t\t\t\t\tlistener([{target: this, name: key}])\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tenumerable: descriptor.enumerable\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tObject.defineProperty(target, key, {\r\n\t\t\t\t\t\t\tget: function() {\r\n\t\t\t\t\t\t\t\treturn currentValue\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tset: function(value) {\r\n\t\t\t\t\t\t\t\tif(currentValue !== value) {\r\n\t\t\t\t\t\t\t\t\tcurrentValue = value\r\n\t\t\t\t\t\t\t\t\tif(listener) {\r\n\t\t\t\t\t\t\t\t\t\tlistener([{target: this, name: key}])\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tenumerable: !descriptor || descriptor.enumerable\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} :\r\n\t\t\t// and finally a polling-based solution, for the really old browsers\r\n\t\t\tfunction(target, listener) {\r\n\t\t\t\tif(!timerStarted) {\r\n\t\t\t\t\ttimerStarted = true\r\n\t\t\t\t\tsetInterval(function() {\r\n\t\t\t\t\t\tfor(var i = 0, l = watchedObjects.length; i < l; i++) {\r\n\t\t\t\t\t\t\tdiff(watchedCopies[i], watchedObjects[i], listeners[i])\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, 20)\r\n\t\t\t\t}\r\n\t\t\t\tvar copy = {}\r\n\t\t\t\tfor(var i in target) {\r\n\t\t\t\t\tif(target.hasOwnProperty(i)) {\r\n\t\t\t\t\t\tcopy[i] = target[i]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\twatchedObjects.push(target)\r\n\t\t\t\twatchedCopies.push(copy)\r\n\t\t\t\tlisteners.push(listener)\r\n\t\t\t}\r\n\t\tvar queuedListeners\r\n\t\tfunction queue(listener, object, name) {\r\n\t\t\tif(queuedListeners) {\r\n\t\t\t\tif(queuedListeners.indexOf(listener) === -1) {\r\n\t\t\t\t\tqueuedListeners.push(listener)\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tqueuedListeners = [listener]\r\n\t\t\t\tlang.nextTurn(function() {\r\n\t\t\t\t\tqueuedListeners.forEach(function(listener) {\r\n\t\t\t\t\t\tvar events = []\r\n\t\t\t\t\t\tlistener.properties.forEach(function(property) {\r\n\t\t\t\t\t\t\tevents.push({target: listener.object, name: property})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tlistener(events)\r\n\t\t\t\t\t\tlistener.object = null\r\n\t\t\t\t\t\tlistener.properties = null\r\n\t\t\t\t\t})\r\n\t\t\t\t\tqueuedListeners = null\r\n\t\t\t\t}, 0)\r\n\t\t\t}\r\n\t\t\tlistener.object = object\r\n\t\t\tvar properties = listener.properties || (listener.properties = [])\r\n\t\t\tif(properties.indexOf(name) === -1) {\r\n\t\t\t\tproperties.push(name)\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar unobserve = has('observe') ? Object.unobserve :\r\n\t\t\tfunction(target, listener) {\r\n\t\t\t\tif(listener.remove) {\r\n\t\t\t\t\tlistener.remove()\r\n\t\t\t\t}\r\n\t\t\t\tfor(var i = 0, l = watchedObjects.length; i < l; i++) {\r\n\t\t\t\t\tif(watchedObjects[i] === target && listeners[i] === listener) {\r\n\t\t\t\t\t\twatchedObjects.splice(i, 1)\r\n\t\t\t\t\t\twatchedCopies.splice(i, 1)\r\n\t\t\t\t\t\tlisteners.splice(i, 1)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\tvar watchedObjects = []\r\n\t\tvar watchedCopies = []\r\n\t\tvar listeners = []\r\n\t\tvar timerStarted = false\r\n\t\tfunction diff(previous, current, callback) {\r\n\t\t\t// TODO: keep an array of properties for each watch for faster iteration\r\n\t\t\tvar queued\r\n\t\t\tfor(var i in previous) {\r\n\t\t\t\tif(previous.hasOwnProperty(i) && previous[i] !== current[i]) {\r\n\t\t\t\t\t// a property has changed\r\n\t\t\t\t\tprevious[i] = current[i]\r\n\t\t\t\t\t(queued || (queued = [])).push({name: i})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor(var i in current) {\r\n\t\t\t\tif(current.hasOwnProperty(i) && !previous.hasOwnProperty(i)) {\r\n\t\t\t\t\t// a property has been added\r\n\t\t\t\t\tprevious[i] = current[i]\r\n\t\t\t\t\t(queued || (queued = [])).push({name: i})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(queued) {\r\n\t\t\t\tcallback(queued)\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tvar id = 1\r\n\t\t// a function that returns a function, to stop JSON serialization of an\r\n\t\t// object\r\n\t\tfunction toJSONHidden() {\r\n\t\t\treturn toJSONHidden\r\n\t\t}\r\n\t\t// An object that will be hidden from JSON serialization\r\n\t\tvar Hidden = function () {\r\n\t\t}\r\n\t\tHidden.prototype.toJSON = toJSONHidden\r\n\t\r\n\t\tvar extendClass\r\n\t\ttry {\r\n\t\t\textendClass = eval('(function(Base){ return class extends Base {}})')\r\n\t\t} catch(e) {}\r\n\t\r\n\t\tvar lang = {\r\n\t\t\trequestAnimationFrame: has('requestAnimationFrame') ? requestAnimationFrame :\r\n\t\t\t\t(function() {\r\n\t\t\t\t\tvar toRender = []\r\n\t\t\t\t\tvar queued = false\r\n\t\t\t\t\tfunction processAnimationFrame() {\r\n\t\t\t\t\t\tfor (var i = 0; i < toRender.length; i++) {\r\n\t\t\t\t\t\t\ttoRender[i]()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttoRender = []\r\n\t\t\t\t\t\tqueued = false\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfunction requestAnimationFrame(renderer) {\r\n\t\t\t\t\t \tif (!queued) {\r\n\t\t\t\t\t\t\tsetTimeout(processAnimationFrame)\r\n\t\t\t\t\t\t\tqueued = true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttoRender.push(renderer)\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn requestAnimationFrame\r\n\t\t\t\t})(),\r\n\t\t\tPromise: has('promise') ? Promise : (function() {\r\n\t\t\t\tfunction Promise(execute) {\r\n\t\t\t\t\tvar isResolved, resolution, errorResolution\r\n\t\t\t\t\tvar queue = 0\r\n\t\t\t\t\tfunction resolve(value) {\r\n\t\t\t\t\t\t// resolve function\r\n\t\t\t\t\t\tif(value && value.then) {\r\n\t\t\t\t\t\t\t// received a promise, wait for it\r\n\t\t\t\t\t\t\tvalue.then(resolve, reject)\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tresolution = value\r\n\t\t\t\t\t\t\tfinished()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfunction reject(error) {\r\n\t\t\t\t\t\t// reject function\r\n\t\t\t\t\t\terrorResolution = error\r\n\t\t\t\t\t\tfinished()\r\n\t\t\t\t\t}\r\n\t\t\t\t\texecute(resolve, reject)\r\n\t\t\t\t\tfunction finished() {\r\n\t\t\t\t\t\tisResolved = true\r\n\t\t\t\t\t\tfor(var i = 0, l = queue.length; i < l; i++) {\r\n\t\t\t\t\t\t\tqueue[i]()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// clean out the memory\r\n\t\t\t\t\t\tqueue = 0\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tthen: function(callback, errback) {\r\n\t\t\t\t\t\t\treturn new Promise(function(resolve, reject) {\r\n\t\t\t\t\t\t\t\tfunction handle() {\r\n\t\t\t\t\t\t\t\t\t// promise fulfilled, call the appropriate callback\r\n\t\t\t\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\t\t\t\tif(errorResolution && !errback) {\r\n\t\t\t\t\t\t\t\t\t\t\t// errors without a handler flow through\r\n\t\t\t\t\t\t\t\t\t\t\treject(errorResolution)\r\n\t\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\t\t// resolve to the callback's result\r\n\t\t\t\t\t\t\t\t\t\t\tresolve(errorResolution ?\r\n\t\t\t\t\t\t\t\t\t\t\t\terrback(errorResolution) :\r\n\t\t\t\t\t\t\t\t\t\t\t\tcallback ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcallback(resolution) : resolution)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}catch(newError) {\r\n\t\t\t\t\t\t\t\t\t\t// caught an error, reject the returned promise\r\n\t\t\t\t\t\t\t\t\t\treject(newError)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif(isResolved) {\r\n\t\t\t\t\t\t\t\t\t// already resolved, immediately handle\r\n\t\t\t\t\t\t\t\t\thandle()\r\n\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t(queue || (queue = [])).push(handle)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn Promise\r\n\t\t\t}()),\r\n\t\r\n\t\t\tWeakMap: has('WeakMap') ? WeakMap :\r\n\t\t \tfunction (values, name) {\r\n\t\t \t\tvar mapProperty = '__' + (name || '') + id++\r\n\t\t \t\treturn has('defineProperty') ?\r\n\t\t \t\t{\r\n\t\t \t\t\tget: function (key) {\r\n\t\t \t\t\t\treturn key[mapProperty]\r\n\t\t \t\t\t},\r\n\t\t \t\t\tset: function (key, value) {\r\n\t\t \t\t\t\tObject.defineProperty(key, mapProperty, {\r\n\t\t \t\t\t\t\tvalue: value,\r\n\t\t \t\t\t\t\tenumerable: false\r\n\t\t \t\t\t\t})\r\n\t\t \t\t\t}\r\n\t\t \t\t} :\r\n\t\t \t\t{\r\n\t\t \t\t\tget: function (key) {\r\n\t\t \t\t\t\tvar intermediary = key[mapProperty]\r\n\t\t \t\t\t\treturn intermediary && intermediary.value\r\n\t\t \t\t\t},\r\n\t\t \t\t\tset: function (key, value) {\r\n\t\t \t\t\t\t// we use an intermediary that is hidden from JSON serialization, at least\r\n\t\t \t\t\t\tvar intermediary = key[mapProperty] || (key[mapProperty] = new Hidden())\r\n\t\t \t\t\t\tintermediary.value = value\r\n\t\t \t\t\t}\r\n\t\t \t\t}\r\n\t\t \t},\r\n\t\r\n\t\t\tobserve: observe,\r\n\t\t\tunobserve: unobserve,\r\n\t\t\textendClass: extendClass,\r\n\t\t\twhen: function(value, callback, errorHandler) {\r\n\t\t\t\treturn value && value.then ?\r\n\t\t\t\t\t(value.then(callback, errorHandler) || value) : callback(value)\r\n\t\t\t},\r\n\t\t\twhenAll: function(inputs, callback) {\r\n\t\t\t\tvar promiseInvolved\r\n\t\t\t\tfor(var i = 0, l = inputs.length; i < l; i++) {\r\n\t\t\t\t\tif(inputs[i] && inputs[i].then) {\r\n\t\t\t\t\t\tpromiseInvolved = true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(promiseInvolved) {\r\n\t\t\t\t\t// we have asynch inputs, do lazy loading\r\n\t\t\t\t\tvar callbackResult\r\n\t\t\t\t\tvar resolved\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tthen: function(onResolve, onError) {\r\n\t\t\t\t\t\t\tvar remaining = 1\r\n\t\t\t\t\t\t\tvar result\r\n\t\t\t\t\t\t\tvar readyInputs = []\r\n\t\t\t\t\t\t\tvar lastPromiseResult\r\n\t\t\t\t\t\t\tfor(var i = 0; i < inputs.length; i++) {\r\n\t\t\t\t\t\t\t\tvar input = inputs[i]\r\n\t\t\t\t\t\t\t\tremaining++\r\n\t\t\t\t\t\t\t\tif(input && input.then) {\r\n\t\t\t\t\t\t\t\t\t(function(i, previousPromiseResult) {\r\n\t\t\t\t\t\t\t\t\t\tlastPromiseResult = input.then(function(value) {\r\n\t\t\t\t\t\t\t\t\t\t\treadyInputs[i] = value\r\n\t\t\t\t\t\t\t\t\t\t\tonEach()\r\n\t\t\t\t\t\t\t\t\t\t\tif(!remaining) {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn result\r\n\t\t\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn previousPromiseResult\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}, onError)\r\n\t\t\t\t\t\t\t\t\t})(i, lastPromiseResult)\r\n\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\treadyInputs[i] = input\r\n\t\t\t\t\t\t\t\t\tonEach()\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonEach()\r\n\t\t\t\t\t\t\tfunction onEach() {\r\n\t\t\t\t\t\t\t\tremaining--\r\n\t\t\t\t\t\t\t\tif(!remaining) {\r\n\t\t\t\t\t\t\t\t\tif (resolved) {\r\n\t\t\t\t\t\t\t\t\t\tresult = onResolve(callbackResult)\t\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tresolved = true\r\n\t\t\t\t\t\t\t\t\t\tresult = onResolve(callbackResult = callback(readyInputs))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn lastPromiseResult\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tinputs: inputs\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// just sync inputs\r\n\t\t\t\treturn callback(inputs)\r\n\t\r\n\t\t\t},\r\n\t\t\tcompose: function(Base, constructor, properties) {\r\n\t\t\t\tvar prototype = constructor.prototype = Object.create(Base.prototype)\r\n\t\t\t\tsetPrototypeOf(constructor, Base)\r\n\t\t\t\tfor(var i in properties) {\r\n\t\t\t\t\tprototype[i] = properties[i]\r\n\t\t\t\t}\r\n\t\t\t\tprototype.constructor = constructor\r\n\t\t\t\treturn constructor\r\n\t\t\t},\r\n\t\t\tnextTurn: has('MutationObserver') ?\r\n\t\t\t\tfunction (callback) {\r\n\t\t\t\t\t// promises don't resolve consistently on the next micro turn (Edge doesn't do it right),\r\n\t\t\t\t\t// so use mutation observer\r\n\t\t\t\t\t// TODO: make a faster mode that doesn't recreate each time\r\n\t\t\t\t\tvar div = document.createElement('div')\r\n\t\t\t\t\tvar observer = new MutationObserver(callback)\r\n\t\t\t\t\tobserver.observe(div, {\r\n\t\t\t\t\t\tattributes: true\r\n\t\t\t\t\t})\r\n\t\t\t\t\tdiv.setAttribute('a', id++)\r\n\t\t\t\t} :\r\n\t\t\t\tfunction (callback) {\r\n\t\t\t\t\t// TODO: we can do better for other, older browsers\r\n\t\t\t\t\tsetTimeout(callback, 0)\r\n\t\t\t\t},\r\n\t\t\tcopy: Object.assign || function(target, source) {\r\n\t\t\t\tfor(var i in source) {\r\n\t\t\t\t\ttarget[i] = source[i]\r\n\t\t\t\t}\r\n\t\t\t\treturn target\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction isGenerator(func) {\r\n\t\t\tif (typeof func === 'function') {\r\n\t\t\t\tvar constructor = func.constructor\r\n\t\t\t\t// this is used to handle both native generators and transpiled generators\r\n\t\t\t\treturn (constructor.displayName || constructor.name) === 'GeneratorFunction'\r\n\t\t\t}\r\n\t\t}\r\n\t\tlang.isGenerator = isGenerator\r\n\t\r\n\t\tfunction spawn(generator) {\r\n\t\t\tvar generatorIterator = typeof generator === 'function' ? generator() : generator\r\n\t\t\tvar resuming\r\n\t\t\tvar nextValue\r\n\t\t\tvar isThrowing\r\n\t\t\treturn next()\r\n\t\t\tfunction next() {\r\n\t\t\t\tdo {\r\n\t\t\t\t\tvar stepReturn = generatorIterator[isThrowing ? 'throw' : 'next'](nextValue)\r\n\t\t\t\t\tif (stepReturn.done) {\r\n\t\t\t\t\t\treturn stepReturn.value\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnextValue = stepReturn.value\r\n\t\t\t\t\t// compare with the arguments from the last\r\n\t\t\t\t\t// execution to see if they are the same\r\n\t\t\t\t\tif (typeof nextValue === 'function' && isGenerator(nextVariable)) {\r\n\t\t\t\t\t\tnextValue = run(nextValue())\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (nextValue && nextValue.then) {\r\n\t\t\t\t\t\t// if it is a promise, we will wait on it\r\n\t\t\t\t\t\t// and return the promise so that the next caller can wait on this\r\n\t\t\t\t\t\treturn nextValue.then(function(value) {\r\n\t\t\t\t\t\t\tnextValue = value\r\n\t\t\t\t\t\t\treturn next()\r\n\t\t\t\t\t\t}, function(error) {\r\n\t\t\t\t\t\t\tnextValue = error\r\n\t\t\t\t\t\t\tisThrowing = true\r\n\t\t\t\t\t\t\treturn next()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\tisThrowing = false\r\n\t\t\t\t} while(true)\r\n\t\t\t}\r\n\t\t}\r\n\t\tlang.spawn = spawn\r\n\t\treturn lang\r\n\t}))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) { if (true) {\r\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2), __webpack_require__(4)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) } else if (typeof module === 'object' && module.exports) {        \r\n\t  module.exports = factory(require('./util/lang'), require('./Variable')) // Node\r\n\t}}(this, function (lang, VariableExports) {\r\n\t\tvar doc = typeof document !== 'undefined' && document\r\n\t\tvar invalidatedElements\r\n\t\tvar queued\r\n\t\tvar toRender = []\r\n\t\tvar nextId = 1\r\n\t\tvar requestAnimationFrame = lang.requestAnimationFrame\r\n\t\tvar Context = VariableExports.Context\r\n\t\r\n\t\tfunction Renderer(options) {\r\n\t\t\tvar variable = options.variable\r\n\t\r\n\t\t\tthis.variable = variable\r\n\t\t\tif (options.selector) {\r\n\t\t\t\tthis.selector = options.selector\r\n\t\t\t}\r\n\t\t\tif (options.elements) {\r\n\t\t\t\tthis.elements = options.elements\r\n\t\t\t\tthis.element = this.elements[0]\r\n\t\t\t\tfor(var i = 0, l = this.elements.length; i < l; i++) {\r\n\t\t\t\t\t(this.elements[i].alkaliRenderers || (this.elements[i].alkaliRenderers = [])).push(this)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (options.element) {\r\n\t\t\t\tvar element = this.element = options.element;\r\n\t\t\t\t(element.alkaliRenderers || (element.alkaliRenderers = [])).push(this)\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error('No element provided to Renderer')\r\n\t\t\t}\r\n\t\t\tif (options.update) {\r\n\t\t\t\tthis.updateRendering = options.update\r\n\t\t\t}\r\n\t\t\tif (options.shouldRender) {\r\n\t\t\t\tthis.shouldRender = options.shouldRender\r\n\t\t\t}\r\n\t\t\tif (options.renderUpdate) {\r\n\t\t\t\tthis.renderUpdate = options.renderUpdate\r\n\t\t\t}\r\n\t\t\tif (options.alwaysUpdate) {\r\n\t\t\t\tthis.alwaysUpdate = options.alwaysUpdate\r\n\t\t\t}\r\n\t\t\tif (!variable.updated) {\r\n\t\t\t\t// baconjs-esqe API\r\n\t\t\t\tvar renderer = this\r\n\t\t\t\tvariable.subscribe(function (event) {\r\n\t\t\t\t\t// replace the variable with an object\r\n\t\t\t\t\t// that returns the value from the event\r\n\t\t\t\t\trenderer.variable = {\r\n\t\t\t\t\t\tvalueOf: function () {\r\n\t\t\t\t\t\t\treturn event.value()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\trenderer.updated()\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tif (options.updateOnStart === false){\r\n\t\t\t\t// even if we don't render on start, we still need to compute the value so we can depend on the computed variables\r\n\t\t\t\tthis.variable.valueOf(this)\r\n\t\t\t\tvar contextualized = this.contextualized || this.variable\r\n\t\t\t\t// TODO: we may need to handle recontextualization if it returns a promise\r\n\t\t\t\tcontextualized.notifies(this)\r\n\t\t\t} else {\r\n\t\t\t\tthis.updateRendering(true)\r\n\t\t\t}\r\n\t\t}\r\n\t\tRenderer.prototype = {\r\n\t\t\tconstructor: Renderer,\r\n\t\t\tversion: 2166136261,\r\n\t\t\tupdateRendering: function () {\r\n\t\t\t\tthrow new Error ('updateRendering must be implemented by sub class of Renderer')\r\n\t\t\t},\r\n\t\t\tupdated: function (updateEvent, by, context) {\r\n\t\t\t\tif (!this.invalidated) {\r\n\t\t\t\t\tif (!context || this.contextMatches(context)) {\r\n\t\t\t\t\t\t// do this only once, until we render again\r\n\t\t\t\t\t\tthis.invalidated = true\r\n\t\t\t\t\t\tif (this.deferredRender) {\r\n\t\t\t\t\t\t\tthis.deferredRender.isCanceled = true\r\n\t\t\t\t\t\t\tthis.deferredRender = null\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar renderer = this\r\n\t\t\t\t\t\trequestAnimationFrame(function(){\r\n\t\t\t\t\t\t\tinvalidatedElements = null\r\n\t\t\t\t\t\t\trenderer.updateRendering(renderer.alwaysUpdate)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\thash: function(){\r\n\t\t\t\t// this doesn't need its own version/hash\r\n\t\t\t},\r\n\t\t\tnewContext: function() {\r\n\t\t\t\treturn new Context(this.element)\r\n\t\t\t},\r\n\t\t\tintegrate: function(context, contextualized) {\r\n\t\t\t\tthis.addInput(contextualized)\r\n\t\t\t},\r\n\t\t\taddInput: function(contextualized) {\r\n\t\t\t\tif (this.variable !== contextualized) {\r\n\t\t\t\t\tthis.contextualized = contextualized\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tgetContextualized: function() {\r\n\t\t\t\treturn this.contextualized || this.variable\r\n\t\t\t},\r\n\t\t\tspecify: function(Variable) {\r\n\t\t\t\t// a new context to get thsi\r\n\t\t\t\treturn this.newContext().specify(Variable)\r\n\t\t\t},\r\n\t\t\tmerge: function(){\r\n\t\t\t\t// noop\r\n\t\t\t},\r\n\t\t\tcontextMatches: function(context) {\r\n\t\t\t\treturn true\r\n\t\t\t},\r\n\t\t\tinvalidateElement: function(element) {\r\n\t\t\t\tif(!invalidatedElements){\r\n\t\t\t\t\tinvalidatedElements = new WeakMap(null, 'invalidated')\r\n\t\t\t\t}\r\n\t\t\t\tvar invalidatedParts = invalidatedElements.get(element)\r\n\t\t\t\tinvalidatedElements.set(element, invalidatedParts = {})\r\n\t\t\t\tif (!invalidatedParts[id]) {\r\n\t\t\t\t\tinvalidatedParts[id] = true\r\n\t\t\t\t}\r\n\t\t\t\tif (!queued) {\r\n\t\t\t\t\tlang.queueTask(processQueue)\r\n\t\t\t\t\tqueued = true\r\n\t\t\t\t}\r\n\t\t\t\tvar renderer = this\r\n\t\t\t\ttoRender.push(function(){\r\n\t\t\t\t\trenderer.invalidated = false\r\n\t\t\t\t\trenderer.updateElement(element)\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tgetId: function(){\r\n\t\t\t\treturn this.id || (this.id = nextId++)\r\n\t\t\t},\r\n\t\t\tstop: function() {\r\n\t\t\t\tvar contextualized = this.contextualized || this.variable\r\n\t\t\t\tcontextualized.stopNotifies(this)\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction ElementRenderer(options) {\r\n\t\t\tRenderer.call(this, options)\r\n\t\t}\r\n\t\tElementRenderer.prototype = Object.create(Renderer.prototype)\r\n\t\tElementRenderer.prototype.shouldRender = function (element) {\r\n\t\t\treturn document.body.contains(element)\r\n\t\t}\r\n\t\tElementRenderer.prototype.getSubject = function () {\r\n\t\t\treturn this.element\r\n\t\t}\r\n\t\tElementRenderer.prototype.updateRendering = function (always, element) {\r\n\t\t\tif (!element && this.elements) {\r\n\t\t\t\tvar elements = this.elements\r\n\t\t\t\tif(!elements.length){\r\n\t\t\t\t\tif(this.selector){\r\n\t\t\t\t\t\telements = document.querySelectorAll(this.selector)\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthrow new Error('No element or selector was provided to the Renderer')\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tfor(var i = 0, l = elements.length; i < l; i++){\r\n\t\t\t\t\tthis.updateRendering(always, elements[i])\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar thisElement = element || this.element\r\n\t\r\n\t\t\t\tif(always || this.shouldRender(thisElement)){\r\n\t\t\t\t\t// it is connected\r\n\t\t\t\t\tthis.updateElement(thisElement)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar id = this.getId()\r\n\t\t\t\t\tvar renderers = thisElement.renderersOnShow\r\n\t\t\t\t\tif(!renderers){\r\n\t\t\t\t\t\trenderers = thisElement.renderersOnShow = []\r\n\t\t\t\t\t\tthisElement.className += ' needs-rerendering'\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!renderers[id]) {\r\n\t\t\t\t\t\trenderers[id] = this\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tElementRenderer.prototype.addElement = function (element) {\r\n\t\t\tif (this.selector) {\r\n\t\t\t\telement.renderersOnShow = [this]\r\n\t\t\t} else {\r\n\t\t\t\tthis.elements.push(element)\r\n\t\t\t}\r\n\t\t\t// and immediately do an update\r\n\t\t\tthis.updateElement(element)\r\n\t\t}\r\n\t\tElementRenderer.prototype.updateElement = function(element) {\r\n\t\t\tthis.invalidated = false\r\n\t\t\tif (!this.omitValueOf) {\r\n\t\t\t\tvar value = this.variable.valueOf(this)\r\n\t\t\t\tvar contextualized = this.contextualized || this.variable\r\n\t\t\t\t// TODO: we may need to handle recontextualization if it returns a promise\r\n\t\t\t\tcontextualized.notifies(this)\r\n\t\t\t}\r\n\t\t\tif(value !== undefined || this.started || this.omitValueOf){\r\n\t\t\t\tthis.started = true\r\n\t\t\t\tif(value && value.then){\r\n\t\t\t\t\tif(this.renderLoading){\r\n\t\t\t\t\t\tthis.renderLoading(value, element)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar renderer = this\r\n\t\t\t\t\tvar deferredRender = this.deferredRender = function (value) {\r\n\t\t\t\t\t\tif (!deferredRender.isCanceled) {\r\n\t\t\t\t\t\t\tif (deferredRender === renderer.deferredRender) {\r\n\t\t\t\t\t\t\t\trenderer.deferredRender = null\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\trenderer.renderUpdate(value, element)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalue.then(deferredRender)\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.renderUpdate(value, element)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tElementRenderer.prototype.renderUpdate = function (newValue, element) {\r\n\t\t\tthrow new Error('renderUpdate(newValue) must be implemented')\r\n\t\t}\r\n\t\tRenderer.Renderer = Renderer\r\n\t\tRenderer.ElementRenderer = ElementRenderer\r\n\t\r\n\t\tfunction AttributeRenderer(options) {\r\n\t\t\tif(options.name){\r\n\t\t\t\tthis.name = options.name\r\n\t\t\t}\r\n\t\t\tElementRenderer.apply(this, arguments)\r\n\t\t}\r\n\t\tAttributeRenderer.prototype = Object.create(ElementRenderer.prototype)\r\n\t\tAttributeRenderer.prototype.type = 'AttributeRenderer'\r\n\t\tAttributeRenderer.prototype.renderUpdate = function (newValue, element) {\r\n\t\t\telement.setAttribute(this.name, newValue)\r\n\t\t}\r\n\t\tRenderer.AttributeRenderer = AttributeRenderer\r\n\t\r\n\t\tfunction PropertyRenderer(options) {\r\n\t\t\tif (options.name) {\r\n\t\t\t\tthis.name = options.name\r\n\t\t\t}\r\n\t\t\tElementRenderer.apply(this, arguments)\r\n\t\t}\r\n\t\tPropertyRenderer.prototype = Object.create(ElementRenderer.prototype)\r\n\t\tPropertyRenderer.prototype.type = 'PropertyRenderer'\r\n\t\tPropertyRenderer.prototype.renderUpdate = function (newValue, element) {\r\n\t\t\telement[this.name] = newValue\r\n\t\t}\r\n\t\tRenderer.PropertyRenderer = PropertyRenderer\r\n\t\r\n\t\tfunction InputPropertyRenderer(options) {\r\n\t\t\tif (options.element && options.element.tagName === 'SELECT' && options.name === 'value') {\r\n\t\t\t\t// use the deferred value assignment for <select>\r\n\t\t\t\tthis.renderUpdate = this.renderSelectValueUpdate\r\n\t\t\t}\r\n\t\t\tPropertyRenderer.apply(this, arguments)\r\n\t\t}\r\n\t\tInputPropertyRenderer.prototype = Object.create(PropertyRenderer.prototype)\r\n\t\tInputPropertyRenderer.prototype.type = 'InputPropertyRenderer'\r\n\t\tInputPropertyRenderer.prototype.renderUpdate = function(newValue, element) {\r\n\t\t\tif (newValue == null || (element.type === 'number' && isNaN(newValue))) {\r\n\t\t\t\tnewValue = ''\r\n\t\t\t}\r\n\t\t\tvar oldValue = element[this.name]\r\n\t\t\tif (typeof oldValue === 'string' && typeof newValue !== 'string') {\r\n\t\t\t\tnewValue = newValue == null ? '' : String(newValue)\r\n\t\t\t}\r\n\t\t\tif (oldValue != newValue) {\r\n\t\t\t\telement[this.name] = newValue\r\n\t\t\t}\r\n\t\t}\r\n\t\tInputPropertyRenderer.prototype.renderSelectValueUpdate = function (newValue, element) {\r\n\t\t\telement.value = newValue\r\n\t\t\tif (element.value != newValue && !element.value) {\r\n\t\t\t\t// if we didn't successfully set the value of a <select>, we may need to wait until the children are constructed\r\n\t\t\t\telement.eventualValue = newValue\r\n\t\t\t\tlang.nextTurn(function() {\r\n\t\t\t\t\tif (element.eventualValue) {\r\n\t\t\t\t\t\telement.value = element.eventualValue\r\n\t\t\t\t\t\telement.eventualValue = undefined\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\telement.eventualValue = undefined\r\n\t\t\t}\r\n\t\t}\r\n\t\tRenderer.InputPropertyRenderer = InputPropertyRenderer\r\n\t\r\n\t\tfunction StyleRenderer(options) {\r\n\t\t\tif(options.name){\r\n\t\t\t\tthis.name = options.name\r\n\t\t\t}\r\n\t\t\tElementRenderer.apply(this, arguments)\r\n\t\t}\r\n\t\tStyleRenderer.prototype = Object.create(ElementRenderer.prototype)\r\n\t\tStyleRenderer.prototype.type = 'StyleRenderer'\r\n\t\tStyleRenderer.prototype.renderUpdate = function (newValue, element) {\r\n\t\t\telement.style[this.name] = newValue\r\n\t\t}\r\n\t\tRenderer.StyleRenderer = StyleRenderer\r\n\t\r\n\t\tfunction ContentRenderer(options) {\r\n\t\t\tElementRenderer.apply(this, arguments)\r\n\t\t}\r\n\t\tContentRenderer.prototype = Object.create(ElementRenderer.prototype)\r\n\t\tContentRenderer.prototype.type = 'ContentRenderer'\r\n\t\tContentRenderer.prototype.renderUpdate = function (newValue, element) {\r\n\t\t\telement.innerHTML = ''\r\n\t\t\tif (newValue === undefined){\r\n\t\t\t\tnewValue = ''\r\n\t\t\t}\r\n\t\t\telement.appendChild(document.createTextNode(newValue))\r\n\t\t}\r\n\t\tRenderer.ContentRenderer = ContentRenderer\r\n\t\r\n\t\tfunction TextRenderer(options) {\r\n\t\t\tthis.position = options.position\r\n\t\t\tthis.textNode = options.textNode\r\n\t\t\tElementRenderer.apply(this, arguments)\r\n\t\t}\r\n\t\tTextRenderer.prototype = Object.create(ElementRenderer.prototype)\r\n\t\tTextRenderer.prototype.type = 'TextRenderer'\r\n\t\tTextRenderer.prototype.updated = function (updateEvent, context) {\r\n\t\t\tif (this.builtList) {\r\n\t\t\t\tif (updateEvent.type === 'refresh') {\r\n\t\t\t\t\tthis.builtList = false\r\n\t\t\t\t\tthis.omitValueOf = false\r\n\t\t\t\t} else {\r\n\t\t\t\t\t(this.updates || (this.updates = [])).push(updateEvent)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tElementRenderer.prototype.updated.call(this, updateEvent, context)\r\n\t\t}\r\n\t\tTextRenderer.prototype.renderUpdate = function (newValue, element) {\r\n\t\t\tif (newValue == null){\r\n\t\t\t\tnewValue = ''\r\n\t\t\t}\r\n\t\t\tif (newValue.create) {\r\n\t\t\t\tnewValue = newValue.create({parent: element})\r\n\t\t\t}\r\n\t\t\tif (newValue.nodeType) {\r\n\t\t\t\tif (this.textNode && this.textNode.parentNode == element) {\r\n\t\t\t\t\t// text node is attached, we can replace it with the node\r\n\t\t\t\t\telement.replaceChild(newValue, this.textNode)\r\n\t\t\t\t} else {\r\n\t\t\t\t\telement.appendChild(newValue)\r\n\t\t\t\t}\r\n\t\t\t\tthis.textNode = newValue\r\n\t\t\t} else if (newValue instanceof Array) {\r\n\t\t\t\tthis.renderUpdate = ListRenderer.prototype.renderUpdate\r\n\t\t\t\tthis.omitValueOf = true\r\n\t\t\t\tthis.renderUpdate(newValue, element)\r\n\t\t\t} else {\r\n\t\t\t\t(this.textNode || element.childNodes[this.position]).nodeValue = newValue\r\n\t\t\t}\r\n\t\t}\r\n\t\tRenderer.TextRenderer = TextRenderer\r\n\t\r\n\t\tfunction ListRenderer(options) {\r\n\t\t\tif (options.each) {\r\n\t\t\t\tthis.each = options.each\r\n\t\t\t}\r\n\t\t\tElementRenderer.apply(this, arguments)\r\n\t\t}\r\n\t\tListRenderer.prototype = Object.create(ElementRenderer.prototype)\r\n\t\tListRenderer.prototype.updated = function (updateEvent, context) {\r\n\t\t\tif (this.builtList) {\r\n\t\t\t\tif (updateEvent.type === 'refresh') {\r\n\t\t\t\t\tthis.builtList = false\r\n\t\t\t\t\tthis.omitValueOf = false\r\n\t\t\t\t} else {\r\n\t\t\t\t\t(this.updates || (this.updates = [])).push(updateEvent)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tElementRenderer.prototype.updated.call(this, updateEvent, context)\r\n\t\t}\r\n\t\tListRenderer.prototype.type = 'ListRenderer'\r\n\t\tListRenderer.prototype.renderUpdate = function (newValue, element) {\r\n\t\t\tvar container\r\n\t\t\tvar each = this.each || function(item) { // TODO: make a single identity function\r\n\t\t\t\treturn item\r\n\t\t\t}\r\n\t\t\tvar thisElement = this.element\r\n\t\t\tvar renderer = this\r\n\t\t\tif (!this.builtList) {\r\n\t\t\t\tthis.builtList = true\r\n\t\t\t\tthis.omitValueOf = true\r\n\t\t\t\telement.innerHTML = ''\r\n\t\t\t\tvar childElements = this.childElements = []\r\n\t\t\t\tif (each.defineHasOwn) {\r\n\t\t\t\t\teach.defineHasOwn()\r\n\t\t\t\t}\r\n\t\t\t\tif (newValue) {\r\n\t\t\t\t\tnewValue.forEach(function(item) {\r\n\t\t\t\t\t\tchildElements.push(Renderer.append(thisElement, eachItem(item)))\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tvar contextualized = this.contextualized || this.variable\r\n\t\t\t\tcontextualized.notifies(this)\r\n\t\r\n\t\t\t\t// TODO: restore using a doc fragment to add these items:\r\n\t\t\t\t// thisElement.appendChild(container)\r\n\t\t\t} else {\r\n\t\t\t\tvar childElements = this.childElements\r\n\t\t\t\tvar updates = this.updates\r\n\t\t\t\tcontainer = thisElement\r\n\t\t\t\tupdates.forEach(function(update) {\r\n\t\t\t\t\tif (update.type === 'refresh') {\r\n\t\t\t\t\t\trenderer.builtList = false\r\n\t\t\t\t\t\tfor (var i = 0, l = childElements.length; i < l; i++) {\r\n\t\t\t\t\t\t\tthisElement.removeChild(childElements[i])\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\trenderer.renderUpdate()\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (update.previousIndex > -1) {\r\n\t\t\t\t\t\t\tthisElement.removeChild(childElements[update.previousIndex])\r\n\t\t\t\t\t\t\tchildElements.splice(update.previousIndex, 1)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (update.index > -1) {\r\n\t\t\t\t\t\t\tvar nextChild = childElements[update.index]\r\n\t\t\t\t\t\t\tvar newElement = Renderer.append(thisElement, eachItem(update.value))\r\n\t\t\t\t\t\t\tif (nextChild) {\r\n\t\t\t\t\t\t\t\tthisElement.insertBefore(newElement, nextChild)\r\n\t\t\t\t\t\t\t\tchildElements.splice(update.index, 0, newElement)\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tchildElements.push(newElement)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tthis.updates = [] // clear the updates\r\n\t\t\t}\r\n\t\t\tfunction eachItem(item) {\r\n\t\t\t\tvar childElement\r\n\t\t\t\tif (each.create) {\r\n\t\t\t\t\tchildElement = each.create({parent: thisElement, _item: item}) // TODO: make a faster object here potentially\r\n\t\t\t\t} else {\r\n\t\t\t\t\tchildElement = each(item, thisElement)\r\n\t\t\t\t\tif (childElement.create) {\r\n\t\t\t\t\t\tchildElement = childElement.create({parent: thisElement, _item: item})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn childElement\r\n\t\t\t}\r\n\t\t}\r\n\t\tRenderer.ListRenderer = ListRenderer\r\n\t\r\n\t\tRenderer.onShowElement = function(shownElement){\r\n\t\t\trequestAnimationFrame(function(){\r\n\t\t\t\tinvalidatedElements = null\r\n\t\t\t\tvar elements = [].slice.call(shownElement.getElementsByClassName('needs-rerendering'))\r\n\t\t\t\tif (shownElement.className.indexOf('needs-rerendering') > 0){\r\n\t\t\t\t\tvar includingTop = [shownElement]\r\n\t\t\t\t\tincludingTop.push.apply(includingTop, elements)\r\n\t\t\t\t\telements = includingTop\r\n\t\t\t\t}\r\n\t\t\t\tfor (var i = 0, l = elements.length; i < l; i++){\r\n\t\t\t\t\tvar element = elements[i]\r\n\t\t\t\t\tvar renderers = element.renderersOnShow\r\n\t\t\t\t\tif(renderers){\r\n\t\t\t\t\t\telement.renderersOnShow = null\r\n\t\t\t\t\t\t// remove needs-rerendering class\r\n\t\t\t\t\t\telement.className = element.className.replace(/\\s?needs\\-rerendering\\s?/g, '')\r\n\t\t\t\t\t\tfor (var id in renderers) {\r\n\t\t\t\t\t\t\tvar renderer = renderers[id]\r\n\t\t\t\t\t\t\trenderer.updateElement(element)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\r\n\t\tfunction onElementRemoval(element){\r\n\t\t\t// cleanup element renderers\r\n\t\t\tif(element.alkaliRenderers){\r\n\t\t\t\tvar renderers = element.alkaliRenderers\r\n\t\t\t\tfor(var i = 0; i < renderers.length; i++){\r\n\t\t\t\t\tvar renderer = renderers[i]\r\n\t\t\t\t\trenderer.variable.stopNotifies(renderer)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tRenderer.onElementRemoval = function(element, onlyChildren){\r\n\t\t\tif(!onlyChildren){\r\n\t\t\t\tonElementRemoval(element)\r\n\t\t\t}\r\n\t\t\tvar children = element.getElementsByTagName('*')\r\n\t\t\tfor(var i = 0, l = children.length; i < l; i++){\r\n\t\t\t\tvar child = children[i]\r\n\t\t\t\tif(child.alkaliRenderers){\r\n\t\t\t\t\tonElementRemoval(child)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn Renderer\r\n\t}))\r\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) { if (true) {\r\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) } else if (typeof module === 'object' && module.exports) {\t\t\t\t\r\n\t\tmodule.exports = factory(require('./util/lang')) // Node\r\n\t}}(this, function (lang) {\r\n\t\tvar deny = {}\r\n\t\tvar noChange = {}\r\n\t\tvar WeakMap = lang.WeakMap\r\n\t\tvar setPrototypeOf = Object.setPrototypeOf || (function(base, proto) { base.__proto__ = proto})\r\n\t\tvar getPrototypeOf = Object.getPrototypeOf || (function(base) { return base.__proto__ })\r\n\t\tvar isGenerator = lang.isGenerator\r\n\t\tvar undefined // makes it faster to be locally scoped\r\n\t\t// update types\r\n\t\tvar RequestChange = 3\r\n\t\tvar RequestSet = 4\r\n\t\tvar NOT_MODIFIED = {}\r\n\t\r\n\t\tvar propertyListenersMap = new WeakMap(null, 'propertyListenersMap')\r\n\t\tvar isStructureChecked = new WeakMap()\r\n\t\tvar nextVersion = Date.now()\r\n\t\r\n\t\tvar CacheEntry = lang.compose(WeakMap, function() {\r\n\t\t},{\r\n\t\t\t_propertyChange: function(propertyName) {\r\n\t\t\t\tthis.variable._propertyChange(propertyName, contextFromCache(this))\r\n\t\t\t}\r\n\t\t})\r\n\t\tvar listenerId = 1\r\n\t\r\n\t\tfunction when(value, callback) {\r\n\t\t\tif (value && value.then) {\r\n\t\t\t\treturn value.then(callback)\r\n\t\t\t}\r\n\t\t\treturn callback(value)\r\n\t\t}\r\n\t\tfunction whenStrict(value, callback) {\r\n\t\t\tif (value && value.then && !value.notifies) {\r\n\t\t\t\treturn value.then(callback)\r\n\t\t\t}\r\n\t\t\treturn callback(value)\r\n\t\t}\r\n\t\r\n\t\tfunction Context(subject){\r\n\t\t\tthis.subject = subject\r\n\t\t\tthis.sources = []\r\n\t\t}\r\n\t\tContext.prototype = {\r\n\t\t\tconstructor: Context,\r\n\t\t\tnewContext: function(variable) {\r\n\t\t\t\treturn new Context(this.subject)\r\n\t\t\t},\r\n\t\t\t//version: 2166136261, // FNV-1a prime seed\r\n\t\t\tversion: 0,\r\n\t\t\trestart: function() {\r\n\t\t\t\t//this.version = 2166136261\r\n\t\t\t},\r\n\t\t\tcontextualize: function(variable, parentContext) {\r\n\t\t\t\t// resolve the contextualization of a variable, and updates this context to be aware of what distinctive aspect of the context has\r\n\t\t\t\t// been used for resolution\r\n\t\t\t\tvar contextualized\r\n\t\t\t\tif (this.distinctSubject) {\r\n\t\t\t\t\tvar contextMap = variable._contextMap || (variable._contextMap = new WeakMap())\r\n\t\t\t\t\tcontextualized = contextMap.get(this.distinctSubject)\r\n\t\t\t\t\tif (!contextualized) {\r\n\t\t\t\t\t\tcontextMap.set(this.distinctSubject, contextualized = Object.create(variable))\r\n\t\t\t\t\t\tcontextualized.listeners = false\r\n\t\t\t\t\t\tcontextualized.context = this\r\n\t\t\t\t\t\tvar sources = this.sources\r\n\t\t\t\t\t\tfor (var i = 0, l = sources.length; i < l; i++) {\r\n\t\t\t\t\t\t\tcontextualized[sources[i]] = sources[++i]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.contextualized = contextualized\r\n\t\t\t\t\t// do the merge\r\n\t\t\t\t\tif (parentContext) {\r\n\t\t\t\t\t\tparentContext.merge(this)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcontextualized = variable\r\n\t\t\t\t}\r\n\t\t\t\t//if (this.contextualized && this.contextualized !== contextualized) {\r\n\t\t\t\t\t// TOOD: if it has previously been contextualized to a different context (can happen in a promise/async situation), stop previous notifiers and start new ones\r\n\t\t\t\t//}\r\n\t\t\t\treturn contextualized\r\n\t\t\t},\r\n\t\t\tintegrate: function(context, contextualized) {\r\n\t\t\t\tthis.addInput(contextualized)\r\n\t\t\t\tthis.hash(context.version)\r\n\t\t\t\tthis.hash(Math.max(contextualized.version || 0, contextualized.versionWithChildren || 0))\r\n\t\t\t},\r\n\t\t\thash: function(version) {\r\n\t/*\t\t\t// FNV1a hash algorithm 32-bit\r\n\t\t\t\treturn this.version = (this.version ^ (version || 0)) * 16777619 >>> 0*/\r\n\t\r\n\t/*\t\t\t// 54 bit FNV1a hash algorithm\r\n\t\t\t\tvar xored = this.version ^ (version || 0)\r\n\t\t\t\t// 435 + 1099511627776 = 1099511628211 is 64 bit FNV prime\r\n\t\t\t\treturn this.version =\r\n\t\t\t\t\txored * 435 + // compute hash on lower 32 bits\r\n\t\t\t\t\t(xor & 16777215) * 1099511627776 + // compute hash on lower 24 bits that overflow into upper 32 bits\r\n\t\t\t\t\t((this.version / 4294967296 >>> 0) * 435 & 2097151) * 4294967296 // hash on upper 32 bits*/\r\n\t\t\t\t// 54 bit derivative of FNV1a that better uses JS numbers/operators\r\n\t\t\t\t\r\n\t\t\t\t// a fast, efficient hash\r\n\t\t\t\t//return this.version = (this.version ^ (version || 0)) * 1049011 + (this.version / 5555555 >>> 0)\r\n\t\t\t\t// if we are using globally monotonically increasing version, we can just use max\r\n\t\t\t\tif (isNaN(version)) {\r\n\t\t\t\t\tthrow new Error('Bad version')\r\n\t\t\t\t}\r\n\t\t\t\treturn this.version = Math.max(this.version, version)\r\n\t\t\t},\r\n\t\t\tmerge: function(childContext) {\r\n\t\t\t\tif (!this.distinctSubject) {\r\n\t\t\t\t\tthis.distinctSubject = childContext.distinctSubject\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tspecify: function(Variable) {\r\n\t\t\t\t// specify a particular instance of a generic variable\r\n\t\t\t\tvar subject = this.subject\r\n\t\t\t\tvar subjectMap = subject.constructor.ownedClasses\r\n\t\t\t\tvar specifiedInstance\r\n\t\t\t\tif (subjectMap) {\r\n\t\t\t\t\tif (!this.distinctSubject) {\r\n\t\t\t\t\t\tthis.distinctSubject = subject\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar instanceMap = subjectMap.get(Variable)\r\n\t\t\t\t\tif (instanceMap) {\r\n\t\t\t\t\t\tspecifiedInstance = instanceMap.get(subject)\r\n\t\t\t\t\t\tif (!specifiedInstance) {\r\n\t\t\t\t\t\t\tinstanceMap.set(subject, specifiedInstance = instanceMap.createInstance ? instanceMap.createInstance(subject) : new Variable())\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn specifiedInstance\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// else if no specific context is found, return default instance\r\n\t\t\t\treturn Variable.defaultInstance\r\n\t\t\t},\r\n\t\t\tgetContextualized: function(variable) {\r\n\t\t\t\tif (!this.subject) {\r\n\t\t\t\t\t// no subject, just use the default variable\r\n\t\t\t\t\treturn variable\r\n\t\t\t\t}\r\n\t\t\t\t// returns a variable that has already been contextualized\r\n\t\t\t\tvar instance = variable._contextMap && this.subject && variable._contextMap.get(this.subject)\r\n\t\t\t\tif (instance && instance.context && instance.context.matches(this)) {\r\n\t\t\t\t\treturn instance\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\taddInput: function(sourceVariable) {\r\n\t\t\t\tthis.sources.push(this.nextProperty, sourceVariable)\r\n\t\t\t},\r\n\t\t\tmatches: function(context) {\r\n\t\t\t\t// does another context match the resolution of this one?\r\n\t\t\t\treturn context.subject === this.subject\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction NotifyingContext(listener, subject){\r\n\t\t\tthis.subject = subject\r\n\t\t\tthis.listener = listener\r\n\t\t}\r\n\t\tNotifyingContext.prototype = Object.create(Context.prototype)\r\n\t\tNotifyingContext.prototype.constructor = NotifyingContext\r\n\t\tNotifyingContext.prototype.addInput = function(contextualized) {\r\n\t\t\tcontextualized.notifies(this.listener)\r\n\t\t}\r\n\t\r\n\t\tfunction whenAll(inputs, callback){\r\n\t\t\tvar promiseInvolved\r\n\t\t\tfor (var i = 0, l = inputs.length; i < l; i++) {\r\n\t\t\t\tif (inputs[i] && inputs[i].then) {\r\n\t\t\t\t\tpromiseInvolved = true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (promiseInvolved) {\r\n\t\t\t\treturn lang.whenAll(inputs, callback)\r\n\t\t\t}\r\n\t\t\treturn callback(inputs)\r\n\t\t}\r\n\t\r\n\t\tfunction registerListener(value, listener) {\r\n\t\t\tvar listeners = propertyListenersMap.get(value)\r\n\t\t\tvar id = listener.listenerId || (listener.listenerId = ('-' + listenerId++))\r\n\t\t\tif (listeners) {\r\n\t\t\t\tif (listeners[id] === undefined) {\r\n\t\t\t\t\tlisteners[id] = listeners.push(listener) - 1\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tpropertyListenersMap.set(value, listeners = [listener])\r\n\t\t\t\tlisteners[id] = 0\r\n\t\t\t\tif (Variable.autoObserveObjects) {\r\n\t\t\t\t\tobserve(value)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlistener.listeningToObject = value\r\n\t\t}\r\n\t\tfunction deregisterListener(listener) {\r\n\t\t\tif (listener.listeningToObject) {\r\n\t\t\t\tvar value = listener.listeningToObject\r\n\t\t\t\tlistener.listeningToObject = null\r\n\t\t\t\tvar listeners = propertyListenersMap.get(value)\r\n\t\t\t\tif (listeners) {\r\n\t\t\t\t\tvar index = listeners[listener.listenerId]\r\n\t\t\t\t\tif (index > -1) {\r\n\t\t\t\t\t\tlisteners.splice(index, 1)\r\n\t\t\t\t\t\tdelete listeners[listener.listenerId]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction RefreshEvent() {\r\n\t\t\tthis.visited = new Set()\r\n\t\t}\r\n\t\tRefreshEvent.prototype.type = 'refresh'\r\n\t\r\n\t\tfunction PropertyChangeEvent(key, childEvent, parent) {\r\n\t\t\tthis.key = key\r\n\t\t\tthis.childEvent = childEvent\r\n\t\t\tthis.parent = parent\r\n\t\t\tthis.visited = childEvent.visited\r\n\t\t}\r\n\t\tPropertyChangeEvent.prototype.type = 'update'\r\n\t\r\n\t\tfunction AddEvent(args) {\r\n\t\t\tthis.visited = new Set()\r\n\t\t\tfor (var key in args) {\r\n\t\t\t\tthis[key] = args[key]\r\n\t\t\t}\r\n\t\t}\r\n\t\tAddEvent.prototype.type = 'add'\r\n\t\tfunction DeleteEvent(args) {\r\n\t\t\tthis.visited = new Set()\r\n\t\t\tfor (var key in args) {\r\n\t\t\t\tthis[key] = args[key]\r\n\t\t\t}\r\n\t\t}\r\n\t\tDeleteEvent.prototype.type = 'delete'\r\n\t\r\n\t\tfunction forPropertyNotifyingValues(variable, properties, callback) {\r\n\t\t\tif (variable === properties) {\r\n\t\t\t\tforPropertyNotifyingValues(variable, variable._properties, callback)\r\n\t\t\t}\r\n\t\t\tfor (var key in properties) {\r\n\t\t\t\tvar property = properties[key]\r\n\t\t\t\tif (property && property.parent == variable) {\r\n\t\t\t\t\tif (property.returnedVariable) {\r\n\t\t\t\t\t\tcallback(property.returnedVariable)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (property.hasChildNotifiers) {\r\n\t\t\t\t\t\tvar subProperties = property._properties\r\n\t\t\t\t\t\tif (subProperties) {\r\n\t\t\t\t\t\t\tforPropertyNotifyingValues(property, property, callback)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction Variable(value) {\r\n\t\t\tif (this instanceof Variable) {\r\n\t\t\t\t// new call, may eventually use new.target\r\n\t\t\t\tif (value === undefined) {\r\n\t\t\t\t\tif (this.default !== undefined) {\r\n\t\t\t\t\t\tthis.value = this.default\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.value = value\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn Variable.with(value)\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tVariable._logStackTrace = function(v) {\r\n\t\t\tvar stack = (new Error().stack || '').split(/[\\r\\n]+/)\r\n\t\t\tif (stack[0] && /^Error\\s*/.test(stack[0])) stack.shift()\r\n\t\t\tif (stack[0] && /_logStackTrace/.test(stack[0])) stack.shift()\r\n\t\t\tvar coalesce = (this._debugOpts && this._debugOpts.coalesce) || []\r\n\t\t\tif (this._debugOpts && this._debugOpts.shortStackTrace) {\r\n\t\t\t\t// find the first non-coalesced line\r\n\t\t\t\tvar line\r\n\t\t\t\tstack.some(function(line) {\r\n\t\t\t\t\tif (!coalesce.some(function(re) {\r\n\t\t\t\t\t\treturn re.re.test(line)\r\n\t\t\t\t\t})) {\r\n\t\t\t\t\t\tline = stack[0]\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tconsole.log('Variable ' + v.__debug + ' changed', line && line.replace(/^\\s+/, ''))\r\n\t\t\t} else {\r\n\t\t\t\tif (coalesce.length) {\r\n\t\t\t\t\tvar s = []\r\n\t\t\t\t\tvar re\r\n\t\t\t\t\tfor (var i = 0; i < stack.length; i++) {\r\n\t\t\t\t\t\tvar line = stack[i]\r\n\t\t\t\t\t\tif (re) {\r\n\t\t\t\t\t\t\tif (re.test(line)) continue\r\n\t\t\t\t\t\t\tre = null\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tre\r\n\t\t\t\t\t\tcoalesce.some(function(re) {\r\n\t\t\t\t\t\t\treturn re = re.re.test(line)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tline = line.replace(/^\\s+/,'')\r\n\t\t\t\t\t\tif (re) {\r\n\t\t\t\t\t\t\ts.push('(' + re.name + ') ' + line)\r\n\t\t\t\t\t\t\tre = re.re\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\ts.push(line)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tstack = s\r\n\t\t\t\t}\r\n\t\t\t\tvar stackObject = this._debugOpts && this._debugOpts.stackObject\r\n\t\t\t\tif (stackObject) {\r\n\t\t\t\t\tconsole.log('Variable ' + v.__debug + ' changed', stack)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconsole.log('Variable ' + v.__debug + ' changed\\r\\n' + stack.join('\\r\\n'))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tVariable._debugOpts = {\r\n\t\t\tcoalesce: [{ name: 'alkali', re: /\\/alkali\\// }, { name: 'Promise', re: /(Promise\\.)|(PromiseArray\\.)|(\\/bluebird\\/)/ }],\r\n\t\t\tstackObject: false\r\n\t\t}\r\n\t\r\n\t\tvar VariablePrototype = Variable.prototype = {\r\n\t\t\t// for debugging use\r\n\t\t\tget _currentValue() {\r\n\t\t\t\treturn this.valueOf()\r\n\t\t\t},\r\n\t\t\tset _currentValue(value) {\r\n\t\t\t\tthis.put(value)\r\n\t\t\t},\r\n\t\t\tconstructor: Variable,\r\n\t\t\tvalueOf: function(context) {\r\n\t\t\t\tvar valueContext\r\n\t\t\t\treturn this.gotValue(this.getValue ?\r\n\t\t\t\t\tthis.getValue(context, context && (valueContext = context.newContext())) :\r\n\t\t\t\t\tthis.value, context, valueContext)\r\n\t\t\t},\r\n\t\t\tgetValue: function(context, valueContext) {\r\n\t\t\t\tif (context) {\r\n\t\t\t\t\tcontext.hash(this.version)\r\n\t\t\t\t}\r\n\t\t\t\tif (this.parent) {\r\n\t\t\t\t\tif (context) {\r\n\t\t\t\t\t\tif (!valueContext) {\r\n\t\t\t\t\t\t\tvalueContext = context.newContext()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (context.ifModifiedSince != null) {\r\n\t\t\t\t\t\t\t// just too complicated to handle NOT_MODIFED objects for now\r\n\t\t\t\t\t\t\t// TODO: Maybe handle this and delegate NOT_MODIFIED through this\r\n\t\t\t\t\t\t\t// chain and through gotValue\r\n\t\t\t\t\t\t\tcontext.ifModifiedSince = undefined \r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar key = this.key\r\n\t\t\t\t\tvar property = this\r\n\t\t\t\t\tvar parent = this.parent\r\n\t\t\t\t\tvar object\r\n\t\t\t\t\tif (parent.getValue) {\r\n\t\t\t\t\t\t// parent needs value context, might want to do separate context,\r\n\t\t\t\t\t\t// but would need to treat special so it retrieves the version\r\n\t\t\t\t\t\t// only and not the versionWithChildren\r\n\t\t\t\t\t\tobject = parent.getValue(context, valueContext)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tobject = parent.value\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (object && object.then && !object.notifies) {\r\n\t\t\t\t\t\treturn when(object, function(object) {\r\n\t\t\t\t\t\t\tvar value = object == null ? undefined :\r\n\t\t\t\t\t\t\t\ttypeof object.property === 'function' ? object.property(key) :\r\n\t\t\t\t\t\t\t\ttypeof object.get === 'function' ? object.get(key) : object[key]\r\n\t\t\t\t\t\t\t//if (property.listeners) {\r\n\t\t\t\t\t\t\t\tvar listeners = propertyListenersMap.get(object)\r\n\t\t\t\t\t\t\t\tif (listeners && listeners.observer && listeners.observer.addKey) {\r\n\t\t\t\t\t\t\t\t\tlisteners.observer.addKey(key)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t//}\r\n\t\t\t\t\t\t\tif (valueContext) {\r\n\t\t\t\t\t\t\t\tcontext.hash(valueContext.version)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn value\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar value = object == null ? undefined :\r\n\t\t\t\t\t\ttypeof object.property === 'function' ? object.property(key) :\r\n\t\t\t\t\t\ttypeof object.get === 'function' ? object.get(key) : object[key]\r\n\t\t\t\t\t//if (property.listeners) {\r\n\t\t\t\t\t\tvar listeners = propertyListenersMap.get(object)\r\n\t\t\t\t\t\tif (listeners && listeners.observer && listeners.observer.addKey) {\r\n\t\t\t\t\t\t\tlisteners.observer.addKey(key)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t//}\r\n\t\t\t\t\tif (valueContext) {\r\n\t\t\t\t\t\tcontext.hash(valueContext.version)\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn value\r\n\t\t\t\t}\r\n\t\t\t\treturn this.value\r\n\t\t\t},\r\n\t\t\tgotValue: function(value, parentContext, context) {\r\n\t\t\t\tvar previousNotifyingValue = this.returnedVariable\r\n\t\t\t\tvar variable = this\r\n\t\t\t\tif (previousNotifyingValue) {\r\n\t\t\t\t\tif (value === previousNotifyingValue) {\r\n\t\t\t\t\t\t// nothing changed, immediately return valueOf\r\n\t\t\t\t\t\tif (parentContext) {\r\n\t\t\t\t\t\t\tif (!context) {\r\n\t\t\t\t\t\t\t\tcontext = parentContext.newContext()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcontext.nextProperty = 'returnedVariable'\r\n\t\t\t\t\t\t\tvalue = value.valueOf(context)\r\n\t\t\t\t\t\t\tparentContext.integrate(context, context.contextualize(this, parentContext) || this)\r\n\t\t\t\t\t\t\treturn value\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn value.valueOf()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// if there was a another value that we were dependent on before, stop listening to it\r\n\t\t\t\t\t// TODO: we may want to consider doing cleanup after the next rendering turn\r\n\t\t\t\t\tif (variable.listeners) {\r\n\t\t\t\t\t\tpreviousNotifyingValue.stopNotifies(variable)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvariable.returnedVariable = null\r\n\t\t\t\t}\r\n\t\t\t\tif (value && value.notifies) {\r\n\t\t\t\t\tvariable.returnedVariable = value\r\n\t\t\t\t\tif (variable.listeners) {\r\n\t\t\t\t\t\tvalue.notifies(variable)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/*var parent = variable\r\n\t\t\t\t\tdo {\r\n\t\t\t\t\t\tif (parent.listeners) {\r\n\t\t\t\t\t\t\t// the value is another variable, start receiving notifications, if we, or any parent is live\r\n\t\t\t\t\t\t\tvariable.returnedVariable.notifies(variable)\r\n\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tparent.hasNotifyingChild = true\r\n\t\t\t\t\t} while((parent = parent.parent))*/\r\n\t\t\t\t\tcontext = context || parentContext && (context = parentContext.newContext())\r\n\t\t\t\t\tif (context) {\r\n\t\t\t\t\t\tcontext.nextProperty = 'returnedVariable'\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalue = value.valueOf(context)\r\n\t\t\t\t}\r\n\t\t\t\tif (value === undefined) {\r\n\t\t\t\t\tvalue = variable.default\r\n\t\t\t\t}\r\n\t\t\t\tif (value && value.then) {\r\n\t\t\t\t\treturn value.then(function(value) {\r\n\t\t\t\t\t\tif (value && value.subscribe) {\r\n\t\t\t\t\t\t\treturn Variable.prototype.gotValue.call(variable, value, parentContext, context)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (context) {\r\n\t\t\t\t\t\t\tparentContext.integrate(context, context.contextualize(variable, parentContext) || variable)\r\n\t\t\t\t\t\t} else if (parentContext) {\r\n\t\t\t\t\t\t\tparentContext.addInput(variable)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn value\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tif (context) {\r\n\t\t\t\t\tparentContext.integrate(context, context.contextualize(this, parentContext) || this)\r\n\t\t\t\t}\r\n\t\t\t\tif (parentContext) {\r\n\t\r\n\t\t\t\t\t/*if (!contextualized.listeners) {\r\n\t\t\t\t\t\t// mark it as initialized, since we have already recursively dependended on sources\r\n\t\t\t\t\t\tcontextualized.listeners = []\r\n\t\t\t\t\t}*/\r\n\t\r\n\t\t\t\t\tif (!context) {\r\n\t\t\t\t\t\tparentContext.addInput(this)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn value\r\n\t\t\t},\r\n\t\t\tPropertyClass: Variable,\r\n\t\t\tproperty: function(key, PropertyClass) {\r\n\t\t\t\tvar propertyVariable = this[key]\r\n\t\t\t\tif (!propertyVariable || !propertyVariable.notifies) {\r\n\t\t\t\t\tpropertyVariable = this._properties && this._properties[key]\r\n\t\t\t\t}\r\n\t\t\t\tif (!propertyVariable) {\r\n\t\t\t\t\t// create the property variable\r\n\t\t\t\t\tvar Class = PropertyClass\r\n\t\t\t\t\tif (!Class) {\r\n\t\t\t\t\t\tClass = this.constructor[key]\r\n\t\t\t\t\t\tif (typeof Class !== 'function' || !Class.isPropertyClass) {\r\n\t\t\t\t\t\t\tClass = this.PropertyClass\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpropertyVariable = new Class()\r\n\t\t\t\t\tpropertyVariable.key = key\r\n\t\t\t\t\tpropertyVariable.parent = this\r\n\t\t\t\t\tif (this[key] === undefined) {\r\n\t\t\t\t\t\tthis[key] = propertyVariable\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t(this._properties || (this._properties = {}))[key] = propertyVariable\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (PropertyClass) {\r\n\t\t\t\t\tif (!(propertyVariable instanceof PropertyClass)) {\r\n\t\t\t\t\t\tthrow new TypeError('Existing property variable does not match requested variable type')\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn propertyVariable\r\n\t\t\t},\r\n\t\t\tfor: function(subject) {\r\n\t\t\t\tif (subject && subject.target && !subject.constructor.getForClass) {\r\n\t\t\t\t\t// makes HTML events work\r\n\t\t\t\t\tsubject = subject.target\r\n\t\t\t\t}\r\n\t\t\t\tif (this.parent) {\r\n\t\t\t\t\treturn this.parent.for(subject).property(this.key)\r\n\t\t\t\t}\r\n\t\t\t\treturn new ContextualizedVariable(this, subject || defaultContext)\r\n\t\t\t},\r\n\t\t\t_changeValue: function(context, type, newValue) {\r\n\t\t\t\tvar key = this.key\r\n\t\t\t\tvar parent = this.parent\r\n\t\t\t\tif (!parent) {\r\n\t\t\t\t\treturn this.put(newValue, context)\r\n\t\t\t\t}\r\n\t\t\t\tvar variable = this\r\n\t\t\t\treturn whenStrict(parent.getValue ? parent.getValue(context) : parent.value, function(object) {\r\n\t\t\t\t\tif (object == null) {\r\n\t\t\t\t\t\t// nothing there yet, create an object to hold the new property\r\n\t\t\t\t\t\tparent.put(object = typeof key == 'number' ? [] : {}, context)\r\n\t\t\t\t\t} else if (typeof object != 'object') {\r\n\t\t\t\t\t\t// if the parent is not an object, we can't set anything (that will be retained)\r\n\t\t\t\t\t\tvar error = new Error('Can not set property on non-object')\r\n\t\t\t\t\t\terror.deniedPut = true\r\n\t\t\t\t\t\tthrow error\r\n\t\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar oldValue = typeof object.get === 'function' ? object.get(key) : object[key]\r\n\t\t\t\t\tif (oldValue === newValue && typeof newValue != 'object') {\r\n\t\t\t\t\t\t// no actual change to make\r\n\t\t\t\t\t\treturn noChange\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (typeof object.set === 'function') {\r\n\t\t\t\t\t\tobject.set(key, newValue)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (type == RequestChange && oldValue && oldValue.put && (!newValue && newValue.put)) {\r\n\t\t\t\t\t\t\t// if a put and the property value is a variable, assign it to that.\r\n\t\t\t\t\t\t\toldValue.put(newValue)\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tobject[key] = newValue\r\n\t\t\t\t\t\t\t// or set the setter/getter\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar event = new RefreshEvent()\r\n\t\t\t\t\tevent.oldValue = oldValue\r\n\t\t\t\t\tevent.target = variable\r\n\t\t\t\t\tvariable.updated(event, variable, context)\r\n\t\r\n\t\t\t\t\t// now notify any object listeners\r\n\t\t\t\t\tvar listeners = propertyListenersMap.get(object)\r\n\t\t\t\t\t// we need to do it before the other listeners, so we can update it before\r\n\t\t\t\t\t// we trigger a full clobbering of the object\r\n\t\t\t\t\tif (listeners) {\r\n\t\t\t\t\t\tlisteners = listeners.slice(0)\r\n\t\t\t\t\t\tfor (var i = 0, l = listeners.length; i < l; i++) {\r\n\t\t\t\t\t\t\tvar listener = listeners[i]\r\n\t\t\t\t\t\t\tif (listener !== parent) {\r\n\t\t\t\t\t\t\t\t// now go ahead and actually trigger the other listeners (but make sure we don't do the parent again)\r\n\t\t\t\t\t\t\t\tlistener._propertyChange(key, object, context, type)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn newValue\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\r\n\t\t\t_propertyChange: function(propertyName, object, context, type) {\r\n\t\t\t\tif (this.onPropertyChange) {\r\n\t\t\t\t\tthis.onPropertyChange(propertyName, object, context)\r\n\t\t\t\t}\r\n\t\t\t\tthis.updated(new PropertyChangeEvent(propertyName, new RefreshEvent(), this), null, context)\r\n\t\t\t},\r\n\t\t\teachKey: function(callback) {\r\n\t\t\t\tfor (var i in this._properties) {\r\n\t\t\t\t\tcallback(i)\r\n\t\t\t\t}\r\n\t\t\t\tfor (var i in this) {\r\n\t\t\t\t\tif (this.hasOwnProperty[i]) {\r\n\t\t\t\t\t\tvar value = this[i]\r\n\t\t\t\t\t\tif (value && value.parent == this && value.listeners) {\r\n\t\t\t\t\t\t\tcallback(i)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tapply: function(instance, args) {\r\n\t\t\t\treturn new Transform(args[0], this, args)\r\n\t\t\t},\r\n\t\t\tcall: function(instance) {\r\n\t\t\t\treturn this.apply(instance, Array.prototype.slice.call(arguments, 1))\r\n\t\t\t},\r\n\t\t\tforDependencies: function(callback) {\r\n\t\t\t\tif (this.returnedVariable) {\r\n\t\t\t\t\tcallback(this.returnedVariable)\r\n\t\t\t\t}\r\n\t\t\t\tif (this.hasNotifyingChild) {\r\n\t\t\t\t\tforPropertyNotifyingValues(this, this, callback)\r\n\t\t\t\t}\r\n\t\t\t\tif (this.parent) {\r\n\t\t\t\t\tcallback(this.parent)\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tinit: function() {\r\n\t\t\t\tvar variable = this\r\n\t\t\t\tthis.forDependencies(function(dependency) {\r\n\t\t\t\t\tdependency.notifies(variable)\r\n\t\t\t\t})\r\n\t\r\n\t\t\t\tif (this.listeningToObject === null) {\r\n\t\t\t\t\t// we were previously listening to an object, but it needs to be restored\r\n\t\t\t\t\t// calling valueOf will cause the listening object to be restored\r\n\t\t\t\t\tthis.valueOf()\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcleanup: function() {\r\n\t\t\t\tthis.listeners = false\r\n\t\t\t\tvar handles = this.handles\r\n\t\t\t\tif (handles) {\r\n\t\t\t\t\tfor (var i = 0; i < handles.length; i++) {\r\n\t\t\t\t\t\thandles[i].remove()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.handles = null\r\n\t\t\t\tvar returnedVariable = this.returnedVariable\r\n\t\t\t\tvar variable = this\r\n\t\t\t\tthis.forDependencies(function(dependency) {\r\n\t\t\t\t\tdependency.stopNotifies(variable)\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\r\n\t\t\tversion: 0,\r\n\t\t\tversionWithChildren: 0,\r\n\t\r\n\t\t\tupdateVersion: function(version) {\r\n\t\t\t\tthis.version = nextVersion = Math.max(Date.now(), nextVersion + 1)\r\n\t\t\t},\r\n\t\r\n\t\t\tgetVersion: function(context) {\r\n\t\t\t\treturn Math.max(this.version,\r\n\t\t\t\t\tthis.returnedVariable && this.returnedVariable.getVersion ? this.returnedVariable.getFullVersion(context) : 0,\r\n\t\t\t\t\tthis.parent ? this.parent.getVersion(context) : 0)\r\n\t\t\t},\r\n\t\t\tgetFullVersion: function(context) {\r\n\t\t\t\treturn Math.max(this.versionWithChildren, this.getVersion(context))\r\n\t\t\t},\r\n\t\r\n\t\t\tgetSubject: function(selectVariable) {\r\n\t\t\t\treturn this.subject\r\n\t\t\t},\r\n\t\r\n\t\t\tgetUpdates: function(since) {\r\n\t\t\t\tvar updates = []\r\n\t\t\t\tvar nextUpdateMap = this.nextUpdateMap\r\n\t\t\t\tif (nextUpdateMap && since) {\r\n\t\t\t\t\twhile ((since = nextUpdateMap.get(since))) {\r\n\t\t\t\t\t\tif (since.type === 'refresh') {\r\n\t\t\t\t\t\t\t// if it was refresh, we can clear any prior entries\r\n\t\t\t\t\t\t\tupdates = []\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tupdates.push(since)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn updates\r\n\t\t\t},\r\n\t\r\n\t\t\tupdated: function(updateEvent, by, context, isDownstream) {\r\n\t\t\t\tif (!updateEvent) {\r\n\t\t\t\t\tupdateEvent = new RefreshEvent()\r\n\t\t\t\t\tupdateEvent.source = this\r\n\t\t\t\t}\r\n\t\t\t\tif (updateEvent.visited.has(this)){\r\n\t\t\t\t\t// if this event has already visited this variable, skip it\r\n\t\t\t\t\treturn updateEvent\r\n\t\t\t\t}\r\n\t\t\t\tupdateEvent.visited.add(this)\r\n\t\t\t\tif (this.__debug) {\r\n\t\t\t\t\t// debug is on\r\n\t\t\t\t\tVariable._logStackTrace(this)\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar contextualInstance = context && context.getContextualized(this)\r\n\t\t\t\tif (contextualInstance) {\r\n\t\t\t\t\tcontextualInstance.updated(updateEvent, this, context)\r\n\t\t\t\t}\r\n\t\t\t\t/*\r\n\t\t\t\t// at some point we could do an update list so that we could incrementally update\r\n\t\t\t\t// lists in non-live situations\r\n\t\t\t\tif (this.lastUpdate) {\r\n\t\t\t\t\tvar nextUpdateMap = this.nextUpdateMap\r\n\t\t\t\t\tif (!nextUpdateMap) {\r\n\t\t\t\t\t\tnextUpdateMap = this.nextUpdateMap = new WeakMap()\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnextUpdateMap.set(this.lastUpdate, updateEvent)\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.lastUpdate = updateEvent */\r\n\t\t\t\tif (updateEvent instanceof PropertyChangeEvent) {\r\n\t\t\t\t\tthis.versionWithChildren = Math.max(Date.now(), nextVersion + 1)\r\n\t\t\t\t} else if (!isDownstream) {\r\n\t\t\t\t\tthis.updateVersion()\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar listeners = this.listeners\r\n\t\t\t\tif (listeners) {\r\n\t\t\t\t\tvar variable = this\r\n\t\t\t\t\t// make a copy, in case they change\r\n\t\t\t\t\tlisteners = listeners.slice()\r\n\t\t\t\t\tfor (var i = 0, l = listeners.length; i < l; i++) {\r\n\t\t\t\t\t\tvar dependent = listeners[i]\r\n\t\t\t\t\t\tif ((updateEvent instanceof PropertyChangeEvent) &&\r\n\t\t\t\t\t\t\t\tdependent.parent) {\r\n\t\t\t\t\t\t\tif (dependent.key === updateEvent.key) {\r\n\t\t\t\t\t\t\t\tdependent.updated(updateEvent.childEvent, variable, context, true)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tdependent.updated(updateEvent, variable, context, true)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (updateEvent instanceof PropertyChangeEvent) {\r\n\t\t\t\t\tif (this.returnedVariable && this.fixed) {\r\n\t\t\t\t\t\tthis.returnedVariable.updated(updateEvent, this, context)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this.constructor.collection) {\r\n\t\t\t\t\t\tthis.constructor.collection.updated(updateEvent, this, context)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (this.parent) {\r\n\t\t\t\t\tthis.parent.updated(new PropertyChangeEvent(this.key, updateEvent, this.parent), this, context)\r\n\t\t\t\t}\r\n\t\t\t\tif (this.collection) {\r\n\t\t\t\t\tthis.collection.updated(updateEvent, this, context)\r\n\t\t\t\t}\r\n\t\t\t\treturn updateEvent\r\n\t\t\t},\r\n\t\r\n\t\t\tinvalidate: function() {\r\n\t\t\t\t// for back-compatibility for now\r\n\t\t\t\tthis.updated()\r\n\t\t\t},\r\n\t\r\n\t\t\tnotifies: function(target) {\r\n\t\t\t\tif (!target) {\r\n\t\t\t\t\tthrow new Error('No listener provided for notification')\r\n\t\t\t\t}\r\n\t\t\t\tvar listeners = this.listeners\r\n\t\t\t\tif (!listeners || !this.hasOwnProperty('listeners')) {\r\n\t\t\t\t\tthis.listeners = listeners = [target]\r\n\t\t\t\t\tthis.init()\r\n\t\t\t\t} else if (listeners.indexOf(target) === -1) {\r\n\t\t\t\t\tlisteners.push(target)\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tsubscribe: function(listener) {\r\n\t\t\t\t// ES7 Observable (and baconjs) compatible API\r\n\t\t\t\tvar updated\r\n\t\t\t\tvar updateQueued\r\n\t\t\t\tvar variable = this\r\n\t\t\t\t// it is important to make sure you register for notifications before getting the value\r\n\t\t\t\tif (typeof listener === 'function') {\r\n\t\t\t\t\t// BaconJS compatible API\r\n\t\t\t\t\tvar variable = this\r\n\t\t\t\t\tvar event = {\r\n\t\t\t\t\t\tvalue: function() {\r\n\t\t\t\t\t\t\treturn variable.valueOf()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tupdated = function() {\r\n\t\t\t\t\t\tupdateQueued = false\r\n\t\t\t\t\t\tlistener(event)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\telse if (listener.next) {\r\n\t\t\t\t\t// Assuming ES7 Observable API. It is actually a streaming API, this pretty much violates all principles of reactivity, but we will support it\r\n\t\t\t\t\tupdated = function() {\r\n\t\t\t\t\t\tupdateQueued = false\r\n\t\t\t\t\t\tlistener.next(variable.valueOf())\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error('Subscribing to an invalid listener, the listener must be a function, or have an update or next method')\r\n\t\t\t\t}\r\n\t\t\t\tvar updateReceiver = {\r\n\t\t\t\t\tupdated: function() {\r\n\t\t\t\t\t\tif (updateQueued) {\r\n\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tupdateQueued = true\r\n\t\t\t\t\t\tlang.nextTurn(updated)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tupdated()\r\n\t\t\t\tthis.notifies(updateReceiver)\r\n\t\t\t\treturn {\r\n\t\t\t\t\tunsubscribe: function() {\r\n\t\t\t\t\t\tvariable.stopNotifies(updateReceiver)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tstopNotifies: function(dependent) {\r\n\t\t\t\tvar listeners = this.listeners\r\n\t\t\t\tif (listeners) {\r\n\t\t\t\t\tvar index = listeners.indexOf(dependent)\r\n\t\t\t\t\tif (index > -1) {\r\n\t\t\t\t\t\tlisteners.splice(index, 1)\r\n\t\t\t\t\t\tif (listeners.length === 0) {\r\n\t\t\t\t\t\t\t// clear the listeners so it will be reinitialized if it has\r\n\t\t\t\t\t\t\t// listeners again\r\n\t\t\t\t\t\t\tthis.cleanup()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tput: function(value, context) {\r\n\t\t\t\tvar variable = this\r\n\t\t\t\tif (this.parent) {\r\n\t\t\t\t\treturn this._changeValue(context, RequestChange, value)\r\n\t\t\t\t}\r\n\t\t\t\treturn whenStrict(this.getValue ? this.getValue(context) : this.value, function(oldValue) {\r\n\t\t\t\t\tif (oldValue === value && typeof value != 'object') {\r\n\t\t\t\t\t\treturn noChange\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (oldValue && oldValue.put &&\r\n\t\t\t\t\t\t\t// if it is set to fixed, we see we can put in the current variable\r\n\t\t\t\t\t\t\t(variable.fixed || !(value && value.put))) {\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\treturn oldValue.put(value)\r\n\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\tif (!error.deniedPut) {\r\n\t\t\t\t\t\t\t\tthrow error\r\n\t\t\t\t\t\t\t}// else if the put was denied, continue on and set the value on this variable\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn whenStrict(variable.setValue(value, context), function(value) {\r\n\t\t\t\t\t\tvar event = new RefreshEvent()\r\n\t\t\t\t\t\tevent.oldValue = oldValue\r\n\t\t\t\t\t\tevent.target = variable\r\n\t\t\t\t\t\tvariable.updated(event, variable, context)\r\n\t\t\t\t\t\treturn value\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tget: function(key) {\r\n\t\t\t\tif (this[key] || (this._properties && this._properties[key])) {\r\n\t\t\t\t\treturn this.property(key).valueOf()\r\n\t\t\t\t}\r\n\t\t\t\tvar object = this.getValue()\r\n\t\t\t\tif (!object) {\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tif (typeof object.get === 'function') {\r\n\t\t\t\t\treturn object.get(key)\r\n\t\t\t\t}\r\n\t\t\t\treturn whenStrict(object, function(object) {\r\n\t\t\t\t\tvar value = object[key]\r\n\t\t\t\t\tif (value && value.notifies) {\r\n\t\t\t\t\t\t// nested variable situation, get underlying value\r\n\t\t\t\t\t\treturn value.valueOf()\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn value\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tset: function(key, value) {\r\n\t\t\t\t// TODO: create an optimized route when the property doesn't exist yet\r\n\t\t\t\tthis.property(key)._changeValue(null, RequestSet, value)\r\n\t\t\t},\r\n\t\t\tundefine: function(key, context) {\r\n\t\t\t\tthis.set(key, undefined, context)\r\n\t\t\t},\r\n\t\t\tis: function(proxiedVariable) {\r\n\t\t\t\tvar thisVariable = this\r\n\t\t\t\tthis.fixed = true\r\n\t\t\t\treturn whenStrict(this.setValue(proxiedVariable), function(value) {\r\n\t\t\t\t\tthisVariable.updated(new RefreshEvent(), thisVariable)\r\n\t\t\t\t\treturn thisVariable\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tproxy: function(proxiedVariable) {\r\n\t\t\t\treturn this.is(proxiedVariable)\r\n\t\t\t},\r\n\t\t\tnext: function(value) {\r\n\t\t\t\t// for ES7 observable compatibility\r\n\t\t\t\tthis.put(value)\r\n\t\t\t},\r\n\t\t\terror: function(error) {\r\n\t\t\t\t// for ES7 observable compatibility\r\n\t\t\t\tvar listeners = this.listeners\r\n\t\t\t\tif (listeners) {\r\n\t\t\t\t\t// make a copy, in case they change\r\n\t\t\t\t\tlisteners.forEach(function(dependent) {\r\n\t\t\t\t\t\t// skip notifying property listeners if we are headed up the parent chain\r\n\t\t\t\t\t\tdependent.error(error)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcomplete: function(value) {\r\n\t\t\t\t// for ES7 observable compatibility\r\n\t\t\t\tthis.put(value)\r\n\t\t\t},\r\n\t\t\tsetValue: function(value) {\r\n\t\t\t\tthis.value = value\r\n\t\t\t},\r\n\t\t\tonValue: function(listener) {\r\n\t\t\t\treturn this.subscribe(function(event) {\r\n\t\t\t\t\twhen(event.value(), function(value) {\r\n\t\t\t\t\t\tlistener(value)\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\ttoJSON: function() {\r\n\t\t\t\treturn this.valueOf()\r\n\t\t\t},\r\n\t\t\ttoString: function() {\r\n\t\t\t\treturn String(this.valueOf())\r\n\t\t\t},\r\n\t\t\tforEach: function(callbackOrItemClass, callbackOrContext, context) {\r\n\t\t\t\t// iterate through current value of variable\r\n\t\t\t\tif (callbackOrItemClass.notifies) {\r\n\t\t\t\t\treturn this.forEach(function(item) {\r\n\t\t\t\t\t\tvar itemVariable = callbackOrItemClass.from(item)\r\n\t\t\t\t\t\tcallbackOrContext.call(this, itemVariable)\r\n\t\t\t\t\t}, context)\r\n\t\t\t\t}\r\n\t\t\t\tvar collectionOf = this.collectionOf\r\n\t\t\t\tif (collectionOf) {\r\n\t\t\t\t\tvar variable = this\r\n\t\t\t\t\treturn when(this.valueOf(callbackOrContext), function(value) {\r\n\t\t\t\t\t\tif (value && value.forEach) {\r\n\t\t\t\t\t\t\tvalue.forEach(function(item, index) {\r\n\t\t\t\t\t\t\t\tcallbackOrItemClass.call(variable, variable.property(index, collectionOf))\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\treturn when(this.valueOf(callbackOrContext), function(value) {\r\n\t\t\t\t\tif (value && value.forEach) {\r\n\t\t\t\t\t\tvalue.forEach(callbackOrItemClass)\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tfor (var i in value) {\r\n\t\t\t\t\t\t\tcallbackOrItemClass.call(value, value[i], i)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\r\n\t\t\tto: function (transformFunction, reverse) {\r\n\t\t\t\tif (typeof transformFunction !== 'function') {\r\n\t\t\t\t\tif (typeof transformFunction === 'object') {\r\n\t\t\t\t\t\tthis.to(transformFunction.get, transformFunction.set)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthrow new Error('No function provided to transform')\r\n\t\t\t\t}\r\n\t\t\t\tif (reverse) {\r\n\t\t\t\t\ttransformFunction.reverse = function(value, args, context) {\r\n\t\t\t\t\t\t// for direct to, we can just use the first argument\r\n\t\t\t\t\t\treverse.call(this, value, args[0], context)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (transformFunction.prototype instanceof Variable) {\r\n\t\t\t\t\treturn new transformFunction(this)\r\n\t\t\t\t}\r\n\t\t\t\treturn new Transform(this, transformFunction)\r\n\t\t\t},\r\n\t\t\tmap: function (transformFunction) {\r\n\t\t\t\treturn this.to(function(value) {\r\n\t\t\t\t\tif (value instanceof Array) {\r\n\t\t\t\t\t\tthrow new Error('map without VArray')\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn transformFunction(value)\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tas: function(Class) {\r\n\t\t\t\t// easiest way to cast to a variable class\r\n\t\t\t\treturn new Class(this)\r\n\t\t\t},\r\n\t\t\tget schema() {\r\n\t\t\t\t// default schema is the constructor\r\n\t\t\t\tif (this.returnedVariable) {\r\n\t\t\t\t\treturn this.returnedVariable.schema\r\n\t\t\t\t}\r\n\t\t\t\tif (this.parent) {\r\n\t\t\t\t\tvar parentSchemaProperties = this.parent.schema.properties || this.parent.schema\r\n\t\t\t\t\treturn parentSchemaProperties && parentSchemaProperties[this.key]\r\n\t\t\t\t}\r\n\t\t\t\treturn this.constructor\r\n\t\t\t},\r\n\t\t\tset schema(schema) {\r\n\t\t\t\t// but allow it to be overriden\r\n\t\t\t\tObject.defineProperty(this, 'schema', {\r\n\t\t\t\t\tvalue: schema\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tvalidate: function(target, schema) {\r\n\t\t\t\tif (this.returnedVariable) {\r\n\t\t\t\t\treturn this.returnedVariable.validate(target, schema)\r\n\t\t\t\t}\r\n\t\t\t\tif (this.parent) {\r\n\t\t\t\t\treturn this.parent.validate(target.valueOf(), schema)\r\n\t\t\t\t}\r\n\t\t\t\tif (schema) {\r\n\t\t\t\t\tif (schema.type && (schema.type !== typeof target)) {\r\n\t\t\t\t\t\treturn ['Target type of ' + typeof target + ' does not match schema type of ' + schema.type]\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (schema.required && (target == null || target == '' || (typeof target === 'number' && isNaN(target)))) {\r\n\t\t\t\t\t\treturn ['Value is required']\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tvar valid = []\r\n\t\t\t\tvalid.isValid = true\r\n\t\t\t\treturn valid\r\n\t\t\t},\r\n\t\r\n\t\t\tget validation() {\r\n\t\t\t\tvar validation = new Validating(this)\r\n\t\t\t\tObject.defineProperty(this, 'validation', {\r\n\t\t\t\t\tvalue: validation\r\n\t\t\t\t})\r\n\t\t\t\treturn validation\r\n\t\t\t},\r\n\t\t\tset validation(validation) {\r\n\t\t\t\t// but allow it to be overriden\r\n\t\t\t\tObject.defineProperty(this, 'validation', {\r\n\t\t\t\t\tvalue: validation\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tset structured(structure) {\r\n\t\t\t\t// find any variable properties and attaches them as a property\r\n\t\t\t\tvar keys = Object.keys(this)\r\n\t\t\t\tvar properties = keys.length > 1 && this._properties || (this._properties = {})\r\n\t\t\t\tfor(var i = 0, l = keys.length; i < l; i++) {\r\n\t\t\t\t\tvar key = keys[i]\r\n\t\t\t\t\tvar value = this[key]\r\n\t\t\t\t\tif (value instanceof Variable) {\r\n\t\t\t\t\t\tvar existing = properties[key]\r\n\t\t\t\t\t\tif (existing) {\r\n\t\t\t\t\t\t\tif (existing !== value) {\r\n\t\t\t\t\t\t\t\t// an existing property exists, put in it\r\n\t\t\t\t\t\t\t\texisting.put(value)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (value.parent) {\r\n\t\t\t\t\t\t\t\tif (value.parent === this) {\r\n\t\t\t\t\t\t\t\t\tcontinue // just being assigned to another property\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// property already exists with different parent, make a proxy\r\n\t\t\t\t\t\t\t\t\tvar newValue = new Variable()\r\n\t\t\t\t\t\t\t\t\tnewValue.proxy(value)\r\n\t\t\t\t\t\t\t\t\tvalue = newValue\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvalue.key = key\r\n\t\t\t\t\t\t\tvalue.parent = this\r\n\t\t\t\t\t\t\tproperties[key] = value\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tgetId: function() {\r\n\t\t\t\treturn this.id || (this.id = Variable.nextId++)\r\n\t\t\t},\r\n\t\t\tobserveObject: function() {\r\n\t\t\t\tvar variable = this\r\n\t\t\t\treturn when(this.valueOf(), function(object) {\r\n\t\t\t\t\tvar listeners = propertyListenersMap.get(object)\r\n\t\t\t\t\tif (!listeners) {\r\n\t\t\t\t\t\tpropertyListenersMap.set(object, listeners = [])\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (listeners.observerCount) {\r\n\t\t\t\t\t\tlisteners.observerCount++\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tlisteners.observerCount = 1\r\n\t\t\t\t\t\tvar observer = listeners.observer = lang.observe(object, function(events) {\r\n\t\t\t\t\t\t\tfor (var i = 0, l = listeners.length; i < l; i++) {\r\n\t\t\t\t\t\t\t\tvar listener = listeners[i]\r\n\t\t\t\t\t\t\t\tfor (var j = 0, el = events.length; j < el; j++) {\r\n\t\t\t\t\t\t\t\t\tvar event = events[j]\r\n\t\t\t\t\t\t\t\t\tlistener._propertyChange(event.name, object)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tif (observer.addKey) {\r\n\t\t\t\t\t\t\tfor (var i = 0, l = listeners.length; i < l; i++) {\r\n\t\t\t\t\t\t\t\tvar listener = listeners[i]\r\n\t\t\t\t\t\t\t\tlistener.eachKey(function(key) {\r\n\t\t\t\t\t\t\t\t\tobserver.addKey(key)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tregisterListener(object, variable)\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tremove: function() {\r\n\t\t\t\t\t\t\tderegisterListener(object, variable)\r\n\t\t\t\t\t\t\tif (!(--listeners.observerCount)) {\r\n\t\t\t\t\t\t\t\tlisteners.observer.remove()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tdone: function() {\r\n\t\t\t\t\t\t\t// deliver changes\r\n\t\t\t\t\t\t\tlang.deliverChanges(observer)\r\n\t\t\t\t\t\t\tthis.remove()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tgetCollectionOf: function() {\r\n\t\t\t\treturn this.returnedVariable && this.returnedVariable.collectionOf || this.constructor.collectionOf\r\n\t\t\t},\r\n\t\t\t_sN: function(name) {\r\n\t\t\t\t// for compilers to set a name\r\n\t\t\t\tthis.name = name\r\n\t\t\t\treturn this\r\n\t\t\t},\r\n\t\t\tget _debug() {\r\n\t\t\t\tif (this.__debug === undefined) {\r\n\t\t\t\t\tthis.__debug = this.name || (Math.random() + '').slice(2)\r\n\t\t\t\t}\r\n\t\t\t\treturn this.__debug\r\n\t\t\t},\r\n\t\t\tset _debug(_debug) {\r\n\t\t\t\tthis.__debug = _debug\r\n\t\t\t},\r\n\t\t\tget _lastUpdated() {\r\n\t\t\t\treturn new Date(this.getVersion())\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\t// a variable inheritance change goes through its own prototype, so classes/constructor\r\n\t\t// can be used as variables as well\r\n\t\tfor (var key in VariablePrototype) {\r\n\t\t\tObject.defineProperty(Variable, key, Object.getOwnPropertyDescriptor(VariablePrototype, key))\r\n\t\t}\r\n\t\r\n\t\tVariable.as = function(Type) {\r\n\t\t\tvar NewType = this.with({})\r\n\t\t\tvar target = NewType.prototype\r\n\t\t\tvar prototype = Type.prototype\r\n\t\t\tdo {\r\n\t\t\t\tvar names = Object.getOwnPropertyNames(prototype)\r\n\t\t\t\tfor (var i = 0; i < names.length; i++) {\r\n\t\t\t\t\tvar name = names[i]\r\n\t\t\t\t\tif (!Object.getOwnPropertyDescriptor(target, name)) {\r\n\t\t\t\t\t\tObject.defineProperty(target, name, Object.getOwnPropertyDescriptor(prototype, name))\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tprototype = getPrototypeOf(prototype)\r\n\t\t\t} while (prototype && prototype !== Variable.prototype)\r\n\t\t\treturn NewType\r\n\t\t}\r\n\t\r\n\t\tVariable.with = function(properties, ExtendedVariable) {\r\n\t\t\t// TODO: handle arguments\r\n\t\t\tvar Base = this\r\n\t\t\tvar prototype\r\n\t\t\tif (Object.getOwnPropertyDescriptor(this, 'prototype').writable === false) {\r\n\t\t\t\t// extending native class\r\n\t\t\t\tExtendedVariable = lang.extendClass(this)\r\n\t\t\t\tprototype = ExtendedVariable.prototype\r\n\t\t\t} else {\r\n\t\t\t\t// extending function/constructor\r\n\t\t\t\tExtendedVariable = ExtendedVariable || function() {\r\n\t\t\t\t\tif (this instanceof ExtendedVariable) {\r\n\t\t\t\t\t\tBase.apply(this, arguments)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn ExtendedVariable.with(properties)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tprototype = ExtendedVariable.prototype = Object.create(this.prototype)\r\n\t\t\t\tprototype.constructor = ExtendedVariable\r\n\t\t\t\tsetPrototypeOf(ExtendedVariable, this)\r\n\t\t\t}\r\n\t\t\treturn ExtendedVariable.assign(properties)\r\n\t\t}\r\n\t\tVariable.assign = function(properties) {\r\n\t\t\tvar prototype = this.prototype\r\n\t\t\tfor (var key in properties) {\r\n\t\t\t\tvar descriptor = Object.getOwnPropertyDescriptor(properties, key)\r\n\t\t\t\tvar value = descriptor.value\r\n\t\t\t\tif (typeof value === 'function' && key !== 'collectionOf') {\r\n\t\t\t\t\tif (value.notifies) {\r\n\t\t\t\t\t\t// variable class\r\n\t\t\t\t\t\tdescriptor = (function(key, Class) {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tget: function() {\r\n\t\t\t\t\t\t\t\t\tvar property = (this._properties || (this._properties = {}))[key]\r\n\t\t\t\t\t\t\t\t\tif (!property) {\r\n\t\t\t\t\t\t\t\t\t\tthis._properties[key] = property = new Class()\r\n\t\t\t\t\t\t\t\t\t\tproperty.key = key\r\n\t\t\t\t\t\t\t\t\t\tproperty.parent = this\r\n\t\t\t\t\t\t\t\t\t\tif (property.listeners) {\r\n\t\t\t\t\t\t\t\t\t\t\t// if it already has listeners, need to reinit it with the parent\r\n\t\t\t\t\t\t\t\t\t\t\tproperty.init()\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\treturn property\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tset: function(value) {\r\n\t\t\t\t\t\t\t\t\tthis[key]._changeValue(null, RequestSet, value)\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tenumerable: true\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})(key, value)\r\n\t\t\t\t\t\tif (value === Variable) {\r\n\t\t\t\t\t\t\tvalue = Variable() // create own instance\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvalue.isPropertyClass = true\r\n\t\t\t\t\t} else if (isGenerator(value)) {\r\n\t\t\t\t\t\tdescriptor = getGeneratorDescriptor(value)\r\n\t\t\t\t\t} else if (value.defineAs) {\r\n\t\t\t\t\t\tdescriptor = value.defineAs(key)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvalue = generalizeMethod(value, key)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tObject.defineProperty(prototype, key, descriptor)\r\n\t\t\t\tif (value !== undefined) {\r\n\t\t\t\t\t// TODO: If there is a getter/setter here, use defineProperty\r\n\t\t\t\t\tthis[key] = value\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// getter/setter\r\n\t\t\t\t\tObject.defineProperty(this, key, descriptor)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (properties && properties.hasOwn) {\r\n\t\t\t\thasOwn.call(this, properties.hasOwn)\r\n\t\t\t}\r\n\t\t\treturn this\r\n\t\t}\r\n\t\r\n\t\tObject.defineProperty(Variable, 'defaultInstance', {\r\n\t\t\tget: function() {\r\n\t\t\t\treturn this.hasOwnProperty('_defaultInstance') ?\r\n\t\t\t\t\tthis._defaultInstance : (\r\n\t\t\t\t\t\tthis._defaultInstance = new this(),\r\n\t\t\t\t\t\tthis._defaultInstance.subject = defaultContext,\r\n\t\t\t\t\t\tthis._defaultInstance)\r\n\t\t\t}\r\n\t\t})\r\n\t\tVariable.hasOwn = function(Target, createInstance) {\r\n\t\t\tvar instanceMap = new WeakMap()\r\n\t\t\tinstanceMap.createInstance = createInstance\r\n\t\t\tvar subjectMap = this.ownedClasses || (this.ownedClasses = new WeakMap())\r\n\t\t\tsubjectMap.set(Target, instanceMap)\r\n\t\t}\r\n\t\r\n\t\r\n\t\tfunction arrayToModify(variable, callback) {\r\n\t\t\t// TODO: switch this to allow promises\r\n\t\t\treturn when(variable.cachedValue || variable.valueOf(), function(array) {\r\n\t\t\t\tif (!array) {\r\n\t\t\t\t\tvariable.put(array = [])\r\n\t\t\t\t}\r\n\t\t\t\tvar results = callback.call(variable, array)\r\n\t\t\t\tvariable.cachedVersion++ // update the cached version, so any version checking will know it has changed\r\n\t\t\t\treturn results\r\n\t\t\t})\r\n\t\t}\r\n\t\r\n\t\tfunction insertedAt(variable, added, startingIndex, arrayLength) {\r\n\t\t\tvar addedCount = added.length\r\n\t\t\t// adjust the key positions of any index properties after splice\r\n\t\t\tif (addedCount > 0) {\r\n\t\t\t\tvar arrayPosition\r\n\t\t\t\tfor (var i = arrayLength - addedCount; i > startingIndex;) {\r\n\t\t\t\t\tvar arrayPosition = variable[--i]\r\n\t\t\t\t\tif (arrayPosition) {\r\n\t\t\t\t\t\tvariable[i] = undefined\r\n\t\t\t\t\t\tarrayPosition.key += addedCount\r\n\t\t\t\t\t\tvariable[arrayPosition.key] = arrayPosition\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// send out updates\r\n\t\t\t\tfor (var i = 0, l = added.length; i < l; i++) {\r\n\t\t\t\t\tvariable.updated(new AddEvent({\r\n\t\t\t\t\t\tvalue: added[i],\r\n\t\t\t\t\t\tindex: i + startingIndex,\r\n\t\t\t\t\t\tmodifier: variable\r\n\t\t\t\t\t}), variable)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction removedAt(variable, removed, startingIndex, removalCount, arrayLength) {\r\n\t\t\t// adjust the properties\r\n\t\t\tvar i = startingIndex + removalCount\r\n\t\t\tvar arrayPosition\r\n\t\t\tif (removalCount > 0) {\r\n\t\t\t\tfor (var i = startingIndex + removalCount; i < arrayLength + removalCount; i++) {\r\n\t\t\t\t\tvar arrayPosition = variable[i]\r\n\t\t\t\t\tif (arrayPosition) {\r\n\t\t\t\t\t\tvariable[i] = undefined\r\n\t\t\t\t\t\tarrayPosition.key -= removalCount\r\n\t\t\t\t\t\tvariable[arrayPosition.key] = arrayPosition\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// send out updates\r\n\t\t\t\tfor (var i = 0; i < removalCount; i++) {\r\n\t\t\t\t\tvariable.updated(new DeleteEvent({\r\n\t\t\t\t\t\tpreviousIndex: startingIndex,\r\n\t\t\t\t\t\toldValue: removed[i],\r\n\t\t\t\t\t\tmodifier: variable\r\n\t\t\t\t\t}), variable)\r\n\t\t\t\t}\r\n\t\t\t\tvariable.cachedVersion = variable.version // update the cached version so it doesn't need to be recomputed\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tif (typeof Symbol !== 'undefined') {\r\n\t\t\tVariable.prototype[Symbol.iterator] = function() {\r\n\t\t\t\tvar iterator = this.valueOf()[Symbol.iterator]()\r\n\t\t\t\tvar variable = this\r\n\t\t\t\tvar collectionOf = this.collectionOf\r\n\t\t\t\tif (collectionOf) {\r\n\t\t\t\t\tvar parent = this\r\n\t\t\t\t\tvar i = 0\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tnext: function() {\r\n\t\t\t\t\t\t\tvar result = iterator.next()\r\n\t\t\t\t\t\t\tif (!result.done) {\r\n\t\t\t\t\t\t\t\tresult.value = variable.property(i++, collectionOf)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn result\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn iterator\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tvar VMap = Variable.VMap = lang.compose(Variable, function(value){\r\n\t\t\tthis.value = typeof value === 'undefined' ? this.default : value\r\n\t\t}, {\r\n\t\t\tfixed: true,\r\n\t\t\t// TODO: Move all the get and set functionality for maps out of Variable\r\n\t\t\tproperty: function(key, PropertyClass) {\r\n\t\t\t\tvar properties = this._properties || (this._properties = new Map())\r\n\t\t\t\tvar propertyVariable = properties.get(key)\r\n\t\t\t\tif (!propertyVariable) {\r\n\t\t\t\t\t// create the property variable\r\n\t\t\t\t\tpropertyVariable = new (PropertyClass || this.PropertyClass)()\r\n\t\t\t\t\tpropertyVariable.key = key\r\n\t\t\t\t\tpropertyVariable.parent = this\r\n\t\t\t\t\tif (propertyVariable.listeners) {\r\n\t\t\t\t\t\t// if it already has listeners, need to reinit it with the parent\r\n\t\t\t\t\t\tpropertyVariable.init()\r\n\t\t\t\t\t}\r\n\t\t\t\t\tproperties.set(key, propertyVariable)\r\n\t\t\t\t}\r\n\t\t\t\treturn propertyVariable\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\tvar Transform = Variable.Transform = lang.compose(Variable, function Transform(source, transform, sources) {\r\n\t\t\tif (source !== undefined || sources) {\r\n\t\t\t\tthis.source = source\r\n\t\t\t}\r\n\t\t\tif (transform) {\r\n\t\t\t\tthis.transform = transform\r\n\t\t\t\tif (sources) {\r\n\t\t\t\t\tfor (var i = 1, l = sources.length; i < l; i++) {\r\n\t\t\t\t\t\tthis['source' + i] = sources[i]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tgetValue: function(context, transformContext) {\r\n\t\t\t\t// first check to see if we have the variable already computed\r\n\t\t\t\tvar contextualizedVariable = context ? context.getContextualized(this) : this\r\n\t\t\t\tvar readyState = null\r\n\t\t\t\tif (contextualizedVariable) {\r\n\t\t\t\t\tif (contextualizedVariable.readyState == 'invalidated')\r\n\t\t\t\t\t\treadyState = contextualizedVariable.readyState = nextVersion.toString()\r\n\t\t\t\t\telse if (isFinite(contextualizedVariable.readyState)) {\r\n\t\t\t\t\t\t// will un-invalidate this later (contextualizedVariable.readyState = 'up-to-date')\r\n\t\t\t\t\t} else if (contextualizedVariable.listeners && contextualizedVariable.cachedVersion > -1) {\r\n\t\t\t\t\t\t// it is live, so we can shortcut and just return the cached value\r\n\t\t\t\t\t\tif (transformContext) {\r\n\t\t\t\t\t\t\ttransformContext.version = contextualizedVariable.cachedVersion\r\n\t\t\t\t\t\t\ttransformContext.contextualize(contextualizedVariable, context)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn contextualizedVariable.cachedValue\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!this.hasOwnProperty('source1') && context) {\r\n\t\t\t\t\t\t// TODO: Not sure if this is a helpful optimization or not\r\n\t\t\t\t\t\t// if we have a single source, we can use ifModifiedSince\r\n\t\t\t\t\t\t\t/*if (!contextualizedVariable && this.context && this.context.matches(context)) {\r\n\t\t\t\t\t\t\t\tcontextualizedVariable = this\r\n\t\t\t\t\t\t\t}*/\r\n\t\t\t\t\t}\r\n\t\t\t\t\treadyState = contextualizedVariable.readyState\r\n\t\t\t\t}\r\n\t\t\t\tif (!transformContext) {\r\n\t\t\t\t\ttransformContext = context ? context.newContext() : new Context()\r\n\t\t\t\t}\r\n\t\t\t\t// get the version in there\r\n\t\t \t\ttransformContext.nextProperty = 'transform'\r\n\t\t \t\tvar transform = this.transform && this.transform.valueOf(transformContext)\r\n\t\t\t\tvar args = []\r\n\t\t\t\tif (this.version) {\r\n\t\t\t\t\t// get the version in there\r\n\t\t\t\t\ttransformContext.hash(this.version)\r\n\t\t\t\t}\r\n\t\t\t\tif (contextualizedVariable && this.cachedVersion >= transformContext.version && contextualizedVariable.cachedVersion > -1 && !this.hasOwnProperty('source1')) {\r\n\t\t\t\t\ttransformContext.ifModifiedSince = contextualizedVariable.cachedVersion\r\n\t\t\t\t}\r\n\t\t\t\tvar argument, argumentName\r\n\t\t\t\tfor (var i = 0; (argument = this[argumentName = i > 0 ? 'source' + i : 'source']) || argumentName in this; i++) {\r\n\t\t\t\t\tif (transformContext) {\r\n\t\t\t\t\t\ttransformContext.nextProperty = argumentName\r\n\t\t\t\t\t}\r\n\t\t\t\t\targs[i] = argument && argument.valueOf(transformContext)\r\n\t\t\t\t}\r\n\t\t \t\tvar variable = this\r\n\t \t\t\treturn whenAll(args, function(resolved) {\r\n\t \t\t\t\tif (transformContext.ifModifiedSince !== undefined) {\r\n\t \t\t\t\t\ttransformContext.ifModifiedSince = undefined\r\n\t \t\t\t\t}\r\n\t\t\t\t\tvar contextualizedVariable = transformContext.contextualize(variable, context)\r\n\t\t\t\t\tvar version = transformContext.version\r\n\t\t\t\t\tif (contextualizedVariable && contextualizedVariable.cachedVersion === version) {\r\n\t\t\t\t\t\t// get it out of the cache\r\n\t\t\t\t\t\tcontextualizedVariable.readyState = 'up-to-date' // mark it as up-to-date now\r\n\t\t\t\t\t\tif (context && context.ifModifiedSince >= version && !contextualizedVariable.returnedVariable) {\r\n\t\t\t\t\t\t\treturn NOT_MODIFIED\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\treturn contextualizedVariable.cachedValue\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (resolved[0] == NOT_MODIFIED) {\r\n\t\t\t\t\t\tthrow new Error('A not-modified signal was passed to a transform, which usually means a version number was decreased (they must monotically increase), computed version' + version +\r\n\t\t\t\t\t\t\t' this variable version: ' + contextualizedVariable.version + ' cached version: ' +\r\n\t\t\t\t\t\t\tcontextualizedVariable.cachedVersion + ' ifModifiedSince: ' +\r\n\t\t\t\t\t\t\ttransformContext.ifModifiedSince +\r\n\t\t\t\t\t\t\t' source version: ' + contextualizedVariable.source.version +\r\n\t\t\t\t\t\t\t' source cached version: ' + contextualizedVariable.source.cachedVersion)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar result = transform ? transform.apply(variable, resolved) : resolved[0]\r\n\t\t\t\t\t// an empty ready state means it is up-to-date as well\r\n\t\t\t\t\tif (readyState == contextualizedVariable.readyState || readyState === null) {\r\n\t\t\t\t\t\tif (contextualizedVariable.readyState)\r\n\t\t\t\t\t\t\tcontextualizedVariable.readyState = 'up-to-date' // mark it as up-to-date now\r\n\t\t\t\t\t\t// cache it\r\n\t\t\t\t\t\tcontextualizedVariable.cachedVersion = transformContext.version\r\n\t\t\t\t\t\tcontextualizedVariable.cachedValue = result\r\n\t\t\t\t\t\tif (result && result.then) {\r\n\t\t\t\t\t\t\tresult.then(function() {\r\n\t\t\t\t\t\t\t\t// if it was a generator then the version could have been computed asynchronously as well\r\n\t\t\t\t\t\t\t\tcontextualizedVariable.cachedVersion = transformContext.version\r\n\t\t\t\t\t\t\t}, function() {\r\n\t\t\t\t\t\t\t\t// clear out the cache on an error\r\n\t\t\t\t\t\t\t\tcontextualizedVariable.cachedValue = null\r\n\t\t\t\t\t\t\t\tcontextualizedVariable.cachedVersion = 0\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn result\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tforDependencies: function(callback) {\r\n\t\t\t\t// depend on the args\r\n\t\t\t\tVariable.prototype.forDependencies.call(this, callback)\r\n\t\t\t\tvar argument, argumentName\r\n\t\t\t\tfor (var i = 0; (argument = this[argumentName = i > 0 ? 'source' + i : 'source']) || argumentName in this; i++) {\r\n\t\t\t\t\tif (argument && argument.notifies) {\r\n\t\t\t\t\t\tcallback(argument)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\tupdated: function(updateEvent, by, context, isDownstream) {\r\n\t\t\t\tthis.readyState = 'invalidated'\r\n\t\t\t\tif (by !== this.returnedVariable && updateEvent && updateEvent.type !== 'refresh') {\r\n\t\t\t\t\t// search for the output in the sources\r\n\t\t\t\t\tvar argument, argumentName\r\n\t\t\t\t\tfor (var i = 0; (argument = this[argumentName = i > 0 ? 'source' + i : 'source']) || argumentName in this; i++) {\r\n\t\t\t\t\t\tif (argument === by) {\r\n\t\t\t\t\t\t\t// if one of the args was updated, we need to do a full refresh (we can't compute differential events without knowledge of how the mapping function works)\r\n\t\t\t\t\t\t\tupdateEvent = new RefreshEvent()\r\n\t\t\t\t\t\t\tcontinue\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn Variable.prototype.updated.call(this, updateEvent, by, context, isDownstream)\r\n\t\t\t},\r\n\t\r\n\t\t\tgetUpdates: function(since) {\r\n\t\t\t\t// this always issues updates, nothing incremental can flow through it\r\n\t\t\t\tif (!since || since.version < getVersion()) {\r\n\t\t\t\t\treturn [new RefreshEvent()]\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\tgetArguments: function() {\r\n\t\t\t\tvar args = []\r\n\t\t\t\tvar argument, argumentName\r\n\t\t\t\tfor (var i = 0; (argument = this[argumentName = i > 0 ? 'source' + i : 'source']) || argumentName in this; i++) {\r\n\t\t\t\t\targs.push(argument)\r\n\t\t\t\t}\r\n\t\t\t\treturn args\r\n\t\t\t},\r\n\t\t\tput: function(value, context) {\r\n\t\t\t\tvar call = this\r\n\t\t\t\treturn when(this.valueOf(context), function(originalValue) {\r\n\t\t\t\t\tif (originalValue === value && typeof value != 'object') {\r\n\t\t\t\t\t\treturn noChange\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar transform = call.transform.valueOf(context)\r\n\t\t\t\t\tif (transform.reverse) {\r\n\t\t\t\t\t\t(transform.reverse).call(call, value, call.getArguments(), context)\r\n\t\t\t\t\t\tcall.updated(null, null, context)\r\n\t\t\t\t\t} else if (originalValue && originalValue.put) {\r\n\t\t\t\t\t\treturn originalValue.put(value)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvar error = new Error('Can not put value into a one-way transform, that lacks a reversal')\r\n\t\t\t\t\t\terror.deniedPut = true\r\n\t\t\t\t\t\tthrow error\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tsetReverse: function(reverse) {\r\n\t\t\t\tthis.transform.valueOf().reverse = reverse\r\n\t\t\t\treturn this\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\tvar Item = lang.compose(Variable, function Item(value, content) {\r\n\t\t\tthis.value = value\r\n\t\t\tthis.collection = content\r\n\t\t}, {})\r\n\t\r\n\t\tvar ContextualizedVariable = lang.compose(Variable, function ContextualizedVariable(generic, subject) {\r\n\t\t\tthis.generic = generic\r\n\t\t\tthis.subject = subject\r\n\t\t}, {\r\n\t\t\tvalueOf: function() {\r\n\t\t\t\t// TODO: Lookup Context type for all of these using registry or something\r\n\t\t\t\tvar subject = this.subject\r\n\t\t\t\treturn this.generic.valueOf(subject.getContextualized ? subject : new Context(subject))\r\n\t\t\t},\r\n\t\r\n\t\t\tforDependencies: function(callback) {\r\n\t\t\t\tthis.sources && this.sources.forEach(callback)\r\n\t\t\t},\r\n\t\r\n\t\t\tgetVersion: function() {\r\n\t\t\t\tvar version = Variable.prototype.getVersion.call(this)\r\n\t\t\t\tvar sources = this.sources || 0\r\n\t\t\t\tfor (var i = 0, l = sources.length; i < l; i++) {\r\n\t\t\t\t\tvar source = sources[i]\r\n\t\t\t\t\tif (source.getFullVersion) {\r\n\t\t\t\t\t\tversion = Math.max(version, source.getFullVersion())\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn version\r\n\t\t\t},\r\n\t\r\n\t\t\tput: function(value) {\r\n\t\t\t\tvar subject = this.subject\r\n\t\t\t\treturn this.generic.put(value, subject.getContextualized ? subject : new Context(subject))\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\tvar VArray = Variable.VArray = lang.compose(Variable, function VArray(value) {\r\n\t\t\treturn makeSubVar(this, value, VArray)\r\n\t\t}, {\r\n\t\t\t_isStrictArray: true,\r\n\t\t\t/* TODO: at some point, we might add support for length, but need to make it be dependent/notified by array changes\r\n\t\t\tget length() {\r\n\t\t\t\tif (typeof this !== 'function') {\r\n\t\t\t\t\tObject.defineProperty(this, 'length', {\r\n\t\t\t\t\t\tconfigurable: true\r\n\t\t\t\t\t})\r\n\t\t\t\t\treturn this.property('length')\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tset length(length) {\r\n\t\t\t\t// allow overriding\r\n\t\t\t\tObject.defineProperty(this, 'length', {\r\n\t\t\t\t\tvalue: length\r\n\t\t\t\t})\r\n\t\t\t},*/\r\n\t\t\tproperty: function(key, PropertyClass) {\r\n\t\t\t\treturn Variable.prototype.property.call(this, key, PropertyClass || typeof key === 'number' && this.collectionOf)\r\n\t\t\t},\r\n\t\t\tsplice: function(startingIndex, removalCount) {\r\n\t\t\t\tvar args = arguments\r\n\t\t\t\treturn arrayToModify(this, function(array) {\r\n\t\t\t\t\tif (startingIndex < 0) {\r\n\t\t\t\t\t\tstartingIndex = array.length + startingIndex\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar results = array.splice.apply(array, args)\r\n\t\t\t\t\tremovedAt(this, results, startingIndex, removalCount, array.length)\r\n\t\t\t\t\tinsertedAt(this, [].slice.call(args, 2), startingIndex, array.length)\r\n\t\t\t\t\treturn results\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tpush: function() {\r\n\t\t\t\tvar args = arguments\r\n\t\t\t\treturn arrayToModify(this, function(array) {\r\n\t\t\t\t\tvar results = array.push.apply(array, args)\r\n\t\t\t\t\tinsertedAt(this, args, array.length - args.length, array.length)\r\n\t\t\t\t\treturn results\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tunshift: function() {\r\n\t\t\t\tvar args = arguments\r\n\t\t\t\treturn arrayToModify(this, function(array) {\r\n\t\t\t\t\tvar results = array.unshift.apply(array, args)\r\n\t\t\t\t\tinsertedAt(this, args, 0, array.length)\r\n\t\t\t\t\treturn results\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tpop: function() {\r\n\t\t\t\treturn arrayToModify(this, function(array) {\r\n\t\t\t\t\tvar results = array.pop()\r\n\t\t\t\t\tremovedAt(this, [results], array.length, 1)\r\n\t\t\t\t\treturn results\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tshift: function() {\r\n\t\t\t\treturn arrayToModify(this, function(array) {\r\n\t\t\t\t\tvar results = array.shift()\r\n\t\t\t\t\tremovedAt(this, [results], 0, 1, array.length)\r\n\t\t\t\t\treturn results\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t\tVArray.of = function(collectionOf) {\r\n\t\t\tvar ArrayClass = VArray({collectionOf: collectionOf})\r\n\t\t\tif (this !== VArray) {\r\n\t\t\t\t// new operator\r\n\t\t\t\treturn new ArrayClass()\r\n\t\t\t}\r\n\t\t\treturn ArrayClass\r\n\t\t}\r\n\t\r\n\t\tfunction toArray(array) {\r\n\t\t\tif (!array) {\r\n\t\t\t\treturn []\r\n\t\t\t}\r\n\t\t\tif (array.length > -1) {\r\n\t\t\t\treturn array\r\n\t\t\t}\r\n\t\t\tvar newArray = []\r\n\t\t\tif (array.forEach) {\r\n\t\t\t\tarray.forEach(function(item) {\r\n\t\t\t\t\tnewArray.push(item)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\treturn newArray\r\n\t\t}\r\n\t\r\n\t\tvar getValue\r\n\t\tvar GeneratorVariable = lang.compose(Transform, function ReactiveGenerator(generator){\r\n\t\t\tthis.generator = generator\r\n\t\t}, {\r\n\t\t\ttransform: {\r\n\t\t\t\tvalueOf: function(context) {\r\n\t\t\t\t\tvar resuming\r\n\t\t\t\t\treturn next\r\n\t\t\t\t\tfunction next() {\r\n\t\t\t\t\t\tvar lastValue\r\n\t\t\t\t\t\tvar i\r\n\t\t\t\t\t\tvar generatorIterator\r\n\t\t\t\t\t\tvar isThrowing\r\n\t\t\t\t\t\tif (resuming) {\r\n\t\t\t\t\t\t\t// resuming from a promise\r\n\t\t\t\t\t\t\tgeneratorIterator = resuming.iterator\r\n\t\t\t\t\t\t\ti = resuming.i\r\n\t\t\t\t\t\t\tlastValue = resuming.value\r\n\t\t\t\t\t\t\tisThrowing = resuming.isThrowing\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (context) {\r\n\t\t\t\t\t\t\t\t// must restart the context, if the input values had previously been checked and hashed against this context, must restart them.\r\n\t\t\t\t\t\t\t\tcontext.restart()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ti = 0\r\n\t\t\t\t\t\t\tgeneratorIterator = this.generator()\r\n\t\t\t\t\t\t}\r\n\t\r\n\t\t\t\t\t\tdo {\r\n\t\t\t\t\t\t\tvar stepReturn = generatorIterator[isThrowing ? 'throw' : 'next'](lastValue)\r\n\t\t\t\t\t\t\tif (stepReturn.done) {\r\n\t\t\t\t\t\t\t\tvar oldSources = this.sources || []\r\n\t\t\t\t\t\t\t\tvar newLength = i\r\n\t\t\t\t\t\t\t\tvar newSources = []\r\n\t\t\t\t\t\t\t\twhile(this[argumentName = i > 0 ? 'source' + i : 'source']) {\r\n\t\t\t\t\t\t\t\t\t// clear out old properties\r\n\t\t\t\t\t\t\t\t\tthis[argumentName] = undefined\r\n\t\t\t\t\t\t\t\t\ti++\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tfor (i = 0; i < newLength; i++) {\r\n\t\t\t\t\t\t\t\t\t// create new array\r\n\t\t\t\t\t\t\t\t\tvar argumentName = i > 0 ? 'source' + i : 'source'\r\n\t\t\t\t\t\t\t\t\tif (this[argumentName] && this[argumentName].notifies) {\r\n\t\t\t\t\t\t\t\t\t\tnewSources.push(this[argumentName])\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tfor (i = 0; i < oldSources.length; i++) {\r\n\t\t\t\t\t\t\t\t\tif (newSources.indexOf(oldSources[i]) == -1) {\r\n\t\t\t\t\t\t\t\t\t\toldSources[i].stopNotifies(this)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tthis.sources = newSources\r\n\t\t\t\t\t\t\t\treturn stepReturn.value\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar nextVariable = stepReturn.value\r\n\t\t\t\t\t\t\t// compare with the arguments from the last\r\n\t\t\t\t\t\t\t// execution to see if they are the same\r\n\t\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\t\tvar argumentName = i > 0 ? 'source' + i : 'source'\r\n\t\t\t\t\t\t\t\tif (this[argumentName] !== nextVariable || this[argumentName] === undefined) {\r\n\t\t\t\t\t\t\t\t\t// subscribe if it is a variable\r\n\t\t\t\t\t\t\t\t\tif (nextVariable && nextVariable.notifies) {\r\n\t\t\t\t\t\t\t\t\t\tif (this.listeners) {\r\n\t\t\t\t\t\t\t\t\t\t\tnextVariable.notifies(this)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tthis[argumentName] = nextVariable\r\n\t\t\t\t\t\t\t\t\t} else if (typeof nextVariable === 'function' && isGenerator(nextVariable)) {\r\n\t\t\t\t\t\t\t\t\t\tresuming = {\r\n\t\t\t\t\t\t\t\t\t\t\ti: i,\r\n\t\t\t\t\t\t\t\t\t\t\titerator: nextVariable()\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tnext.call(this)\r\n\t\t\t\t\t\t\t\t\t\ti = resuming.i\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tthis[argumentName] = null\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\ti++\r\n\t\t\t\t\t\t\t\tif (context) {\r\n\t\t\t\t\t\t\t\t\tcontext.nextProperty = argumentName\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tlastValue = nextVariable && nextVariable.valueOf(context)\r\n\t\t\t\t\t\t\t\tif (lastValue && lastValue.then) {\r\n\t\t\t\t\t\t\t\t\t// if it is a promise, we will wait on it\r\n\t\t\t\t\t\t\t\t\tvar variable = this\r\n\t\t\t\t\t\t\t\t\tresuming = {\r\n\t\t\t\t\t\t\t\t\t\ti: i,\r\n\t\t\t\t\t\t\t\t\t\titerator: generatorIterator\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t// and return the promise so that the next caller can wait on this\r\n\t\t\t\t\t\t\t\t\treturn lastValue.then(function(value) {\r\n\t\t\t\t\t\t\t\t\t\tresuming.value = value\r\n\t\t\t\t\t\t\t\t\t\treturn next.call(variable)\r\n\t\t\t\t\t\t\t\t\t}, function(error) {\r\n\t\t\t\t\t\t\t\t\t\tresuming.value = error\r\n\t\t\t\t\t\t\t\t\t\tresuming.isThrowing = true\r\n\t\t\t\t\t\t\t\t\t\treturn next.call(variable)\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tisThrowing = false\r\n\t\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\t\tisThrowing = true\r\n\t\t\t\t\t\t\t\tlastValue = error\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} while(true)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\tvar Validating = lang.compose(Transform, function(source) {\r\n\t\t\tthis.source = source\r\n\t\t}, {\r\n\t\t\ttransform: function(target) {\r\n\t\t\t\tvar target = this.source\r\n\t\t\t\treturn target.validate(target, target.schema)\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\tfunction makeSubVar(instance, value, Type) {\r\n\t\t\tif (instance instanceof Variable) {\r\n\t\t\t\tVariable.call(instance, value)\r\n\t\t\t} else {\r\n\t\t\t\treturn Type.with(value)\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction objectUpdated(object) {\r\n\t\t\t// simply notifies any subscribers to an object, that it has changed\r\n\t\t\tvar listeners = propertyListenersMap.get(object)\r\n\t\t\tif (listeners) {\r\n\t\t\t\tfor (var i = 0, l = listeners.length; i < l; i++) {\r\n\t\t\t\t\tlisteners[i]._propertyChange(null, object)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tvar argsToArray = {\r\n\t\t\tapply: function(instance, args) {\r\n\t\t\t\treturn args\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction all(array, transform) {\r\n\t\t\t// This is intended to mirror Promise.all. It actually takes\r\n\t\t\t// an iterable, but for now we are just looking for array-like\r\n\t\t\tif (array instanceof Array) {\r\n\t\t\t\tif (array.length > 1000) {\r\n\t\t\t\t\t //throw new Error('too big')\r\n\t\t\t\t}\r\n\t\t\t\tif (array.length > 0 || typeof transform === 'function') {\r\n\t\t\t\t\t// TODO: Return VArray Transform\r\n\t\t\t\t\treturn new Transform(array[0], typeof transform === 'function' ? transform : argsToArray, array)\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn new VArray([])\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (arguments.length > 1) {\r\n\t\t\t\t// support multiple arguments as an array\r\n\t\t\t\treturn new Transform(arguments[0], argsToArray, arguments).as(VArray)\r\n\t\t\t}\r\n\t\t\tif (typeof array === 'object') {\r\n\t\t\t\t// allow an object as a hash to be mapped\r\n\t\t\t\tvar keyMapping = []\r\n\t\t\t\tvar valueArray = []\r\n\t\t\t\tfor (var key in array) {\r\n\t\t\t\t\tkeyMapping.push(key)\r\n\t\t\t\t\tvalueArray.push(array[key])\r\n\t\t\t\t}\r\n\t\t\t\treturn new Variable(function(results) {\r\n\t\t\t\t\tvar resultObject = {}\r\n\t\t\t\t\tfor (var i = 0; i < results.length; i++) {\r\n\t\t\t\t\t\tresultObject[keyMapping[i]] = results[i]\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn resultObject\r\n\t\t\t\t}).apply(null, valueArray)\r\n\t\t\t}\r\n\t\t\tthrow new TypeError('Variable.all requires an array')\r\n\t\t}\r\n\t\r\n\t\tfunction hasOwn(Target, createForInstance) {\r\n\t\r\n\t\t\tvar ownedClasses = this.ownedClasses || (this.ownedClasses = new WeakMap())\r\n\t\t\t// TODO: assign to super classes\r\n\t\t\tvar Class = this\r\n\t\t\townedClasses.set(Target, createForInstance || function() { return new Target() })\r\n\t\t\treturn this\r\n\t\t}\r\n\t\tfunction generalizeClass() {\r\n\t\t\tvar prototype = this.prototype\r\n\t\t\tvar prototypeNames = Object.getOwnPropertyNames(prototype)\r\n\t\t\tfor(var i = 0, l = prototypeNames.length; i < l; i++) {\r\n\t\t\t\tvar name = prototypeNames[i]\r\n\t\t\t\tObject.defineProperty(this, name, getGeneralizedDescriptor(Object.getOwnPropertyDescriptor(prototype, name), name, this))\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction getGeneralizedDescriptor(descriptor, name, Class) {\r\n\t\t\tif (typeof descriptor.value === 'function') {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: generalizeMethod(Class, name)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn descriptor\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction generalizeMethod(Class, name) {\r\n\t\t\t// I think we can just rely on `this`, but we could use the argument:\r\n\t\t\t// function(possibleEvent) {\r\n\t\t\t// \tvar target = possibleEvent && possibleEvent.target\r\n\t\t\tvar method = Class[name] = function() {\r\n\t\t\t\tvar instance = Class.for(this)\r\n\t\t\t\treturn instance[name].apply(instance, arguments)\r\n\t\t\t}\r\n\t\t\tmethod.for = function(context) {\r\n\t\t\t\tvar instance = Class.for(context)\r\n\t\t\t\treturn function() {\r\n\t\t\t\t\treturn instance[name].apply(instance, arguments)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn method\r\n\t\t}\r\n\t\r\n\t\tvar defaultContext = {\r\n\t\t\tname: 'Default context',\r\n\t\t\tdescription: 'This object is the default context for classes, corresponding to a singleton instance of that class',\r\n\t\t\tconstructor: {\r\n\t\t\t\tgetForClass: function(subject, Class) {\r\n\t\t\t\t\treturn Class.defaultInstance\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcontains: function() {\r\n\t\t\t\treturn true // contains everything\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction instanceForContext(Class, context) {\r\n\t\t\tif (!context) {\r\n\t\t\t\treturn Class.defaultInstance\r\n\t\t\t}\r\n\t\t\treturn context.specify(Class)\r\n\t//\t\tvar instance = context.subject.constructor.getForClass && context.subject.constructor.getForClass(context.subject, Class) || Class.defaultInstance\r\n\t//\t\tcontext.distinctSubject = mergeSubject(context.distinctSubject, instance.subject)\r\n\t//\t\treturn instance\r\n\t\t}\r\n\t\tVariable.valueOf = function(context) {\r\n\t\t\t// contextualized valueOf\r\n\t\t\treturn instanceForContext(this, context).valueOf(context)\r\n\t\t}\r\n\t\tVariable.getValue = function(context) {\r\n\t\t\t// contextualized getValue\r\n\t\t\treturn instanceForContext(this, context)\r\n\t\t}\r\n\t\tVariable.put = function(value, context) {\r\n\t\t\t// contextualized setValue\r\n\t\t\treturn instanceForContext(this, context).put(value, context)\r\n\t\t}\r\n\t\tVariable.for = function(subject) {\r\n\t\t\tif (subject != null) {\r\n\t\t\t\tif (subject.target && !subject.constructor.getForClass) {\r\n\t\t\t\t\t// makes HTML events work\r\n\t\t\t\t\tsubject = subject.target\r\n\t\t\t\t}\r\n\t\t\t\tvar instance\r\n\t\t\t\tinstance = new Context(subject).specify(this)\r\n\t\t\t\tif (instance && !instance.subject) {\r\n\t\t\t\t\tinstance.subject = subject\r\n\t\t\t\t}\r\n\t\t\t\t// TODO: Do we have a global context that we set on defaultInstance?\r\n\t\t\t\treturn instance || this.defaultInstance\r\n\t\t\t} else {\r\n\t\t\t\treturn this.defaultInstance\r\n\t\t\t}\r\n\t\t}\r\n\t\tVariable.from = function(value) {\r\n\t\t\tif (value && typeof value === 'object') {\r\n\t\t\t\t// a plain object, we use our own map to retrieve the instance (or create one)\r\n\t\t\t\tvar instanceMap = this.instanceMap || (this.instanceMap = new WeakMap())\r\n\t\t\t\tvar instance = instanceMap.get(value)\r\n\t\t\t\tif (!instance) {\r\n\t\t\t\t\tinstanceMap.set(value, instance = new this(value))\r\n\t\t\t\t}\r\n\t\t\t\treturn instance\r\n\t\t\t} else {\r\n\t\t\t\t// a primitive, just unconditionally create a new variable for it\r\n\t\t\t\treturn new this(value)\r\n\t\t\t}\r\n\t\t}\r\n\t\tVariable.notifies = function(target) {\r\n\t\t\tthis.defaultInstance.notifies(target)\r\n\t\t}\r\n\t\tVariable.stopNotifies = function(target) {\r\n\t\t\tthis.defaultInstance.stopNotifies(target)\r\n\t\t}\r\n\t\tVariable.getCollectionOf = function () {\r\n\t\t\treturn this.collectionOf\r\n\t\t}\r\n\t\tVariable.updated = function(updateEvent, by, context) {\r\n\t\t\treturn instanceForContext(this, context).updated(updateEvent, by, context)\r\n\t\t}\r\n\t\tvar proxyHandler = {\r\n\t\t\tget: function(target, name) {\r\n\t\t\t\tvar value = target[name]\r\n\t\t\t\treturn value === undefined ? target.property(name) : value\r\n\t\t\t},\r\n\t\t\tset: function(target, name, value) {\r\n\t\t\t\tvar oldValue = target[name]\r\n\t\t\t\tif (oldValue && oldValue.put) {\r\n\t\t\t\t\t// own property available to put into\r\n\t\t\t\t\toldValue.put(value)\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttarget.set(name, value)\r\n\t\t\t\t}\r\n\t\t\t\treturn true\r\n\t\t\t},\r\n\t\t\thas: function(target, name) {\r\n\t\t\t\treturn (name in target) || (name in target.valueOf())\r\n\t\t\t},\r\n\t\t\tdeleteProperty: function(target, name) {\r\n\t\t\t\treturn proxyHandler.set(target, name, undefined)\r\n\t\t\t},\r\n\t\t\townKeys: function(target) {\r\n\t\t\t\treturn Object.getOwnPropertyNames(target.valueOf())\r\n\t\t\t}\r\n\t\t}\r\n\t\tVariable.proxy = function(source) {\r\n\t\t\t// should we memoize?\r\n\t\t\treturn new Proxy(source instanceof this ? source : this.from(source), proxyHandler)\r\n\t\t}\r\n\t\tObject.defineProperty(Variable, 'collectionOf', {\r\n\t\t\tget: function() {\r\n\t\t\t\treturn this._collectionOf\r\n\t\t\t},\r\n\t\t\tset: function(ItemClass) {\r\n\t\t\t\tif (this._collectionOf != ItemClass) {\r\n\t\t\t\t\tthis._collectionOf = ItemClass\r\n\t\t\t\t\tItemClass.collection = this\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\tObject.defineProperty(Variable, 'collection', {\r\n\t\t\tget: function() {\r\n\t\t\t\treturn this._collection\r\n\t\t\t},\r\n\t\t\tset: function(Collection) {\r\n\t\t\t\tif (this._collection != Collection) {\r\n\t\t\t\t\tthis._collection = Collection\r\n\t\t\t\t\tCollection.collectionOf = this\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\tVariable.nextVersion = Date.now()\r\n\t\tVariable.generalize = generalizeClass\r\n\t\tVariable.call = Function.prototype.call // restore these\r\n\t\tVariable.apply = Function.prototype.apply\r\n\t\r\n\t\tfunction VFunction() {\r\n\t\t}\r\n\t\t(VFunction.returns = function(Type){\r\n\t\t\tfunction VFunction() {}\r\n\t\t\tVFunction.defineAs = function(method)\t{\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: function() {\r\n\t\t\t\t\t\tvar args = arguments\r\n\t\t\t\t\t\t// TODO: make these args part of the call so variables can be resolved\r\n\t\t\t\t\t\t// TODO: may actually want to do getValue().invoke()\r\n\t\t\t\t\t\treturn new Type(new Transform(this, function(value) {\r\n\t\t\t\t\t\t\t\treturn value == null ? undefined : value[method].apply(value, args)\r\n\t\t\t\t\t\t}))\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn VFunction\r\n\t\t})\r\n\t\r\n\t\tfunction VMethod() {\r\n\t\t}\r\n\t\tVMethod.defineAs = function(method) {\r\n\t\t\treturn {\r\n\t\t\t\tvalue: function() {\r\n\t\t\t\t\tvar args = arguments\r\n\t\t\t\t\t// TODO: make these args part of the call so variables can be resolved\r\n\t\t\t\t\t// TODO: may actually want to do getValue().invoke()\r\n\t\t\t\t\tvar variable = this\r\n\t\t\t\t\treturn when(this.valueOf(), function(value) {\r\n\t\t\t\t\t\tvar returnValue = value[method].apply(value, args)\r\n\t\t\t\t\t\treturn when(variable.put(value), function() {\r\n\t\t\t\t\t\t\treturn returnValue\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\t\t\r\n\t\t}\r\n\t\r\n\t\tfunction VString(value) {\r\n\t\t\treturn makeSubVar(this, typeof value === 'object' ? value : String(value), VString)\r\n\t\t}\r\n\t\r\n\t\tfunction VNumber(value) {\r\n\t\t\treturn makeSubVar(this, typeof value === 'object' ? value : Number(value), VNumber)\r\n\t\t}\r\n\t\t\r\n\t\tVString = Variable.with({\r\n\t\t\tcharAt: VFunction.returns(VString),\r\n\t\t\tcodeCharAt: VFunction.returns(VNumber),\r\n\t\t\tindexOf: VFunction.returns(VNumber),\r\n\t\t\tlastIndexOf: VFunction.returns(VNumber),\r\n\t\t\tmatch: VFunction.returns(VArray),\r\n\t\t\treplace: VFunction.returns(VString),\r\n\t\t\tsubstr: VFunction.returns(VString),\r\n\t\t\tslice: VFunction.returns(VString),\r\n\t\t\ttoUpperCase: VFunction.returns(VString),\r\n\t\t\ttoLowerCase: VFunction.returns(VString),\r\n\t\t\tlength: VNumber\r\n\t\t}, VString)\r\n\t\r\n\t\tVNumber = Variable.with({\r\n\t\t\ttoFixed: VFunction.returns(VString),\r\n\t\t\ttoExponential: VFunction.returns(VString),\r\n\t\t\ttoPrecision: VFunction.returns(VString),\r\n\t\t\ttoLocaleString: VFunction.returns(VString)\r\n\t\t}, VNumber)\r\n\t\r\n\t\tfunction VBoolean(value) {\r\n\t\t\treturn makeSubVar(this, typeof value === 'object' ? value : Boolean(value), VBoolean)\r\n\t\t}\r\n\t\tVBoolean = Variable.with({}, VBoolean)\r\n\t\r\n\t\tfunction VSet(value) {\r\n\t\t\treturn makeSubVar(this, value instanceof Array ? new Set(value) : value, VSet)\r\n\t\t}\r\n\t\tVSet = Variable.with({\r\n\t\t\thas: VFunction.returns(VBoolean),\r\n\t\t\tadd: VMethod,\r\n\t\t\tclear: VMethod,\r\n\t\t\tdelete: VMethod\r\n\t\t}, VSet)\r\n\t\tObject.defineProperty(VSet.prototype, 'array', {\r\n\t\t\tget: function() {\r\n\t\t\t\treturn this._array || (this._array = this.to(toArray).as(VArray))\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\tfunction VDate(value) {\r\n\t\t\treturn makeSubVar(this, typeof value === 'object' ? value : new Date(value), VDate)\r\n\t\t}\r\n\t\tVDate = Variable.with({\r\n\t\t\ttoDateString: VFunction.returns(VString),\r\n\t\t\ttoTimeString: VFunction.returns(VString),\r\n\t\t\ttoGMTString: VFunction.returns(VString),\r\n\t\t\ttoUTCString: VFunction.returns(VString),\r\n\t\t\tgetTime: VFunction.returns(VNumber),\r\n\t\t\tsetTime: VMethod\r\n\t\t}, VDate)\r\n\t\r\n\t\tvar VPromise = lang.compose(Variable, function VPromise(value) {\r\n\t\t\treturn makeSubVar(this, value, VPromise)\r\n\t\t}, {\r\n\t\t\tthen: function(onResolve, onError) {\r\n\t\t\t\t// short hand for this.valueOf().then()\r\n\t\t\t\tvar value = this.valueOf()\r\n\t\t\t\tif (value && value.then) {\r\n\t\t\t\t\treturn value.then(onResolve, onError)\r\n\t\t\t\t}\r\n\t\t\t\treturn onResolve(value)\r\n\t\t\t},\r\n\t\t})\r\n\t\r\n\t\tvar primitives = {\r\n\t\t\t'string': VString,\r\n\t\t\t'number': VNumber,\r\n\t\t\t'boolean': VBoolean\r\n\t\t}\r\n\t\tfunction getType(Type) {\r\n\t\t\tif (typeof Type === 'string') {\r\n\t\t\t\treturn primitives[Type]\r\n\t\t\t} else if (typeof Type === 'object') {\r\n\t\t\t\tif (Type instanceof Array) {\r\n\t\t\t\t\treturn VArray.of(getType(Type[0]))\r\n\t\t\t\t}\r\n\t\t\t\tvar typedObject = {}\r\n\t\t\t\tfor (var key in Type) {\r\n\t\t\t\t\ttypedObject[key] = getType(Type[key])\r\n\t\t\t\t}\r\n\t\t\t\treturn Variable.with(typedObject)\r\n\t\t\t}\r\n\t\t\treturn Type\r\n\t\t}\r\n\t\tvar exports = {\r\n\t\t\t__esModule: true,\r\n\t\t\tVariable: Variable,\r\n\t\t\tVArray: VArray,\r\n\t\t\tdefault: Variable,\r\n\t\t\tVString: VString,\r\n\t\t\tVNumber: VNumber,\r\n\t\t\tVBoolean: VBoolean,\r\n\t\t\tVPromise: VPromise,\r\n\t\t\tVDate: VDate,\r\n\t\t\tVSet: VSet,\r\n\t\t\tVMap: VMap,\r\n\t\t\tTransform: Transform,\r\n\t\t\tdeny: deny,\r\n\t\t\tnoChange: noChange,\r\n\t\t\tContext: Context,\r\n\t\t\tGeneratorVariable: GeneratorVariable,\r\n\t\t\tItem: Item,\r\n\t\t\tNotifyingContext: NotifyingContext,\r\n\t\t\tContext: Context,\r\n\t\t\tall: all,\r\n\t\t\tobjectUpdated: objectUpdated,\r\n\t\t\treactive: reactive,\r\n\t\t\tNOT_MODIFIED: NOT_MODIFIED\r\n\t\t}\r\n\t\tvar typeScriptConversions = new Map()\r\n\t\ttypeScriptConversions.set(Array, VArray)\r\n\t\ttypeScriptConversions.set(String, VString)\r\n\t\ttypeScriptConversions.set(Number, VNumber)\r\n\t\ttypeScriptConversions.set(Boolean, VBoolean)\r\n\t\tfunction reactive(target, key) { // for typescript decorators\r\n\t    var Type = Reflect.getMetadata('design:type', target, key)\r\n\t    console.log('Type', Type)\r\n\t    if (!Type.notifies) {\r\n\t    \tType = typeScriptConversions.get(Type) || Variable\r\n\t    }\r\n\t    Object.defineProperty(target, key, {\r\n\t      get: function() {\r\n\t      \treturn reactive.get(this, key, Type)\r\n\t      },\r\n\t      set: function(value) {\r\n\t      \treactive.set(this, key, value)\r\n\t      },\r\n\t      enumerable: true\r\n\t    })\r\n\t  }\r\n\t\treactive.get = function(target, key, Type) { // for babel decorators\r\n\t    var property = (target._properties || (target._properties = {}))[key]\r\n\t    if (!property) {\r\n\t      target._properties[key] = property = new (getType(Type))()\r\n\t      if (target.getValue) {\r\n\t        property.key = key\r\n\t        property.parent = target\r\n\t\t\t\t\tif (property.listeners) {\r\n\t\t\t\t\t\t// if it already has listeners, need to reinit it with the parent\r\n\t\t\t\t\t\tproperty.init()\r\n\t\t\t\t\t}\r\n\t      }\r\n\t    }\r\n\t    return property\r\n\t  }\r\n\t  reactive.set = function(target, key, value) {\r\n\t    var property = target[key]\r\n\t    property.parent ? property._changeValue(null, RequestSet, value) : property.put(value)\r\n\t  }\r\n\t\r\n\t\r\n\t\tvar IterativeMethod = lang.compose(Transform, function(source, method, args) {\r\n\t\t\tthis.source = source\r\n\t\t\t// source.interestWithin = true\r\n\t\t\tthis.method = method\r\n\t\t\tthis.arguments = args\r\n\t\t}, {\r\n\t\t\ttransform: function(array) {\r\n\t\t\t\tvar method = this.method\r\n\t\t\t\tvar isStrictArray = this.source && this.source._isStrictArray\r\n\t\t\t\tif (array && array.forEach) {\r\n\t\t\t\t\t// already an array\r\n\t\t\t\t\t//array = this._mappedItems(array)\r\n\t\t\t\t} else if (isStrictArray) {\r\n\t\t\t\t\tarray = []\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// if not an array convert to an array\r\n\t\t\t\t\tarray = [array]\r\n\t\t\t\t}\r\n\t\t\t\tif (typeof method === 'string') {\r\n\t\t\t\t\t// apply method\r\n\t\t\t\t\treturn array[method].apply(array, this.arguments)\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn method(array, this.arguments)\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t_mappedItems: function(array) {\r\n\t\t\t\tvar source = this.source\r\n\t\t\t\tvar collectionOf = source && source.collectionOf\r\n\t\t\t\treturn collectionOf ? array.map(function(item, i) {\r\n\t\t\t\t\tvar wrapped = collectionOf.from(item)\r\n\t\t\t\t\twrapped.collection = source\r\n\t\t\t\t\treturn wrapped\r\n\t\t\t\t}) : array\r\n\t\t\t},\r\n\t\r\n\t\t\tgetCollectionOf: function(){\r\n\t\t\t\treturn this.source.getCollectionOf()\r\n\t\t\t},\r\n\t\t\t_isStrictArray: true\r\n\t\t})\r\n\t\r\n\t\tfunction defineArrayMethod(method, constructor, properties, returns) {\r\n\t\t\tvar IterativeResults = lang.compose(returns ? returns.as(IterativeMethod) : IterativeMethod, constructor, properties)\r\n\t\t\tIterativeResults.prototype.method || (IterativeResults.prototype.method = method)\r\n\t\t\tObject.defineProperty(IterativeResults.prototype, 'isIterable', {value: true});\r\n\t\t\tVArray[method] = VArray.prototype[method] = function() {\r\n\t\t\t\tvar results = new IterativeResults(this)\r\n\t\t\t\tresults.source = this\r\n\t\t\t\tresults.arguments = arguments\r\n\t\t\t\treturn results\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tdefineArrayMethod('filter', function Filtered() {}, {\r\n\t\t\tupdated: function(event, by, context, isDownstream) {\r\n\t\t\t\tif (!event || event.modifier === this || (event.modifier && event.modifier.constructor === this)) {\r\n\t\t\t\t\treturn Transform.prototype.updated.call(this, event, by, context)\r\n\t\t\t\t}\r\n\t\t\t\tvar contextualizedVariable = context && context.getContextualized(this) || this\r\n\t\t\t\tif (event.type === 'delete') {\r\n\t\t\t\t\tvar index = contextualizedVariable.cachedValue.indexOf(event.oldValue)\r\n\t\t\t\t\tif (index > -1) {\r\n\t\t\t\t\t\tcontextualizedVariable.splice(index, 1)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (event.type === 'add') {\r\n\t\t\t\t\tif ([event.value].filter(this.arguments[0]).length > 0) {\r\n\t\t\t\t\t\tcontextualizedVariable.push(event.value)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (event.type === 'update') {\r\n\t\t\t\t\tvar object = event.parent.valueOf(context)\r\n\t\t\t\t\tvar index = contextualizedVariable.cachedValue.indexOf(object)\r\n\t\t\t\t\tvar matches = [object].filter(this.arguments[0]).length > 0\r\n\t\t\t\t\tif (index > -1) {\r\n\t\t\t\t\t\tif (matches) {\r\n\t\t\t\t\t\t\treturn new PropertyChangeEvent(index, event, contextualizedVariable.cachedValue,\r\n\t\t\t\t\t\t\t\t// might need to do something with this\r\n\t\t\t\t\t\t\t\tobject)\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcontextualizedVariable.splice(index, 1)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\telse {\r\n\t\t\t\t\t\tif (matches) {\r\n\t\t\t\t\t\t\tcontextualizedVariable.push(object)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// else nothing mactches\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn Transform.prototype.updated.call(this, event, by, context, isDownstream)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, VArray)\r\n\t\tdefineArrayMethod('map', function Mapped(source) {\r\n\t\t\tthis._isStrictArray = source._isStrictArray\r\n\t\t}, {\r\n\t\t\ttransform: function(array) {\r\n\t\t\t\tvar isStrictArray = this.source && this.source._isStrictArray\r\n\t\t\t\tvar mapFunction = this.arguments[0]\r\n\t\t\t\tif (array && array.map) {\r\n\t\t\t\t\tvar source = this.source\r\n\t\t\t\t\tvar collectionOf = source && source.collectionOf\r\n\t\t\t\t\treturn array.map(collectionOf ? function(item, i) {\r\n\t\t\t\t\t\treturn mapFunction(source.property(i), i)\r\n\t\t\t\t\t} : mapFunction)\r\n\t\t\t\t} else if (!isStrictArray) {\r\n\t\t\t\t\tif (method === 'map'){\r\n\t\t\t\t\t\t// fast path, and special behavior for map\r\n\t\t\t\t\t\treturn mapFunction(array)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn IterativeMethod.prototype.transform.call(this, array)\r\n\t\t\t},\r\n\t\t\tupdated: function(event, by, context, isDownstream) {\r\n\t\t\t\tif (!event || event.modifier === this || (event.modifier && event.modifier.constructor === this)) {\r\n\t\t\t\t\treturn Variable.prototype.updated.call(this, event, by, context)\r\n\t\t\t\t}\r\n\t\t\t\tvar contextualizedVariable = context && context.getContextualized(this) || this\r\n\t\t\t\tif (event.type === 'delete') {\r\n\t\t\t\t\tcontextualizedVariable.splice(event.previousIndex, 1)\r\n\t\t\t\t} else if (event.type === 'add') {\r\n\t\t\t\t\tvar array = contextualizedVariable.cachedValue\r\n\t\t\t\t\tcontextualizedVariable.push(this.arguments[0].call(this.arguments[1], this.source.property(array && array.length)))\r\n\t\t\t\t} else if (event.type === 'update') {\r\n\t\t\t\t\tif (this.getCollectionOf()) {\r\n\t\t\t\t\t\treturn // if it has typed items, we don't need to propagate update events, since they will be handled by the variable item.\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar object = event.parent.valueOf(context)\r\n\t\t\t\t\tvar array = contextualizedVariable.cachedValue\r\n\t\t\t\t\tvar index = event.key\r\n\t\t\t\t\tvar value = event.value\r\n\t\t\t\t\tif (index > -1) {\r\n\t\t\t\t\t\t// update was to an index property of this array variable\r\n\t\t\t\t\t\tvalue = object[index]\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// update was inside an object inside of our array\r\n\t\t\t\t\t\tindex = array && array.map && array.indexOf(object)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (index > -1) {\r\n\t\t\t\t\t\tcontextualizedVariable.splice(index, 1, this.arguments[0].call(this.arguments[1], this.source.property(index)))\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn Transform.prototype.updated.call(this, event, by, context, isDownstream)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn Transform.prototype.updated.call(this, event, by, context, isDownstream)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, VArray)\r\n\t\tdefineArrayMethod('reduce', function Reduced() {})\r\n\t\tdefineArrayMethod('reduceRight', function Reduced() {})\r\n\t\tdefineArrayMethod('some', function Aggregated() {}, {}, VBoolean)\r\n\t\tdefineArrayMethod('every', function Aggregated() {}, {}, VBoolean)\r\n\t\tdefineArrayMethod('slice', function Aggregated() {}, {}, VArray)\r\n\t\tdefineArrayMethod('keyBy', function UniqueIndex(source, args) {}, {\r\n\t\t\tproperty: VMap.prototype.property,\r\n\t\t\tmethod: function(array, args) {\r\n\t\t\t\tvar index = new Map()\r\n\t\t\t\tvar keyGenerator = args[0]\r\n\t\t\t\tvar valueGenerator = args[1]\r\n\t\t\t\tvar hasKeyFunction = typeof keyGenerator === 'function'\r\n\t\t\t\tvar hasValueFunction = typeof valueGenerator === 'function'\r\n\t\t\t\tvar hasKey = !!keyGenerator\r\n\t\t\t\tfor (var i = 0, l = array.length; i < l; i++) {\r\n\t\t\t\t\tvar element = array[i]\r\n\t\t\t\t\tindex.set(\r\n\t\t\t\t\t\thasKeyFunction ? keyGenerator(element, emit) :\r\n\t\t\t\t\t\t\thasKey ? element[keyGenerator] : element,\r\n\t\t\t\t\t\thasValueFunction ? valueGenerator(element) : element)\r\n\t\t\t\t}\r\n\t\t\t\tfunction emit(key, value) {\r\n\t\t\t\t\tindex.set(key, value)\r\n\t\t\t\t}\r\n\t\t\t\treturn index\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\tdefineArrayMethod('groupBy', function UniqueIndex(source, args) {}, {\r\n\t\t\tproperty: VMap.prototype.property,\r\n\t\t\tmethod: function(array, args) {\r\n\t\t\t\tvar index = new Map()\r\n\t\t\t\tvar keyGenerator = args[0]\r\n\t\t\t\tvar valueGenerator = args[1]\r\n\t\t\t\tvar hasKeyFunction = typeof keyGenerator === 'function'\r\n\t\t\t\tvar hasValueFunction = typeof valueGenerator === 'function'\r\n\t\t\t\tvar hasKey = !!keyGenerator\r\n\t\t\t\tfor (var i = 0, l = array.length; i < l; i++) {\r\n\t\t\t\t\tvar element = array[i]\r\n\t\t\t\t\tvar key = hasKeyFunction ? keyGenerator(element) :\r\n\t\t\t\t\t\t\thasKey ? element[keyGenerator] : element\r\n\t\t\t\t\tvar group = index.get(key)\r\n\t\t\t\t\tif (!group) {\r\n\t\t\t\t\t\tindex.set(key, group = [])\r\n\t\t\t\t\t}\r\n\t\t\t\t\tgroup.push(hasValueFunction ? valueGenerator(element) : element)\r\n\t\t\t\t}\r\n\t\t\t\tfunction emit(key, value) {\r\n\t\t\t\t\tvar group = index.get(key)\r\n\t\t\t\t\tif (!group) {\r\n\t\t\t\t\t\tindex.set(key, group = [])\r\n\t\t\t\t\t}\r\n\t\t\t\t\tgroup.push(value)\r\n\t\t\t\t}\r\n\t\t\t\treturn index\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\tvar getGeneratorDescriptor = Variable.getGeneratorDescriptor = function(value) {\r\n\t\t\tvar variables\r\n\t\t\treturn {\r\n\t\t\t\tget: function() {\r\n\t\t\t\t\tif (!variables) {\r\n\t\t\t\t\t\t variables = new WeakMap()\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar variable = variables.get(this)\r\n\t\t\t\t\tif (!variable) {\r\n\t\t\t\t\t\tvariables.set(this, variable = new GeneratorVariable(value.bind(this)))\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn variable\r\n\t\t\t\t},\r\n\t\t\t\tenumerable: true\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tVariable.all = all\r\n\t\tVariable.Context = Context\r\n\t\r\n\t\treturn exports\r\n\t}))\r\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) { if (true) {\r\n\t  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2), __webpack_require__(6), __webpack_require__(4)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) } else if (typeof module === 'object' && module.exports) {        \r\n\t  module.exports = factory(require('./util/lang'), require('./operators'), require('./Variable')) // Node\r\n\t}}(this, function (lang, operators, VariableExports) {\r\n\t\r\n\t  var Transform = VariableExports.Transform\r\n\t  var Variable = VariableExports.Variable\r\n\t  var isGenerator = lang.isGenerator\r\n\t  var ObjectTransform = lang.compose(Transform, function ObjectTransform(source, transform, sources) {\r\n\t    this.sources = sources\r\n\t    Transform.apply(this, arguments)\r\n\t  }, {\r\n\t    _getAsObject: function() {\r\n\t      return this.transform.apply(this, preserveObjects(this.sources))\r\n\t    }\r\n\t  })\r\n\t  function preserveObjects(sources) {\r\n\t    for (var i = 0, l = sources.length; i < l; i++) {\r\n\t      var source = sources[i]\r\n\t      if (source && source._getAsObject) {\r\n\t        sources[i] = source._getAsObject()\r\n\t      }\r\n\t    }\r\n\t    return sources\r\n\t  }\r\n\t\tfunction react(generator, options) {\r\n\t    if (typeof generator !== 'function') {\r\n\t      throw new Error('react() must be called with a generator. You need to use the babel-plugin-transform-alkali plugin if you want to use reactive expressions')\r\n\t    }\r\n\t\t\tif (options && options.reverse) {\r\n\t\t\t\tgenerator.reverse = options.reverse\r\n\t\t\t}\r\n\t\t\treturn new VariableExports.GeneratorVariable(generator)\r\n\t\t}\r\n\t  lang.copy(react, operators)\r\n\t  react.from = function(value, options) {\r\n\t    if (value && value.property) {\r\n\t      return value\r\n\t    }\r\n\t    if (typeof value === 'function' && isGenerator(value)) {\r\n\t      return react(value, options)\r\n\t    }\r\n\t    return Variable.from(value)\r\n\t  }\r\n\t  react.prop = function(object, property) {\r\n\t    if (object) {\r\n\t      // TODO: Use a static set of public methods/properties that can be accessed\r\n\t      if (object.property) {\r\n\t        // it is a variable already, but check to see if we are using a method/property directly on the variable\r\n\t        var directPropertyValue = object[property]\r\n\t        return directPropertyValue !== undefined ? directPropertyValue : object.property(property)\r\n\t      }\r\n\t      return object[property]\r\n\t    }\r\n\t    // not even truthy, return undefined\r\n\t  }\r\n\t  react.cond = function(test, consequent, alternate) {\r\n\t    return operators.if(test, operators.choose(consequent, alternate))\r\n\t  }\r\n\t  react.fcall = function(target, args) {\r\n\t    if (target.property && typeof target === 'function') {\r\n\t      return target.apply(null, preserveObjects(args))\r\n\t    }\r\n\t    return new Transform(args[0], target, args)\r\n\t  }\r\n\t  react.mcall = function(target, key, args) {\r\n\t    var method = target[key]\r\n\t    if (typeof method === 'function' && method.property || key === 'bind') {\r\n\t      // for now we check to see if looks like it could handle a variable, or is a bind call\r\n\t      return method.apply(target, preserveObjects(args))\r\n\t    }\r\n\t    return new Transform(args[0], target[key].bind(target), args)\r\n\t  }\r\n\t  react.ncall = function(target, args) {\r\n\t    if (target.property && typeof target === 'function') {\r\n\t      return new (target.bind.apply(target, [null].concat(preserveObjects(args))))()\r\n\t    }\r\n\t    return new Transform(args[0], function() {\r\n\t      return new (target.bind.apply(target, [null].concat(arguments)))()\r\n\t    }, args)\r\n\t  }\r\n\t\r\n\t  react.obj = function(transform, sources) {\r\n\t    return new ObjectTransform(sources[0], transform, sources)\r\n\t  }\r\n\t\r\n\t\treturn react\r\n\t}))\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) { if (true) {\r\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) } else if (typeof module === 'object' && module.exports) {        \r\n\t  module.exports = factory(require('./Variable')) // Node\r\n\t}}(this, function (VariableExports) {\r\n\t\r\n\t\tvar VBoolean = VariableExports.VBoolean\r\n\t\tvar VNumber = VariableExports.VNumber\r\n\t\tvar operatingFunctions = {};\r\n\t\tvar operators = {};\r\n\t\tfunction getOperatingFunction(expression){\r\n\t\t\t// jshint evil: true\r\n\t\t\treturn operatingFunctions[expression] ||\r\n\t\t\t\t(operatingFunctions[expression] =\r\n\t\t\t\t\tnew Function('a', 'b', 'return ' + expression));\r\n\t\t}\r\n\t\tfunction operator(operator, type, name, precedence, forward, reverseA, reverseB){\r\n\t\t\t// defines the standard operators\r\n\t\t\tvar reverse = function(output, inputs){\r\n\t\t\t\tvar a = inputs[0],\r\n\t\t\t\t\tb = inputs[1]\r\n\t\t\t\tvar firstError\r\n\t\t\t\tif(a && a.put){\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\treturn a.put(reverseA(output, b && b.valueOf()))\r\n\t\t\t\t\t} catch(error) {\r\n\t\t\t\t\t\tif (error.deniedPut) {\r\n\t\t\t\t\t\t\tfirstError = error\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthrow error\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(b && b.put){\r\n\t\t\t\t\tb.put(reverseB(output, a && a.valueOf()))\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow (firstError && firstError.message ? firstError : new Error('Can not assign change value to constant operators'))\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\t// define a function that can lazily ensure the operating function\r\n\t\t\t// is available\r\n\t\t\tvar operatorHandler = {\r\n\t\t\t\tapply: function(instance, args){\r\n\t\t\t\t\tforward = getOperatingFunction(forward);\r\n\t\t\t\t\treverseA = reverseA && getOperatingFunction(reverseA);\r\n\t\t\t\t\treverseB = reverseB && getOperatingFunction(reverseB);\r\n\t\t\t\t\tforward.reverse = reverse;\r\n\t\t\t\t\toperators[operator] = operatorHandler = new VariableExports.Variable(forward);\r\n\t\r\n\t\t\t\t\taddFlags(operatorHandler);\r\n\t\t\t\t\targs = Array.prototype.slice.call(args);\r\n\t\t\t\t\treturn operatorHandler.apply(instance, args);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tfunction addFlags(operatorHandler){\r\n\t\t\t\toperatorHandler.precedence = precedence;\r\n\t\t\t\toperatorHandler.infix = reverseB !== false;\r\n\t\t\t}\r\n\t\t\taddFlags(operatorHandler);\r\n\t\t\toperators[operator] = operatorHandler;\r\n\t\t\toperators[name] = function() {\r\n\t\t\t\tvar result = operatorHandler.apply(null, arguments)\r\n\t\t\t\treturn type ? result.as(type) : result\r\n\t\t\t}\r\n\t\t}\r\n\t\t// using order precedence from:\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\r\n\t\toperator('+', VNumber, 'add', 6, 'a+b', 'a-b', 'a-b');\r\n\t\toperator('-', VNumber, 'subtract', 6, 'a-b', 'a+b', 'b-a');\r\n\t\toperator('*', VNumber, 'multiply', 5, 'a*b', 'a/b', 'a/b');\r\n\t\toperator('/', VNumber, 'divide', 5, 'a/b', 'a*b', 'b/a');\r\n\t//\toperator('^', 7, 'a^b', 'a^(-b)', 'Math.log(a)/Math.log(b)');\r\n\t\toperator('?', null, 'if', 16, 'b[a?0:1]', 'a===b[0]||(a===b[1]?false:(function(){throw new Error()})())', '[a,b]');\r\n\t\toperator(':', null, 'choose', 15, '[a,b]', 'a[0]?a[1]:(function(){throw new Error()})()', 'a[1]');\r\n\t\toperator('!', VBoolean, 'not', 4, '!a', '!a', false);\r\n\t\toperator('%', VNumber, 'remainder', 5, 'a%b');\r\n\t\toperator('>', VBoolean, 'greater', 8, 'a>b');\r\n\t\toperator('>=', VBoolean, 'greaterOrEqual', 8, 'a>=b');\r\n\t\toperator('<', VBoolean, 'less', 8, 'a<b');\r\n\t\toperator('<=', VBoolean, 'lessOrEqual', 8, 'a<=b');\r\n\t\toperator('===', VBoolean, 'strictEqual', 9, 'a===b');\r\n\t\toperator('==', VBoolean, 'equal', 9, 'a==b');\r\n\t\toperator('&', VBoolean, 'and', 8, 'a&&b');\r\n\t\toperator('|', VBoolean, 'or', 8, 'a||b');\r\n\t\toperator('round', 'round', 8, 'Math.round(a*Math.pow(10,b||1))/Math.pow(10,b||1)', 'a', 'a');\r\n\t\treturn operators;\r\n\t}))\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) { if (true) {\r\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2), __webpack_require__(4)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) } else if (typeof module === 'object' && module.exports) {        \r\n\t  module.exports = factory(require('./util/lang'), require('./Variable')) // Node\r\n\t}}(this, function (lang, VariableExports) {\r\n\t\tvar Variable = VariableExports.Variable\r\n\t\t\r\n\t\tfunction deepCopy(source, target, derivativeMap) {\r\n\t\t\tif (source && typeof source == 'object') {\r\n\t\t\t\tif (source instanceof Array) {\r\n\t\t\t\t\ttarget = [] // always create a new array for array targets\r\n\t\t\t\t\tfor(var i = 0, l = source.length; i < l; i++) {\r\n\t\t\t\t\t\ttarget[i] = deepCopy(source[i], null, derivativeMap)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (!target || typeof target !== 'object') {\r\n\t\t\t\t\t\ttarget = derivativeMap && derivativeMap.get(source)\r\n\t\t\t\t\t\tif (!target) {\r\n\t\t\t\t\t\t\ttarget = {}\r\n\t\t\t\t\t\t\tderivativeMap && derivativeMap.set(source, target)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (var i in source) {\r\n\t\t\t\t\t\ttarget[i] = deepCopy(source[i], target[i], derivativeMap)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn target\r\n\t\t\t}\r\n\t\t\treturn source\r\n\t\t}\r\n\t\r\n\t\tvar Copy = lang.compose(Variable, function(copiedFrom) {\r\n\t\t\t// this is the variable that we derive from\r\n\t\t\tthis.copiedFrom = copiedFrom\r\n\t\t\tthis.derivativeMap = new lang.WeakMap(null, 'derivative')\r\n\t\t\tthis.isDirty = new Variable(false)\r\n\t\t}, {\r\n\t\t\tgetValue: function(context) {\r\n\t\t\t\tif(this.state) {\r\n\t\t\t\t\tthis.state = null\r\n\t\t\t\t}\r\n\t\t\t\tvar value = this.copiedFrom.valueOf(context)\r\n\t\t\t\tif(value && typeof value == 'object') {\r\n\t\t\t\t\tvar derivative = this.derivativeMap.get(value)\r\n\t\t\t\t\tif (derivative == null) {\r\n\t\t\t\t\t\tthis.derivativeMap.set(value, derivative = deepCopy(value, undefined, this.derivativeMap))\r\n\t\t\t\t\t\tthis.setValue(derivative, context)\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn derivative\r\n\t\t\t\t}\r\n\t\t\t\tif(this.value === undefined) {\r\n\t\t\t\t\treturn value\r\n\t\t\t\t}\r\n\t\t\t\treturn this.value\r\n\t\t\t},\r\n\t\t\tgetCopyOf: function(value) {\r\n\t\t\t\tvar derivative = this.derivativeMap.get(value)\r\n\t\t\t\tif (derivative == null) {\r\n\t\t\t\t\tthis.derivativeMap.set(value, derivative = deepCopy(value, undefined, this.derivativeMap))\r\n\t\t\t\t}\r\n\t\t\t\treturn derivative\r\n\t\t\t},\r\n\t\t\tsave: function() {\r\n\t\t\t\t// copy back to the original object\r\n\t\t\t\tvar original = this.copiedFrom.valueOf()\r\n\t\t\t\tvar newCopiedFrom = deepCopy(this.valueOf(), original)\r\n\t\t\t\tif (this.copiedFrom.put) { // copiedFrom doesn't have to be a variable, it can be a plain object\r\n\t\t\t\t\t// assign it now\r\n\t\t\t\t\tthis.copiedFrom.put(newCopiedFrom)\r\n\t\t\t\t}\r\n\t\t\t\tthis.isDirty.put(false)\r\n\t\t\t\tthis.onSave && this.onSave()\r\n\t\t\t},\r\n\t\t\trevert: function() {\r\n\t\t\t\tvar original = this.copiedFrom.valueOf()\r\n\t\t\t\tthis.derivativeMap = new lang.WeakMap(null, 'derivative') // clear out the mapping, so we can start fresh\r\n\t\t\t\tthis.put(deepCopy(original, undefined, this.derivativeMap))\r\n\t\t\t\tthis.isDirty.put(false)\r\n\t\t\t},\r\n\t\t\tupdated: function() {\r\n\t\t\t\tthis.isDirty.put(true)\r\n\t\t\t\treturn Variable.prototype.updated.apply(this, arguments)\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn Copy\r\n\t}))\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** index.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 568c25c9aa6571e3ec24\n **/","/// <reference path=\"./typings.d.ts\" />\r\n(function (root, factory) { if (typeof define === 'function' && define.amd) {\r\n  define(['./Element', './Renderer', './react', './Copy', './operators', './Variable', './util/lang'], factory) } else if (typeof module === 'object' && module.exports) {        \r\n  module.exports = factory(require('./Element'), require('./Renderer'), require('./react'), require('./Copy'), require('./operators'), require('./Variable'), require('./util/lang')) // Node\r\n}}(this, function (Element, Renderer, react, Copy, operators, VariableExports, lang) {\r\n\r\n\tvar main = Object.create(Element)\r\n\tmain.Copy = Copy\r\n\tmain.Element = Element\r\n\tlang.copy(main, VariableExports)\r\n\tmain.react = react\r\n\tmain.spawn = lang.spawn\r\n\tmain.Renderer = Renderer.ElementRenderer\r\n\tlang.copy(main, Renderer)\r\n\tlang.copy(main, operators)\r\n\tmain.default = undefined // no default export\r\n\treturn main\r\n}))\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./index.js\n ** module id = 0\n ** module chunks = 0\n **/","(function (root, factory) { if (typeof define === 'function' && define.amd) {\r\n\tdefine(['./util/lang', './Renderer', './Variable'], factory) } else if (typeof module === 'object' && module.exports) {        \r\n  module.exports = factory(require('./util/lang'), require('./Renderer'), require('./Variable')) // Node\r\n}}(this, function (lang, Renderer, VariableExports) {\r\n\tvar Variable = VariableExports.Variable\r\n\tvar knownElementProperties = [\r\n\t\t'textContent', // Node\r\n\t\t'id', 'className', 'innerHTML', // Element\r\n\t\t'title', 'lang', 'translate', 'dir', 'tabIndex', 'accessKey', 'draggable', 'spellcheck', 'contentEditable', 'innerText', 'webkitdropzone'] // HTMLElement\r\n\r\n\tvar SELECTOR_REGEX = /^(\\.|#)([-\\w]+)(.+)?/\r\n\tvar isGenerator = lang.isGenerator\r\n\tvar Context = VariableExports.Context\r\n\tvar PropertyRenderer = Renderer.PropertyRenderer\r\n\tvar InputPropertyRenderer = Renderer.InputPropertyRenderer\r\n\tvar AttributeRenderer = Renderer.AttributeRenderer\r\n\tvar StyleRenderer = lang.compose(Renderer.StyleRenderer, function StyleRenderer() {\r\n\t\tRenderer.StyleRenderer.apply(this, arguments)\r\n\t}, {\r\n\t\trenderUpdate: function(newValue, element) {\r\n\t\t\tvar definition = styleDefinitions[this.name]\r\n\t\t\tif (definition) {\r\n\t\t\t\tdefinition(element, newValue, this.name)\r\n\t\t\t} else {\r\n\t\t\t\telement.style[this.name] = newValue\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\n\tvar ClassNameRenderer = lang.compose(Renderer.ElementRenderer, function ClassNameRenderer(options) {\r\n\t\tthis.className = options.className\r\n\t\tRenderer.apply(this, arguments)\r\n\t}, {\r\n\t\trenderUpdate: function(newValue, element) {\r\n\t\t\tvar currentClassName = element.className\r\n\t\t\tvar changingClassName = this.className\r\n\t\t\t// remove the className (needed for addition or removal)\r\n\t\t\t// see http://jsperf.com/remove-class-name-algorithm/2 for some tests on this\r\n\t\t\tvar removed = currentClassName && (' ' + currentClassName + ' ').replace(' ' + changingClassName + ' ', ' ')\r\n\t\t\tif (newValue) {\r\n\t\t\t\t// addition, add the className\r\n\t\t\t\tchangingClassName = currentClassName ? (removed + changingClassName).slice(1) : changingClassName;\r\n\t\t\t} else {\r\n\t\t\t\t// we already have removed the class, just need to trim\r\n\t\t\t\tchangingClassName = removed.slice(1, removed.length - 1)\r\n\t\t\t}\r\n\t\t\t// only assign if it changed, this can save a lot of time\r\n\t\t\tif (changingClassName != currentClassName) {\r\n\t\t\t\telement.className = changingClassName\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\n\t// TODO: check for renderContent with text updater\r\n\tvar TextRenderer = Renderer.TextRenderer\r\n\tvar ListRenderer = Renderer.ListRenderer\r\n\r\n\tvar doc = typeof document !== 'undefined' ? document : {\r\n\t\tcreateElement: function(tag) {\r\n\t\t\treturn {}\r\n\t\t},\r\n\t\taddEventListener: function() {\r\n\t\t}\r\n\t}\r\n\r\n\tvar inputs = {\r\n\t\tINPUT: 1,\r\n\t\tTEXTAREA: 1\r\n\t\t// SELECT: 1, we exclude this, so the default \"content\" of the element can be the options\r\n\t}\r\n\r\n\tvar buggyConstructorSetter = false\r\n\tvar testElement = doc.createElement('font')\r\n\tvar originalConstructor = testElement.constructor\r\n\ttestElement.constructor = function(){}\r\n\tif (doc.createElement('font').constructor == testElement.constructor) {\r\n\t\t// In safari, setting the constructor can actually assign it at the prototype level, instead of at the instance\r\n\t\ttestElement.__proto__.constructor = originalConstructor // restore the original constructor\r\n\t\tbuggyConstructorSetter = true\r\n\t}\r\n\r\n\r\n\tfunction booleanStyle(options) {\r\n\t\treturn function(element, value, key) {\r\n\t\t\tif (typeof value !== 'string') {\r\n\t\t\t\t// use the boolean conversion\r\n\t\t\t\tvalue = options[value ? 0 : 1]\r\n\t\t\t}\r\n\t\t\telement.style[key] = value\r\n\t\t}\r\n\t}\r\n\r\n\tfunction defaultStyle(element, value, key) {\r\n\t\tif (typeof value === 'number') {\r\n\t\t\tvalue = value + 'px'\r\n\t\t}\r\n\t\telement.style[key] = value\r\n\t}\r\n\tfunction directStyle(element, value, key) {\r\n\t\telement.style[key] = value\r\n\t}\r\n\r\n\tvar styleDefinitions = {\r\n\t\tdisplay: booleanStyle(['', 'none']),\r\n\t\tvisibility: booleanStyle(['visible', 'hidden']),\r\n\t\tcolor: directStyle,\r\n\t\topacity: directStyle,\r\n\t\tzoom: directStyle,\r\n\t\tminZoom: directStyle,\r\n\t\tmaxZoom: directStyle,\r\n\t\tfontWeight: directStyle,\r\n\t\tposition: booleanStyle(['absolute', '']),\r\n\t\ttextDecoration: booleanStyle(['underline', '']),\r\n\t\tfontWeight: directStyle // numbers are allowed here (TODO: eventually allow booleans too)\r\n\t}\r\n\t;[\"alignContent\",\"alignItems\",\"alignSelf\",\"animation\",\"animationDelay\",\"animationDirection\",\"animationDuration\",\"animationFillMode\",\"animationIterationCount\",\"animationName\",\"animationPlayState\",\"animationTimingFunction\",\"backfaceVisibility\",\"background\",\"backgroundAttachment\",\"backgroundBlendMode\",\"backgroundClip\",\"backgroundColor\",\"backgroundImage\",\"backgroundOrigin\",\"backgroundPosition\",\"backgroundPositionX\",\"backgroundPositionY\",\"backgroundRepeat\",\"backgroundRepeatX\",\"backgroundRepeatY\",\"backgroundSize\",\"baselineShift\",\"border\",\"borderBottom\",\"borderBottomColor\",\"borderBottomLeftRadius\",\"borderBottomRightRadius\",\"borderBottomStyle\",\"borderBottomWidth\",\"borderCollapse\",\"borderColor\",\"borderImage\",\"borderImageOutset\",\"borderImageRepeat\",\"borderImageSlice\",\"borderImageSource\",\"borderImageWidth\",\"borderLeft\",\"borderLeftColor\",\"borderLeftStyle\",\"borderLeftWidth\",\"borderRadius\",\"borderRight\",\"borderRightColor\",\"borderRightStyle\",\"borderRightWidth\",\"borderSpacing\",\"borderStyle\",\"borderTop\",\"borderTopColor\",\"borderTopLeftRadius\",\"borderTopRightRadius\",\"borderTopStyle\",\"borderTopWidth\",\"borderWidth\",\"bottom\",\"boxShadow\",\"boxSizing\",\"bufferedRendering\",\"captionSide\",\"clear\",\"clip\",\"clipPath\",\"clipRule\",\"color\",\"colorInterpolation\",\"colorInterpolationFilters\",\"colorRendering\",\"counterIncrement\",\"counterReset\",\"cursor\",\"direction\",\"display\",\"emptyCells\",\"fill\",\"fillOpacity\",\"fillRule\",\"filter\",\"flex\",\"flexBasis\",\"flexDirection\",\"flexFlow\",\"flexGrow\",\"flexShrink\",\"flexWrap\",\"float\",\"floodColor\",\"floodOpacity\",\"font\",\"fontFamily\",\"fontFeatureSettings\",\"fontKerning\",\"fontSize\",\"fontStretch\",\"fontStyle\",\"fontVariant\",\"fontVariantLigatures\",\"fontWeight\",\"height\",\"imageRendering\",\"isolation\",\"justifyContent\",\"left\",\"letterSpacing\",\"lightingColor\",\"lineHeight\",\"listStyle\",\"listStyleImage\",\"listStylePosition\",\"listStyleType\",\"margin\",\"marginBottom\",\"marginLeft\",\"marginRight\",\"marginTop\",\"marker\",\"markerEnd\",\"markerMid\",\"markerStart\",\"mask\",\"maskType\",\"maxHeight\",\"maxWidth\",\"maxZoom\",\"minHeight\",\"minWidth\",\"minZoom\",\"mixBlendMode\",\"motion\",\"motionOffset\",\"motionPath\",\"motionRotation\",\"objectFit\",\"objectPosition\",\"opacity\",\"order\",\"orientation\",\"orphans\",\"outline\",\"outlineColor\",\"outlineOffset\",\"outlineStyle\",\"outlineWidth\",\"overflow\",\"overflowWrap\",\"overflowX\",\"overflowY\",\"padding\",\"paddingBottom\",\"paddingLeft\",\"paddingRight\",\"paddingTop\",\"page\",\"pageBreakAfter\",\"pageBreakBefore\",\"pageBreakInside\",\"paintOrder\",\"perspective\",\"perspectiveOrigin\",\"pointerEvents\",\"position\",\"quotes\",\"resize\",\"right\",\"shapeImageThreshold\",\"shapeMargin\",\"shapeOutside\",\"shapeRendering\",\"size\",\"speak\",\"src\",\"stopColor\",\"stopOpacity\",\"stroke\",\"strokeDasharray\",\"strokeDashoffset\",\"strokeLinecap\",\"strokeLinejoin\",\"strokeMiterlimit\",\"strokeOpacity\",\"strokeWidth\",\"tabSize\",\"tableLayout\",\"textAlign\",\"textAlignLast\",\"textAnchor\",\"textCombineUpright\",\"textDecoration\",\"textIndent\",\"textOrientation\",\"textOverflow\",\"textRendering\",\"textShadow\",\"textTransform\",\"top\",\"touchAction\",\"transform\",\"transformOrigin\",\"transformStyle\",\"transition\",\"transitionDelay\",\"transitionDuration\",\"transitionProperty\",\"transitionTimingFunction\",\"unicodeBidi\",\"unicodeRange\",\"userZoom\",\"vectorEffect\",\"verticalAlign\",\"visibility\",\"whiteSpace\",\"widows\",\"width\",\"willChange\",\"wordBreak\",\"wordSpacing\",\"wordWrap\",\"writingMode\",\"zIndex\",\"zoom\"].forEach(function(property) {\r\n\t\tstyleDefinitions[property] = styleDefinitions[property] || defaultStyle\r\n\t})\r\n\tvar styleSheet\r\n\tvar presumptiveParentMap = new WeakMap()\r\n\r\n\tvar setPrototypeOf = Object.setPrototypeOf || (function(base, proto) { base.__proto__ = proto})\r\n\tvar getPrototypeOf = Object.getPrototypeOf || (function(base) { return base.__proto__ })\r\n\tfunction createCssRule(selector) {\r\n\t\tif (!styleSheet) {\r\n\t\t\tvar styleSheetElement = doc.createElement(\"style\")\r\n\t\t\tstyleSheetElement.setAttribute(\"type\", \"text/css\")\r\n//\t\t\tstyleSheet.appendChild(doc.createTextNode(css))\r\n\t\t\tdoc.head.insertBefore(styleSheetElement, doc.head.firstChild)\r\n\t\t\tstyleSheet = styleSheetElement.sheet\r\n\t\t}\r\n\t\tvar cssRules = styleSheet.cssRules || styleSheet.rules\r\n\t\treturn cssRules[styleSheet.addRule(selector, ' ', cssRules.length)]\r\n\t}\r\n\r\n\t// TODO: Need to do some more testing to see if that would improve performance:\r\n\t// var fragmentThresholdHeuristic = (typeof navigator !== 'undefined' && navigator.userAgent.indexOf('Chrome') > 0) ? 1 : 3\r\n\r\n\tfunction layoutChildren(parent, children, container, prepend) {\r\n\t\tvar fragment = (children.length > 1 || prepend) ? doc.createDocumentFragment() : parent\r\n\t\tfor(var i = 0, l = children.length; i < l; i++) {\r\n\t\t\tvar child = children[i]\r\n\t\t\tvar childNode\r\n\t\t\tif (child != null) { // we just skip nulls and undefined, helps make it easier to write conditional element logic\r\n\t\t\t\tif (child.create) {\r\n\t\t\t\t\t// an element constructor\r\n\t\t\t\t\tcurrentParent = parent\r\n\t\t\t\t\tchildNode = child.create()\r\n\t\t\t\t\tfragment.appendChild(childNode)\r\n\t\t\t\t\tif (child.isContentNode) {\r\n\t\t\t\t\t\tcontainer.contentNode = childNode\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (child.notifies) {\r\n\t\t\t\t\t// a variable\r\n\t\t\t\t\tvar ref = child.isIterable ? fragment : parent\r\n\t\t\t\t\tfragment.appendChild(childNode = variableAsContent(ref, child))\r\n\t\t\t\t} else if (typeof child == 'object') {\r\n\t\t\t\t\tif (child instanceof Array) {\r\n\t\t\t\t\t\t// array of sub-children\r\n\t\t\t\t\t\tcontainer = container || parent\r\n\t\t\t\t\t\tchildNode = childNode || parent\r\n\t\t\t\t\t\tlayoutChildren(childNode.contentNode || childNode, child, container)\r\n\t\t\t\t\t} else if (child.nodeType) {\r\n\t\t\t\t\t\t// an element itself\r\n\t\t\t\t\t\tfragment.appendChild(childNode = child)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// TODO: apply properties to last child, but with binding to the parent (for events)\r\n\t\t\t\t\t\tthrow new Error('Unknown child type ' + child)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// a primitive value\r\n\t\t\t\t\tchildNode = doc.createTextNode(child)\r\n\t\t\t\t\tfragment.appendChild(childNode)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (fragment != parent) {\r\n\t\t\tif (prepend) {\r\n\t\t\t\tparent.insertBefore(fragment, parent.firstChild)\r\n\t\t\t} else {\r\n\t\t\t\tparent.appendChild(fragment)\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn childNode\r\n\t}\r\n\tfunction variableAsContent(parent, content) {\r\n\t\tif (content == null) {\r\n\t\t\treturn doc.createTextNode('')\r\n\t\t}\r\n\t\tvar textNode\r\n\t\tif (content.notifies) {\r\n\t\t\ttextNode = doc.createTextNode('')\r\n\t\t\tvar renderer = new TextRenderer({\r\n\t\t\t\telement: parent,\r\n\t\t\t\ttextNode: textNode,\r\n\t\t\t\tvariable: content\r\n\t\t\t})\r\n\t\t\ttextNode = renderer.textNode // it can be swapped for another node\r\n\t\t} else {\r\n\t\t\ttextNode = doc.createTextNode(content)\r\n\t\t}\r\n\t\treturn textNode\r\n\t}\r\n\r\n\tfunction bidirectionalHandler(element, value, key) {\r\n\t\tif (value && value.notifies) {\r\n\t\t\tnew InputPropertyRenderer({\r\n\t\t\t\tname: key,\r\n\t\t\t\tvariable: value,\r\n\t\t\t\telement: element\r\n\t\t\t})\r\n\t\t\tif (inputs[element.tagName] || element.tagName === 'SELECT') {\r\n\t\t\t\tbindChanges(element, value, key)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (element.tagName === 'SELECT' && key === 'value') {\r\n\t\t\t\t// use the deferred <select> value assignment\r\n\t\t\t\tInputPropertyRenderer.prototype.renderSelectValueUpdate(value, element)\r\n\t\t\t} else {\r\n\t\t\t\tif (element.type === 'number') {\r\n\t\t\t\t\tif (isNaN(value)) {\r\n\t\t\t\t\t\tvalue = ''\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telement[key] = value\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction noop() {}\r\n\tvar propertyHandlers = {\r\n\t\tchildren: noop,\r\n\t\ttagName: noop,\r\n\t\t_generators: noop,\r\n\t\tclasses: function(element, classes) {\r\n\t\t\tif (!(classes.length > -1)) {\r\n\t\t\t\t// index the classes, if necessary\r\n\t\t\t\tvar i = 0\r\n\t\t\t\tfor (var key in classes) {\r\n\t\t\t\t\tif (!classes[i]) {\r\n\t\t\t\t\t\tclasses[i] = key\r\n\t\t\t\t\t}\r\n\t\t\t\t\ti++\r\n\t\t\t\t}\r\n\t\t\t\tclasses.length = i\r\n\t\t\t}\r\n\t\t\tfor (var i = 0, l = classes.length; i < l; i++) {\r\n\t\t\t\t// find each class name\r\n\t\t\t\tvar className = classes[i]\r\n\t\t\t\tvar flag = classes[className]\r\n\t\t\t\tif (flag && flag.notifies) {\r\n\t\t\t\t\t// if it is a variable, we react to it\r\n\t\t\t\t\tnew ClassNameRenderer({\r\n\t\t\t\t\t\telement: element,\r\n\t\t\t\t\t\tclassName: className,\r\n\t\t\t\t\t\tvariable: flag\r\n\t\t\t\t\t})\r\n\t\t\t\t} else if (flag || flag === undefined) {\r\n\t\t\t\t\telement.className += ' ' + className\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tclass: applyAttribute,\r\n\t\tfor: applyAttribute, // TODO: move to label?\r\n\t\trole: applyAttribute,\r\n\t\trender: function(element, value, key, properties) {\r\n\t\t\t// TODO: This doesn't need to be a property updater (is in place for *render())\r\n\t\t\t// we should also verify it is a generator\r\n\t\t\t// and maybe, at some point, find an optimization to eliminate the bind()\r\n\t\t\tnew PropertyRenderer({\r\n\t\t\t\tname: key,\r\n\t\t\t\tvariable: new VariableExports.GeneratorVariable(value.bind(element, properties)),\r\n\t\t\t\telement: element\r\n\t\t\t})\r\n\t\t},\r\n\t\tdataset: applySubProperties(function(newValue, element, key) {\r\n\t\t\telement.dataset[key || this.name] = newValue\r\n\t\t}),\r\n\t\tattributes: applySubProperties(function(newValue, element, key) {\r\n\t\t\telement.setAttribute(key || this.name, newValue)\r\n\t\t}),\r\n\t\tstyle: function(element, value, key) {\r\n\t\t\tif (typeof value === 'string') {\r\n\t\t\t\telement.setAttribute('style', value)\r\n\t\t\t} else if (value && value.notifies) {\r\n\t\t\t\tnew AttributeRenderer({\r\n\t\t\t\t\tname: 'style',\r\n\t\t\t\t\tvariable: value,\r\n\t\t\t\t\telement: element\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tstyleObjectHandler(element, value, key)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tknownElementProperties.forEach(function(property) {\r\n\t\tpropertyHandlers[property] = true\r\n\t})\r\n\tif (typeof HTMLElement !== 'undefined') {\r\n\t\tHTMLElement.prototype._propertyHandlers = propertyHandlers // inherit this, at least for now\r\n\t}\r\n\tvar elementPropertyHandlers = {\r\n\t\tinput: lang.copy(['accept', 'alt', 'autocomplete', 'autofocus', 'capture', 'defaultChecked', 'dirName', 'disabled', 'form', 'files', 'formAction', 'formEnctype', 'formMethod', 'formNoValidate', 'formTarget', 'indeterminate', 'inputMode', 'list', 'max', 'maxLength', 'min', 'minLength', 'multiple', 'name', 'pattern', 'placeholder', 'readOnly', 'required', 'size', 'src', 'step', 'type', 'defaultValue', 'willValidate', 'validity', 'validationMessage', 'useMap', 'autocapitalize', 'webkitdirectory', 'incremental', 'stepUp', 'stepDown'], {\r\n\t\t\tvalue: bidirectionalHandler,\r\n\t\t\tvalueAsNumber: bidirectionalHandler,\r\n\t\t\tvalueAsDate: bidirectionalHandler,\r\n\t\t\tchecked: bidirectionalHandler,\r\n\t\t\ttype: function(element, value) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\telement.type = value\r\n\t\t\t\t} catch(e) {\r\n\t\t\t\t\t// IE 11 will throw an error here\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}),\r\n\t\tselect: lang.copy(['name', 'size', 'type', 'selectedIndex', 'validationMessage'], {\r\n\t\t\tvalue: bidirectionalHandler\r\n\t\t}),\r\n\t\ttextarea: lang.copy(['cols', 'dirName', 'maxLength', 'minLength', 'name', 'placeholder', 'rows', 'wrap', 'type', 'defaultValue', 'textLength', 'validationMessage', 'autocapitalize'], {\r\n\t\t\tvalue: bidirectionalHandler\r\n\t\t}),\r\n\t\ta: ['target', 'download', 'ping', 'rel', 'hreflang', 'type', 'referrerPolicy', 'href', 'media'],\r\n\t\tarea: ['target', 'download', 'coords', 'rel', 'hreflang', 'type', 'referrerPolicy', 'href', 'media', 'alt', 'shape'],\r\n\t\tbutton: ['formAction', 'formEnctype', 'formMethod', 'formTarget', 'name', 'type', 'value', 'validationMessage'],\r\n\t\tdialog: ['open'],\r\n\t\tembed: ['src', 'type', 'name'],\r\n\t\tform: ['acceptCharset', 'action', 'autocomplete', 'enctype', 'encoding', 'method', 'name', 'target', 'novalidate'],\r\n\t\tframe: ['name', 'scrolling', 'src', 'frameBorder'],\r\n\t\tframeset: ['cols', 'rows'],\r\n    iframe: ['src', 'srcdoc', 'name', 'referrerPolicy', 'align', 'scrolling', 'frameBorder', 'longDesc'],\r\n    img: ['src', 'alt', 'crossorigin', 'ismap', 'longdesc', 'sizes', 'srcset', 'usemap', 'referrerpolicy'],\r\n    option: ['label', 'value', 'text', 'index'],\r\n    optgroup: ['label'],\r\n    output: ['name', 'type', 'defaultValue', 'value', 'validationMessage'],\r\n    label: ['htmlFor'],\r\n    td: ['colSpan', 'rowSpan'],\r\n    th: ['colSpan', 'rowSpan'],\r\n    script: ['src', 'type', 'charset', 'text', 'event', 'htmlFor', 'integrity'],\r\n    style: ['media', 'type'],\r\n    track: ['kind', 'src', 'srclang', 'label'],\r\n    link: ['href', 'rel', 'media', 'hreflang', 'type', 'charset', 'rev', 'target', 'integrity', 'as'],\r\n    meta: ['name', 'httpEquiv', 'content', 'scheme'],\r\n    meter: ['value', 'min', 'max', 'low', 'high', 'optimum'],\r\n    progress: ['value', 'max', 'position'],\r\n    del: ['cite', 'dateTime'],\r\n    ins: ['cite', 'dateTime'],\r\n    source: ['src', 'type', 'srcset', 'sizes', 'media'],\r\n    video: ['videoWidth', 'videoHeight', 'poster', 'webkitDecodedFrameCount', 'webkitDroppedFrameCount'],\r\n    keygen: ['challenge', 'keytype', 'name', 'type', 'validationMessage'],\r\n    object: ['data', 'type', 'name', 'useMap', 'validationMessage', 'archive', 'code', 'hspace', 'standby', 'vspace', 'codeBase', 'codeType'],\r\n    param: ['name', 'value', 'type', 'valueType']\r\n\t}\r\n\r\n\tfunction applyAttribute(element, value, key) {\r\n\t\tif (value && value.notifies) {\r\n\t\t\tnew AttributeRenderer({\r\n\t\t\t\tname: key,\r\n\t\t\t\tvariable: value,\r\n\t\t\t\telement: element\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\telement.setAttribute(key, value)\r\n\t\t}\r\n\t}\r\n\r\n\tvar styleObjectHandler = applySubProperties(function(newValue, element, key) {\r\n\t\telement.style[key || this.name] = newValue\r\n\t})\r\n\r\n\tfunction applySubProperties(renderer) {\r\n\t\tvar SubPropertyRenderer = lang.compose(PropertyRenderer, function SubPropertyRenderer(options) {\r\n\t\t\tPropertyRenderer.apply(this, arguments)\r\n\t\t}, {\r\n\t\t\trenderUpdate: renderer\r\n\t\t})\r\n\t\treturn function(element, value, key) {\r\n\t\t\tfor (var subKey in value) {\r\n\t\t\t\tvar subValue = value[subKey]\r\n\t\t\t\tif (subValue && subValue.notifies) {\r\n\t\t\t\t\tnew SubPropertyRenderer({\r\n\t\t\t\t\t\tname: subKey,\r\n\t\t\t\t\t\tvariable: subValue,\r\n\t\t\t\t\t\telement: element\r\n\t\t\t\t\t})\r\n\t\t\t\t} else {\r\n\t\t\t\t\trenderer(subValue, element, subKey)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction assignProperties(element, properties) {\r\n\t\tvar propertyHandlers = element._propertyHandlers\r\n\t\tvar Element = element.constructor\r\n\t\tfor (var key in properties) {\r\n\t\t\tvar value = properties[key]\r\n\t\t\tvar VariableClass = Element[key]\r\n\t\t\tif (typeof VariableClass === 'function' && VariableClass.notifies && VariableClass !== value) {\r\n\t\t\t\thasOwn(Element, VariableClass)\r\n\t\t\t\t// if (value instanceof VariableClass) { TODO: assign the value as the owned instance\r\n\t\t\t\tVariableClass.for(element).put(value)\r\n\t\t\t}\r\n\t\t\tvar styleDefinition\r\n\t\t\tvar propertyHandler = propertyHandlers[key]\r\n\t\t\tif (propertyHandler) {\r\n\t\t\t\tif (propertyHandler === true) {\r\n\t\t\t\t\tif (value && value.notifies) {\r\n\t\t\t\t\t// a standard, known element property\r\n\t\t\t\t\t\tnew PropertyRenderer({\r\n\t\t\t\t\t\t\tname: key,\r\n\t\t\t\t\t\t\tvariable: value,\r\n\t\t\t\t\t\t\telement: element\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\telement[key] = value\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpropertyHandler(element, value, key, properties)\r\n\t\t\t\t}\r\n\t\t\t} else if ((styleDefinition = styleDefinitions[key])) {\r\n\t\t\t\tif (value && value.notifies) {\r\n\t\t\t\t\tnew StyleRenderer({\r\n\t\t\t\t\t\tname: key,\r\n\t\t\t\t\t\tvariable: value,\r\n\t\t\t\t\t\telement: element\r\n\t\t\t\t\t})\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstyleDefinition(element, value, key)\r\n\t\t\t\t}\r\n\t\t\t} else if (element[key] == null) {\r\n\t\t\t\t// we are working an unknown/unstandard property (or an event listener)\r\n\t\t\t\t// undefined or null means we can safely set\r\n\t\t\t\t// TODO: we may want to do the event listener check first so we can handle oncustomevent (that needs an addEventListener call to work)\r\n\t\t\t\telement[key] = value\r\n\t\t\t} else if (typeof value === 'function' && key.slice(0, 2) === 'on') {\r\n\t\t\t\t// event listener with one already defined on the prototype\r\n\t\t\t\telement.addEventListener(key.slice(2), value)\r\n\t\t\t} else {\r\n\t\t\t\t// otherwise bypass/override the native getter/setter\r\n\t\t\t\tObject.defineProperty(element, key, {\r\n\t\t\t\t\tvalue: value,\r\n\t\t\t\t\tenumerable: true,\r\n\t\t\t\t\tconfigurable: true,\r\n\t\t\t\t\twritable: true\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction assignGenerators(element, properties) {\r\n\t\tvar generators = properties._generators\r\n\t\tvar customGenerators\r\n\t\tvar styleGenerators\r\n\t\tvar nativeGenerators\r\n\t\tvar propertyHandlers = element._propertyHandlers\r\n\t\tfor (var key in generators) {\r\n\t\t\tvar variable = new VariableExports.GeneratorVariable(generators[key].bind(element, properties))\r\n\t\t\tif (propertyHandlers[key]) {\r\n\t\t\t\t(nativeGenerators || (nativeGenerators = {}))[key] = variable\r\n\t\t\t} else if (styleDefinitions[key]) {\r\n\t\t\t\t(styleGenerators || (styleGenerators = {}))[key] = variable\r\n\t\t\t} else {\r\n\t\t\t\t(customGenerators || (customGenerators = {}))[key] = variable\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (customGenerators) {\r\n\t\t\t// custom ones must go first\r\n\t\t\tassignProperties(element, customGenerators)\r\n\t\t}\r\n\t\tif (styleGenerators) {\r\n\t\t\tassignProperties(element, styleGenerators)\r\n\t\t}\r\n\t\tif (nativeGenerators) {\r\n\t\t\t// native ones must come last so they can access custom ones\r\n\t\t\tassignProperties(element, nativeGenerators)\r\n\t\t}\r\n\t}\r\n\r\n\tfunction buildContent(element, content, key, properties) {\r\n\t\tvar each = element.each || properties.each\r\n\t\tif (each && content) {\r\n\t\t\t// render as list\r\n\t\t\tif (each.create) {\r\n\t\t\t\teach.defineHasOwn = function () {\r\n\t\t\t\t\tvar ItemClass = content.getCollectionOf && content.getCollectionOf() || Item\r\n\t\t\t\t\thasOwn(each, ItemClass, function (element) {\r\n\t\t\t\t\t\tvar itemVariable = ItemClass.from(element._item)\r\n\t\t\t\t\t\treturn itemVariable\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (content.notifies) {\r\n\t\t\t\tnew ListRenderer({\r\n\t\t\t\t\teach: each,\r\n\t\t\t\t\tvariable: content,\r\n\t\t\t\t\telement: element\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tvar fragment = doc.createDocumentFragment()\r\n\t\t\t\tif (each.defineHasOwn) {\r\n\t\t\t\t\teach.defineHasOwn()\r\n\t\t\t\t}\r\n\t\t\t\tcontent.forEach(function(item) {\r\n\t\t\t\t\tif (each.create) {\r\n\t\t\t\t\t\tchildElement = each.create({parent: element, _item: item}) // TODO: make a faster object here potentially\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tchildElement = each(item, element)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfragment.appendChild(childElement)\r\n\t\t\t\t})\r\n\t\t\t\telement.appendChild(fragment)\r\n\t\t\t}\r\n\t\t} else if (inputs[element.tagName]) {\r\n\t\t\t// render into input\r\n\t\t\tbuildInputContent(element, content)\r\n\t\t} else if (content instanceof Array) {\r\n\t\t\t// treat array as children (potentially of the content node)\r\n\t\t\telement = element.contentNode || element\r\n\t\t\tlayoutChildren(element, content, element)\r\n\t\t} else {\r\n\t\t\t// render as string\r\n\t\t\telement.appendChild(variableAsContent(element, content))\r\n\t\t}\r\n\t}\r\n\r\n\tfunction bindChanges(element, variable, key, conversion) {\r\n\t\tlang.nextTurn(function() { // wait for next turn in case inputChanges isn't set yet\r\n\t\t\tvar inputEvents = element.inputEvents || ['change', 'alkali-change']\r\n\t\t\tfor (var i = 0, l = inputEvents.length; i < l; i++) {\r\n\t\t\t\telement.addEventListener(inputEvents[i], function (event) {\r\n\t\t\t\t\tvar value = element[key]\r\n\t\t\t\t\tvar result = variable.put(conversion ? conversion(value, element) : value, new Context(element))\r\n\t\t\t\t\tif (result === VariableExports.deny) {\r\n\t\t\t\t\t\tthrow new Error('Variable change denied')\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tdoc.addEventListener('click', function(event) {\r\n\t\tvar target = event.target\r\n\t\tif (target.type === 'radio') {\r\n\t\t\tvar radios = doc.querySelectorAll('input[type=radio]')\r\n\t\t\tfor (var i = 0, l = radios.length; i < l; i++) {\r\n\t\t\t\tvar radio = radios[i]\r\n\t\t\t\tif (radio.name === target.name && radio !== target) {\r\n\t\t\t\t\tradio.dispatchEvent(new Event('alkali-change', {}))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\n\tfunction conversion(value, element) {\r\n\t\tif (element.type == 'number') {\r\n\t\t\treturn parseFloat(value)\r\n\t\t}\r\n\t\treturn value\r\n\t}\r\n\r\n\tfunction buildInputContent(element, content) {\r\n\t\tvar inputType = element.type\r\n\t\tvar inputProperty = inputType in {date: 1, datetime: 1, time: 1} ?\r\n\t\t\t\t'valueAsDate' : (inputType === 'checkbox' || inputType === 'radio') ?\r\n\t\t\t\t\t'checked' : 'value'\r\n\r\n\t\tif (content && content.notifies) {\r\n\t\t\t// a variable, respond to changes\r\n\t\t\tnew InputPropertyRenderer({\r\n\t\t\t\tvariable: content,\r\n\t\t\t\tname: inputProperty,\r\n\t\t\t\telement: element\r\n\t\t\t})\r\n\t\t\t// and bind the other way as well, updating the variable in response to input changes\r\n\t\t\tbindChanges(element, content, inputProperty, conversion)\r\n\t\t} else {\r\n\t\t\t// primitive\r\n\t\t\telement[inputProperty] = content\r\n\t\t}\r\n\t}\r\n\r\n\tfunction mergeObject(Element, value, key, properties) {\r\n\t\tvar existing = properties[key]\r\n\t\tif (existing) {\r\n\t\t\tfor (var subKey in value) {\r\n\t\t\t\texisting[subKey] = value[subKey]\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tproperties[key] = value\r\n\t\t}\r\n\t}\r\n\r\n\tvar classHandlers = {\r\n\t\tclasses: mergeObject,\r\n\t\t_generators: mergeObject,\r\n\t\tdataset: mergeObject,\r\n\t\tattributes: mergeObject,\r\n\t\tstyle: mergeObject,\r\n\t\thasOwn: function(Element, value) {\r\n\t\t\thasOwn(Element, value)\r\n\t\t},\r\n\t\tchildren: function(Element, value) {\r\n\t\t\tElement.children = value\r\n\t\t},\r\n\t\tshadow: function(Element, value) {\r\n\t\t\tElement.shadow = value\r\n\t\t}\r\n\t}\r\n\r\n\tfunction applyToConstructor(argument, Element) {\r\n\t\tvar applyOnCreate = Element._applyOnCreate\r\n\t\tif (argument && typeof argument === 'object') {\r\n\t\t\tif (argument instanceof Array || argument.notifies) {\r\n\t\t\t\tapplyOnCreate.content = argument\r\n\t\t\t} else {\r\n\t\t\t\tfor (var key in argument) {\r\n\t\t\t\t// TODO: eventually we want to be able to set these as rules statically per element\r\n\t\t\t\t/*if (styleDefinitions[key]) {\r\n\t\t\t\t\tvar styles = Element.styles || (Element.styles = [])\r\n\t\t\t\t\tstyles.push(key)\r\n\t\t\t\t\tstyles[key] = descriptor.value\r\n\t\t\t\t} else {*/\r\n\t\t\t\t\tvar value = argument[key]\r\n\t\t\t\t\tvar VariableClass = Element[key]\r\n\t\t\t\t\tif (typeof value === 'function') {\r\n\t\t\t\t\t\tif (value.notifies) {\r\n\t\t\t\t\t\t\tif (value === Variable) {\r\n\t\t\t\t\t\t\t\tvalue = Variable() // create a branded variable if we are using a generic one\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// for Variable classes we make them statically available on the element\r\n\t\t\t\t\t\t\tElement[key] = value\r\n\t\t\t\t\t\t} else if (isGenerator(value)) {\r\n\t\t\t\t\t\t\tif (key.slice(0, 4) === 'get_') {\r\n\t\t\t\t\t\t\t\tkey = key.slice(4)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t(applyOnCreate._generators || (applyOnCreate._generators = {}))[key] = value\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (value && value.notifies) {\r\n\t\t\t\t\t\t// also store any variables as statically available properties\r\n\t\t\t\t\t\tElement[key] = value\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (classHandlers[key]) { // Could eliminate this if we got rid of hasOwn\r\n\t\t\t\t\t\tclassHandlers[key](Element, value, key, applyOnCreate)\r\n\t\t\t\t\t} else if (typeof VariableClass === 'function' && VariableClass.notifies) {\r\n\t\t\t\t\t\tapplyOnCreate[key] = new VariableClass(value)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tapplyOnCreate[key] = value\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (typeof argument === 'function' && !argument.for) {\r\n\t\t\tthrow new TypeError('Function as argument not supported')\r\n\t\t} else {\r\n\t\t\tapplyOnCreate.content = argument\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getApplySet(Class) {\r\n\t\tif (Class.hasOwnProperty('_applyOnCreate')) {\r\n\t\t\treturn Class._applyOnCreate\r\n\t\t}\r\n\t\t// this means we didn't extend and evaluate the prototype yet\r\n\t\tif (Class.getForClass) {\r\n\t\t\t// we are extending an alkali constructor\r\n\t\t\t// if this class is inheriting from an alkali constructor, work our way up the chain\r\n\t\t\tvar applyOnCreate = Class._applyOnCreate = {}\r\n\t\t\tvar parentApplySet = getApplySet(getPrototypeOf(Class))\r\n\t\t\tfor (var key in parentApplySet) {\r\n\t\t\t\tapplyOnCreate[key] = classHandlers[key] ? Object.create(parentApplySet[key]) : parentApplySet[key]\r\n\t\t\t}\r\n\t\t\t// we need to check the prototype for event handlers\r\n\t\t\tvar prototype = Class.prototype\r\n\t\t\tvar propertyHandlers\r\n\t\t\tvar keys = Object.getOwnPropertyNames(prototype)\r\n\t\t\tfor (var i = 0, l = keys.length; i < l; i++) {\r\n\t\t\t\tvar key = keys[i]\r\n\t\t\t\tif (key.slice(0, 2) === 'on' || (key === 'render' && isGenerator(prototype[key]))) {\r\n\t\t\t\t\tapplyOnCreate[key] = prototype[key]\r\n\t\t\t\t} else if (key.slice(0, 6) === 'render') {\r\n\t\t\t\t\tvar propertyName = key[6].toLowerCase() + key.slice(7)\r\n\t\t\t\t\tif (!propertyHandlers) {\r\n\t\t\t\t\t\tpropertyHandlers = prototype._propertyHandlers = Object.create(prototype._propertyHandlers)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpropertyHandlers[propertyName] = true // TODO: is it better to implement this with property handlers?\r\n\t\t\t\t\tObject.defineProperty(prototype, propertyName, renderDescriptor(key))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn applyOnCreate\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\tfunction renderDescriptor(renderMethod) {\r\n\t\tvar map = new WeakMap()\r\n\t\treturn {\r\n\t\t\tget: function() {\r\n\t\t\t\treturn map.has(this) ? map.get(this) : null\r\n\t\t\t},\r\n\t\t\tset: function(value) {\r\n\t\t\t\tmap.set(this, value)\r\n\t\t\t\tthis[renderMethod](value)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction makeElementConstructor() {\r\n\t\tfunction Element(selector, properties) {\r\n\t\t\tif (this instanceof Element){\r\n\t\t\t\t// create DOM element\r\n\t\t\t\t// Need to detect if we have registered the element and `this` is actually already the correct instance\r\n\t\t\t\treturn create.apply(Element.prototype === getPrototypeOf(this) ? Element :// this means it is from this constructor\r\n\t\t\t\t\tthis.constructor, // this means it was constructed from a subclass\r\n\t\t\t\t\targuments)\r\n\t\t\t} else {\r\n\t\t\t\t// extend to create new class\r\n\t\t\t\treturn withProperties.apply(Element, arguments)\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn Element\r\n\t}\r\n\r\n\tfunction withProperties(selector, properties) {\r\n\t\tvar Element = makeElementConstructor()\r\n\t\tif (this.with) {\r\n\t\t\t// TODO: Might consider only doing this for derivatives of derivatives, since we don't need to inherit from base constructors\r\n\t\t\t// or only doing this in the case of element having custom properties (could mark it with a flag)\r\n\t\t\tsetPrototypeOf(Element, this)\r\n\t\t\tElement.ownedClasses = null\r\n\t\t} else {\r\n\t\t\tElement.create = create\r\n\t\t\tElement.with = withProperties\r\n\t\t\tElement.for = forTarget\r\n\t\t\tElement.property = propertyForElement\r\n\t\t\tElement.getForClass = getForClass\r\n\t\t}\r\n\t\tElement.prototype = this.prototype\r\n\r\n\t\tvar applyOnCreate = Element._applyOnCreate = {}\r\n\t\tvar parentApplySet = getApplySet(this)\r\n\t\t// copy parent properties\r\n\t\tfor (var key in parentApplySet) {\r\n\t\t\tapplyOnCreate[key] = classHandlers[key] ? Object.create(parentApplySet[key]) : parentApplySet[key]\r\n\t\t}\r\n\r\n\t\tvar i = 0 // for arguments\r\n\t\tif (typeof selector === 'string') {\r\n\t\t\tvar selectorMatch = selector.match(SELECTOR_REGEX)\r\n\t\t\tif (selectorMatch) {\r\n\t\t\t\tdo {\r\n\t\t\t\t\tvar operator = selectorMatch[1]\r\n\t\t\t\t\tvar name = selectorMatch[2]\r\n\t\t\t\t\tif (operator == '.') {\r\n\t\t\t\t\t\tif (applyOnCreate.className) {\r\n\t\t\t\t\t\t\tapplyOnCreate.className += ' ' + name\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tapplyOnCreate.className = name\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tapplyOnCreate.id = name\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar remaining = selectorMatch[3]\r\n\t\t\t\t\tselectorMatch = remaining && remaining.match(SELECTOR_REGEX)\r\n\t\t\t\t} while (selectorMatch)\r\n\t\t\t} else {\r\n\t\t\t\tapplyOnCreate.content = selector\r\n\t\t\t}\r\n\t\t\ti++ // skip the first argument\r\n\t\t}\r\n\r\n\t\tfor (var l = arguments.length; i < l; i++) {\r\n\t\t\tapplyToConstructor(arguments[i], Element)\r\n\t\t}\r\n\t\treturn Element\r\n\t}\r\n\tvar currentParent\r\n\tfunction create(selector, properties) {\r\n\t\t// TODO: make this a symbol\r\n\t\tvar applyOnCreate = getApplySet(this)\r\n\t\tif (currentParent) {\r\n\t\t\tvar parent = currentParent\r\n\t\t\tcurrentParent = null\r\n\t\t}\r\n/*\t\tif (this._initialized != this) {\r\n\t\t\tthis._initialized = this\r\n\t\t\tthis.initialize && this.initialize()\r\n\t\t\tvar styles = this.styles\r\n\t\t\tif (styles) {\r\n\t\t\t\tvar rule = createCssRule(getUniqueSelector(this))\r\n\t\t\t\tfor (var i = 0, l = styles.length; i < l; i++) {\r\n\t\t\t\t\tvar key = styles[i]\r\n\t\t\t\t\tvar value = styles[key]\r\n\t\t\t\t\t// TODO: if it is a contextualized variable, do this on the element\r\n\t\t\t\t\tvar styleDefinition = styleDefinitions[key]\r\n\t\t\t\t\tif (styleDefinition) {\r\n\t\t\t\t\t\tstyleDefinition(rule, value, key)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!this.hasOwnProperty('_applyOnCreate')) {\r\n\t\t\t\tapplyOnCreate = getApplySet(this)\r\n\t\t\t}\r\n\t\t}*/\r\n\t\tvar element = doc.createElement(this.tagName)\r\n\t\tif (selector && selector.parent) {\r\n\t\t\tparent = selector.parent\r\n\t\t}\r\n\t\tif (parent) {\r\n\t\t\tpresumptiveParentMap.set(element, parent)\r\n\t\t}\r\n\t\tif (!(element instanceof this)) {\r\n\t\t\t// ideally we want to avoid this call, as it is expensive, but for classes that\r\n\t\t\t// don't register a tag name, we have to make sure the prototype chain is correct\r\n\t\t\tsetPrototypeOf(element, this.prototype)\r\n\t\t}\r\n\t\tif (element.constructor != this) {\r\n\t\t\tif (buggyConstructorSetter) {\r\n\t\t\t\t// in safari, directly setting the constructor messes up the native prototype\r\n\t\t\t\tObject.defineProperty(element, 'constructor', { value: this })\r\n\t\t\t} else {\r\n\t\t\t\telement.constructor = this // need to do this for hasOwn contextualization to work\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (arguments.length > 0) {\r\n\t\t\t// copy applyOnCreate when we have arguments\r\n\t\t\tvar ElementApplyOnCreate = applyOnCreate\r\n\t\t\tapplyOnCreate = {}\r\n\t\t\tfor (var key in ElementApplyOnCreate) {\r\n\t\t\t\tapplyOnCreate[key] = classHandlers[key] ? Object.create(ElementApplyOnCreate[key]) : ElementApplyOnCreate[key]\r\n\t\t\t}\r\n\t\t\tvar i = 0\r\n\t\t\tif (typeof selector == 'string') {\r\n\t\t\t\ti++\r\n\t\t\t\tvar selectorMatch = selector.match(SELECTOR_REGEX)\r\n\t\t\t\tif (selectorMatch) {\r\n\t\t\t\t\tdo {\r\n\t\t\t\t\t\tvar operator = selectorMatch[1]\r\n\t\t\t\t\t\tvar name = selectorMatch[2]\r\n\t\t\t\t\t\tif (operator == '.') {\r\n\t\t\t\t\t\t\tif (applyOnCreate.className) {\r\n\t\t\t\t\t\t\t\tapplyOnCreate.className += ' ' + name\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tif (element.className) {\r\n\t\t\t\t\t\t\t\t\t\telement.className += ' ' + name\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\telement.className = name\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (applyOnCreate.id) {\r\n\t\t\t\t\t\t\t\tapplyOnCreate.id = name\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// just skip right to the element\r\n\t\t\t\t\t\t\t\telement.id = name\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar remaining = selectorMatch[3]\r\n\t\t\t\t\t\tselectorMatch = remaining && remaining.match(SELECTOR_REGEX)\r\n\t\t\t\t\t} while (selectorMatch)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tapplyOnCreate.content = selector\r\n\t\t\t\t}\r\n\t\t\t} else if (selector && selector._item) {\r\n\t\t\t\t// this is kind of hack, to get the Item available before the properties, eventually we may want to\r\n\t\t\t\t// order static properties before variable binding applications, but for now.\r\n\t\t\t\telement._item = selector._item\r\n\t\t\t}\r\n\t\t\tfor (var l = arguments.length; i < l; i++) {\r\n\t\t\t\tvar argument = arguments[i]\r\n\t\t\t\tif (argument && typeof argument === 'object') {\r\n\t\t\t\t\tif (argument instanceof Array || argument.notifies) {\r\n\t\t\t\t\t\tapplyOnCreate.content = argument\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tfor (var key in argument) {\r\n\t\t\t\t\t\t\tif (classHandlers[key]) {\r\n\t\t\t\t\t\t\t\tclassHandlers[key](this, argument[key], key, applyOnCreate)\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tapplyOnCreate[key] = argument[key]\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (typeof argument === 'function' && argument.for) {\r\n\t\t\t\t\tapplyOnCreate.content = argument.for(element)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tapplyOnCreate.content = argument\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (element.created) {\r\n\t\t\tapplyOnCreate = element.created(applyOnCreate) || applyOnCreate\r\n\t\t} else if (applyOnCreate.created) {\r\n\t\t\tapplyOnCreate = applyOnCreate.created.call(element, applyOnCreate) || applyOnCreate\r\n\t\t}\r\n\t\t// TODO: inline this for better performance, possibly\r\n\t\tassignProperties(element, applyOnCreate)\r\n\r\n\t\tif (applyOnCreate._generators) {\r\n\t\t\tassignGenerators(element, applyOnCreate)\r\n\t\t}\r\n\r\n\t\tif (this.children) {\r\n\t\t\tlayoutChildren(element, this.children, element)\r\n\t\t}\r\n\t\tif (this.shadow) {\r\n\t\t\tlayoutChildren(element.attachShadow({mode: 'open'}), this.shadow, element)\r\n\t\t}\r\n\t\t// always do this last, so it can be properly inserted inside the children\r\n\t\tif (element.content != null) {\r\n\t\t\tbuildContent(element, element.content, 'content', applyOnCreate)\r\n\t\t}\r\n\t\telement.ready && element.ready(applyOnCreate)\r\n\t\treturn element\r\n\t}\r\n\r\n\tvar slice = [].slice\r\n\tfunction append(parent){\r\n\t\treturn this.nodeType ?\r\n\t\t\tlayoutChildren(this, arguments, this) : // called as a method\r\n\t\t\tlayoutChildren(parent, slice.call(arguments, 1), parent) // called as a function\r\n\t}\r\n\r\n\tfunction prepend(parent){\r\n\t\treturn this.nodeType ?\r\n\t\t\tlayoutChildren(this, arguments, this, true) : // called as a method\r\n\t\t\tlayoutChildren(parent, slice.call(arguments, 1), parent, true) // called as a function\r\n\t}\r\n\r\n\tfunction defineTag(tagName, Element) {\r\n\t\tvar extendElement = Element.tagName\r\n\t\tElement.tagName = tagName\r\n\t\tif (typeof customElements === 'object') {\r\n\t\t\tcustomElements.define(tagName, lang.extendClass(HTMLElement), { extends: extendElement })\r\n\t\t} else {\r\n\t\t\tconsole.warn('This browser does not support customElements, ensure that the constructor is used to create new elements')\r\n\t\t}\r\n\t}\r\n\r\n\tvar Element = withProperties.call(typeof HTMLElement !== 'undefined' ? HTMLElement : function() {})\r\n\r\n\tElement.defineTag = defineTag\r\n\tElement.assign = function(target, properties) {\r\n\t\tif (typeof target === 'function') {\r\n\t\t\t// assign properties to an existing constructor/class\r\n\t\t\tgetApplySet(target) // make sure we have our own applyOnCreate first\r\n\t\t\tapplyToConstructor(properties, target)\r\n\t\t} else {\r\n\t\t\t// assign to an element\r\n\t\t\t// TODO: Handle content property separately\r\n\t\t\treturn assignProperties(target, properties)\r\n\t\t}\r\n\t}\r\n\r\n\tElement.within = function(element){\r\n\t\t// find closest child\r\n\t}\r\n\r\n\tgenerate([\r\n\t\t'Video',\r\n\t\t'Source',\r\n\t\t'Media',\r\n\t\t'Audio',\r\n\t\t'UL',\r\n\t\t'U',\r\n\t\t'Track',\r\n\t\t'Title',\r\n\t\t'TextArea',\r\n\t\t'Template',\r\n\t\t'TBody',\r\n\t\t'THead',\r\n\t\t'TFoot',\r\n\t\t'TR',\r\n\t\t'Table',\r\n\t\t'Col',\r\n\t\t'ColGroup',\r\n\t\t'TH',\r\n\t\t'TD',\r\n\t\t'Caption',\r\n\t\t'Sup',\r\n\t\t'Sub',\r\n\t\t'Style',\r\n\t\t'Strong',\r\n\t\t'Span',\r\n\t\t'Small',\r\n\t\t'Shadow',\r\n\t\t'Select',\r\n\t\t'Script',\r\n\t\t'S',\r\n\t\t'Quote',\r\n\t\t'Progress',\r\n\t\t'Pre',\r\n\t\t'Picture',\r\n\t\t'Param',\r\n\t\t'P',\r\n\t\t'Output',\r\n\t\t'Option',\r\n\t\t'Optgroup',\r\n\t\t'Object',\r\n\t\t'OL',\r\n\t\t'Ins',\r\n\t\t'I',\r\n\t\t'Del',\r\n\t\t'Meter',\r\n\t\t'Meta',\r\n\t\t'Menu',\r\n\t\t'Map',\r\n\t\t'Link',\r\n\t\t'Legend',\r\n\t\t'Label',\r\n\t\t'LI',\r\n\t\t'KeyGen',\r\n\t\t'Input',\r\n\t\t'Img',\r\n\t\t'IFrame',\r\n\t\t'H1',\r\n\t\t'H2',\r\n\t\t'H3',\r\n\t\t'H4',\r\n\t\t'H5',\r\n\t\t'H6',\r\n\t\t'Hr',\r\n\t\t'FrameSet',\r\n\t\t'Frame',\r\n\t\t'Form',\r\n\t\t'Font',\r\n\t\t'Embed',\r\n\t\t'Em',\r\n\t\t'Code',\r\n\t\t'Cite',\r\n\t\t'Dfn',\r\n\t\t'B',\r\n\t\t'Article',\r\n\t\t'Aside',\r\n\t\t'Abbr',\r\n\t\t'Footer',\r\n\t\t'Figure',\r\n\t\t'FigCaption',\r\n\t\t'Header',\r\n\t\t'Main',\r\n\t\t'Mark',\r\n\t\t'MenuItem',\r\n\t\t'Nav',\r\n\t\t'Section',\r\n\t\t'Slot',\r\n\t\t'Summary',\r\n\t\t'WBr',\r\n\t\t'Div',\r\n\t\t'Dialog',\r\n\t\t'Details',\r\n\t\t'DataList',\r\n\t\t'DL',\r\n\t\t'Canvas',\r\n\t\t'Button',\r\n\t\t'Base',\r\n\t\t'Br',\r\n\t\t'Area',\r\n\t\t'A'\r\n\t])\r\n\tgenerateInputs([\r\n\t\t'Checkbox',\r\n\t\t'Password',\r\n\t\t'Submit',\r\n\t\t'Radio',\r\n\t\t'Color',\r\n\t\t'Date',\r\n\t\t'DateTime',\r\n\t\t'Email',\r\n\t\t'Month',\r\n\t\t'Number',\r\n\t\t'Range',\r\n\t\t'Search',\r\n\t\t'Tel',\r\n\t\t'Time',\r\n\t\t'Url',\r\n\t\t'Week'])\r\n\r\n\tvar tags = {}\r\n\tfunction getConstructor(tagName) {\r\n\t\ttagName = tagName.toLowerCase()\r\n\t\treturn tags[tagName] ||\r\n\t\t\t(tags[tagName] =\r\n\t\t\t\tsetupElement(withProperties.call(doc.createElement(tagName).constructor), tagName))\r\n\t}\r\n\r\n\tfunction setupElement(Element, tagName) {\r\n\t\tvar props = elementPropertyHandlers[tagName]\r\n\t\tif (props && !props.assigned) {\r\n\t\t\tvar handlers = Element.prototype._propertyHandlers = Object.create(propertyHandlers)\r\n\t\t\tfor (var i = 0, l = props.length; i < l; i++) {\r\n\t\t\t\thandlers[props[i]] = true\r\n\t\t\t}\r\n\t\t\tif (props.value) {\r\n\t\t\t\tfor (var i in props) {\r\n\t\t\t\t\tif (!(i > -1)) { // assign any string properties if necessary\r\n\t\t\t\t\t\thandlers[i] = props[i]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tprops.assigned = true\r\n\t\t}\r\n\t\tElement.tagName = tagName\r\n\t\treturn Element\r\n\t}\r\n\tfunction generate(elements) {\r\n\t\telements.forEach(function(elementName) {\r\n\t\t\tvar ElementClass\r\n\t\t\tObject.defineProperty(Element, elementName, {\r\n\t\t\t\tget: function() {\r\n\t\t\t\t\treturn ElementClass || (ElementClass = getConstructor(elementName))\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\tfunction generateInputs(elements) {\r\n\t\telements.forEach(function(inputType) {\r\n\t\t\tvar ElementClass\r\n\t\t\tObject.defineProperty(Element, inputType, {\r\n\t\t\t\tget: function() {\r\n\t\t\t\t\t// TODO: make all inputs extend from input generated from generate\r\n\t\t\t\t\treturn ElementClass || (ElementClass = setupElement(withProperties.call(HTMLInputElement, {\r\n\t\t\t\t\t\ttype: inputType.toLowerCase()\r\n\t\t\t\t\t}), 'input'))\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t// alias all the inputs with an Input suffix\r\n\t\t\tObject.defineProperty(Element, inputType + 'Input', {\r\n\t\t\t\tget: function() {\r\n\t\t\t\t\treturn this[inputType]\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\tvar aliases = {\r\n\t\tAnchor: 'A',\r\n\t\tImage: 'Img',\r\n\t\tParagraph: 'P',\r\n\t\tTextarea: 'TextArea',\r\n\t\tDList: 'DL',\r\n\t\tUList: 'UL',\r\n\t\tOList: 'OL',\r\n\t\tListItem: 'LI',\r\n\t\tText: 'Input',\r\n\t\tTextInput: 'Input',\r\n\t\tTableRow: 'TR',\r\n\t\tTableCell: 'TD',\r\n\t\tTableHeaderCell: 'TH',\r\n\t\tTableHeader: 'THead',\r\n\t\tTableBody: 'TBody'\r\n\t}\r\n\tfor (var alias in aliases) {\r\n\t\t(function(alias, to) {\r\n\t\t\tObject.defineProperty(Element, alias, {\r\n\t\t\t\tget: function() {\r\n\t\t\t\t\treturn this[to]\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})(alias, aliases[alias])\r\n\t}\r\n\r\n\tElement.append = append\r\n\tRenderer.append = append // make it available to the renderer\r\n\tElement.prepend = prepend\r\n\tElement.refresh = Renderer.refresh\r\n\tElement.options = {\r\n\t\tmoveLiveElementsEnabled: true,\r\n\t}\r\n\tElement.content = function(element){\r\n\t\t// container marker\r\n\t\treturn {\r\n\t\t\tisContentNode: true,\r\n\t\t\tcreate: element.create.bind(element)\r\n\t\t}\r\n\t}\r\n\r\n\tElement.ElementClass = function() {}\r\n\tif (typeof Symbol !== 'undefined') {\r\n\t\t// make instanceof work for Element\r\n\t\tObject.defineProperty(Element.ElementClass, Symbol.hasInstance, { value: function(target) {\r\n\t\t\treturn target && (target.create && target.with)\r\n\t\t}})\r\n\t}\r\n\r\n\t// TODO: unify this in lang\r\n\tElement.extend = function(Class, properties) {\r\n\t\tfunction ExtendedElement() {\r\n\t\t\treturn Class.apply(this, arguments)\r\n\t\t}\r\n\t\tsetPrototypeOf(ExtendedElement, Class)\r\n\t\tvar prototype = ExtendedElement.prototype = Object.create(Class.prototype, {\r\n\t\t\tconstructor: { value: ExtendedElement }\r\n\t\t})\r\n\t\tObject.getOwnPropertyNames(properties).forEach(function(key) {\r\n\t\t\tvar descriptor = Object.getOwnPropertyDescriptor(properties, key)\r\n\t\t\tif (classHandlers[key]) {\r\n\t\t\t\tclassHandlers[key](ExtendedElement, descriptor.value, key, properties)\r\n\t\t\t} else {\r\n\t\t\t\tObject.defineProperty(prototype, key, descriptor)\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn ExtendedElement\r\n\t}\r\n\r\n\tfunction forTarget(target) {\r\n\t\treturn target.constructor.getForClass(target, this)\r\n\t}\r\n\r\n\tfunction hasOwn(From, Target, createInstance) {\r\n\t\tif (typeof Target === 'object') {\r\n\t\t\t// we were given an actual instance, use that\r\n\t\t\tvar elementMap = From.ownedClasses || (From.ownedClasses = new WeakMap())\r\n\t\t\tvar instanceMap = {get: function () {\r\n\t\t\t\treturn Target\r\n\t\t\t}}\r\n\t\t\telementMap.set(Target.constructor, instanceMap)\r\n\t\t\treturn hasOwn(From, Target.Class, Target.createInstance)\r\n\t\t}\r\n\t\tif (Target instanceof Array) {\r\n\t\t\treturn Target.forEach(function(Target) {\r\n\t\t\t\thasOwn(From, Target)\r\n\t\t\t})\r\n\t\t}\r\n\t\tvar elementMap = From.ownedClasses || (From.ownedClasses = new WeakMap())\r\n\t\t// TODO: Go up through prototype chain of Target and set each one\r\n\t\tif (!elementMap.has(Target)) {\r\n\t\t\tvar instanceMap = new WeakMap()\r\n\t\t\tinstanceMap.createInstance = createInstance\r\n\t\t\telementMap.set(Target, instanceMap)\r\n\t\t}\r\n\t\treturn From\r\n\t}\r\n\r\n\tfunction getForClass(element, Target) {\r\n\t\tvar createInstance\r\n\t\twhile (element && !(createInstance = element.constructor.ownedClasses && element.constructor.ownedClasses.get(Target))) {\r\n\t\t\telement = element.parentNode || presumptiveParentMap.get(element)\r\n\t\t}\r\n\t\tif (createInstance) {\r\n\t\t\tvar ownedInstances = element.ownedInstances || (element.ownedInstances = new WeakMap())\r\n\t\t\tvar instance = ownedInstances.get(Target)\r\n\t\t\tif (instance === undefined) {\r\n\t\t\t\townedInstances.set(Target, instance = createInstance(element))\r\n\t\t\t\tinstance.subject = element\r\n\t\t\t}\r\n\t\t\treturn instance\r\n\t\t}\r\n\t}\r\n\r\n\tfunction propertyForElement(key) {\r\n\t\t// we just need to establish one Variable class for each element, so we cache it\r\n\t\tThisElementVariable = this._Variable\r\n\t\tif (!ThisElementVariable) {\r\n\t\t\t// need our own branded variable class for this element class\r\n\t\t\tThisElementVariable = this._Variable = Variable()\r\n\r\n\t\t\thasOwn(this, ThisElementVariable, function(element) {\r\n\t\t\t\t// TODO: we might want to do this in init instead\r\n\t\t\t\tvar elementOverlay\r\n\t\t\t\tif (element.alkaliRenderers) {\r\n\t\t\t\t\tvar variableProperties = {}\r\n\t\t\t\t\tfor (var i = 0; i < element.alkaliRenderers.length; i++){\r\n\t\t\t\t\t\tvar renderer = element.alkaliRenderers[i]\r\n\t\t\t\t\t\tif (renderer.name) {\r\n\t\t\t\t\t\t\tvariableProperties[renderer.name] = {value: renderer.variable}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telementOverlay = Object.create(element, variableProperties)\r\n\t\t\t\t} else {\r\n\t\t\t\t\telementOverlay = element\r\n\t\t\t\t}\r\n\t\t\t\tvar instance = new ThisElementVariable(elementOverlay)\r\n\t\t\t\t// we are not observing, because you can't delegate getters and setters in safari\r\n\t\t\t\t// instance.observeObject()\r\n\t\t\t\treturn instance\r\n\t\t\t})\r\n\t\t}\r\n\t\t// now actually get the property class\r\n\t\treturn ThisElementVariable.property(key)\r\n\t}\r\n\r\n\tvar Item = Element.Item = VariableExports.Item\r\n\r\n\tfunction enterRenderer(Renderer, options/*, target*/) {\r\n\t\t// this will be used for optimized class-level variables\r\n\t\t/*if (target.started) { // TODO: Might want to pass in started as a parameter\r\n\t\t\t// this means that the renderer has already been created, so we just need to add this instance\r\n\t\t\tRenderer.prototype.renderUpdate.call(options, element)\r\n\t\t} else {*/\r\n\t\tnew Renderer(options)\r\n\t\t//}\r\n\t}\r\n\r\n\tfunction cleanup(target) {\r\n\t\tvar renderers = target.alkaliRenderers\r\n\t\tif (renderers) {\r\n\t\t\tfor (var i = 0, l = renderers.length; i < l; i++) {\r\n\t\t\t\trenderers[i].stop()\r\n\t\t\t}\r\n\t\t\ttarget.needsRestart = true\r\n\t\t}\r\n\t}\r\n\tfunction restart(target) {\r\n\t\tvar renderers = target.alkaliRenderers\r\n\t\tif (renderers) {\r\n\t\t\tfor (var i = 0, l = renderers.length; i < l; i++) {\r\n//\t\t\t\tupdaters[i].start()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// setup the mutation observer so we can be notified of attachments and removals\r\n\tfunction elementAttached(element) {\r\n\t\tvar Class = element.constructor\r\n\t\tif (Class.create) {\r\n/*\t\t\tif (Class.attachedInstances) {\r\n\t\t\t\tClass.attachedInstances.push(element)\r\n\t\t\t\tif (Class.attachedInstances.length === 1 && Class.needsRestart) {\r\n\t\t\t\t\trestart(Class)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tClass.attachedInstances = [element]\r\n\t\t\t}*/\r\n\t\t\tif (element.attached) {\r\n\t\t\t\telement.attached()\r\n\t\t\t}\r\n\t\t\tif (element.needsRestart) {\r\n\t\t\t\trestart(element)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfunction elementDetached(element) {\r\n\t\t/*var attachedInstances = element.constructor.attachedInstances\r\n\t\tif (attachedInstances) {\r\n\t\t\tvar index = attachedInstances.indexOf(element)\r\n\t\t\tif (index > -1) {\r\n\t\t\t\tattachedInstances.splice(index, 1)\r\n\t\t\t\tif (attachedInstances.length === 0) {\r\n\t\t\t\t\tcleanup(Class)\r\n\t\t\t\t}\r\n\t\t\t}*/\r\n\t\t\tif (element.detached) {\r\n\t\t\t\telement.detached()\r\n\t\t\t}\r\n\t\t\tcleanup(element)\r\n\t\t//}\r\n\t}\r\n\tif (typeof MutationObserver === 'function') {\r\n\t\tvar lifeStates = [{\r\n\t\t\tname: 'detached',\r\n\t\t\tnodes: 'removedNodes',\r\n\t\t\taction: elementDetached\r\n\t\t}, {\r\n\t\t\tname: 'attached',\r\n\t\t\tnodes: 'addedNodes',\r\n\t\t\taction: elementAttached\r\n\t\t}]\r\n\t\tfunction firstVisit(node, state) {\r\n\t\t\tif (state.name === 'attached') {\r\n\t\t\t\tif (node.__alkaliAttached__) {\r\n\t\t\t\t\treturn false\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnode.__alkaliAttached__ = true\r\n\t\t\t\t\tstate.action(node)\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}\r\n\t\t\t} else if (node.__alkaliAttached__) {\r\n\t\t\t\tif (doc.body.contains(node)) {\r\n\t\t\t\t\t// detached event, but it is actually still attached (will get attached in a later mutation record)\r\n\t\t\t\t\t// so don't get through the detached/attached lifecycle\r\n\t\t\t\t\treturn false\r\n\t\t\t\t}\r\n\t\t\t\tnode.__alkaliAttached__ = false\r\n\t\t\t\tstate.action(node)\r\n\t\t\t}\r\n\t\t\treturn true\r\n\t\t}\r\n\t\tvar observer = new MutationObserver(function(mutations) {\r\n\t\t\tfor (var i = 0, il = mutations.length; i < il; i++) {\r\n\t\t\t\tvar mutation = mutations[i]\r\n\t\t\t\t// invoke action on element if we haven't already\r\n\t\t\t\tactionIteration:\r\n\t\t\t\tfor (var j = 0, jl = lifeStates.length; j < jl; j++) { // two steps, removed nodes and added nodes\r\n\t\t\t\t\tvar state = lifeStates[j]\r\n\t\t\t\t\tvar nodes = mutation[state.nodes]\r\n\t\t\t\t\t// iterate over node list\r\n\t\t\t\t\tnodeIteration:\r\n\t\t\t\t\tfor (var k = 0, kl = nodes.length; k < kl; k++) {\r\n\t\t\t\t\t\tvar baseNode = nodes[k]\r\n\t\t\t\t\t\tif (firstVisit(baseNode, state)) {\r\n\t\t\t\t\t\t\t// start traversal with child, if it exists\r\n\t\t\t\t\t\t\tvar currentNode = baseNode.firstChild\r\n\t\t\t\t\t\t\tif (currentNode) {\r\n\t\t\t\t\t\t\t\tdo {\r\n\t\t\t\t\t\t\t\t\tvar nextNode\r\n\t\t\t\t\t\t\t\t\tif (currentNode.nodeType === 1 && firstVisit(currentNode, state)) {\r\n\t\t\t\t\t\t\t\t\t\t// depth-first search\r\n\t\t\t\t\t\t\t\t\t\tnextNode = currentNode.firstChild\r\n\t\t\t\t\t\t\t\t\t\tif (!nextNode) {\r\n\t\t\t\t\t\t\t\t\t\t\tnextNode = currentNode.nextSibling\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tnextNode = currentNode.nextSibling\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif (!nextNode) {\r\n\t\t\t\t\t\t\t\t\t\t// come back out to parents\r\n\t\t\t\t\t\t\t\t\t\t// TODO: try keeping a stack to make this faster\r\n\t\t\t\t\t\t\t\t\t\tdo {\r\n\t\t\t\t\t\t\t\t\t\t\tcurrentNode = currentNode.parentNode\r\n\t\t\t\t\t\t\t\t\t\t\tif (currentNode === baseNode) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tcontinue nodeIteration\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t} while (!(nextNode = currentNode.nextSibling))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tcurrentNode = nextNode\r\n\t\t\t\t\t\t\t\t} while (true)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// if (options.moveLiveElementsEnabled) {\r\n\t\t\t\t\t\t// TODO: any options that we can really do here?\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\tobserver.observe(doc.body || doc, {\r\n\t\t\tchildList: true,\r\n\t\t\tsubtree: true\r\n\t\t})\r\n\t}\r\n\r\n\tlang.copy(VariableExports.Context.prototype, {\r\n\t\tspecify: function(Variable) {\r\n\t\t\tvar element = this.subject\r\n\t\t\tvar distinctive = true\r\n\t\t\t;(this.generics || (this.generics = [])).push(Variable)\r\n\t\t\tdo {\r\n\t\t\t\tif (this.distinctSubject === element) {\r\n\t\t\t\t\tdistinctive = false\r\n\t\t\t\t}\r\n\t\t\t\tvar subjectMap = element.constructor.ownedClasses\r\n\t\t\t\tif (subjectMap) {\r\n\t\t\t\t\tvar instanceMap = subjectMap.get(Variable)\r\n\t\t\t\t\tif (instanceMap) {\r\n\t\t\t\t\t\tif (distinctive) {\r\n\t\t\t\t\t\t\tthis.distinctSubject = element\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tspecifiedInstance = instanceMap.get(element)\r\n\t\t\t\t\t\tif (!specifiedInstance) {\r\n\t\t\t\t\t\t\tinstanceMap.set(element, specifiedInstance = instanceMap.createInstance ?\r\n\t\t\t\t\t\t\t\tinstanceMap.createInstance(element) : new Variable())\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn specifiedInstance\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} while ((element = element.parentNode || presumptiveParentMap.get(element)))\r\n\t\t\t// else if no specific context is found, return default instance\r\n\t\t\treturn Variable.defaultInstance\r\n\t\t},\r\n\r\n\t\tgetContextualized: function(variable) {\r\n\t\t\t// returns a variable that has already been contextualized\r\n\t\t\tvar element = this.subject\r\n\t\t\tif (!element) {\r\n\t\t\t\t// no element, just use the default variable\r\n\t\t\t\treturn variable\r\n\t\t\t}\r\n\t\t\tif (variable._contextMap) {\r\n\t\t\t\tdo {\r\n\t\t\t\t\tvar instance = variable._contextMap.get(element)\r\n\t\t\t\t\tif (instance && instance.context.matches(element)) {\r\n\t\t\t\t\t\treturn instance\r\n\t\t\t\t\t}\r\n\t\t\t\t} while ((element = element.parentNode || presumptiveParentMap.get(element)))\r\n\t\t\t}\r\n\t\t\tif (variable.context && variable.context.matches(this.subject)) {\r\n\t\t\t\t// check if the default variable is allowed\r\n\t\t\t\treturn variable\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tmerge: function(childContext) {\r\n\t\t\tif (!this.distinctSubject ||\r\n\t\t\t\t\t(this.distinctSubject !== childContext.distinctSubject && this.distinctSubject.contains(childContext.distinctSubject))) {\r\n\t\t\t\tthis.distinctSubject = childContext.distinctSubject\r\n\t\t\t}\r\n\t\t\t[].push.apply(this.generics || (this.generics = []), childContext.generics)\r\n\t\t},\r\n\t\tgetDistinctElement: function(Variable, element) {\r\n\t\t\tdo {\r\n\t\t\t\tvar subjectMap = element.constructor.ownedClasses\r\n\t\t\t\tif (subjectMap) {\r\n\t\t\t\t\tvar instanceMap = subjectMap.get(Variable)\r\n\t\t\t\t\tif (instanceMap && instanceMap.has(element)) {\r\n\t\t\t\t\t\treturn element\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} while ((element = element.parentNode || presumptiveParentMap.get(element)))\r\n\t\t},\r\n\t\tmatches: function(element) {\r\n\t\t\tvar generics = this.generics\r\n\t\t\tif (generics) {\r\n\t\t\t\tfor (var i = 0, l = generics.length; i < l; i++) {\r\n\t\t\t\t\tif (this.getDistinctElement(generics[i], element) !== this.distinctSubject) {\r\n\t\t\t\t\t\treturn false\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true\r\n\t\t}\r\n\t})\r\n\r\n\r\n\r\n\treturn Element\r\n}))\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Element.js\n ** module id = 1\n ** module chunks = 0\n **/","(function (root, factory) { if (typeof define === 'function' && define.amd) {\r\n\tdefine([], factory) } else if (typeof module === 'object' && module.exports) {        \r\n  module.exports = factory() // Node\r\n}}(this, function () {\r\n\tvar getPrototypeOf = Object.getPrototypeOf || (function(base) { return base.__proto__ })\r\n\tvar setPrototypeOf = Object.setPrototypeOf || (function(base, proto) { base.__proto__ = proto})\r\n\tvar hasFeatures = {\r\n\t\trequestAnimationFrame: typeof requestAnimationFrame != 'undefined',\r\n\t\tdefineProperty: Object.defineProperty && (function() {\r\n\t\t\ttry{\r\n\t\t\t\tObject.defineProperty({}, 't', {})\r\n\t\t\t\treturn true\r\n\t\t\t}catch(e) {\r\n\t\t\t}\r\n\t\t})(),\r\n\t\tpromise: typeof Promise !== 'undefined',\r\n\t\tMutationObserver: typeof MutationObserver !== 'undefined',\r\n\t\t'WeakMap': typeof WeakMap === 'function'\r\n\t}\r\n\tfunction has(feature) {\r\n\t\treturn hasFeatures[feature]\r\n\t}\r\n\t// This is an polyfill for Object.observe with just enough functionality\r\n\t// for what Variables need\r\n\t// An observe function, with polyfile\r\n\tvar observe =\r\n\t\thas('defineProperty') ? \r\n\t\tfunction observe(target, listener) {\r\n\t\t\t/*for(var i in target) {\r\n\t\t\t\taddKey(i)\r\n\t\t\t}*/\r\n\t\t\tlistener.addKey = addKey\r\n\t\t\tlistener.remove = function() {\r\n\t\t\t\tlistener = null\r\n\t\t\t}\r\n\t\t\treturn listener\r\n\t\t\tfunction addKey(key) {\r\n\t\t\t\tvar keyFlag = 'key' + key\r\n\t\t\t\tif(this[keyFlag]) {\r\n\t\t\t\t\treturn\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis[keyFlag] = true\r\n\t\t\t\t}\r\n\t\t\t\tvar currentValue = target[key]\r\n\t\t\t\tvar targetAncestor = target\r\n\t\t\t\tvar descriptor\r\n\t\t\t\tdo {\r\n\t\t\t\t\tdescriptor = Object.getOwnPropertyDescriptor(targetAncestor, key)\r\n\t\t\t\t} while(!descriptor && (targetAncestor = getPrototypeOf(targetAncestor)))\r\n\r\n\t\t\t\tif(descriptor && descriptor.set) {\r\n\t\t\t\t\tvar previousSet = descriptor.set\r\n\t\t\t\t\tvar previousGet = descriptor.get\r\n\t\t\t\t\tObject.defineProperty(target, key, {\r\n\t\t\t\t\t\tget: function() {\r\n\t\t\t\t\t\t\treturn (currentValue = previousGet.call(this))\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tset: function(value) {\r\n\t\t\t\t\t\t\tpreviousSet.call(this, value)\r\n\t\t\t\t\t\t\tif(currentValue !== value) {\r\n\t\t\t\t\t\t\t\tcurrentValue = value\r\n\t\t\t\t\t\t\t\tif(listener) {\r\n\t\t\t\t\t\t\t\t\tlistener([{target: this, name: key}])\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tenumerable: descriptor.enumerable\r\n\t\t\t\t\t})\r\n\t\t\t\t}else{\r\n\t\t\t\t\tObject.defineProperty(target, key, {\r\n\t\t\t\t\t\tget: function() {\r\n\t\t\t\t\t\t\treturn currentValue\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tset: function(value) {\r\n\t\t\t\t\t\t\tif(currentValue !== value) {\r\n\t\t\t\t\t\t\t\tcurrentValue = value\r\n\t\t\t\t\t\t\t\tif(listener) {\r\n\t\t\t\t\t\t\t\t\tlistener([{target: this, name: key}])\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tenumerable: !descriptor || descriptor.enumerable\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} :\r\n\t\t// and finally a polling-based solution, for the really old browsers\r\n\t\tfunction(target, listener) {\r\n\t\t\tif(!timerStarted) {\r\n\t\t\t\ttimerStarted = true\r\n\t\t\t\tsetInterval(function() {\r\n\t\t\t\t\tfor(var i = 0, l = watchedObjects.length; i < l; i++) {\r\n\t\t\t\t\t\tdiff(watchedCopies[i], watchedObjects[i], listeners[i])\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 20)\r\n\t\t\t}\r\n\t\t\tvar copy = {}\r\n\t\t\tfor(var i in target) {\r\n\t\t\t\tif(target.hasOwnProperty(i)) {\r\n\t\t\t\t\tcopy[i] = target[i]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twatchedObjects.push(target)\r\n\t\t\twatchedCopies.push(copy)\r\n\t\t\tlisteners.push(listener)\r\n\t\t}\r\n\tvar queuedListeners\r\n\tfunction queue(listener, object, name) {\r\n\t\tif(queuedListeners) {\r\n\t\t\tif(queuedListeners.indexOf(listener) === -1) {\r\n\t\t\t\tqueuedListeners.push(listener)\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tqueuedListeners = [listener]\r\n\t\t\tlang.nextTurn(function() {\r\n\t\t\t\tqueuedListeners.forEach(function(listener) {\r\n\t\t\t\t\tvar events = []\r\n\t\t\t\t\tlistener.properties.forEach(function(property) {\r\n\t\t\t\t\t\tevents.push({target: listener.object, name: property})\r\n\t\t\t\t\t})\r\n\t\t\t\t\tlistener(events)\r\n\t\t\t\t\tlistener.object = null\r\n\t\t\t\t\tlistener.properties = null\r\n\t\t\t\t})\r\n\t\t\t\tqueuedListeners = null\r\n\t\t\t}, 0)\r\n\t\t}\r\n\t\tlistener.object = object\r\n\t\tvar properties = listener.properties || (listener.properties = [])\r\n\t\tif(properties.indexOf(name) === -1) {\r\n\t\t\tproperties.push(name)\r\n\t\t}\r\n\t}\r\n\tvar unobserve = has('observe') ? Object.unobserve :\r\n\t\tfunction(target, listener) {\r\n\t\t\tif(listener.remove) {\r\n\t\t\t\tlistener.remove()\r\n\t\t\t}\r\n\t\t\tfor(var i = 0, l = watchedObjects.length; i < l; i++) {\r\n\t\t\t\tif(watchedObjects[i] === target && listeners[i] === listener) {\r\n\t\t\t\t\twatchedObjects.splice(i, 1)\r\n\t\t\t\t\twatchedCopies.splice(i, 1)\r\n\t\t\t\t\tlisteners.splice(i, 1)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\tvar watchedObjects = []\r\n\tvar watchedCopies = []\r\n\tvar listeners = []\r\n\tvar timerStarted = false\r\n\tfunction diff(previous, current, callback) {\r\n\t\t// TODO: keep an array of properties for each watch for faster iteration\r\n\t\tvar queued\r\n\t\tfor(var i in previous) {\r\n\t\t\tif(previous.hasOwnProperty(i) && previous[i] !== current[i]) {\r\n\t\t\t\t// a property has changed\r\n\t\t\t\tprevious[i] = current[i]\r\n\t\t\t\t(queued || (queued = [])).push({name: i})\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(var i in current) {\r\n\t\t\tif(current.hasOwnProperty(i) && !previous.hasOwnProperty(i)) {\r\n\t\t\t\t// a property has been added\r\n\t\t\t\tprevious[i] = current[i]\r\n\t\t\t\t(queued || (queued = [])).push({name: i})\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(queued) {\r\n\t\t\tcallback(queued)\r\n\t\t}\r\n\t}\r\n\r\n\tvar id = 1\r\n\t// a function that returns a function, to stop JSON serialization of an\r\n\t// object\r\n\tfunction toJSONHidden() {\r\n\t\treturn toJSONHidden\r\n\t}\r\n\t// An object that will be hidden from JSON serialization\r\n\tvar Hidden = function () {\r\n\t}\r\n\tHidden.prototype.toJSON = toJSONHidden\r\n\r\n\tvar extendClass\r\n\ttry {\r\n\t\textendClass = eval('(function(Base){ return class extends Base {}})')\r\n\t} catch(e) {}\r\n\r\n\tvar lang = {\r\n\t\trequestAnimationFrame: has('requestAnimationFrame') ? requestAnimationFrame :\r\n\t\t\t(function() {\r\n\t\t\t\tvar toRender = []\r\n\t\t\t\tvar queued = false\r\n\t\t\t\tfunction processAnimationFrame() {\r\n\t\t\t\t\tfor (var i = 0; i < toRender.length; i++) {\r\n\t\t\t\t\t\ttoRender[i]()\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttoRender = []\r\n\t\t\t\t\tqueued = false\r\n\t\t\t\t}\r\n\t\t\t\tfunction requestAnimationFrame(renderer) {\r\n\t\t\t\t \tif (!queued) {\r\n\t\t\t\t\t\tsetTimeout(processAnimationFrame)\r\n\t\t\t\t\t\tqueued = true\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttoRender.push(renderer)\r\n\t\t\t\t}\r\n\t\t\t\treturn requestAnimationFrame\r\n\t\t\t})(),\r\n\t\tPromise: has('promise') ? Promise : (function() {\r\n\t\t\tfunction Promise(execute) {\r\n\t\t\t\tvar isResolved, resolution, errorResolution\r\n\t\t\t\tvar queue = 0\r\n\t\t\t\tfunction resolve(value) {\r\n\t\t\t\t\t// resolve function\r\n\t\t\t\t\tif(value && value.then) {\r\n\t\t\t\t\t\t// received a promise, wait for it\r\n\t\t\t\t\t\tvalue.then(resolve, reject)\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tresolution = value\r\n\t\t\t\t\t\tfinished()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfunction reject(error) {\r\n\t\t\t\t\t// reject function\r\n\t\t\t\t\terrorResolution = error\r\n\t\t\t\t\tfinished()\r\n\t\t\t\t}\r\n\t\t\t\texecute(resolve, reject)\r\n\t\t\t\tfunction finished() {\r\n\t\t\t\t\tisResolved = true\r\n\t\t\t\t\tfor(var i = 0, l = queue.length; i < l; i++) {\r\n\t\t\t\t\t\tqueue[i]()\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// clean out the memory\r\n\t\t\t\t\tqueue = 0\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\tthen: function(callback, errback) {\r\n\t\t\t\t\t\treturn new Promise(function(resolve, reject) {\r\n\t\t\t\t\t\t\tfunction handle() {\r\n\t\t\t\t\t\t\t\t// promise fulfilled, call the appropriate callback\r\n\t\t\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\t\t\tif(errorResolution && !errback) {\r\n\t\t\t\t\t\t\t\t\t\t// errors without a handler flow through\r\n\t\t\t\t\t\t\t\t\t\treject(errorResolution)\r\n\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\t// resolve to the callback's result\r\n\t\t\t\t\t\t\t\t\t\tresolve(errorResolution ?\r\n\t\t\t\t\t\t\t\t\t\t\terrback(errorResolution) :\r\n\t\t\t\t\t\t\t\t\t\t\tcallback ?\r\n\t\t\t\t\t\t\t\t\t\t\t\tcallback(resolution) : resolution)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}catch(newError) {\r\n\t\t\t\t\t\t\t\t\t// caught an error, reject the returned promise\r\n\t\t\t\t\t\t\t\t\treject(newError)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(isResolved) {\r\n\t\t\t\t\t\t\t\t// already resolved, immediately handle\r\n\t\t\t\t\t\t\t\thandle()\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t(queue || (queue = [])).push(handle)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn Promise\r\n\t\t}()),\r\n\r\n\t\tWeakMap: has('WeakMap') ? WeakMap :\r\n\t \tfunction (values, name) {\r\n\t \t\tvar mapProperty = '__' + (name || '') + id++\r\n\t \t\treturn has('defineProperty') ?\r\n\t \t\t{\r\n\t \t\t\tget: function (key) {\r\n\t \t\t\t\treturn key[mapProperty]\r\n\t \t\t\t},\r\n\t \t\t\tset: function (key, value) {\r\n\t \t\t\t\tObject.defineProperty(key, mapProperty, {\r\n\t \t\t\t\t\tvalue: value,\r\n\t \t\t\t\t\tenumerable: false\r\n\t \t\t\t\t})\r\n\t \t\t\t}\r\n\t \t\t} :\r\n\t \t\t{\r\n\t \t\t\tget: function (key) {\r\n\t \t\t\t\tvar intermediary = key[mapProperty]\r\n\t \t\t\t\treturn intermediary && intermediary.value\r\n\t \t\t\t},\r\n\t \t\t\tset: function (key, value) {\r\n\t \t\t\t\t// we use an intermediary that is hidden from JSON serialization, at least\r\n\t \t\t\t\tvar intermediary = key[mapProperty] || (key[mapProperty] = new Hidden())\r\n\t \t\t\t\tintermediary.value = value\r\n\t \t\t\t}\r\n\t \t\t}\r\n\t \t},\r\n\r\n\t\tobserve: observe,\r\n\t\tunobserve: unobserve,\r\n\t\textendClass: extendClass,\r\n\t\twhen: function(value, callback, errorHandler) {\r\n\t\t\treturn value && value.then ?\r\n\t\t\t\t(value.then(callback, errorHandler) || value) : callback(value)\r\n\t\t},\r\n\t\twhenAll: function(inputs, callback) {\r\n\t\t\tvar promiseInvolved\r\n\t\t\tfor(var i = 0, l = inputs.length; i < l; i++) {\r\n\t\t\t\tif(inputs[i] && inputs[i].then) {\r\n\t\t\t\t\tpromiseInvolved = true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(promiseInvolved) {\r\n\t\t\t\t// we have asynch inputs, do lazy loading\r\n\t\t\t\tvar callbackResult\r\n\t\t\t\tvar resolved\r\n\t\t\t\treturn {\r\n\t\t\t\t\tthen: function(onResolve, onError) {\r\n\t\t\t\t\t\tvar remaining = 1\r\n\t\t\t\t\t\tvar result\r\n\t\t\t\t\t\tvar readyInputs = []\r\n\t\t\t\t\t\tvar lastPromiseResult\r\n\t\t\t\t\t\tfor(var i = 0; i < inputs.length; i++) {\r\n\t\t\t\t\t\t\tvar input = inputs[i]\r\n\t\t\t\t\t\t\tremaining++\r\n\t\t\t\t\t\t\tif(input && input.then) {\r\n\t\t\t\t\t\t\t\t(function(i, previousPromiseResult) {\r\n\t\t\t\t\t\t\t\t\tlastPromiseResult = input.then(function(value) {\r\n\t\t\t\t\t\t\t\t\t\treadyInputs[i] = value\r\n\t\t\t\t\t\t\t\t\t\tonEach()\r\n\t\t\t\t\t\t\t\t\t\tif(!remaining) {\r\n\t\t\t\t\t\t\t\t\t\t\treturn result\r\n\t\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\t\treturn previousPromiseResult\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}, onError)\r\n\t\t\t\t\t\t\t\t})(i, lastPromiseResult)\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\treadyInputs[i] = input\r\n\t\t\t\t\t\t\t\tonEach()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tonEach()\r\n\t\t\t\t\t\tfunction onEach() {\r\n\t\t\t\t\t\t\tremaining--\r\n\t\t\t\t\t\t\tif(!remaining) {\r\n\t\t\t\t\t\t\t\tif (resolved) {\r\n\t\t\t\t\t\t\t\t\tresult = onResolve(callbackResult)\t\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tresolved = true\r\n\t\t\t\t\t\t\t\t\tresult = onResolve(callbackResult = callback(readyInputs))\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn lastPromiseResult\r\n\t\t\t\t\t},\r\n\t\t\t\t\tinputs: inputs\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// just sync inputs\r\n\t\t\treturn callback(inputs)\r\n\r\n\t\t},\r\n\t\tcompose: function(Base, constructor, properties) {\r\n\t\t\tvar prototype = constructor.prototype = Object.create(Base.prototype)\r\n\t\t\tsetPrototypeOf(constructor, Base)\r\n\t\t\tfor(var i in properties) {\r\n\t\t\t\tprototype[i] = properties[i]\r\n\t\t\t}\r\n\t\t\tprototype.constructor = constructor\r\n\t\t\treturn constructor\r\n\t\t},\r\n\t\tnextTurn: has('MutationObserver') ?\r\n\t\t\tfunction (callback) {\r\n\t\t\t\t// promises don't resolve consistently on the next micro turn (Edge doesn't do it right),\r\n\t\t\t\t// so use mutation observer\r\n\t\t\t\t// TODO: make a faster mode that doesn't recreate each time\r\n\t\t\t\tvar div = document.createElement('div')\r\n\t\t\t\tvar observer = new MutationObserver(callback)\r\n\t\t\t\tobserver.observe(div, {\r\n\t\t\t\t\tattributes: true\r\n\t\t\t\t})\r\n\t\t\t\tdiv.setAttribute('a', id++)\r\n\t\t\t} :\r\n\t\t\tfunction (callback) {\r\n\t\t\t\t// TODO: we can do better for other, older browsers\r\n\t\t\t\tsetTimeout(callback, 0)\r\n\t\t\t},\r\n\t\tcopy: Object.assign || function(target, source) {\r\n\t\t\tfor(var i in source) {\r\n\t\t\t\ttarget[i] = source[i]\r\n\t\t\t}\r\n\t\t\treturn target\r\n\t\t}\r\n\t}\r\n\tfunction isGenerator(func) {\r\n\t\tif (typeof func === 'function') {\r\n\t\t\tvar constructor = func.constructor\r\n\t\t\t// this is used to handle both native generators and transpiled generators\r\n\t\t\treturn (constructor.displayName || constructor.name) === 'GeneratorFunction'\r\n\t\t}\r\n\t}\r\n\tlang.isGenerator = isGenerator\r\n\r\n\tfunction spawn(generator) {\r\n\t\tvar generatorIterator = typeof generator === 'function' ? generator() : generator\r\n\t\tvar resuming\r\n\t\tvar nextValue\r\n\t\tvar isThrowing\r\n\t\treturn next()\r\n\t\tfunction next() {\r\n\t\t\tdo {\r\n\t\t\t\tvar stepReturn = generatorIterator[isThrowing ? 'throw' : 'next'](nextValue)\r\n\t\t\t\tif (stepReturn.done) {\r\n\t\t\t\t\treturn stepReturn.value\r\n\t\t\t\t}\r\n\t\t\t\tnextValue = stepReturn.value\r\n\t\t\t\t// compare with the arguments from the last\r\n\t\t\t\t// execution to see if they are the same\r\n\t\t\t\tif (typeof nextValue === 'function' && isGenerator(nextVariable)) {\r\n\t\t\t\t\tnextValue = run(nextValue())\r\n\t\t\t\t}\r\n\t\t\t\tif (nextValue && nextValue.then) {\r\n\t\t\t\t\t// if it is a promise, we will wait on it\r\n\t\t\t\t\t// and return the promise so that the next caller can wait on this\r\n\t\t\t\t\treturn nextValue.then(function(value) {\r\n\t\t\t\t\t\tnextValue = value\r\n\t\t\t\t\t\treturn next()\r\n\t\t\t\t\t}, function(error) {\r\n\t\t\t\t\t\tnextValue = error\r\n\t\t\t\t\t\tisThrowing = true\r\n\t\t\t\t\t\treturn next()\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tisThrowing = false\r\n\t\t\t} while(true)\r\n\t\t}\r\n\t}\r\n\tlang.spawn = spawn\r\n\treturn lang\r\n}))\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./util/lang.js\n ** module id = 2\n ** module chunks = 0\n **/","(function (root, factory) { if (typeof define === 'function' && define.amd) {\r\n\tdefine(['./util/lang', './Variable'], factory) } else if (typeof module === 'object' && module.exports) {        \r\n  module.exports = factory(require('./util/lang'), require('./Variable')) // Node\r\n}}(this, function (lang, VariableExports) {\r\n\tvar doc = typeof document !== 'undefined' && document\r\n\tvar invalidatedElements\r\n\tvar queued\r\n\tvar toRender = []\r\n\tvar nextId = 1\r\n\tvar requestAnimationFrame = lang.requestAnimationFrame\r\n\tvar Context = VariableExports.Context\r\n\r\n\tfunction Renderer(options) {\r\n\t\tvar variable = options.variable\r\n\r\n\t\tthis.variable = variable\r\n\t\tif (options.selector) {\r\n\t\t\tthis.selector = options.selector\r\n\t\t}\r\n\t\tif (options.elements) {\r\n\t\t\tthis.elements = options.elements\r\n\t\t\tthis.element = this.elements[0]\r\n\t\t\tfor(var i = 0, l = this.elements.length; i < l; i++) {\r\n\t\t\t\t(this.elements[i].alkaliRenderers || (this.elements[i].alkaliRenderers = [])).push(this)\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (options.element) {\r\n\t\t\tvar element = this.element = options.element;\r\n\t\t\t(element.alkaliRenderers || (element.alkaliRenderers = [])).push(this)\r\n\t\t} else {\r\n\t\t\tthrow new Error('No element provided to Renderer')\r\n\t\t}\r\n\t\tif (options.update) {\r\n\t\t\tthis.updateRendering = options.update\r\n\t\t}\r\n\t\tif (options.shouldRender) {\r\n\t\t\tthis.shouldRender = options.shouldRender\r\n\t\t}\r\n\t\tif (options.renderUpdate) {\r\n\t\t\tthis.renderUpdate = options.renderUpdate\r\n\t\t}\r\n\t\tif (options.alwaysUpdate) {\r\n\t\t\tthis.alwaysUpdate = options.alwaysUpdate\r\n\t\t}\r\n\t\tif (!variable.updated) {\r\n\t\t\t// baconjs-esqe API\r\n\t\t\tvar renderer = this\r\n\t\t\tvariable.subscribe(function (event) {\r\n\t\t\t\t// replace the variable with an object\r\n\t\t\t\t// that returns the value from the event\r\n\t\t\t\trenderer.variable = {\r\n\t\t\t\t\tvalueOf: function () {\r\n\t\t\t\t\t\treturn event.value()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\trenderer.updated()\r\n\t\t\t})\r\n\t\t}\r\n\t\tif (options.updateOnStart === false){\r\n\t\t\t// even if we don't render on start, we still need to compute the value so we can depend on the computed variables\r\n\t\t\tthis.variable.valueOf(this)\r\n\t\t\tvar contextualized = this.contextualized || this.variable\r\n\t\t\t// TODO: we may need to handle recontextualization if it returns a promise\r\n\t\t\tcontextualized.notifies(this)\r\n\t\t} else {\r\n\t\t\tthis.updateRendering(true)\r\n\t\t}\r\n\t}\r\n\tRenderer.prototype = {\r\n\t\tconstructor: Renderer,\r\n\t\tversion: 2166136261,\r\n\t\tupdateRendering: function () {\r\n\t\t\tthrow new Error ('updateRendering must be implemented by sub class of Renderer')\r\n\t\t},\r\n\t\tupdated: function (updateEvent, by, context) {\r\n\t\t\tif (!this.invalidated) {\r\n\t\t\t\tif (!context || this.contextMatches(context)) {\r\n\t\t\t\t\t// do this only once, until we render again\r\n\t\t\t\t\tthis.invalidated = true\r\n\t\t\t\t\tif (this.deferredRender) {\r\n\t\t\t\t\t\tthis.deferredRender.isCanceled = true\r\n\t\t\t\t\t\tthis.deferredRender = null\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar renderer = this\r\n\t\t\t\t\trequestAnimationFrame(function(){\r\n\t\t\t\t\t\tinvalidatedElements = null\r\n\t\t\t\t\t\trenderer.updateRendering(renderer.alwaysUpdate)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\thash: function(){\r\n\t\t\t// this doesn't need its own version/hash\r\n\t\t},\r\n\t\tnewContext: function() {\r\n\t\t\treturn new Context(this.element)\r\n\t\t},\r\n\t\tintegrate: function(context, contextualized) {\r\n\t\t\tthis.addInput(contextualized)\r\n\t\t},\r\n\t\taddInput: function(contextualized) {\r\n\t\t\tif (this.variable !== contextualized) {\r\n\t\t\t\tthis.contextualized = contextualized\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetContextualized: function() {\r\n\t\t\treturn this.contextualized || this.variable\r\n\t\t},\r\n\t\tspecify: function(Variable) {\r\n\t\t\t// a new context to get thsi\r\n\t\t\treturn this.newContext().specify(Variable)\r\n\t\t},\r\n\t\tmerge: function(){\r\n\t\t\t// noop\r\n\t\t},\r\n\t\tcontextMatches: function(context) {\r\n\t\t\treturn true\r\n\t\t},\r\n\t\tinvalidateElement: function(element) {\r\n\t\t\tif(!invalidatedElements){\r\n\t\t\t\tinvalidatedElements = new WeakMap(null, 'invalidated')\r\n\t\t\t}\r\n\t\t\tvar invalidatedParts = invalidatedElements.get(element)\r\n\t\t\tinvalidatedElements.set(element, invalidatedParts = {})\r\n\t\t\tif (!invalidatedParts[id]) {\r\n\t\t\t\tinvalidatedParts[id] = true\r\n\t\t\t}\r\n\t\t\tif (!queued) {\r\n\t\t\t\tlang.queueTask(processQueue)\r\n\t\t\t\tqueued = true\r\n\t\t\t}\r\n\t\t\tvar renderer = this\r\n\t\t\ttoRender.push(function(){\r\n\t\t\t\trenderer.invalidated = false\r\n\t\t\t\trenderer.updateElement(element)\r\n\t\t\t})\r\n\t\t},\r\n\t\tgetId: function(){\r\n\t\t\treturn this.id || (this.id = nextId++)\r\n\t\t},\r\n\t\tstop: function() {\r\n\t\t\tvar contextualized = this.contextualized || this.variable\r\n\t\t\tcontextualized.stopNotifies(this)\r\n\t\t}\r\n\t}\r\n\r\n\tfunction ElementRenderer(options) {\r\n\t\tRenderer.call(this, options)\r\n\t}\r\n\tElementRenderer.prototype = Object.create(Renderer.prototype)\r\n\tElementRenderer.prototype.shouldRender = function (element) {\r\n\t\treturn document.body.contains(element)\r\n\t}\r\n\tElementRenderer.prototype.getSubject = function () {\r\n\t\treturn this.element\r\n\t}\r\n\tElementRenderer.prototype.updateRendering = function (always, element) {\r\n\t\tif (!element && this.elements) {\r\n\t\t\tvar elements = this.elements\r\n\t\t\tif(!elements.length){\r\n\t\t\t\tif(this.selector){\r\n\t\t\t\t\telements = document.querySelectorAll(this.selector)\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthrow new Error('No element or selector was provided to the Renderer')\r\n\t\t\t\t}\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tfor(var i = 0, l = elements.length; i < l; i++){\r\n\t\t\t\tthis.updateRendering(always, elements[i])\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar thisElement = element || this.element\r\n\r\n\t\t\tif(always || this.shouldRender(thisElement)){\r\n\t\t\t\t// it is connected\r\n\t\t\t\tthis.updateElement(thisElement)\r\n\t\t\t} else {\r\n\t\t\t\tvar id = this.getId()\r\n\t\t\t\tvar renderers = thisElement.renderersOnShow\r\n\t\t\t\tif(!renderers){\r\n\t\t\t\t\trenderers = thisElement.renderersOnShow = []\r\n\t\t\t\t\tthisElement.className += ' needs-rerendering'\r\n\t\t\t\t}\r\n\t\t\t\tif (!renderers[id]) {\r\n\t\t\t\t\trenderers[id] = this\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tElementRenderer.prototype.addElement = function (element) {\r\n\t\tif (this.selector) {\r\n\t\t\telement.renderersOnShow = [this]\r\n\t\t} else {\r\n\t\t\tthis.elements.push(element)\r\n\t\t}\r\n\t\t// and immediately do an update\r\n\t\tthis.updateElement(element)\r\n\t}\r\n\tElementRenderer.prototype.updateElement = function(element) {\r\n\t\tthis.invalidated = false\r\n\t\tif (!this.omitValueOf) {\r\n\t\t\tvar value = this.variable.valueOf(this)\r\n\t\t\tvar contextualized = this.contextualized || this.variable\r\n\t\t\t// TODO: we may need to handle recontextualization if it returns a promise\r\n\t\t\tcontextualized.notifies(this)\r\n\t\t}\r\n\t\tif(value !== undefined || this.started || this.omitValueOf){\r\n\t\t\tthis.started = true\r\n\t\t\tif(value && value.then){\r\n\t\t\t\tif(this.renderLoading){\r\n\t\t\t\t\tthis.renderLoading(value, element)\r\n\t\t\t\t}\r\n\t\t\t\tvar renderer = this\r\n\t\t\t\tvar deferredRender = this.deferredRender = function (value) {\r\n\t\t\t\t\tif (!deferredRender.isCanceled) {\r\n\t\t\t\t\t\tif (deferredRender === renderer.deferredRender) {\r\n\t\t\t\t\t\t\trenderer.deferredRender = null\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\trenderer.renderUpdate(value, element)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tvalue.then(deferredRender)\r\n\t\t\t}else{\r\n\t\t\t\tthis.renderUpdate(value, element)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tElementRenderer.prototype.renderUpdate = function (newValue, element) {\r\n\t\tthrow new Error('renderUpdate(newValue) must be implemented')\r\n\t}\r\n\tRenderer.Renderer = Renderer\r\n\tRenderer.ElementRenderer = ElementRenderer\r\n\r\n\tfunction AttributeRenderer(options) {\r\n\t\tif(options.name){\r\n\t\t\tthis.name = options.name\r\n\t\t}\r\n\t\tElementRenderer.apply(this, arguments)\r\n\t}\r\n\tAttributeRenderer.prototype = Object.create(ElementRenderer.prototype)\r\n\tAttributeRenderer.prototype.type = 'AttributeRenderer'\r\n\tAttributeRenderer.prototype.renderUpdate = function (newValue, element) {\r\n\t\telement.setAttribute(this.name, newValue)\r\n\t}\r\n\tRenderer.AttributeRenderer = AttributeRenderer\r\n\r\n\tfunction PropertyRenderer(options) {\r\n\t\tif (options.name) {\r\n\t\t\tthis.name = options.name\r\n\t\t}\r\n\t\tElementRenderer.apply(this, arguments)\r\n\t}\r\n\tPropertyRenderer.prototype = Object.create(ElementRenderer.prototype)\r\n\tPropertyRenderer.prototype.type = 'PropertyRenderer'\r\n\tPropertyRenderer.prototype.renderUpdate = function (newValue, element) {\r\n\t\telement[this.name] = newValue\r\n\t}\r\n\tRenderer.PropertyRenderer = PropertyRenderer\r\n\r\n\tfunction InputPropertyRenderer(options) {\r\n\t\tif (options.element && options.element.tagName === 'SELECT' && options.name === 'value') {\r\n\t\t\t// use the deferred value assignment for <select>\r\n\t\t\tthis.renderUpdate = this.renderSelectValueUpdate\r\n\t\t}\r\n\t\tPropertyRenderer.apply(this, arguments)\r\n\t}\r\n\tInputPropertyRenderer.prototype = Object.create(PropertyRenderer.prototype)\r\n\tInputPropertyRenderer.prototype.type = 'InputPropertyRenderer'\r\n\tInputPropertyRenderer.prototype.renderUpdate = function(newValue, element) {\r\n\t\tif (newValue == null || (element.type === 'number' && isNaN(newValue))) {\r\n\t\t\tnewValue = ''\r\n\t\t}\r\n\t\tvar oldValue = element[this.name]\r\n\t\tif (typeof oldValue === 'string' && typeof newValue !== 'string') {\r\n\t\t\tnewValue = newValue == null ? '' : String(newValue)\r\n\t\t}\r\n\t\tif (oldValue != newValue) {\r\n\t\t\telement[this.name] = newValue\r\n\t\t}\r\n\t}\r\n\tInputPropertyRenderer.prototype.renderSelectValueUpdate = function (newValue, element) {\r\n\t\telement.value = newValue\r\n\t\tif (element.value != newValue && !element.value) {\r\n\t\t\t// if we didn't successfully set the value of a <select>, we may need to wait until the children are constructed\r\n\t\t\telement.eventualValue = newValue\r\n\t\t\tlang.nextTurn(function() {\r\n\t\t\t\tif (element.eventualValue) {\r\n\t\t\t\t\telement.value = element.eventualValue\r\n\t\t\t\t\telement.eventualValue = undefined\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\telement.eventualValue = undefined\r\n\t\t}\r\n\t}\r\n\tRenderer.InputPropertyRenderer = InputPropertyRenderer\r\n\r\n\tfunction StyleRenderer(options) {\r\n\t\tif(options.name){\r\n\t\t\tthis.name = options.name\r\n\t\t}\r\n\t\tElementRenderer.apply(this, arguments)\r\n\t}\r\n\tStyleRenderer.prototype = Object.create(ElementRenderer.prototype)\r\n\tStyleRenderer.prototype.type = 'StyleRenderer'\r\n\tStyleRenderer.prototype.renderUpdate = function (newValue, element) {\r\n\t\telement.style[this.name] = newValue\r\n\t}\r\n\tRenderer.StyleRenderer = StyleRenderer\r\n\r\n\tfunction ContentRenderer(options) {\r\n\t\tElementRenderer.apply(this, arguments)\r\n\t}\r\n\tContentRenderer.prototype = Object.create(ElementRenderer.prototype)\r\n\tContentRenderer.prototype.type = 'ContentRenderer'\r\n\tContentRenderer.prototype.renderUpdate = function (newValue, element) {\r\n\t\telement.innerHTML = ''\r\n\t\tif (newValue === undefined){\r\n\t\t\tnewValue = ''\r\n\t\t}\r\n\t\telement.appendChild(document.createTextNode(newValue))\r\n\t}\r\n\tRenderer.ContentRenderer = ContentRenderer\r\n\r\n\tfunction TextRenderer(options) {\r\n\t\tthis.position = options.position\r\n\t\tthis.textNode = options.textNode\r\n\t\tElementRenderer.apply(this, arguments)\r\n\t}\r\n\tTextRenderer.prototype = Object.create(ElementRenderer.prototype)\r\n\tTextRenderer.prototype.type = 'TextRenderer'\r\n\tTextRenderer.prototype.updated = function (updateEvent, context) {\r\n\t\tif (this.builtList) {\r\n\t\t\tif (updateEvent.type === 'refresh') {\r\n\t\t\t\tthis.builtList = false\r\n\t\t\t\tthis.omitValueOf = false\r\n\t\t\t} else {\r\n\t\t\t\t(this.updates || (this.updates = [])).push(updateEvent)\r\n\t\t\t}\r\n\t\t}\r\n\t\tElementRenderer.prototype.updated.call(this, updateEvent, context)\r\n\t}\r\n\tTextRenderer.prototype.renderUpdate = function (newValue, element) {\r\n\t\tif (newValue == null){\r\n\t\t\tnewValue = ''\r\n\t\t}\r\n\t\tif (newValue.create) {\r\n\t\t\tnewValue = newValue.create({parent: element})\r\n\t\t}\r\n\t\tif (newValue.nodeType) {\r\n\t\t\tif (this.textNode && this.textNode.parentNode == element) {\r\n\t\t\t\t// text node is attached, we can replace it with the node\r\n\t\t\t\telement.replaceChild(newValue, this.textNode)\r\n\t\t\t} else {\r\n\t\t\t\telement.appendChild(newValue)\r\n\t\t\t}\r\n\t\t\tthis.textNode = newValue\r\n\t\t} else if (newValue instanceof Array) {\r\n\t\t\tthis.renderUpdate = ListRenderer.prototype.renderUpdate\r\n\t\t\tthis.omitValueOf = true\r\n\t\t\tthis.renderUpdate(newValue, element)\r\n\t\t} else {\r\n\t\t\t(this.textNode || element.childNodes[this.position]).nodeValue = newValue\r\n\t\t}\r\n\t}\r\n\tRenderer.TextRenderer = TextRenderer\r\n\r\n\tfunction ListRenderer(options) {\r\n\t\tif (options.each) {\r\n\t\t\tthis.each = options.each\r\n\t\t}\r\n\t\tElementRenderer.apply(this, arguments)\r\n\t}\r\n\tListRenderer.prototype = Object.create(ElementRenderer.prototype)\r\n\tListRenderer.prototype.updated = function (updateEvent, context) {\r\n\t\tif (this.builtList) {\r\n\t\t\tif (updateEvent.type === 'refresh') {\r\n\t\t\t\tthis.builtList = false\r\n\t\t\t\tthis.omitValueOf = false\r\n\t\t\t} else {\r\n\t\t\t\t(this.updates || (this.updates = [])).push(updateEvent)\r\n\t\t\t}\r\n\t\t}\r\n\t\tElementRenderer.prototype.updated.call(this, updateEvent, context)\r\n\t}\r\n\tListRenderer.prototype.type = 'ListRenderer'\r\n\tListRenderer.prototype.renderUpdate = function (newValue, element) {\r\n\t\tvar container\r\n\t\tvar each = this.each || function(item) { // TODO: make a single identity function\r\n\t\t\treturn item\r\n\t\t}\r\n\t\tvar thisElement = this.element\r\n\t\tvar renderer = this\r\n\t\tif (!this.builtList) {\r\n\t\t\tthis.builtList = true\r\n\t\t\tthis.omitValueOf = true\r\n\t\t\telement.innerHTML = ''\r\n\t\t\tvar childElements = this.childElements = []\r\n\t\t\tif (each.defineHasOwn) {\r\n\t\t\t\teach.defineHasOwn()\r\n\t\t\t}\r\n\t\t\tif (newValue) {\r\n\t\t\t\tnewValue.forEach(function(item) {\r\n\t\t\t\t\tchildElements.push(Renderer.append(thisElement, eachItem(item)))\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tvar contextualized = this.contextualized || this.variable\r\n\t\t\tcontextualized.notifies(this)\r\n\r\n\t\t\t// TODO: restore using a doc fragment to add these items:\r\n\t\t\t// thisElement.appendChild(container)\r\n\t\t} else {\r\n\t\t\tvar childElements = this.childElements\r\n\t\t\tvar updates = this.updates\r\n\t\t\tcontainer = thisElement\r\n\t\t\tupdates.forEach(function(update) {\r\n\t\t\t\tif (update.type === 'refresh') {\r\n\t\t\t\t\trenderer.builtList = false\r\n\t\t\t\t\tfor (var i = 0, l = childElements.length; i < l; i++) {\r\n\t\t\t\t\t\tthisElement.removeChild(childElements[i])\r\n\t\t\t\t\t}\r\n\t\t\t\t\trenderer.renderUpdate()\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (update.previousIndex > -1) {\r\n\t\t\t\t\t\tthisElement.removeChild(childElements[update.previousIndex])\r\n\t\t\t\t\t\tchildElements.splice(update.previousIndex, 1)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (update.index > -1) {\r\n\t\t\t\t\t\tvar nextChild = childElements[update.index]\r\n\t\t\t\t\t\tvar newElement = Renderer.append(thisElement, eachItem(update.value))\r\n\t\t\t\t\t\tif (nextChild) {\r\n\t\t\t\t\t\t\tthisElement.insertBefore(newElement, nextChild)\r\n\t\t\t\t\t\t\tchildElements.splice(update.index, 0, newElement)\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tchildElements.push(newElement)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tthis.updates = [] // clear the updates\r\n\t\t}\r\n\t\tfunction eachItem(item) {\r\n\t\t\tvar childElement\r\n\t\t\tif (each.create) {\r\n\t\t\t\tchildElement = each.create({parent: thisElement, _item: item}) // TODO: make a faster object here potentially\r\n\t\t\t} else {\r\n\t\t\t\tchildElement = each(item, thisElement)\r\n\t\t\t\tif (childElement.create) {\r\n\t\t\t\t\tchildElement = childElement.create({parent: thisElement, _item: item})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn childElement\r\n\t\t}\r\n\t}\r\n\tRenderer.ListRenderer = ListRenderer\r\n\r\n\tRenderer.onShowElement = function(shownElement){\r\n\t\trequestAnimationFrame(function(){\r\n\t\t\tinvalidatedElements = null\r\n\t\t\tvar elements = [].slice.call(shownElement.getElementsByClassName('needs-rerendering'))\r\n\t\t\tif (shownElement.className.indexOf('needs-rerendering') > 0){\r\n\t\t\t\tvar includingTop = [shownElement]\r\n\t\t\t\tincludingTop.push.apply(includingTop, elements)\r\n\t\t\t\telements = includingTop\r\n\t\t\t}\r\n\t\t\tfor (var i = 0, l = elements.length; i < l; i++){\r\n\t\t\t\tvar element = elements[i]\r\n\t\t\t\tvar renderers = element.renderersOnShow\r\n\t\t\t\tif(renderers){\r\n\t\t\t\t\telement.renderersOnShow = null\r\n\t\t\t\t\t// remove needs-rerendering class\r\n\t\t\t\t\telement.className = element.className.replace(/\\s?needs\\-rerendering\\s?/g, '')\r\n\t\t\t\t\tfor (var id in renderers) {\r\n\t\t\t\t\t\tvar renderer = renderers[id]\r\n\t\t\t\t\t\trenderer.updateElement(element)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tfunction onElementRemoval(element){\r\n\t\t// cleanup element renderers\r\n\t\tif(element.alkaliRenderers){\r\n\t\t\tvar renderers = element.alkaliRenderers\r\n\t\t\tfor(var i = 0; i < renderers.length; i++){\r\n\t\t\t\tvar renderer = renderers[i]\r\n\t\t\t\trenderer.variable.stopNotifies(renderer)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tRenderer.onElementRemoval = function(element, onlyChildren){\r\n\t\tif(!onlyChildren){\r\n\t\t\tonElementRemoval(element)\r\n\t\t}\r\n\t\tvar children = element.getElementsByTagName('*')\r\n\t\tfor(var i = 0, l = children.length; i < l; i++){\r\n\t\t\tvar child = children[i]\r\n\t\t\tif(child.alkaliRenderers){\r\n\t\t\t\tonElementRemoval(child)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn Renderer\r\n}))\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Renderer.js\n ** module id = 3\n ** module chunks = 0\n **/","(function (root, factory) { if (typeof define === 'function' && define.amd) {\r\n\tdefine(['./util/lang'], factory) } else if (typeof module === 'object' && module.exports) {\t\t\t\t\r\n\tmodule.exports = factory(require('./util/lang')) // Node\r\n}}(this, function (lang) {\r\n\tvar deny = {}\r\n\tvar noChange = {}\r\n\tvar WeakMap = lang.WeakMap\r\n\tvar setPrototypeOf = Object.setPrototypeOf || (function(base, proto) { base.__proto__ = proto})\r\n\tvar getPrototypeOf = Object.getPrototypeOf || (function(base) { return base.__proto__ })\r\n\tvar isGenerator = lang.isGenerator\r\n\tvar undefined // makes it faster to be locally scoped\r\n\t// update types\r\n\tvar RequestChange = 3\r\n\tvar RequestSet = 4\r\n\tvar NOT_MODIFIED = {}\r\n\r\n\tvar propertyListenersMap = new WeakMap(null, 'propertyListenersMap')\r\n\tvar isStructureChecked = new WeakMap()\r\n\tvar nextVersion = Date.now()\r\n\r\n\tvar CacheEntry = lang.compose(WeakMap, function() {\r\n\t},{\r\n\t\t_propertyChange: function(propertyName) {\r\n\t\t\tthis.variable._propertyChange(propertyName, contextFromCache(this))\r\n\t\t}\r\n\t})\r\n\tvar listenerId = 1\r\n\r\n\tfunction when(value, callback) {\r\n\t\tif (value && value.then) {\r\n\t\t\treturn value.then(callback)\r\n\t\t}\r\n\t\treturn callback(value)\r\n\t}\r\n\tfunction whenStrict(value, callback) {\r\n\t\tif (value && value.then && !value.notifies) {\r\n\t\t\treturn value.then(callback)\r\n\t\t}\r\n\t\treturn callback(value)\r\n\t}\r\n\r\n\tfunction Context(subject){\r\n\t\tthis.subject = subject\r\n\t\tthis.sources = []\r\n\t}\r\n\tContext.prototype = {\r\n\t\tconstructor: Context,\r\n\t\tnewContext: function(variable) {\r\n\t\t\treturn new Context(this.subject)\r\n\t\t},\r\n\t\t//version: 2166136261, // FNV-1a prime seed\r\n\t\tversion: 0,\r\n\t\trestart: function() {\r\n\t\t\t//this.version = 2166136261\r\n\t\t},\r\n\t\tcontextualize: function(variable, parentContext) {\r\n\t\t\t// resolve the contextualization of a variable, and updates this context to be aware of what distinctive aspect of the context has\r\n\t\t\t// been used for resolution\r\n\t\t\tvar contextualized\r\n\t\t\tif (this.distinctSubject) {\r\n\t\t\t\tvar contextMap = variable._contextMap || (variable._contextMap = new WeakMap())\r\n\t\t\t\tcontextualized = contextMap.get(this.distinctSubject)\r\n\t\t\t\tif (!contextualized) {\r\n\t\t\t\t\tcontextMap.set(this.distinctSubject, contextualized = Object.create(variable))\r\n\t\t\t\t\tcontextualized.listeners = false\r\n\t\t\t\t\tcontextualized.context = this\r\n\t\t\t\t\tvar sources = this.sources\r\n\t\t\t\t\tfor (var i = 0, l = sources.length; i < l; i++) {\r\n\t\t\t\t\t\tcontextualized[sources[i]] = sources[++i]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.contextualized = contextualized\r\n\t\t\t\t// do the merge\r\n\t\t\t\tif (parentContext) {\r\n\t\t\t\t\tparentContext.merge(this)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tcontextualized = variable\r\n\t\t\t}\r\n\t\t\t//if (this.contextualized && this.contextualized !== contextualized) {\r\n\t\t\t\t// TOOD: if it has previously been contextualized to a different context (can happen in a promise/async situation), stop previous notifiers and start new ones\r\n\t\t\t//}\r\n\t\t\treturn contextualized\r\n\t\t},\r\n\t\tintegrate: function(context, contextualized) {\r\n\t\t\tthis.addInput(contextualized)\r\n\t\t\tthis.hash(context.version)\r\n\t\t\tthis.hash(Math.max(contextualized.version || 0, contextualized.versionWithChildren || 0))\r\n\t\t},\r\n\t\thash: function(version) {\r\n/*\t\t\t// FNV1a hash algorithm 32-bit\r\n\t\t\treturn this.version = (this.version ^ (version || 0)) * 16777619 >>> 0*/\r\n\r\n/*\t\t\t// 54 bit FNV1a hash algorithm\r\n\t\t\tvar xored = this.version ^ (version || 0)\r\n\t\t\t// 435 + 1099511627776 = 1099511628211 is 64 bit FNV prime\r\n\t\t\treturn this.version =\r\n\t\t\t\txored * 435 + // compute hash on lower 32 bits\r\n\t\t\t\t(xor & 16777215) * 1099511627776 + // compute hash on lower 24 bits that overflow into upper 32 bits\r\n\t\t\t\t((this.version / 4294967296 >>> 0) * 435 & 2097151) * 4294967296 // hash on upper 32 bits*/\r\n\t\t\t// 54 bit derivative of FNV1a that better uses JS numbers/operators\r\n\t\t\t\r\n\t\t\t// a fast, efficient hash\r\n\t\t\t//return this.version = (this.version ^ (version || 0)) * 1049011 + (this.version / 5555555 >>> 0)\r\n\t\t\t// if we are using globally monotonically increasing version, we can just use max\r\n\t\t\tif (isNaN(version)) {\r\n\t\t\t\tthrow new Error('Bad version')\r\n\t\t\t}\r\n\t\t\treturn this.version = Math.max(this.version, version)\r\n\t\t},\r\n\t\tmerge: function(childContext) {\r\n\t\t\tif (!this.distinctSubject) {\r\n\t\t\t\tthis.distinctSubject = childContext.distinctSubject\r\n\t\t\t}\r\n\t\t},\r\n\t\tspecify: function(Variable) {\r\n\t\t\t// specify a particular instance of a generic variable\r\n\t\t\tvar subject = this.subject\r\n\t\t\tvar subjectMap = subject.constructor.ownedClasses\r\n\t\t\tvar specifiedInstance\r\n\t\t\tif (subjectMap) {\r\n\t\t\t\tif (!this.distinctSubject) {\r\n\t\t\t\t\tthis.distinctSubject = subject\r\n\t\t\t\t}\r\n\t\t\t\tvar instanceMap = subjectMap.get(Variable)\r\n\t\t\t\tif (instanceMap) {\r\n\t\t\t\t\tspecifiedInstance = instanceMap.get(subject)\r\n\t\t\t\t\tif (!specifiedInstance) {\r\n\t\t\t\t\t\tinstanceMap.set(subject, specifiedInstance = instanceMap.createInstance ? instanceMap.createInstance(subject) : new Variable())\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn specifiedInstance\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// else if no specific context is found, return default instance\r\n\t\t\treturn Variable.defaultInstance\r\n\t\t},\r\n\t\tgetContextualized: function(variable) {\r\n\t\t\tif (!this.subject) {\r\n\t\t\t\t// no subject, just use the default variable\r\n\t\t\t\treturn variable\r\n\t\t\t}\r\n\t\t\t// returns a variable that has already been contextualized\r\n\t\t\tvar instance = variable._contextMap && this.subject && variable._contextMap.get(this.subject)\r\n\t\t\tif (instance && instance.context && instance.context.matches(this)) {\r\n\t\t\t\treturn instance\r\n\t\t\t}\r\n\t\t},\r\n\t\taddInput: function(sourceVariable) {\r\n\t\t\tthis.sources.push(this.nextProperty, sourceVariable)\r\n\t\t},\r\n\t\tmatches: function(context) {\r\n\t\t\t// does another context match the resolution of this one?\r\n\t\t\treturn context.subject === this.subject\r\n\t\t}\r\n\t}\r\n\r\n\tfunction NotifyingContext(listener, subject){\r\n\t\tthis.subject = subject\r\n\t\tthis.listener = listener\r\n\t}\r\n\tNotifyingContext.prototype = Object.create(Context.prototype)\r\n\tNotifyingContext.prototype.constructor = NotifyingContext\r\n\tNotifyingContext.prototype.addInput = function(contextualized) {\r\n\t\tcontextualized.notifies(this.listener)\r\n\t}\r\n\r\n\tfunction whenAll(inputs, callback){\r\n\t\tvar promiseInvolved\r\n\t\tfor (var i = 0, l = inputs.length; i < l; i++) {\r\n\t\t\tif (inputs[i] && inputs[i].then) {\r\n\t\t\t\tpromiseInvolved = true\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (promiseInvolved) {\r\n\t\t\treturn lang.whenAll(inputs, callback)\r\n\t\t}\r\n\t\treturn callback(inputs)\r\n\t}\r\n\r\n\tfunction registerListener(value, listener) {\r\n\t\tvar listeners = propertyListenersMap.get(value)\r\n\t\tvar id = listener.listenerId || (listener.listenerId = ('-' + listenerId++))\r\n\t\tif (listeners) {\r\n\t\t\tif (listeners[id] === undefined) {\r\n\t\t\t\tlisteners[id] = listeners.push(listener) - 1\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tpropertyListenersMap.set(value, listeners = [listener])\r\n\t\t\tlisteners[id] = 0\r\n\t\t\tif (Variable.autoObserveObjects) {\r\n\t\t\t\tobserve(value)\r\n\t\t\t}\r\n\t\t}\r\n\t\tlistener.listeningToObject = value\r\n\t}\r\n\tfunction deregisterListener(listener) {\r\n\t\tif (listener.listeningToObject) {\r\n\t\t\tvar value = listener.listeningToObject\r\n\t\t\tlistener.listeningToObject = null\r\n\t\t\tvar listeners = propertyListenersMap.get(value)\r\n\t\t\tif (listeners) {\r\n\t\t\t\tvar index = listeners[listener.listenerId]\r\n\t\t\t\tif (index > -1) {\r\n\t\t\t\t\tlisteners.splice(index, 1)\r\n\t\t\t\t\tdelete listeners[listener.listenerId]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction RefreshEvent() {\r\n\t\tthis.visited = new Set()\r\n\t}\r\n\tRefreshEvent.prototype.type = 'refresh'\r\n\r\n\tfunction PropertyChangeEvent(key, childEvent, parent) {\r\n\t\tthis.key = key\r\n\t\tthis.childEvent = childEvent\r\n\t\tthis.parent = parent\r\n\t\tthis.visited = childEvent.visited\r\n\t}\r\n\tPropertyChangeEvent.prototype.type = 'update'\r\n\r\n\tfunction AddEvent(args) {\r\n\t\tthis.visited = new Set()\r\n\t\tfor (var key in args) {\r\n\t\t\tthis[key] = args[key]\r\n\t\t}\r\n\t}\r\n\tAddEvent.prototype.type = 'add'\r\n\tfunction DeleteEvent(args) {\r\n\t\tthis.visited = new Set()\r\n\t\tfor (var key in args) {\r\n\t\t\tthis[key] = args[key]\r\n\t\t}\r\n\t}\r\n\tDeleteEvent.prototype.type = 'delete'\r\n\r\n\tfunction forPropertyNotifyingValues(variable, properties, callback) {\r\n\t\tif (variable === properties) {\r\n\t\t\tforPropertyNotifyingValues(variable, variable._properties, callback)\r\n\t\t}\r\n\t\tfor (var key in properties) {\r\n\t\t\tvar property = properties[key]\r\n\t\t\tif (property && property.parent == variable) {\r\n\t\t\t\tif (property.returnedVariable) {\r\n\t\t\t\t\tcallback(property.returnedVariable)\r\n\t\t\t\t}\r\n\t\t\t\tif (property.hasChildNotifiers) {\r\n\t\t\t\t\tvar subProperties = property._properties\r\n\t\t\t\t\tif (subProperties) {\r\n\t\t\t\t\t\tforPropertyNotifyingValues(property, property, callback)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction Variable(value) {\r\n\t\tif (this instanceof Variable) {\r\n\t\t\t// new call, may eventually use new.target\r\n\t\t\tif (value === undefined) {\r\n\t\t\t\tif (this.default !== undefined) {\r\n\t\t\t\t\tthis.value = this.default\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.value = value\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn Variable.with(value)\r\n\t\t}\r\n\t}\r\n\r\n\tVariable._logStackTrace = function(v) {\r\n\t\tvar stack = (new Error().stack || '').split(/[\\r\\n]+/)\r\n\t\tif (stack[0] && /^Error\\s*/.test(stack[0])) stack.shift()\r\n\t\tif (stack[0] && /_logStackTrace/.test(stack[0])) stack.shift()\r\n\t\tvar coalesce = (this._debugOpts && this._debugOpts.coalesce) || []\r\n\t\tif (this._debugOpts && this._debugOpts.shortStackTrace) {\r\n\t\t\t// find the first non-coalesced line\r\n\t\t\tvar line\r\n\t\t\tstack.some(function(line) {\r\n\t\t\t\tif (!coalesce.some(function(re) {\r\n\t\t\t\t\treturn re.re.test(line)\r\n\t\t\t\t})) {\r\n\t\t\t\t\tline = stack[0]\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tconsole.log('Variable ' + v.__debug + ' changed', line && line.replace(/^\\s+/, ''))\r\n\t\t} else {\r\n\t\t\tif (coalesce.length) {\r\n\t\t\t\tvar s = []\r\n\t\t\t\tvar re\r\n\t\t\t\tfor (var i = 0; i < stack.length; i++) {\r\n\t\t\t\t\tvar line = stack[i]\r\n\t\t\t\t\tif (re) {\r\n\t\t\t\t\t\tif (re.test(line)) continue\r\n\t\t\t\t\t\tre = null\r\n\t\t\t\t\t}\r\n\t\t\t\t\tre\r\n\t\t\t\t\tcoalesce.some(function(re) {\r\n\t\t\t\t\t\treturn re = re.re.test(line)\r\n\t\t\t\t\t})\r\n\t\t\t\t\tline = line.replace(/^\\s+/,'')\r\n\t\t\t\t\tif (re) {\r\n\t\t\t\t\t\ts.push('(' + re.name + ') ' + line)\r\n\t\t\t\t\t\tre = re.re\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\ts.push(line)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tstack = s\r\n\t\t\t}\r\n\t\t\tvar stackObject = this._debugOpts && this._debugOpts.stackObject\r\n\t\t\tif (stackObject) {\r\n\t\t\t\tconsole.log('Variable ' + v.__debug + ' changed', stack)\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log('Variable ' + v.__debug + ' changed\\r\\n' + stack.join('\\r\\n'))\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tVariable._debugOpts = {\r\n\t\tcoalesce: [{ name: 'alkali', re: /\\/alkali\\// }, { name: 'Promise', re: /(Promise\\.)|(PromiseArray\\.)|(\\/bluebird\\/)/ }],\r\n\t\tstackObject: false\r\n\t}\r\n\r\n\tvar VariablePrototype = Variable.prototype = {\r\n\t\t// for debugging use\r\n\t\tget _currentValue() {\r\n\t\t\treturn this.valueOf()\r\n\t\t},\r\n\t\tset _currentValue(value) {\r\n\t\t\tthis.put(value)\r\n\t\t},\r\n\t\tconstructor: Variable,\r\n\t\tvalueOf: function(context) {\r\n\t\t\tvar valueContext\r\n\t\t\treturn this.gotValue(this.getValue ?\r\n\t\t\t\tthis.getValue(context, context && (valueContext = context.newContext())) :\r\n\t\t\t\tthis.value, context, valueContext)\r\n\t\t},\r\n\t\tgetValue: function(context, valueContext) {\r\n\t\t\tif (context) {\r\n\t\t\t\tcontext.hash(this.version)\r\n\t\t\t}\r\n\t\t\tif (this.parent) {\r\n\t\t\t\tif (context) {\r\n\t\t\t\t\tif (!valueContext) {\r\n\t\t\t\t\t\tvalueContext = context.newContext()\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (context.ifModifiedSince != null) {\r\n\t\t\t\t\t\t// just too complicated to handle NOT_MODIFED objects for now\r\n\t\t\t\t\t\t// TODO: Maybe handle this and delegate NOT_MODIFIED through this\r\n\t\t\t\t\t\t// chain and through gotValue\r\n\t\t\t\t\t\tcontext.ifModifiedSince = undefined \r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tvar key = this.key\r\n\t\t\t\tvar property = this\r\n\t\t\t\tvar parent = this.parent\r\n\t\t\t\tvar object\r\n\t\t\t\tif (parent.getValue) {\r\n\t\t\t\t\t// parent needs value context, might want to do separate context,\r\n\t\t\t\t\t// but would need to treat special so it retrieves the version\r\n\t\t\t\t\t// only and not the versionWithChildren\r\n\t\t\t\t\tobject = parent.getValue(context, valueContext)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tobject = parent.value\r\n\t\t\t\t}\r\n\t\t\t\tif (object && object.then && !object.notifies) {\r\n\t\t\t\t\treturn when(object, function(object) {\r\n\t\t\t\t\t\tvar value = object == null ? undefined :\r\n\t\t\t\t\t\t\ttypeof object.property === 'function' ? object.property(key) :\r\n\t\t\t\t\t\t\ttypeof object.get === 'function' ? object.get(key) : object[key]\r\n\t\t\t\t\t\t//if (property.listeners) {\r\n\t\t\t\t\t\t\tvar listeners = propertyListenersMap.get(object)\r\n\t\t\t\t\t\t\tif (listeners && listeners.observer && listeners.observer.addKey) {\r\n\t\t\t\t\t\t\t\tlisteners.observer.addKey(key)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//}\r\n\t\t\t\t\t\tif (valueContext) {\r\n\t\t\t\t\t\t\tcontext.hash(valueContext.version)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn value\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tvar value = object == null ? undefined :\r\n\t\t\t\t\ttypeof object.property === 'function' ? object.property(key) :\r\n\t\t\t\t\ttypeof object.get === 'function' ? object.get(key) : object[key]\r\n\t\t\t\t//if (property.listeners) {\r\n\t\t\t\t\tvar listeners = propertyListenersMap.get(object)\r\n\t\t\t\t\tif (listeners && listeners.observer && listeners.observer.addKey) {\r\n\t\t\t\t\t\tlisteners.observer.addKey(key)\r\n\t\t\t\t\t}\r\n\t\t\t\t//}\r\n\t\t\t\tif (valueContext) {\r\n\t\t\t\t\tcontext.hash(valueContext.version)\r\n\t\t\t\t}\r\n\t\t\t\treturn value\r\n\t\t\t}\r\n\t\t\treturn this.value\r\n\t\t},\r\n\t\tgotValue: function(value, parentContext, context) {\r\n\t\t\tvar previousNotifyingValue = this.returnedVariable\r\n\t\t\tvar variable = this\r\n\t\t\tif (previousNotifyingValue) {\r\n\t\t\t\tif (value === previousNotifyingValue) {\r\n\t\t\t\t\t// nothing changed, immediately return valueOf\r\n\t\t\t\t\tif (parentContext) {\r\n\t\t\t\t\t\tif (!context) {\r\n\t\t\t\t\t\t\tcontext = parentContext.newContext()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcontext.nextProperty = 'returnedVariable'\r\n\t\t\t\t\t\tvalue = value.valueOf(context)\r\n\t\t\t\t\t\tparentContext.integrate(context, context.contextualize(this, parentContext) || this)\r\n\t\t\t\t\t\treturn value\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn value.valueOf()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// if there was a another value that we were dependent on before, stop listening to it\r\n\t\t\t\t// TODO: we may want to consider doing cleanup after the next rendering turn\r\n\t\t\t\tif (variable.listeners) {\r\n\t\t\t\t\tpreviousNotifyingValue.stopNotifies(variable)\r\n\t\t\t\t}\r\n\t\t\t\tvariable.returnedVariable = null\r\n\t\t\t}\r\n\t\t\tif (value && value.notifies) {\r\n\t\t\t\tvariable.returnedVariable = value\r\n\t\t\t\tif (variable.listeners) {\r\n\t\t\t\t\tvalue.notifies(variable)\r\n\t\t\t\t}\r\n\t\t\t\t/*var parent = variable\r\n\t\t\t\tdo {\r\n\t\t\t\t\tif (parent.listeners) {\r\n\t\t\t\t\t\t// the value is another variable, start receiving notifications, if we, or any parent is live\r\n\t\t\t\t\t\tvariable.returnedVariable.notifies(variable)\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\t}\r\n\t\t\t\t\tparent.hasNotifyingChild = true\r\n\t\t\t\t} while((parent = parent.parent))*/\r\n\t\t\t\tcontext = context || parentContext && (context = parentContext.newContext())\r\n\t\t\t\tif (context) {\r\n\t\t\t\t\tcontext.nextProperty = 'returnedVariable'\r\n\t\t\t\t}\r\n\t\t\t\tvalue = value.valueOf(context)\r\n\t\t\t}\r\n\t\t\tif (value === undefined) {\r\n\t\t\t\tvalue = variable.default\r\n\t\t\t}\r\n\t\t\tif (value && value.then) {\r\n\t\t\t\treturn value.then(function(value) {\r\n\t\t\t\t\tif (value && value.subscribe) {\r\n\t\t\t\t\t\treturn Variable.prototype.gotValue.call(variable, value, parentContext, context)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (context) {\r\n\t\t\t\t\t\tparentContext.integrate(context, context.contextualize(variable, parentContext) || variable)\r\n\t\t\t\t\t} else if (parentContext) {\r\n\t\t\t\t\t\tparentContext.addInput(variable)\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn value\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tif (context) {\r\n\t\t\t\tparentContext.integrate(context, context.contextualize(this, parentContext) || this)\r\n\t\t\t}\r\n\t\t\tif (parentContext) {\r\n\r\n\t\t\t\t/*if (!contextualized.listeners) {\r\n\t\t\t\t\t// mark it as initialized, since we have already recursively dependended on sources\r\n\t\t\t\t\tcontextualized.listeners = []\r\n\t\t\t\t}*/\r\n\r\n\t\t\t\tif (!context) {\r\n\t\t\t\t\tparentContext.addInput(this)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn value\r\n\t\t},\r\n\t\tPropertyClass: Variable,\r\n\t\tproperty: function(key, PropertyClass) {\r\n\t\t\tvar propertyVariable = this[key]\r\n\t\t\tif (!propertyVariable || !propertyVariable.notifies) {\r\n\t\t\t\tpropertyVariable = this._properties && this._properties[key]\r\n\t\t\t}\r\n\t\t\tif (!propertyVariable) {\r\n\t\t\t\t// create the property variable\r\n\t\t\t\tvar Class = PropertyClass\r\n\t\t\t\tif (!Class) {\r\n\t\t\t\t\tClass = this.constructor[key]\r\n\t\t\t\t\tif (typeof Class !== 'function' || !Class.isPropertyClass) {\r\n\t\t\t\t\t\tClass = this.PropertyClass\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tpropertyVariable = new Class()\r\n\t\t\t\tpropertyVariable.key = key\r\n\t\t\t\tpropertyVariable.parent = this\r\n\t\t\t\tif (this[key] === undefined) {\r\n\t\t\t\t\tthis[key] = propertyVariable\r\n\t\t\t\t} else {\r\n\t\t\t\t\t(this._properties || (this._properties = {}))[key] = propertyVariable\r\n\t\t\t\t}\r\n\t\t\t} else if (PropertyClass) {\r\n\t\t\t\tif (!(propertyVariable instanceof PropertyClass)) {\r\n\t\t\t\t\tthrow new TypeError('Existing property variable does not match requested variable type')\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn propertyVariable\r\n\t\t},\r\n\t\tfor: function(subject) {\r\n\t\t\tif (subject && subject.target && !subject.constructor.getForClass) {\r\n\t\t\t\t// makes HTML events work\r\n\t\t\t\tsubject = subject.target\r\n\t\t\t}\r\n\t\t\tif (this.parent) {\r\n\t\t\t\treturn this.parent.for(subject).property(this.key)\r\n\t\t\t}\r\n\t\t\treturn new ContextualizedVariable(this, subject || defaultContext)\r\n\t\t},\r\n\t\t_changeValue: function(context, type, newValue) {\r\n\t\t\tvar key = this.key\r\n\t\t\tvar parent = this.parent\r\n\t\t\tif (!parent) {\r\n\t\t\t\treturn this.put(newValue, context)\r\n\t\t\t}\r\n\t\t\tvar variable = this\r\n\t\t\treturn whenStrict(parent.getValue ? parent.getValue(context) : parent.value, function(object) {\r\n\t\t\t\tif (object == null) {\r\n\t\t\t\t\t// nothing there yet, create an object to hold the new property\r\n\t\t\t\t\tparent.put(object = typeof key == 'number' ? [] : {}, context)\r\n\t\t\t\t} else if (typeof object != 'object') {\r\n\t\t\t\t\t// if the parent is not an object, we can't set anything (that will be retained)\r\n\t\t\t\t\tvar error = new Error('Can not set property on non-object')\r\n\t\t\t\t\terror.deniedPut = true\r\n\t\t\t\t\tthrow error\r\n\r\n\t\t\t\t}\r\n\t\t\t\tvar oldValue = typeof object.get === 'function' ? object.get(key) : object[key]\r\n\t\t\t\tif (oldValue === newValue && typeof newValue != 'object') {\r\n\t\t\t\t\t// no actual change to make\r\n\t\t\t\t\treturn noChange\r\n\t\t\t\t}\r\n\t\t\t\tif (typeof object.set === 'function') {\r\n\t\t\t\t\tobject.set(key, newValue)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (type == RequestChange && oldValue && oldValue.put && (!newValue && newValue.put)) {\r\n\t\t\t\t\t\t// if a put and the property value is a variable, assign it to that.\r\n\t\t\t\t\t\toldValue.put(newValue)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tobject[key] = newValue\r\n\t\t\t\t\t\t// or set the setter/getter\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tvar event = new RefreshEvent()\r\n\t\t\t\tevent.oldValue = oldValue\r\n\t\t\t\tevent.target = variable\r\n\t\t\t\tvariable.updated(event, variable, context)\r\n\r\n\t\t\t\t// now notify any object listeners\r\n\t\t\t\tvar listeners = propertyListenersMap.get(object)\r\n\t\t\t\t// we need to do it before the other listeners, so we can update it before\r\n\t\t\t\t// we trigger a full clobbering of the object\r\n\t\t\t\tif (listeners) {\r\n\t\t\t\t\tlisteners = listeners.slice(0)\r\n\t\t\t\t\tfor (var i = 0, l = listeners.length; i < l; i++) {\r\n\t\t\t\t\t\tvar listener = listeners[i]\r\n\t\t\t\t\t\tif (listener !== parent) {\r\n\t\t\t\t\t\t\t// now go ahead and actually trigger the other listeners (but make sure we don't do the parent again)\r\n\t\t\t\t\t\t\tlistener._propertyChange(key, object, context, type)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn newValue\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\t_propertyChange: function(propertyName, object, context, type) {\r\n\t\t\tif (this.onPropertyChange) {\r\n\t\t\t\tthis.onPropertyChange(propertyName, object, context)\r\n\t\t\t}\r\n\t\t\tthis.updated(new PropertyChangeEvent(propertyName, new RefreshEvent(), this), null, context)\r\n\t\t},\r\n\t\teachKey: function(callback) {\r\n\t\t\tfor (var i in this._properties) {\r\n\t\t\t\tcallback(i)\r\n\t\t\t}\r\n\t\t\tfor (var i in this) {\r\n\t\t\t\tif (this.hasOwnProperty[i]) {\r\n\t\t\t\t\tvar value = this[i]\r\n\t\t\t\t\tif (value && value.parent == this && value.listeners) {\r\n\t\t\t\t\t\tcallback(i)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tapply: function(instance, args) {\r\n\t\t\treturn new Transform(args[0], this, args)\r\n\t\t},\r\n\t\tcall: function(instance) {\r\n\t\t\treturn this.apply(instance, Array.prototype.slice.call(arguments, 1))\r\n\t\t},\r\n\t\tforDependencies: function(callback) {\r\n\t\t\tif (this.returnedVariable) {\r\n\t\t\t\tcallback(this.returnedVariable)\r\n\t\t\t}\r\n\t\t\tif (this.hasNotifyingChild) {\r\n\t\t\t\tforPropertyNotifyingValues(this, this, callback)\r\n\t\t\t}\r\n\t\t\tif (this.parent) {\r\n\t\t\t\tcallback(this.parent)\r\n\t\t\t}\r\n\t\t},\r\n\t\tinit: function() {\r\n\t\t\tvar variable = this\r\n\t\t\tthis.forDependencies(function(dependency) {\r\n\t\t\t\tdependency.notifies(variable)\r\n\t\t\t})\r\n\r\n\t\t\tif (this.listeningToObject === null) {\r\n\t\t\t\t// we were previously listening to an object, but it needs to be restored\r\n\t\t\t\t// calling valueOf will cause the listening object to be restored\r\n\t\t\t\tthis.valueOf()\r\n\t\t\t}\r\n\t\t},\r\n\t\tcleanup: function() {\r\n\t\t\tthis.listeners = false\r\n\t\t\tvar handles = this.handles\r\n\t\t\tif (handles) {\r\n\t\t\t\tfor (var i = 0; i < handles.length; i++) {\r\n\t\t\t\t\thandles[i].remove()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.handles = null\r\n\t\t\tvar returnedVariable = this.returnedVariable\r\n\t\t\tvar variable = this\r\n\t\t\tthis.forDependencies(function(dependency) {\r\n\t\t\t\tdependency.stopNotifies(variable)\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\tversion: 0,\r\n\t\tversionWithChildren: 0,\r\n\r\n\t\tupdateVersion: function(version) {\r\n\t\t\tthis.version = nextVersion = Math.max(Date.now(), nextVersion + 1)\r\n\t\t},\r\n\r\n\t\tgetVersion: function(context) {\r\n\t\t\treturn Math.max(this.version,\r\n\t\t\t\tthis.returnedVariable && this.returnedVariable.getVersion ? this.returnedVariable.getFullVersion(context) : 0,\r\n\t\t\t\tthis.parent ? this.parent.getVersion(context) : 0)\r\n\t\t},\r\n\t\tgetFullVersion: function(context) {\r\n\t\t\treturn Math.max(this.versionWithChildren, this.getVersion(context))\r\n\t\t},\r\n\r\n\t\tgetSubject: function(selectVariable) {\r\n\t\t\treturn this.subject\r\n\t\t},\r\n\r\n\t\tgetUpdates: function(since) {\r\n\t\t\tvar updates = []\r\n\t\t\tvar nextUpdateMap = this.nextUpdateMap\r\n\t\t\tif (nextUpdateMap && since) {\r\n\t\t\t\twhile ((since = nextUpdateMap.get(since))) {\r\n\t\t\t\t\tif (since.type === 'refresh') {\r\n\t\t\t\t\t\t// if it was refresh, we can clear any prior entries\r\n\t\t\t\t\t\tupdates = []\r\n\t\t\t\t\t}\r\n\t\t\t\t\tupdates.push(since)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn updates\r\n\t\t},\r\n\r\n\t\tupdated: function(updateEvent, by, context, isDownstream) {\r\n\t\t\tif (!updateEvent) {\r\n\t\t\t\tupdateEvent = new RefreshEvent()\r\n\t\t\t\tupdateEvent.source = this\r\n\t\t\t}\r\n\t\t\tif (updateEvent.visited.has(this)){\r\n\t\t\t\t// if this event has already visited this variable, skip it\r\n\t\t\t\treturn updateEvent\r\n\t\t\t}\r\n\t\t\tupdateEvent.visited.add(this)\r\n\t\t\tif (this.__debug) {\r\n\t\t\t\t// debug is on\r\n\t\t\t\tVariable._logStackTrace(this)\r\n\t\t\t}\r\n\r\n\t\t\tvar contextualInstance = context && context.getContextualized(this)\r\n\t\t\tif (contextualInstance) {\r\n\t\t\t\tcontextualInstance.updated(updateEvent, this, context)\r\n\t\t\t}\r\n\t\t\t/*\r\n\t\t\t// at some point we could do an update list so that we could incrementally update\r\n\t\t\t// lists in non-live situations\r\n\t\t\tif (this.lastUpdate) {\r\n\t\t\t\tvar nextUpdateMap = this.nextUpdateMap\r\n\t\t\t\tif (!nextUpdateMap) {\r\n\t\t\t\t\tnextUpdateMap = this.nextUpdateMap = new WeakMap()\r\n\t\t\t\t}\r\n\t\t\t\tnextUpdateMap.set(this.lastUpdate, updateEvent)\r\n\t\t\t}\r\n\r\n\t\t\tthis.lastUpdate = updateEvent */\r\n\t\t\tif (updateEvent instanceof PropertyChangeEvent) {\r\n\t\t\t\tthis.versionWithChildren = Math.max(Date.now(), nextVersion + 1)\r\n\t\t\t} else if (!isDownstream) {\r\n\t\t\t\tthis.updateVersion()\r\n\t\t\t}\r\n\r\n\t\t\tvar listeners = this.listeners\r\n\t\t\tif (listeners) {\r\n\t\t\t\tvar variable = this\r\n\t\t\t\t// make a copy, in case they change\r\n\t\t\t\tlisteners = listeners.slice()\r\n\t\t\t\tfor (var i = 0, l = listeners.length; i < l; i++) {\r\n\t\t\t\t\tvar dependent = listeners[i]\r\n\t\t\t\t\tif ((updateEvent instanceof PropertyChangeEvent) &&\r\n\t\t\t\t\t\t\tdependent.parent) {\r\n\t\t\t\t\t\tif (dependent.key === updateEvent.key) {\r\n\t\t\t\t\t\t\tdependent.updated(updateEvent.childEvent, variable, context, true)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdependent.updated(updateEvent, variable, context, true)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (updateEvent instanceof PropertyChangeEvent) {\r\n\t\t\t\tif (this.returnedVariable && this.fixed) {\r\n\t\t\t\t\tthis.returnedVariable.updated(updateEvent, this, context)\r\n\t\t\t\t}\r\n\t\t\t\tif (this.constructor.collection) {\r\n\t\t\t\t\tthis.constructor.collection.updated(updateEvent, this, context)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.parent) {\r\n\t\t\t\tthis.parent.updated(new PropertyChangeEvent(this.key, updateEvent, this.parent), this, context)\r\n\t\t\t}\r\n\t\t\tif (this.collection) {\r\n\t\t\t\tthis.collection.updated(updateEvent, this, context)\r\n\t\t\t}\r\n\t\t\treturn updateEvent\r\n\t\t},\r\n\r\n\t\tinvalidate: function() {\r\n\t\t\t// for back-compatibility for now\r\n\t\t\tthis.updated()\r\n\t\t},\r\n\r\n\t\tnotifies: function(target) {\r\n\t\t\tif (!target) {\r\n\t\t\t\tthrow new Error('No listener provided for notification')\r\n\t\t\t}\r\n\t\t\tvar listeners = this.listeners\r\n\t\t\tif (!listeners || !this.hasOwnProperty('listeners')) {\r\n\t\t\t\tthis.listeners = listeners = [target]\r\n\t\t\t\tthis.init()\r\n\t\t\t} else if (listeners.indexOf(target) === -1) {\r\n\t\t\t\tlisteners.push(target)\r\n\t\t\t}\r\n\t\t},\r\n\t\tsubscribe: function(listener) {\r\n\t\t\t// ES7 Observable (and baconjs) compatible API\r\n\t\t\tvar updated\r\n\t\t\tvar updateQueued\r\n\t\t\tvar variable = this\r\n\t\t\t// it is important to make sure you register for notifications before getting the value\r\n\t\t\tif (typeof listener === 'function') {\r\n\t\t\t\t// BaconJS compatible API\r\n\t\t\t\tvar variable = this\r\n\t\t\t\tvar event = {\r\n\t\t\t\t\tvalue: function() {\r\n\t\t\t\t\t\treturn variable.valueOf()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tupdated = function() {\r\n\t\t\t\t\tupdateQueued = false\r\n\t\t\t\t\tlistener(event)\r\n\t\t\t\t}\r\n\t\t\t}\telse if (listener.next) {\r\n\t\t\t\t// Assuming ES7 Observable API. It is actually a streaming API, this pretty much violates all principles of reactivity, but we will support it\r\n\t\t\t\tupdated = function() {\r\n\t\t\t\t\tupdateQueued = false\r\n\t\t\t\t\tlistener.next(variable.valueOf())\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error('Subscribing to an invalid listener, the listener must be a function, or have an update or next method')\r\n\t\t\t}\r\n\t\t\tvar updateReceiver = {\r\n\t\t\t\tupdated: function() {\r\n\t\t\t\t\tif (updateQueued) {\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\tupdateQueued = true\r\n\t\t\t\t\tlang.nextTurn(updated)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tupdated()\r\n\t\t\tthis.notifies(updateReceiver)\r\n\t\t\treturn {\r\n\t\t\t\tunsubscribe: function() {\r\n\t\t\t\t\tvariable.stopNotifies(updateReceiver)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tstopNotifies: function(dependent) {\r\n\t\t\tvar listeners = this.listeners\r\n\t\t\tif (listeners) {\r\n\t\t\t\tvar index = listeners.indexOf(dependent)\r\n\t\t\t\tif (index > -1) {\r\n\t\t\t\t\tlisteners.splice(index, 1)\r\n\t\t\t\t\tif (listeners.length === 0) {\r\n\t\t\t\t\t\t// clear the listeners so it will be reinitialized if it has\r\n\t\t\t\t\t\t// listeners again\r\n\t\t\t\t\t\tthis.cleanup()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tput: function(value, context) {\r\n\t\t\tvar variable = this\r\n\t\t\tif (this.parent) {\r\n\t\t\t\treturn this._changeValue(context, RequestChange, value)\r\n\t\t\t}\r\n\t\t\treturn whenStrict(this.getValue ? this.getValue(context) : this.value, function(oldValue) {\r\n\t\t\t\tif (oldValue === value && typeof value != 'object') {\r\n\t\t\t\t\treturn noChange\r\n\t\t\t\t}\r\n\t\t\t\tif (oldValue && oldValue.put &&\r\n\t\t\t\t\t\t// if it is set to fixed, we see we can put in the current variable\r\n\t\t\t\t\t\t(variable.fixed || !(value && value.put))) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\treturn oldValue.put(value)\r\n\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\tif (!error.deniedPut) {\r\n\t\t\t\t\t\t\tthrow error\r\n\t\t\t\t\t\t}// else if the put was denied, continue on and set the value on this variable\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn whenStrict(variable.setValue(value, context), function(value) {\r\n\t\t\t\t\tvar event = new RefreshEvent()\r\n\t\t\t\t\tevent.oldValue = oldValue\r\n\t\t\t\t\tevent.target = variable\r\n\t\t\t\t\tvariable.updated(event, variable, context)\r\n\t\t\t\t\treturn value\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t},\r\n\t\tget: function(key) {\r\n\t\t\tif (this[key] || (this._properties && this._properties[key])) {\r\n\t\t\t\treturn this.property(key).valueOf()\r\n\t\t\t}\r\n\t\t\tvar object = this.getValue()\r\n\t\t\tif (!object) {\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tif (typeof object.get === 'function') {\r\n\t\t\t\treturn object.get(key)\r\n\t\t\t}\r\n\t\t\treturn whenStrict(object, function(object) {\r\n\t\t\t\tvar value = object[key]\r\n\t\t\t\tif (value && value.notifies) {\r\n\t\t\t\t\t// nested variable situation, get underlying value\r\n\t\t\t\t\treturn value.valueOf()\r\n\t\t\t\t}\r\n\t\t\t\treturn value\r\n\t\t\t})\r\n\t\t},\r\n\t\tset: function(key, value) {\r\n\t\t\t// TODO: create an optimized route when the property doesn't exist yet\r\n\t\t\tthis.property(key)._changeValue(null, RequestSet, value)\r\n\t\t},\r\n\t\tundefine: function(key, context) {\r\n\t\t\tthis.set(key, undefined, context)\r\n\t\t},\r\n\t\tis: function(proxiedVariable) {\r\n\t\t\tvar thisVariable = this\r\n\t\t\tthis.fixed = true\r\n\t\t\treturn whenStrict(this.setValue(proxiedVariable), function(value) {\r\n\t\t\t\tthisVariable.updated(new RefreshEvent(), thisVariable)\r\n\t\t\t\treturn thisVariable\r\n\t\t\t})\r\n\t\t},\r\n\t\tproxy: function(proxiedVariable) {\r\n\t\t\treturn this.is(proxiedVariable)\r\n\t\t},\r\n\t\tnext: function(value) {\r\n\t\t\t// for ES7 observable compatibility\r\n\t\t\tthis.put(value)\r\n\t\t},\r\n\t\terror: function(error) {\r\n\t\t\t// for ES7 observable compatibility\r\n\t\t\tvar listeners = this.listeners\r\n\t\t\tif (listeners) {\r\n\t\t\t\t// make a copy, in case they change\r\n\t\t\t\tlisteners.forEach(function(dependent) {\r\n\t\t\t\t\t// skip notifying property listeners if we are headed up the parent chain\r\n\t\t\t\t\tdependent.error(error)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomplete: function(value) {\r\n\t\t\t// for ES7 observable compatibility\r\n\t\t\tthis.put(value)\r\n\t\t},\r\n\t\tsetValue: function(value) {\r\n\t\t\tthis.value = value\r\n\t\t},\r\n\t\tonValue: function(listener) {\r\n\t\t\treturn this.subscribe(function(event) {\r\n\t\t\t\twhen(event.value(), function(value) {\r\n\t\t\t\t\tlistener(value)\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t},\r\n\t\ttoJSON: function() {\r\n\t\t\treturn this.valueOf()\r\n\t\t},\r\n\t\ttoString: function() {\r\n\t\t\treturn String(this.valueOf())\r\n\t\t},\r\n\t\tforEach: function(callbackOrItemClass, callbackOrContext, context) {\r\n\t\t\t// iterate through current value of variable\r\n\t\t\tif (callbackOrItemClass.notifies) {\r\n\t\t\t\treturn this.forEach(function(item) {\r\n\t\t\t\t\tvar itemVariable = callbackOrItemClass.from(item)\r\n\t\t\t\t\tcallbackOrContext.call(this, itemVariable)\r\n\t\t\t\t}, context)\r\n\t\t\t}\r\n\t\t\tvar collectionOf = this.collectionOf\r\n\t\t\tif (collectionOf) {\r\n\t\t\t\tvar variable = this\r\n\t\t\t\treturn when(this.valueOf(callbackOrContext), function(value) {\r\n\t\t\t\t\tif (value && value.forEach) {\r\n\t\t\t\t\t\tvalue.forEach(function(item, index) {\r\n\t\t\t\t\t\t\tcallbackOrItemClass.call(variable, variable.property(index, collectionOf))\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\treturn when(this.valueOf(callbackOrContext), function(value) {\r\n\t\t\t\tif (value && value.forEach) {\r\n\t\t\t\t\tvalue.forEach(callbackOrItemClass)\r\n\t\t\t\t}else{\r\n\t\t\t\t\tfor (var i in value) {\r\n\t\t\t\t\t\tcallbackOrItemClass.call(value, value[i], i)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\tto: function (transformFunction, reverse) {\r\n\t\t\tif (typeof transformFunction !== 'function') {\r\n\t\t\t\tif (typeof transformFunction === 'object') {\r\n\t\t\t\t\tthis.to(transformFunction.get, transformFunction.set)\r\n\t\t\t\t}\r\n\t\t\t\tthrow new Error('No function provided to transform')\r\n\t\t\t}\r\n\t\t\tif (reverse) {\r\n\t\t\t\ttransformFunction.reverse = function(value, args, context) {\r\n\t\t\t\t\t// for direct to, we can just use the first argument\r\n\t\t\t\t\treverse.call(this, value, args[0], context)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (transformFunction.prototype instanceof Variable) {\r\n\t\t\t\treturn new transformFunction(this)\r\n\t\t\t}\r\n\t\t\treturn new Transform(this, transformFunction)\r\n\t\t},\r\n\t\tmap: function (transformFunction) {\r\n\t\t\treturn this.to(function(value) {\r\n\t\t\t\tif (value instanceof Array) {\r\n\t\t\t\t\tthrow new Error('map without VArray')\r\n\t\t\t\t}\r\n\t\t\t\treturn transformFunction(value)\r\n\t\t\t})\r\n\t\t},\r\n\t\tas: function(Class) {\r\n\t\t\t// easiest way to cast to a variable class\r\n\t\t\treturn new Class(this)\r\n\t\t},\r\n\t\tget schema() {\r\n\t\t\t// default schema is the constructor\r\n\t\t\tif (this.returnedVariable) {\r\n\t\t\t\treturn this.returnedVariable.schema\r\n\t\t\t}\r\n\t\t\tif (this.parent) {\r\n\t\t\t\tvar parentSchemaProperties = this.parent.schema.properties || this.parent.schema\r\n\t\t\t\treturn parentSchemaProperties && parentSchemaProperties[this.key]\r\n\t\t\t}\r\n\t\t\treturn this.constructor\r\n\t\t},\r\n\t\tset schema(schema) {\r\n\t\t\t// but allow it to be overriden\r\n\t\t\tObject.defineProperty(this, 'schema', {\r\n\t\t\t\tvalue: schema\r\n\t\t\t})\r\n\t\t},\r\n\t\tvalidate: function(target, schema) {\r\n\t\t\tif (this.returnedVariable) {\r\n\t\t\t\treturn this.returnedVariable.validate(target, schema)\r\n\t\t\t}\r\n\t\t\tif (this.parent) {\r\n\t\t\t\treturn this.parent.validate(target.valueOf(), schema)\r\n\t\t\t}\r\n\t\t\tif (schema) {\r\n\t\t\t\tif (schema.type && (schema.type !== typeof target)) {\r\n\t\t\t\t\treturn ['Target type of ' + typeof target + ' does not match schema type of ' + schema.type]\r\n\t\t\t\t}\r\n\t\t\t\tif (schema.required && (target == null || target == '' || (typeof target === 'number' && isNaN(target)))) {\r\n\t\t\t\t\treturn ['Value is required']\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar valid = []\r\n\t\t\tvalid.isValid = true\r\n\t\t\treturn valid\r\n\t\t},\r\n\r\n\t\tget validation() {\r\n\t\t\tvar validation = new Validating(this)\r\n\t\t\tObject.defineProperty(this, 'validation', {\r\n\t\t\t\tvalue: validation\r\n\t\t\t})\r\n\t\t\treturn validation\r\n\t\t},\r\n\t\tset validation(validation) {\r\n\t\t\t// but allow it to be overriden\r\n\t\t\tObject.defineProperty(this, 'validation', {\r\n\t\t\t\tvalue: validation\r\n\t\t\t})\r\n\t\t},\r\n\t\tset structured(structure) {\r\n\t\t\t// find any variable properties and attaches them as a property\r\n\t\t\tvar keys = Object.keys(this)\r\n\t\t\tvar properties = keys.length > 1 && this._properties || (this._properties = {})\r\n\t\t\tfor(var i = 0, l = keys.length; i < l; i++) {\r\n\t\t\t\tvar key = keys[i]\r\n\t\t\t\tvar value = this[key]\r\n\t\t\t\tif (value instanceof Variable) {\r\n\t\t\t\t\tvar existing = properties[key]\r\n\t\t\t\t\tif (existing) {\r\n\t\t\t\t\t\tif (existing !== value) {\r\n\t\t\t\t\t\t\t// an existing property exists, put in it\r\n\t\t\t\t\t\t\texisting.put(value)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (value.parent) {\r\n\t\t\t\t\t\t\tif (value.parent === this) {\r\n\t\t\t\t\t\t\t\tcontinue // just being assigned to another property\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// property already exists with different parent, make a proxy\r\n\t\t\t\t\t\t\t\tvar newValue = new Variable()\r\n\t\t\t\t\t\t\t\tnewValue.proxy(value)\r\n\t\t\t\t\t\t\t\tvalue = newValue\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvalue.key = key\r\n\t\t\t\t\t\tvalue.parent = this\r\n\t\t\t\t\t\tproperties[key] = value\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetId: function() {\r\n\t\t\treturn this.id || (this.id = Variable.nextId++)\r\n\t\t},\r\n\t\tobserveObject: function() {\r\n\t\t\tvar variable = this\r\n\t\t\treturn when(this.valueOf(), function(object) {\r\n\t\t\t\tvar listeners = propertyListenersMap.get(object)\r\n\t\t\t\tif (!listeners) {\r\n\t\t\t\t\tpropertyListenersMap.set(object, listeners = [])\r\n\t\t\t\t}\r\n\t\t\t\tif (listeners.observerCount) {\r\n\t\t\t\t\tlisteners.observerCount++\r\n\t\t\t\t}else{\r\n\t\t\t\t\tlisteners.observerCount = 1\r\n\t\t\t\t\tvar observer = listeners.observer = lang.observe(object, function(events) {\r\n\t\t\t\t\t\tfor (var i = 0, l = listeners.length; i < l; i++) {\r\n\t\t\t\t\t\t\tvar listener = listeners[i]\r\n\t\t\t\t\t\t\tfor (var j = 0, el = events.length; j < el; j++) {\r\n\t\t\t\t\t\t\t\tvar event = events[j]\r\n\t\t\t\t\t\t\t\tlistener._propertyChange(event.name, object)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\tif (observer.addKey) {\r\n\t\t\t\t\t\tfor (var i = 0, l = listeners.length; i < l; i++) {\r\n\t\t\t\t\t\t\tvar listener = listeners[i]\r\n\t\t\t\t\t\t\tlistener.eachKey(function(key) {\r\n\t\t\t\t\t\t\t\tobserver.addKey(key)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tregisterListener(object, variable)\r\n\t\t\t\treturn {\r\n\t\t\t\t\tremove: function() {\r\n\t\t\t\t\t\tderegisterListener(object, variable)\r\n\t\t\t\t\t\tif (!(--listeners.observerCount)) {\r\n\t\t\t\t\t\t\tlisteners.observer.remove()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdone: function() {\r\n\t\t\t\t\t\t// deliver changes\r\n\t\t\t\t\t\tlang.deliverChanges(observer)\r\n\t\t\t\t\t\tthis.remove()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\t\tgetCollectionOf: function() {\r\n\t\t\treturn this.returnedVariable && this.returnedVariable.collectionOf || this.constructor.collectionOf\r\n\t\t},\r\n\t\t_sN: function(name) {\r\n\t\t\t// for compilers to set a name\r\n\t\t\tthis.name = name\r\n\t\t\treturn this\r\n\t\t},\r\n\t\tget _debug() {\r\n\t\t\tif (this.__debug === undefined) {\r\n\t\t\t\tthis.__debug = this.name || (Math.random() + '').slice(2)\r\n\t\t\t}\r\n\t\t\treturn this.__debug\r\n\t\t},\r\n\t\tset _debug(_debug) {\r\n\t\t\tthis.__debug = _debug\r\n\t\t},\r\n\t\tget _lastUpdated() {\r\n\t\t\treturn new Date(this.getVersion())\r\n\t\t}\r\n\t}\r\n\r\n\t// a variable inheritance change goes through its own prototype, so classes/constructor\r\n\t// can be used as variables as well\r\n\tfor (var key in VariablePrototype) {\r\n\t\tObject.defineProperty(Variable, key, Object.getOwnPropertyDescriptor(VariablePrototype, key))\r\n\t}\r\n\r\n\tVariable.as = function(Type) {\r\n\t\tvar NewType = this.with({})\r\n\t\tvar target = NewType.prototype\r\n\t\tvar prototype = Type.prototype\r\n\t\tdo {\r\n\t\t\tvar names = Object.getOwnPropertyNames(prototype)\r\n\t\t\tfor (var i = 0; i < names.length; i++) {\r\n\t\t\t\tvar name = names[i]\r\n\t\t\t\tif (!Object.getOwnPropertyDescriptor(target, name)) {\r\n\t\t\t\t\tObject.defineProperty(target, name, Object.getOwnPropertyDescriptor(prototype, name))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tprototype = getPrototypeOf(prototype)\r\n\t\t} while (prototype && prototype !== Variable.prototype)\r\n\t\treturn NewType\r\n\t}\r\n\r\n\tVariable.with = function(properties, ExtendedVariable) {\r\n\t\t// TODO: handle arguments\r\n\t\tvar Base = this\r\n\t\tvar prototype\r\n\t\tif (Object.getOwnPropertyDescriptor(this, 'prototype').writable === false) {\r\n\t\t\t// extending native class\r\n\t\t\tExtendedVariable = lang.extendClass(this)\r\n\t\t\tprototype = ExtendedVariable.prototype\r\n\t\t} else {\r\n\t\t\t// extending function/constructor\r\n\t\t\tExtendedVariable = ExtendedVariable || function() {\r\n\t\t\t\tif (this instanceof ExtendedVariable) {\r\n\t\t\t\t\tBase.apply(this, arguments)\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn ExtendedVariable.with(properties)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tprototype = ExtendedVariable.prototype = Object.create(this.prototype)\r\n\t\t\tprototype.constructor = ExtendedVariable\r\n\t\t\tsetPrototypeOf(ExtendedVariable, this)\r\n\t\t}\r\n\t\treturn ExtendedVariable.assign(properties)\r\n\t}\r\n\tVariable.assign = function(properties) {\r\n\t\tvar prototype = this.prototype\r\n\t\tfor (var key in properties) {\r\n\t\t\tvar descriptor = Object.getOwnPropertyDescriptor(properties, key)\r\n\t\t\tvar value = descriptor.value\r\n\t\t\tif (typeof value === 'function' && key !== 'collectionOf') {\r\n\t\t\t\tif (value.notifies) {\r\n\t\t\t\t\t// variable class\r\n\t\t\t\t\tdescriptor = (function(key, Class) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tget: function() {\r\n\t\t\t\t\t\t\t\tvar property = (this._properties || (this._properties = {}))[key]\r\n\t\t\t\t\t\t\t\tif (!property) {\r\n\t\t\t\t\t\t\t\t\tthis._properties[key] = property = new Class()\r\n\t\t\t\t\t\t\t\t\tproperty.key = key\r\n\t\t\t\t\t\t\t\t\tproperty.parent = this\r\n\t\t\t\t\t\t\t\t\tif (property.listeners) {\r\n\t\t\t\t\t\t\t\t\t\t// if it already has listeners, need to reinit it with the parent\r\n\t\t\t\t\t\t\t\t\t\tproperty.init()\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn property\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tset: function(value) {\r\n\t\t\t\t\t\t\t\tthis[key]._changeValue(null, RequestSet, value)\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tenumerable: true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})(key, value)\r\n\t\t\t\t\tif (value === Variable) {\r\n\t\t\t\t\t\tvalue = Variable() // create own instance\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalue.isPropertyClass = true\r\n\t\t\t\t} else if (isGenerator(value)) {\r\n\t\t\t\t\tdescriptor = getGeneratorDescriptor(value)\r\n\t\t\t\t} else if (value.defineAs) {\r\n\t\t\t\t\tdescriptor = value.defineAs(key)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvalue = generalizeMethod(value, key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tObject.defineProperty(prototype, key, descriptor)\r\n\t\t\tif (value !== undefined) {\r\n\t\t\t\t// TODO: If there is a getter/setter here, use defineProperty\r\n\t\t\t\tthis[key] = value\r\n\t\t\t} else {\r\n\t\t\t\t// getter/setter\r\n\t\t\t\tObject.defineProperty(this, key, descriptor)\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (properties && properties.hasOwn) {\r\n\t\t\thasOwn.call(this, properties.hasOwn)\r\n\t\t}\r\n\t\treturn this\r\n\t}\r\n\r\n\tObject.defineProperty(Variable, 'defaultInstance', {\r\n\t\tget: function() {\r\n\t\t\treturn this.hasOwnProperty('_defaultInstance') ?\r\n\t\t\t\tthis._defaultInstance : (\r\n\t\t\t\t\tthis._defaultInstance = new this(),\r\n\t\t\t\t\tthis._defaultInstance.subject = defaultContext,\r\n\t\t\t\t\tthis._defaultInstance)\r\n\t\t}\r\n\t})\r\n\tVariable.hasOwn = function(Target, createInstance) {\r\n\t\tvar instanceMap = new WeakMap()\r\n\t\tinstanceMap.createInstance = createInstance\r\n\t\tvar subjectMap = this.ownedClasses || (this.ownedClasses = new WeakMap())\r\n\t\tsubjectMap.set(Target, instanceMap)\r\n\t}\r\n\r\n\r\n\tfunction arrayToModify(variable, callback) {\r\n\t\t// TODO: switch this to allow promises\r\n\t\treturn when(variable.cachedValue || variable.valueOf(), function(array) {\r\n\t\t\tif (!array) {\r\n\t\t\t\tvariable.put(array = [])\r\n\t\t\t}\r\n\t\t\tvar results = callback.call(variable, array)\r\n\t\t\tvariable.cachedVersion++ // update the cached version, so any version checking will know it has changed\r\n\t\t\treturn results\r\n\t\t})\r\n\t}\r\n\r\n\tfunction insertedAt(variable, added, startingIndex, arrayLength) {\r\n\t\tvar addedCount = added.length\r\n\t\t// adjust the key positions of any index properties after splice\r\n\t\tif (addedCount > 0) {\r\n\t\t\tvar arrayPosition\r\n\t\t\tfor (var i = arrayLength - addedCount; i > startingIndex;) {\r\n\t\t\t\tvar arrayPosition = variable[--i]\r\n\t\t\t\tif (arrayPosition) {\r\n\t\t\t\t\tvariable[i] = undefined\r\n\t\t\t\t\tarrayPosition.key += addedCount\r\n\t\t\t\t\tvariable[arrayPosition.key] = arrayPosition\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// send out updates\r\n\t\t\tfor (var i = 0, l = added.length; i < l; i++) {\r\n\t\t\t\tvariable.updated(new AddEvent({\r\n\t\t\t\t\tvalue: added[i],\r\n\t\t\t\t\tindex: i + startingIndex,\r\n\t\t\t\t\tmodifier: variable\r\n\t\t\t\t}), variable)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction removedAt(variable, removed, startingIndex, removalCount, arrayLength) {\r\n\t\t// adjust the properties\r\n\t\tvar i = startingIndex + removalCount\r\n\t\tvar arrayPosition\r\n\t\tif (removalCount > 0) {\r\n\t\t\tfor (var i = startingIndex + removalCount; i < arrayLength + removalCount; i++) {\r\n\t\t\t\tvar arrayPosition = variable[i]\r\n\t\t\t\tif (arrayPosition) {\r\n\t\t\t\t\tvariable[i] = undefined\r\n\t\t\t\t\tarrayPosition.key -= removalCount\r\n\t\t\t\t\tvariable[arrayPosition.key] = arrayPosition\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// send out updates\r\n\t\t\tfor (var i = 0; i < removalCount; i++) {\r\n\t\t\t\tvariable.updated(new DeleteEvent({\r\n\t\t\t\t\tpreviousIndex: startingIndex,\r\n\t\t\t\t\toldValue: removed[i],\r\n\t\t\t\t\tmodifier: variable\r\n\t\t\t\t}), variable)\r\n\t\t\t}\r\n\t\t\tvariable.cachedVersion = variable.version // update the cached version so it doesn't need to be recomputed\r\n\t\t}\r\n\t}\r\n\r\n\tif (typeof Symbol !== 'undefined') {\r\n\t\tVariable.prototype[Symbol.iterator] = function() {\r\n\t\t\tvar iterator = this.valueOf()[Symbol.iterator]()\r\n\t\t\tvar variable = this\r\n\t\t\tvar collectionOf = this.collectionOf\r\n\t\t\tif (collectionOf) {\r\n\t\t\t\tvar parent = this\r\n\t\t\t\tvar i = 0\r\n\t\t\t\treturn {\r\n\t\t\t\t\tnext: function() {\r\n\t\t\t\t\t\tvar result = iterator.next()\r\n\t\t\t\t\t\tif (!result.done) {\r\n\t\t\t\t\t\t\tresult.value = variable.property(i++, collectionOf)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn result\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn iterator\r\n\t\t}\r\n\t}\r\n\r\n\tvar VMap = Variable.VMap = lang.compose(Variable, function(value){\r\n\t\tthis.value = typeof value === 'undefined' ? this.default : value\r\n\t}, {\r\n\t\tfixed: true,\r\n\t\t// TODO: Move all the get and set functionality for maps out of Variable\r\n\t\tproperty: function(key, PropertyClass) {\r\n\t\t\tvar properties = this._properties || (this._properties = new Map())\r\n\t\t\tvar propertyVariable = properties.get(key)\r\n\t\t\tif (!propertyVariable) {\r\n\t\t\t\t// create the property variable\r\n\t\t\t\tpropertyVariable = new (PropertyClass || this.PropertyClass)()\r\n\t\t\t\tpropertyVariable.key = key\r\n\t\t\t\tpropertyVariable.parent = this\r\n\t\t\t\tif (propertyVariable.listeners) {\r\n\t\t\t\t\t// if it already has listeners, need to reinit it with the parent\r\n\t\t\t\t\tpropertyVariable.init()\r\n\t\t\t\t}\r\n\t\t\t\tproperties.set(key, propertyVariable)\r\n\t\t\t}\r\n\t\t\treturn propertyVariable\r\n\t\t}\r\n\t})\r\n\r\n\tvar Transform = Variable.Transform = lang.compose(Variable, function Transform(source, transform, sources) {\r\n\t\tif (source !== undefined || sources) {\r\n\t\t\tthis.source = source\r\n\t\t}\r\n\t\tif (transform) {\r\n\t\t\tthis.transform = transform\r\n\t\t\tif (sources) {\r\n\t\t\t\tfor (var i = 1, l = sources.length; i < l; i++) {\r\n\t\t\t\t\tthis['source' + i] = sources[i]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}, {\r\n\t\tgetValue: function(context, transformContext) {\r\n\t\t\t// first check to see if we have the variable already computed\r\n\t\t\tvar contextualizedVariable = context ? context.getContextualized(this) : this\r\n\t\t\tvar readyState = null\r\n\t\t\tif (contextualizedVariable) {\r\n\t\t\t\tif (contextualizedVariable.readyState == 'invalidated')\r\n\t\t\t\t\treadyState = contextualizedVariable.readyState = nextVersion.toString()\r\n\t\t\t\telse if (isFinite(contextualizedVariable.readyState)) {\r\n\t\t\t\t\t// will un-invalidate this later (contextualizedVariable.readyState = 'up-to-date')\r\n\t\t\t\t} else if (contextualizedVariable.listeners && contextualizedVariable.cachedVersion > -1) {\r\n\t\t\t\t\t// it is live, so we can shortcut and just return the cached value\r\n\t\t\t\t\tif (transformContext) {\r\n\t\t\t\t\t\ttransformContext.version = contextualizedVariable.cachedVersion\r\n\t\t\t\t\t\ttransformContext.contextualize(contextualizedVariable, context)\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn contextualizedVariable.cachedValue\r\n\t\t\t\t}\r\n\t\t\t\tif (!this.hasOwnProperty('source1') && context) {\r\n\t\t\t\t\t// TODO: Not sure if this is a helpful optimization or not\r\n\t\t\t\t\t// if we have a single source, we can use ifModifiedSince\r\n\t\t\t\t\t\t/*if (!contextualizedVariable && this.context && this.context.matches(context)) {\r\n\t\t\t\t\t\t\tcontextualizedVariable = this\r\n\t\t\t\t\t\t}*/\r\n\t\t\t\t}\r\n\t\t\t\treadyState = contextualizedVariable.readyState\r\n\t\t\t}\r\n\t\t\tif (!transformContext) {\r\n\t\t\t\ttransformContext = context ? context.newContext() : new Context()\r\n\t\t\t}\r\n\t\t\t// get the version in there\r\n\t \t\ttransformContext.nextProperty = 'transform'\r\n\t \t\tvar transform = this.transform && this.transform.valueOf(transformContext)\r\n\t\t\tvar args = []\r\n\t\t\tif (this.version) {\r\n\t\t\t\t// get the version in there\r\n\t\t\t\ttransformContext.hash(this.version)\r\n\t\t\t}\r\n\t\t\tif (contextualizedVariable && this.cachedVersion >= transformContext.version && contextualizedVariable.cachedVersion > -1 && !this.hasOwnProperty('source1')) {\r\n\t\t\t\ttransformContext.ifModifiedSince = contextualizedVariable.cachedVersion\r\n\t\t\t}\r\n\t\t\tvar argument, argumentName\r\n\t\t\tfor (var i = 0; (argument = this[argumentName = i > 0 ? 'source' + i : 'source']) || argumentName in this; i++) {\r\n\t\t\t\tif (transformContext) {\r\n\t\t\t\t\ttransformContext.nextProperty = argumentName\r\n\t\t\t\t}\r\n\t\t\t\targs[i] = argument && argument.valueOf(transformContext)\r\n\t\t\t}\r\n\t \t\tvar variable = this\r\n \t\t\treturn whenAll(args, function(resolved) {\r\n \t\t\t\tif (transformContext.ifModifiedSince !== undefined) {\r\n \t\t\t\t\ttransformContext.ifModifiedSince = undefined\r\n \t\t\t\t}\r\n\t\t\t\tvar contextualizedVariable = transformContext.contextualize(variable, context)\r\n\t\t\t\tvar version = transformContext.version\r\n\t\t\t\tif (contextualizedVariable && contextualizedVariable.cachedVersion === version) {\r\n\t\t\t\t\t// get it out of the cache\r\n\t\t\t\t\tcontextualizedVariable.readyState = 'up-to-date' // mark it as up-to-date now\r\n\t\t\t\t\tif (context && context.ifModifiedSince >= version && !contextualizedVariable.returnedVariable) {\r\n\t\t\t\t\t\treturn NOT_MODIFIED\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn contextualizedVariable.cachedValue\r\n\t\t\t\t}\r\n\t\t\t\tif (resolved[0] == NOT_MODIFIED) {\r\n\t\t\t\t\tthrow new Error('A not-modified signal was passed to a transform, which usually means a version number was decreased (they must monotically increase), computed version' + version +\r\n\t\t\t\t\t\t' this variable version: ' + contextualizedVariable.version + ' cached version: ' +\r\n\t\t\t\t\t\tcontextualizedVariable.cachedVersion + ' ifModifiedSince: ' +\r\n\t\t\t\t\t\ttransformContext.ifModifiedSince +\r\n\t\t\t\t\t\t' source version: ' + contextualizedVariable.source.version +\r\n\t\t\t\t\t\t' source cached version: ' + contextualizedVariable.source.cachedVersion)\r\n\t\t\t\t}\r\n\t\t\t\tvar result = transform ? transform.apply(variable, resolved) : resolved[0]\r\n\t\t\t\t// an empty ready state means it is up-to-date as well\r\n\t\t\t\tif (readyState == contextualizedVariable.readyState || readyState === null) {\r\n\t\t\t\t\tif (contextualizedVariable.readyState)\r\n\t\t\t\t\t\tcontextualizedVariable.readyState = 'up-to-date' // mark it as up-to-date now\r\n\t\t\t\t\t// cache it\r\n\t\t\t\t\tcontextualizedVariable.cachedVersion = transformContext.version\r\n\t\t\t\t\tcontextualizedVariable.cachedValue = result\r\n\t\t\t\t\tif (result && result.then) {\r\n\t\t\t\t\t\tresult.then(function() {\r\n\t\t\t\t\t\t\t// if it was a generator then the version could have been computed asynchronously as well\r\n\t\t\t\t\t\t\tcontextualizedVariable.cachedVersion = transformContext.version\r\n\t\t\t\t\t\t}, function() {\r\n\t\t\t\t\t\t\t// clear out the cache on an error\r\n\t\t\t\t\t\t\tcontextualizedVariable.cachedValue = null\r\n\t\t\t\t\t\t\tcontextualizedVariable.cachedVersion = 0\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn result\r\n\t\t\t})\r\n\t\t},\r\n\t\tforDependencies: function(callback) {\r\n\t\t\t// depend on the args\r\n\t\t\tVariable.prototype.forDependencies.call(this, callback)\r\n\t\t\tvar argument, argumentName\r\n\t\t\tfor (var i = 0; (argument = this[argumentName = i > 0 ? 'source' + i : 'source']) || argumentName in this; i++) {\r\n\t\t\t\tif (argument && argument.notifies) {\r\n\t\t\t\t\tcallback(argument)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tupdated: function(updateEvent, by, context, isDownstream) {\r\n\t\t\tthis.readyState = 'invalidated'\r\n\t\t\tif (by !== this.returnedVariable && updateEvent && updateEvent.type !== 'refresh') {\r\n\t\t\t\t// search for the output in the sources\r\n\t\t\t\tvar argument, argumentName\r\n\t\t\t\tfor (var i = 0; (argument = this[argumentName = i > 0 ? 'source' + i : 'source']) || argumentName in this; i++) {\r\n\t\t\t\t\tif (argument === by) {\r\n\t\t\t\t\t\t// if one of the args was updated, we need to do a full refresh (we can't compute differential events without knowledge of how the mapping function works)\r\n\t\t\t\t\t\tupdateEvent = new RefreshEvent()\r\n\t\t\t\t\t\tcontinue\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn Variable.prototype.updated.call(this, updateEvent, by, context, isDownstream)\r\n\t\t},\r\n\r\n\t\tgetUpdates: function(since) {\r\n\t\t\t// this always issues updates, nothing incremental can flow through it\r\n\t\t\tif (!since || since.version < getVersion()) {\r\n\t\t\t\treturn [new RefreshEvent()]\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetArguments: function() {\r\n\t\t\tvar args = []\r\n\t\t\tvar argument, argumentName\r\n\t\t\tfor (var i = 0; (argument = this[argumentName = i > 0 ? 'source' + i : 'source']) || argumentName in this; i++) {\r\n\t\t\t\targs.push(argument)\r\n\t\t\t}\r\n\t\t\treturn args\r\n\t\t},\r\n\t\tput: function(value, context) {\r\n\t\t\tvar call = this\r\n\t\t\treturn when(this.valueOf(context), function(originalValue) {\r\n\t\t\t\tif (originalValue === value && typeof value != 'object') {\r\n\t\t\t\t\treturn noChange\r\n\t\t\t\t}\r\n\t\t\t\tvar transform = call.transform.valueOf(context)\r\n\t\t\t\tif (transform.reverse) {\r\n\t\t\t\t\t(transform.reverse).call(call, value, call.getArguments(), context)\r\n\t\t\t\t\tcall.updated(null, null, context)\r\n\t\t\t\t} else if (originalValue && originalValue.put) {\r\n\t\t\t\t\treturn originalValue.put(value)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar error = new Error('Can not put value into a one-way transform, that lacks a reversal')\r\n\t\t\t\t\terror.deniedPut = true\r\n\t\t\t\t\tthrow error\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\t\tsetReverse: function(reverse) {\r\n\t\t\tthis.transform.valueOf().reverse = reverse\r\n\t\t\treturn this\r\n\t\t}\r\n\t})\r\n\r\n\tvar Item = lang.compose(Variable, function Item(value, content) {\r\n\t\tthis.value = value\r\n\t\tthis.collection = content\r\n\t}, {})\r\n\r\n\tvar ContextualizedVariable = lang.compose(Variable, function ContextualizedVariable(generic, subject) {\r\n\t\tthis.generic = generic\r\n\t\tthis.subject = subject\r\n\t}, {\r\n\t\tvalueOf: function() {\r\n\t\t\t// TODO: Lookup Context type for all of these using registry or something\r\n\t\t\tvar subject = this.subject\r\n\t\t\treturn this.generic.valueOf(subject.getContextualized ? subject : new Context(subject))\r\n\t\t},\r\n\r\n\t\tforDependencies: function(callback) {\r\n\t\t\tthis.sources && this.sources.forEach(callback)\r\n\t\t},\r\n\r\n\t\tgetVersion: function() {\r\n\t\t\tvar version = Variable.prototype.getVersion.call(this)\r\n\t\t\tvar sources = this.sources || 0\r\n\t\t\tfor (var i = 0, l = sources.length; i < l; i++) {\r\n\t\t\t\tvar source = sources[i]\r\n\t\t\t\tif (source.getFullVersion) {\r\n\t\t\t\t\tversion = Math.max(version, source.getFullVersion())\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn version\r\n\t\t},\r\n\r\n\t\tput: function(value) {\r\n\t\t\tvar subject = this.subject\r\n\t\t\treturn this.generic.put(value, subject.getContextualized ? subject : new Context(subject))\r\n\t\t}\r\n\t})\r\n\r\n\tvar VArray = Variable.VArray = lang.compose(Variable, function VArray(value) {\r\n\t\treturn makeSubVar(this, value, VArray)\r\n\t}, {\r\n\t\t_isStrictArray: true,\r\n\t\t/* TODO: at some point, we might add support for length, but need to make it be dependent/notified by array changes\r\n\t\tget length() {\r\n\t\t\tif (typeof this !== 'function') {\r\n\t\t\t\tObject.defineProperty(this, 'length', {\r\n\t\t\t\t\tconfigurable: true\r\n\t\t\t\t})\r\n\t\t\t\treturn this.property('length')\r\n\t\t\t}\r\n\t\t},\r\n\t\tset length(length) {\r\n\t\t\t// allow overriding\r\n\t\t\tObject.defineProperty(this, 'length', {\r\n\t\t\t\tvalue: length\r\n\t\t\t})\r\n\t\t},*/\r\n\t\tproperty: function(key, PropertyClass) {\r\n\t\t\treturn Variable.prototype.property.call(this, key, PropertyClass || typeof key === 'number' && this.collectionOf)\r\n\t\t},\r\n\t\tsplice: function(startingIndex, removalCount) {\r\n\t\t\tvar args = arguments\r\n\t\t\treturn arrayToModify(this, function(array) {\r\n\t\t\t\tif (startingIndex < 0) {\r\n\t\t\t\t\tstartingIndex = array.length + startingIndex\r\n\t\t\t\t}\r\n\t\t\t\tvar results = array.splice.apply(array, args)\r\n\t\t\t\tremovedAt(this, results, startingIndex, removalCount, array.length)\r\n\t\t\t\tinsertedAt(this, [].slice.call(args, 2), startingIndex, array.length)\r\n\t\t\t\treturn results\r\n\t\t\t})\r\n\t\t},\r\n\t\tpush: function() {\r\n\t\t\tvar args = arguments\r\n\t\t\treturn arrayToModify(this, function(array) {\r\n\t\t\t\tvar results = array.push.apply(array, args)\r\n\t\t\t\tinsertedAt(this, args, array.length - args.length, array.length)\r\n\t\t\t\treturn results\r\n\t\t\t})\r\n\t\t},\r\n\t\tunshift: function() {\r\n\t\t\tvar args = arguments\r\n\t\t\treturn arrayToModify(this, function(array) {\r\n\t\t\t\tvar results = array.unshift.apply(array, args)\r\n\t\t\t\tinsertedAt(this, args, 0, array.length)\r\n\t\t\t\treturn results\r\n\t\t\t})\r\n\t\t},\r\n\t\tpop: function() {\r\n\t\t\treturn arrayToModify(this, function(array) {\r\n\t\t\t\tvar results = array.pop()\r\n\t\t\t\tremovedAt(this, [results], array.length, 1)\r\n\t\t\t\treturn results\r\n\t\t\t})\r\n\t\t},\r\n\t\tshift: function() {\r\n\t\t\treturn arrayToModify(this, function(array) {\r\n\t\t\t\tvar results = array.shift()\r\n\t\t\t\tremovedAt(this, [results], 0, 1, array.length)\r\n\t\t\t\treturn results\r\n\t\t\t})\r\n\t\t}\r\n\t})\r\n\tVArray.of = function(collectionOf) {\r\n\t\tvar ArrayClass = VArray({collectionOf: collectionOf})\r\n\t\tif (this !== VArray) {\r\n\t\t\t// new operator\r\n\t\t\treturn new ArrayClass()\r\n\t\t}\r\n\t\treturn ArrayClass\r\n\t}\r\n\r\n\tfunction toArray(array) {\r\n\t\tif (!array) {\r\n\t\t\treturn []\r\n\t\t}\r\n\t\tif (array.length > -1) {\r\n\t\t\treturn array\r\n\t\t}\r\n\t\tvar newArray = []\r\n\t\tif (array.forEach) {\r\n\t\t\tarray.forEach(function(item) {\r\n\t\t\t\tnewArray.push(item)\r\n\t\t\t})\r\n\t\t}\r\n\t\treturn newArray\r\n\t}\r\n\r\n\tvar getValue\r\n\tvar GeneratorVariable = lang.compose(Transform, function ReactiveGenerator(generator){\r\n\t\tthis.generator = generator\r\n\t}, {\r\n\t\ttransform: {\r\n\t\t\tvalueOf: function(context) {\r\n\t\t\t\tvar resuming\r\n\t\t\t\treturn next\r\n\t\t\t\tfunction next() {\r\n\t\t\t\t\tvar lastValue\r\n\t\t\t\t\tvar i\r\n\t\t\t\t\tvar generatorIterator\r\n\t\t\t\t\tvar isThrowing\r\n\t\t\t\t\tif (resuming) {\r\n\t\t\t\t\t\t// resuming from a promise\r\n\t\t\t\t\t\tgeneratorIterator = resuming.iterator\r\n\t\t\t\t\t\ti = resuming.i\r\n\t\t\t\t\t\tlastValue = resuming.value\r\n\t\t\t\t\t\tisThrowing = resuming.isThrowing\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (context) {\r\n\t\t\t\t\t\t\t// must restart the context, if the input values had previously been checked and hashed against this context, must restart them.\r\n\t\t\t\t\t\t\tcontext.restart()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ti = 0\r\n\t\t\t\t\t\tgeneratorIterator = this.generator()\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdo {\r\n\t\t\t\t\t\tvar stepReturn = generatorIterator[isThrowing ? 'throw' : 'next'](lastValue)\r\n\t\t\t\t\t\tif (stepReturn.done) {\r\n\t\t\t\t\t\t\tvar oldSources = this.sources || []\r\n\t\t\t\t\t\t\tvar newLength = i\r\n\t\t\t\t\t\t\tvar newSources = []\r\n\t\t\t\t\t\t\twhile(this[argumentName = i > 0 ? 'source' + i : 'source']) {\r\n\t\t\t\t\t\t\t\t// clear out old properties\r\n\t\t\t\t\t\t\t\tthis[argumentName] = undefined\r\n\t\t\t\t\t\t\t\ti++\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfor (i = 0; i < newLength; i++) {\r\n\t\t\t\t\t\t\t\t// create new array\r\n\t\t\t\t\t\t\t\tvar argumentName = i > 0 ? 'source' + i : 'source'\r\n\t\t\t\t\t\t\t\tif (this[argumentName] && this[argumentName].notifies) {\r\n\t\t\t\t\t\t\t\t\tnewSources.push(this[argumentName])\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tfor (i = 0; i < oldSources.length; i++) {\r\n\t\t\t\t\t\t\t\tif (newSources.indexOf(oldSources[i]) == -1) {\r\n\t\t\t\t\t\t\t\t\toldSources[i].stopNotifies(this)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis.sources = newSources\r\n\t\t\t\t\t\t\treturn stepReturn.value\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar nextVariable = stepReturn.value\r\n\t\t\t\t\t\t// compare with the arguments from the last\r\n\t\t\t\t\t\t// execution to see if they are the same\r\n\t\t\t\t\t\ttry {\r\n\t\t\t\t\t\t\tvar argumentName = i > 0 ? 'source' + i : 'source'\r\n\t\t\t\t\t\t\tif (this[argumentName] !== nextVariable || this[argumentName] === undefined) {\r\n\t\t\t\t\t\t\t\t// subscribe if it is a variable\r\n\t\t\t\t\t\t\t\tif (nextVariable && nextVariable.notifies) {\r\n\t\t\t\t\t\t\t\t\tif (this.listeners) {\r\n\t\t\t\t\t\t\t\t\t\tnextVariable.notifies(this)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tthis[argumentName] = nextVariable\r\n\t\t\t\t\t\t\t\t} else if (typeof nextVariable === 'function' && isGenerator(nextVariable)) {\r\n\t\t\t\t\t\t\t\t\tresuming = {\r\n\t\t\t\t\t\t\t\t\t\ti: i,\r\n\t\t\t\t\t\t\t\t\t\titerator: nextVariable()\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tnext.call(this)\r\n\t\t\t\t\t\t\t\t\ti = resuming.i\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tthis[argumentName] = null\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\ti++\r\n\t\t\t\t\t\t\tif (context) {\r\n\t\t\t\t\t\t\t\tcontext.nextProperty = argumentName\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tlastValue = nextVariable && nextVariable.valueOf(context)\r\n\t\t\t\t\t\t\tif (lastValue && lastValue.then) {\r\n\t\t\t\t\t\t\t\t// if it is a promise, we will wait on it\r\n\t\t\t\t\t\t\t\tvar variable = this\r\n\t\t\t\t\t\t\t\tresuming = {\r\n\t\t\t\t\t\t\t\t\ti: i,\r\n\t\t\t\t\t\t\t\t\titerator: generatorIterator\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// and return the promise so that the next caller can wait on this\r\n\t\t\t\t\t\t\t\treturn lastValue.then(function(value) {\r\n\t\t\t\t\t\t\t\t\tresuming.value = value\r\n\t\t\t\t\t\t\t\t\treturn next.call(variable)\r\n\t\t\t\t\t\t\t\t}, function(error) {\r\n\t\t\t\t\t\t\t\t\tresuming.value = error\r\n\t\t\t\t\t\t\t\t\tresuming.isThrowing = true\r\n\t\t\t\t\t\t\t\t\treturn next.call(variable)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tisThrowing = false\r\n\t\t\t\t\t\t} catch (error) {\r\n\t\t\t\t\t\t\tisThrowing = true\r\n\t\t\t\t\t\t\tlastValue = error\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} while(true)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\n\tvar Validating = lang.compose(Transform, function(source) {\r\n\t\tthis.source = source\r\n\t}, {\r\n\t\ttransform: function(target) {\r\n\t\t\tvar target = this.source\r\n\t\t\treturn target.validate(target, target.schema)\r\n\t\t}\r\n\t})\r\n\r\n\tfunction makeSubVar(instance, value, Type) {\r\n\t\tif (instance instanceof Variable) {\r\n\t\t\tVariable.call(instance, value)\r\n\t\t} else {\r\n\t\t\treturn Type.with(value)\r\n\t\t}\r\n\t}\r\n\r\n\tfunction objectUpdated(object) {\r\n\t\t// simply notifies any subscribers to an object, that it has changed\r\n\t\tvar listeners = propertyListenersMap.get(object)\r\n\t\tif (listeners) {\r\n\t\t\tfor (var i = 0, l = listeners.length; i < l; i++) {\r\n\t\t\t\tlisteners[i]._propertyChange(null, object)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tvar argsToArray = {\r\n\t\tapply: function(instance, args) {\r\n\t\t\treturn args\r\n\t\t}\r\n\t}\r\n\r\n\tfunction all(array, transform) {\r\n\t\t// This is intended to mirror Promise.all. It actually takes\r\n\t\t// an iterable, but for now we are just looking for array-like\r\n\t\tif (array instanceof Array) {\r\n\t\t\tif (array.length > 1000) {\r\n\t\t\t\t //throw new Error('too big')\r\n\t\t\t}\r\n\t\t\tif (array.length > 0 || typeof transform === 'function') {\r\n\t\t\t\t// TODO: Return VArray Transform\r\n\t\t\t\treturn new Transform(array[0], typeof transform === 'function' ? transform : argsToArray, array)\r\n\t\t\t} else {\r\n\t\t\t\treturn new VArray([])\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (arguments.length > 1) {\r\n\t\t\t// support multiple arguments as an array\r\n\t\t\treturn new Transform(arguments[0], argsToArray, arguments).as(VArray)\r\n\t\t}\r\n\t\tif (typeof array === 'object') {\r\n\t\t\t// allow an object as a hash to be mapped\r\n\t\t\tvar keyMapping = []\r\n\t\t\tvar valueArray = []\r\n\t\t\tfor (var key in array) {\r\n\t\t\t\tkeyMapping.push(key)\r\n\t\t\t\tvalueArray.push(array[key])\r\n\t\t\t}\r\n\t\t\treturn new Variable(function(results) {\r\n\t\t\t\tvar resultObject = {}\r\n\t\t\t\tfor (var i = 0; i < results.length; i++) {\r\n\t\t\t\t\tresultObject[keyMapping[i]] = results[i]\r\n\t\t\t\t}\r\n\t\t\t\treturn resultObject\r\n\t\t\t}).apply(null, valueArray)\r\n\t\t}\r\n\t\tthrow new TypeError('Variable.all requires an array')\r\n\t}\r\n\r\n\tfunction hasOwn(Target, createForInstance) {\r\n\r\n\t\tvar ownedClasses = this.ownedClasses || (this.ownedClasses = new WeakMap())\r\n\t\t// TODO: assign to super classes\r\n\t\tvar Class = this\r\n\t\townedClasses.set(Target, createForInstance || function() { return new Target() })\r\n\t\treturn this\r\n\t}\r\n\tfunction generalizeClass() {\r\n\t\tvar prototype = this.prototype\r\n\t\tvar prototypeNames = Object.getOwnPropertyNames(prototype)\r\n\t\tfor(var i = 0, l = prototypeNames.length; i < l; i++) {\r\n\t\t\tvar name = prototypeNames[i]\r\n\t\t\tObject.defineProperty(this, name, getGeneralizedDescriptor(Object.getOwnPropertyDescriptor(prototype, name), name, this))\r\n\t\t}\r\n\t}\r\n\tfunction getGeneralizedDescriptor(descriptor, name, Class) {\r\n\t\tif (typeof descriptor.value === 'function') {\r\n\t\t\treturn {\r\n\t\t\t\tvalue: generalizeMethod(Class, name)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn descriptor\r\n\t\t}\r\n\t}\r\n\tfunction generalizeMethod(Class, name) {\r\n\t\t// I think we can just rely on `this`, but we could use the argument:\r\n\t\t// function(possibleEvent) {\r\n\t\t// \tvar target = possibleEvent && possibleEvent.target\r\n\t\tvar method = Class[name] = function() {\r\n\t\t\tvar instance = Class.for(this)\r\n\t\t\treturn instance[name].apply(instance, arguments)\r\n\t\t}\r\n\t\tmethod.for = function(context) {\r\n\t\t\tvar instance = Class.for(context)\r\n\t\t\treturn function() {\r\n\t\t\t\treturn instance[name].apply(instance, arguments)\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn method\r\n\t}\r\n\r\n\tvar defaultContext = {\r\n\t\tname: 'Default context',\r\n\t\tdescription: 'This object is the default context for classes, corresponding to a singleton instance of that class',\r\n\t\tconstructor: {\r\n\t\t\tgetForClass: function(subject, Class) {\r\n\t\t\t\treturn Class.defaultInstance\r\n\t\t\t}\r\n\t\t},\r\n\t\tcontains: function() {\r\n\t\t\treturn true // contains everything\r\n\t\t}\r\n\t}\r\n\tfunction instanceForContext(Class, context) {\r\n\t\tif (!context) {\r\n\t\t\treturn Class.defaultInstance\r\n\t\t}\r\n\t\treturn context.specify(Class)\r\n//\t\tvar instance = context.subject.constructor.getForClass && context.subject.constructor.getForClass(context.subject, Class) || Class.defaultInstance\r\n//\t\tcontext.distinctSubject = mergeSubject(context.distinctSubject, instance.subject)\r\n//\t\treturn instance\r\n\t}\r\n\tVariable.valueOf = function(context) {\r\n\t\t// contextualized valueOf\r\n\t\treturn instanceForContext(this, context).valueOf(context)\r\n\t}\r\n\tVariable.getValue = function(context) {\r\n\t\t// contextualized getValue\r\n\t\treturn instanceForContext(this, context)\r\n\t}\r\n\tVariable.put = function(value, context) {\r\n\t\t// contextualized setValue\r\n\t\treturn instanceForContext(this, context).put(value, context)\r\n\t}\r\n\tVariable.for = function(subject) {\r\n\t\tif (subject != null) {\r\n\t\t\tif (subject.target && !subject.constructor.getForClass) {\r\n\t\t\t\t// makes HTML events work\r\n\t\t\t\tsubject = subject.target\r\n\t\t\t}\r\n\t\t\tvar instance\r\n\t\t\tinstance = new Context(subject).specify(this)\r\n\t\t\tif (instance && !instance.subject) {\r\n\t\t\t\tinstance.subject = subject\r\n\t\t\t}\r\n\t\t\t// TODO: Do we have a global context that we set on defaultInstance?\r\n\t\t\treturn instance || this.defaultInstance\r\n\t\t} else {\r\n\t\t\treturn this.defaultInstance\r\n\t\t}\r\n\t}\r\n\tVariable.from = function(value) {\r\n\t\tif (value && typeof value === 'object') {\r\n\t\t\t// a plain object, we use our own map to retrieve the instance (or create one)\r\n\t\t\tvar instanceMap = this.instanceMap || (this.instanceMap = new WeakMap())\r\n\t\t\tvar instance = instanceMap.get(value)\r\n\t\t\tif (!instance) {\r\n\t\t\t\tinstanceMap.set(value, instance = new this(value))\r\n\t\t\t}\r\n\t\t\treturn instance\r\n\t\t} else {\r\n\t\t\t// a primitive, just unconditionally create a new variable for it\r\n\t\t\treturn new this(value)\r\n\t\t}\r\n\t}\r\n\tVariable.notifies = function(target) {\r\n\t\tthis.defaultInstance.notifies(target)\r\n\t}\r\n\tVariable.stopNotifies = function(target) {\r\n\t\tthis.defaultInstance.stopNotifies(target)\r\n\t}\r\n\tVariable.getCollectionOf = function () {\r\n\t\treturn this.collectionOf\r\n\t}\r\n\tVariable.updated = function(updateEvent, by, context) {\r\n\t\treturn instanceForContext(this, context).updated(updateEvent, by, context)\r\n\t}\r\n\tvar proxyHandler = {\r\n\t\tget: function(target, name) {\r\n\t\t\tvar value = target[name]\r\n\t\t\treturn value === undefined ? target.property(name) : value\r\n\t\t},\r\n\t\tset: function(target, name, value) {\r\n\t\t\tvar oldValue = target[name]\r\n\t\t\tif (oldValue && oldValue.put) {\r\n\t\t\t\t// own property available to put into\r\n\t\t\t\toldValue.put(value)\r\n\t\t\t} else {\r\n\t\t\t\ttarget.set(name, value)\r\n\t\t\t}\r\n\t\t\treturn true\r\n\t\t},\r\n\t\thas: function(target, name) {\r\n\t\t\treturn (name in target) || (name in target.valueOf())\r\n\t\t},\r\n\t\tdeleteProperty: function(target, name) {\r\n\t\t\treturn proxyHandler.set(target, name, undefined)\r\n\t\t},\r\n\t\townKeys: function(target) {\r\n\t\t\treturn Object.getOwnPropertyNames(target.valueOf())\r\n\t\t}\r\n\t}\r\n\tVariable.proxy = function(source) {\r\n\t\t// should we memoize?\r\n\t\treturn new Proxy(source instanceof this ? source : this.from(source), proxyHandler)\r\n\t}\r\n\tObject.defineProperty(Variable, 'collectionOf', {\r\n\t\tget: function() {\r\n\t\t\treturn this._collectionOf\r\n\t\t},\r\n\t\tset: function(ItemClass) {\r\n\t\t\tif (this._collectionOf != ItemClass) {\r\n\t\t\t\tthis._collectionOf = ItemClass\r\n\t\t\t\tItemClass.collection = this\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\tObject.defineProperty(Variable, 'collection', {\r\n\t\tget: function() {\r\n\t\t\treturn this._collection\r\n\t\t},\r\n\t\tset: function(Collection) {\r\n\t\t\tif (this._collection != Collection) {\r\n\t\t\t\tthis._collection = Collection\r\n\t\t\t\tCollection.collectionOf = this\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\tVariable.nextVersion = Date.now()\r\n\tVariable.generalize = generalizeClass\r\n\tVariable.call = Function.prototype.call // restore these\r\n\tVariable.apply = Function.prototype.apply\r\n\r\n\tfunction VFunction() {\r\n\t}\r\n\t(VFunction.returns = function(Type){\r\n\t\tfunction VFunction() {}\r\n\t\tVFunction.defineAs = function(method)\t{\r\n\t\t\treturn {\r\n\t\t\t\tvalue: function() {\r\n\t\t\t\t\tvar args = arguments\r\n\t\t\t\t\t// TODO: make these args part of the call so variables can be resolved\r\n\t\t\t\t\t// TODO: may actually want to do getValue().invoke()\r\n\t\t\t\t\treturn new Type(new Transform(this, function(value) {\r\n\t\t\t\t\t\t\treturn value == null ? undefined : value[method].apply(value, args)\r\n\t\t\t\t\t}))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn VFunction\r\n\t})\r\n\r\n\tfunction VMethod() {\r\n\t}\r\n\tVMethod.defineAs = function(method) {\r\n\t\treturn {\r\n\t\t\tvalue: function() {\r\n\t\t\t\tvar args = arguments\r\n\t\t\t\t// TODO: make these args part of the call so variables can be resolved\r\n\t\t\t\t// TODO: may actually want to do getValue().invoke()\r\n\t\t\t\tvar variable = this\r\n\t\t\t\treturn when(this.valueOf(), function(value) {\r\n\t\t\t\t\tvar returnValue = value[method].apply(value, args)\r\n\t\t\t\t\treturn when(variable.put(value), function() {\r\n\t\t\t\t\t\treturn returnValue\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\t\t\r\n\t}\r\n\r\n\tfunction VString(value) {\r\n\t\treturn makeSubVar(this, typeof value === 'object' ? value : String(value), VString)\r\n\t}\r\n\r\n\tfunction VNumber(value) {\r\n\t\treturn makeSubVar(this, typeof value === 'object' ? value : Number(value), VNumber)\r\n\t}\r\n\t\r\n\tVString = Variable.with({\r\n\t\tcharAt: VFunction.returns(VString),\r\n\t\tcodeCharAt: VFunction.returns(VNumber),\r\n\t\tindexOf: VFunction.returns(VNumber),\r\n\t\tlastIndexOf: VFunction.returns(VNumber),\r\n\t\tmatch: VFunction.returns(VArray),\r\n\t\treplace: VFunction.returns(VString),\r\n\t\tsubstr: VFunction.returns(VString),\r\n\t\tslice: VFunction.returns(VString),\r\n\t\ttoUpperCase: VFunction.returns(VString),\r\n\t\ttoLowerCase: VFunction.returns(VString),\r\n\t\tlength: VNumber\r\n\t}, VString)\r\n\r\n\tVNumber = Variable.with({\r\n\t\ttoFixed: VFunction.returns(VString),\r\n\t\ttoExponential: VFunction.returns(VString),\r\n\t\ttoPrecision: VFunction.returns(VString),\r\n\t\ttoLocaleString: VFunction.returns(VString)\r\n\t}, VNumber)\r\n\r\n\tfunction VBoolean(value) {\r\n\t\treturn makeSubVar(this, typeof value === 'object' ? value : Boolean(value), VBoolean)\r\n\t}\r\n\tVBoolean = Variable.with({}, VBoolean)\r\n\r\n\tfunction VSet(value) {\r\n\t\treturn makeSubVar(this, value instanceof Array ? new Set(value) : value, VSet)\r\n\t}\r\n\tVSet = Variable.with({\r\n\t\thas: VFunction.returns(VBoolean),\r\n\t\tadd: VMethod,\r\n\t\tclear: VMethod,\r\n\t\tdelete: VMethod\r\n\t}, VSet)\r\n\tObject.defineProperty(VSet.prototype, 'array', {\r\n\t\tget: function() {\r\n\t\t\treturn this._array || (this._array = this.to(toArray).as(VArray))\r\n\t\t}\r\n\t})\r\n\r\n\tfunction VDate(value) {\r\n\t\treturn makeSubVar(this, typeof value === 'object' ? value : new Date(value), VDate)\r\n\t}\r\n\tVDate = Variable.with({\r\n\t\ttoDateString: VFunction.returns(VString),\r\n\t\ttoTimeString: VFunction.returns(VString),\r\n\t\ttoGMTString: VFunction.returns(VString),\r\n\t\ttoUTCString: VFunction.returns(VString),\r\n\t\tgetTime: VFunction.returns(VNumber),\r\n\t\tsetTime: VMethod\r\n\t}, VDate)\r\n\r\n\tvar VPromise = lang.compose(Variable, function VPromise(value) {\r\n\t\treturn makeSubVar(this, value, VPromise)\r\n\t}, {\r\n\t\tthen: function(onResolve, onError) {\r\n\t\t\t// short hand for this.valueOf().then()\r\n\t\t\tvar value = this.valueOf()\r\n\t\t\tif (value && value.then) {\r\n\t\t\t\treturn value.then(onResolve, onError)\r\n\t\t\t}\r\n\t\t\treturn onResolve(value)\r\n\t\t},\r\n\t})\r\n\r\n\tvar primitives = {\r\n\t\t'string': VString,\r\n\t\t'number': VNumber,\r\n\t\t'boolean': VBoolean\r\n\t}\r\n\tfunction getType(Type) {\r\n\t\tif (typeof Type === 'string') {\r\n\t\t\treturn primitives[Type]\r\n\t\t} else if (typeof Type === 'object') {\r\n\t\t\tif (Type instanceof Array) {\r\n\t\t\t\treturn VArray.of(getType(Type[0]))\r\n\t\t\t}\r\n\t\t\tvar typedObject = {}\r\n\t\t\tfor (var key in Type) {\r\n\t\t\t\ttypedObject[key] = getType(Type[key])\r\n\t\t\t}\r\n\t\t\treturn Variable.with(typedObject)\r\n\t\t}\r\n\t\treturn Type\r\n\t}\r\n\tvar exports = {\r\n\t\t__esModule: true,\r\n\t\tVariable: Variable,\r\n\t\tVArray: VArray,\r\n\t\tdefault: Variable,\r\n\t\tVString: VString,\r\n\t\tVNumber: VNumber,\r\n\t\tVBoolean: VBoolean,\r\n\t\tVPromise: VPromise,\r\n\t\tVDate: VDate,\r\n\t\tVSet: VSet,\r\n\t\tVMap: VMap,\r\n\t\tTransform: Transform,\r\n\t\tdeny: deny,\r\n\t\tnoChange: noChange,\r\n\t\tContext: Context,\r\n\t\tGeneratorVariable: GeneratorVariable,\r\n\t\tItem: Item,\r\n\t\tNotifyingContext: NotifyingContext,\r\n\t\tContext: Context,\r\n\t\tall: all,\r\n\t\tobjectUpdated: objectUpdated,\r\n\t\treactive: reactive,\r\n\t\tNOT_MODIFIED: NOT_MODIFIED\r\n\t}\r\n\tvar typeScriptConversions = new Map()\r\n\ttypeScriptConversions.set(Array, VArray)\r\n\ttypeScriptConversions.set(String, VString)\r\n\ttypeScriptConversions.set(Number, VNumber)\r\n\ttypeScriptConversions.set(Boolean, VBoolean)\r\n\tfunction reactive(target, key) { // for typescript decorators\r\n    var Type = Reflect.getMetadata('design:type', target, key)\r\n    console.log('Type', Type)\r\n    if (!Type.notifies) {\r\n    \tType = typeScriptConversions.get(Type) || Variable\r\n    }\r\n    Object.defineProperty(target, key, {\r\n      get: function() {\r\n      \treturn reactive.get(this, key, Type)\r\n      },\r\n      set: function(value) {\r\n      \treactive.set(this, key, value)\r\n      },\r\n      enumerable: true\r\n    })\r\n  }\r\n\treactive.get = function(target, key, Type) { // for babel decorators\r\n    var property = (target._properties || (target._properties = {}))[key]\r\n    if (!property) {\r\n      target._properties[key] = property = new (getType(Type))()\r\n      if (target.getValue) {\r\n        property.key = key\r\n        property.parent = target\r\n\t\t\t\tif (property.listeners) {\r\n\t\t\t\t\t// if it already has listeners, need to reinit it with the parent\r\n\t\t\t\t\tproperty.init()\r\n\t\t\t\t}\r\n      }\r\n    }\r\n    return property\r\n  }\r\n  reactive.set = function(target, key, value) {\r\n    var property = target[key]\r\n    property.parent ? property._changeValue(null, RequestSet, value) : property.put(value)\r\n  }\r\n\r\n\r\n\tvar IterativeMethod = lang.compose(Transform, function(source, method, args) {\r\n\t\tthis.source = source\r\n\t\t// source.interestWithin = true\r\n\t\tthis.method = method\r\n\t\tthis.arguments = args\r\n\t}, {\r\n\t\ttransform: function(array) {\r\n\t\t\tvar method = this.method\r\n\t\t\tvar isStrictArray = this.source && this.source._isStrictArray\r\n\t\t\tif (array && array.forEach) {\r\n\t\t\t\t// already an array\r\n\t\t\t\t//array = this._mappedItems(array)\r\n\t\t\t} else if (isStrictArray) {\r\n\t\t\t\tarray = []\r\n\t\t\t} else {\r\n\t\t\t\t// if not an array convert to an array\r\n\t\t\t\tarray = [array]\r\n\t\t\t}\r\n\t\t\tif (typeof method === 'string') {\r\n\t\t\t\t// apply method\r\n\t\t\t\treturn array[method].apply(array, this.arguments)\r\n\t\t\t} else {\r\n\t\t\t\treturn method(array, this.arguments)\r\n\t\t\t}\r\n\t\t},\r\n\t\t_mappedItems: function(array) {\r\n\t\t\tvar source = this.source\r\n\t\t\tvar collectionOf = source && source.collectionOf\r\n\t\t\treturn collectionOf ? array.map(function(item, i) {\r\n\t\t\t\tvar wrapped = collectionOf.from(item)\r\n\t\t\t\twrapped.collection = source\r\n\t\t\t\treturn wrapped\r\n\t\t\t}) : array\r\n\t\t},\r\n\r\n\t\tgetCollectionOf: function(){\r\n\t\t\treturn this.source.getCollectionOf()\r\n\t\t},\r\n\t\t_isStrictArray: true\r\n\t})\r\n\r\n\tfunction defineArrayMethod(method, constructor, properties, returns) {\r\n\t\tvar IterativeResults = lang.compose(returns ? returns.as(IterativeMethod) : IterativeMethod, constructor, properties)\r\n\t\tIterativeResults.prototype.method || (IterativeResults.prototype.method = method)\r\n\t\tObject.defineProperty(IterativeResults.prototype, 'isIterable', {value: true});\r\n\t\tVArray[method] = VArray.prototype[method] = function() {\r\n\t\t\tvar results = new IterativeResults(this)\r\n\t\t\tresults.source = this\r\n\t\t\tresults.arguments = arguments\r\n\t\t\treturn results\r\n\t\t}\r\n\t}\r\n\r\n\tdefineArrayMethod('filter', function Filtered() {}, {\r\n\t\tupdated: function(event, by, context, isDownstream) {\r\n\t\t\tif (!event || event.modifier === this || (event.modifier && event.modifier.constructor === this)) {\r\n\t\t\t\treturn Transform.prototype.updated.call(this, event, by, context)\r\n\t\t\t}\r\n\t\t\tvar contextualizedVariable = context && context.getContextualized(this) || this\r\n\t\t\tif (event.type === 'delete') {\r\n\t\t\t\tvar index = contextualizedVariable.cachedValue.indexOf(event.oldValue)\r\n\t\t\t\tif (index > -1) {\r\n\t\t\t\t\tcontextualizedVariable.splice(index, 1)\r\n\t\t\t\t}\r\n\t\t\t} else if (event.type === 'add') {\r\n\t\t\t\tif ([event.value].filter(this.arguments[0]).length > 0) {\r\n\t\t\t\t\tcontextualizedVariable.push(event.value)\r\n\t\t\t\t}\r\n\t\t\t} else if (event.type === 'update') {\r\n\t\t\t\tvar object = event.parent.valueOf(context)\r\n\t\t\t\tvar index = contextualizedVariable.cachedValue.indexOf(object)\r\n\t\t\t\tvar matches = [object].filter(this.arguments[0]).length > 0\r\n\t\t\t\tif (index > -1) {\r\n\t\t\t\t\tif (matches) {\r\n\t\t\t\t\t\treturn new PropertyChangeEvent(index, event, contextualizedVariable.cachedValue,\r\n\t\t\t\t\t\t\t// might need to do something with this\r\n\t\t\t\t\t\t\tobject)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcontextualizedVariable.splice(index, 1)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\telse {\r\n\t\t\t\t\tif (matches) {\r\n\t\t\t\t\t\tcontextualizedVariable.push(object)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// else nothing mactches\r\n\t\t\t\t}\r\n\t\t\t\treturn\r\n\t\t\t} else {\r\n\t\t\t\treturn Transform.prototype.updated.call(this, event, by, context, isDownstream)\r\n\t\t\t}\r\n\t\t}\r\n\t}, VArray)\r\n\tdefineArrayMethod('map', function Mapped(source) {\r\n\t\tthis._isStrictArray = source._isStrictArray\r\n\t}, {\r\n\t\ttransform: function(array) {\r\n\t\t\tvar isStrictArray = this.source && this.source._isStrictArray\r\n\t\t\tvar mapFunction = this.arguments[0]\r\n\t\t\tif (array && array.map) {\r\n\t\t\t\tvar source = this.source\r\n\t\t\t\tvar collectionOf = source && source.collectionOf\r\n\t\t\t\treturn array.map(collectionOf ? function(item, i) {\r\n\t\t\t\t\treturn mapFunction(source.property(i), i)\r\n\t\t\t\t} : mapFunction)\r\n\t\t\t} else if (!isStrictArray) {\r\n\t\t\t\tif (method === 'map'){\r\n\t\t\t\t\t// fast path, and special behavior for map\r\n\t\t\t\t\treturn mapFunction(array)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn IterativeMethod.prototype.transform.call(this, array)\r\n\t\t},\r\n\t\tupdated: function(event, by, context, isDownstream) {\r\n\t\t\tif (!event || event.modifier === this || (event.modifier && event.modifier.constructor === this)) {\r\n\t\t\t\treturn Variable.prototype.updated.call(this, event, by, context)\r\n\t\t\t}\r\n\t\t\tvar contextualizedVariable = context && context.getContextualized(this) || this\r\n\t\t\tif (event.type === 'delete') {\r\n\t\t\t\tcontextualizedVariable.splice(event.previousIndex, 1)\r\n\t\t\t} else if (event.type === 'add') {\r\n\t\t\t\tvar array = contextualizedVariable.cachedValue\r\n\t\t\t\tcontextualizedVariable.push(this.arguments[0].call(this.arguments[1], this.source.property(array && array.length)))\r\n\t\t\t} else if (event.type === 'update') {\r\n\t\t\t\tif (this.getCollectionOf()) {\r\n\t\t\t\t\treturn // if it has typed items, we don't need to propagate update events, since they will be handled by the variable item.\r\n\t\t\t\t}\r\n\t\t\t\tvar object = event.parent.valueOf(context)\r\n\t\t\t\tvar array = contextualizedVariable.cachedValue\r\n\t\t\t\tvar index = event.key\r\n\t\t\t\tvar value = event.value\r\n\t\t\t\tif (index > -1) {\r\n\t\t\t\t\t// update was to an index property of this array variable\r\n\t\t\t\t\tvalue = object[index]\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// update was inside an object inside of our array\r\n\t\t\t\t\tindex = array && array.map && array.indexOf(object)\r\n\t\t\t\t}\r\n\t\t\t\tif (index > -1) {\r\n\t\t\t\t\tcontextualizedVariable.splice(index, 1, this.arguments[0].call(this.arguments[1], this.source.property(index)))\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn Transform.prototype.updated.call(this, event, by, context, isDownstream)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn Transform.prototype.updated.call(this, event, by, context, isDownstream)\r\n\t\t\t}\r\n\t\t}\r\n\t}, VArray)\r\n\tdefineArrayMethod('reduce', function Reduced() {})\r\n\tdefineArrayMethod('reduceRight', function Reduced() {})\r\n\tdefineArrayMethod('some', function Aggregated() {}, {}, VBoolean)\r\n\tdefineArrayMethod('every', function Aggregated() {}, {}, VBoolean)\r\n\tdefineArrayMethod('slice', function Aggregated() {}, {}, VArray)\r\n\tdefineArrayMethod('keyBy', function UniqueIndex(source, args) {}, {\r\n\t\tproperty: VMap.prototype.property,\r\n\t\tmethod: function(array, args) {\r\n\t\t\tvar index = new Map()\r\n\t\t\tvar keyGenerator = args[0]\r\n\t\t\tvar valueGenerator = args[1]\r\n\t\t\tvar hasKeyFunction = typeof keyGenerator === 'function'\r\n\t\t\tvar hasValueFunction = typeof valueGenerator === 'function'\r\n\t\t\tvar hasKey = !!keyGenerator\r\n\t\t\tfor (var i = 0, l = array.length; i < l; i++) {\r\n\t\t\t\tvar element = array[i]\r\n\t\t\t\tindex.set(\r\n\t\t\t\t\thasKeyFunction ? keyGenerator(element, emit) :\r\n\t\t\t\t\t\thasKey ? element[keyGenerator] : element,\r\n\t\t\t\t\thasValueFunction ? valueGenerator(element) : element)\r\n\t\t\t}\r\n\t\t\tfunction emit(key, value) {\r\n\t\t\t\tindex.set(key, value)\r\n\t\t\t}\r\n\t\t\treturn index\r\n\t\t}\r\n\t})\r\n\r\n\tdefineArrayMethod('groupBy', function UniqueIndex(source, args) {}, {\r\n\t\tproperty: VMap.prototype.property,\r\n\t\tmethod: function(array, args) {\r\n\t\t\tvar index = new Map()\r\n\t\t\tvar keyGenerator = args[0]\r\n\t\t\tvar valueGenerator = args[1]\r\n\t\t\tvar hasKeyFunction = typeof keyGenerator === 'function'\r\n\t\t\tvar hasValueFunction = typeof valueGenerator === 'function'\r\n\t\t\tvar hasKey = !!keyGenerator\r\n\t\t\tfor (var i = 0, l = array.length; i < l; i++) {\r\n\t\t\t\tvar element = array[i]\r\n\t\t\t\tvar key = hasKeyFunction ? keyGenerator(element) :\r\n\t\t\t\t\t\thasKey ? element[keyGenerator] : element\r\n\t\t\t\tvar group = index.get(key)\r\n\t\t\t\tif (!group) {\r\n\t\t\t\t\tindex.set(key, group = [])\r\n\t\t\t\t}\r\n\t\t\t\tgroup.push(hasValueFunction ? valueGenerator(element) : element)\r\n\t\t\t}\r\n\t\t\tfunction emit(key, value) {\r\n\t\t\t\tvar group = index.get(key)\r\n\t\t\t\tif (!group) {\r\n\t\t\t\t\tindex.set(key, group = [])\r\n\t\t\t\t}\r\n\t\t\t\tgroup.push(value)\r\n\t\t\t}\r\n\t\t\treturn index\r\n\t\t}\r\n\t})\r\n\r\n\tvar getGeneratorDescriptor = Variable.getGeneratorDescriptor = function(value) {\r\n\t\tvar variables\r\n\t\treturn {\r\n\t\t\tget: function() {\r\n\t\t\t\tif (!variables) {\r\n\t\t\t\t\t variables = new WeakMap()\r\n\t\t\t\t}\r\n\t\t\t\tvar variable = variables.get(this)\r\n\t\t\t\tif (!variable) {\r\n\t\t\t\t\tvariables.set(this, variable = new GeneratorVariable(value.bind(this)))\r\n\t\t\t\t}\r\n\t\t\t\treturn variable\r\n\t\t\t},\r\n\t\t\tenumerable: true\r\n\t\t}\r\n\t}\r\n\r\n\tVariable.all = all\r\n\tVariable.Context = Context\r\n\r\n\treturn exports\r\n}))\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Variable.js\n ** module id = 4\n ** module chunks = 0\n **/","(function (root, factory) { if (typeof define === 'function' && define.amd) {\r\n  define(['./util/lang', './operators', './Variable'], factory) } else if (typeof module === 'object' && module.exports) {        \r\n  module.exports = factory(require('./util/lang'), require('./operators'), require('./Variable')) // Node\r\n}}(this, function (lang, operators, VariableExports) {\r\n\r\n  var Transform = VariableExports.Transform\r\n  var Variable = VariableExports.Variable\r\n  var isGenerator = lang.isGenerator\r\n  var ObjectTransform = lang.compose(Transform, function ObjectTransform(source, transform, sources) {\r\n    this.sources = sources\r\n    Transform.apply(this, arguments)\r\n  }, {\r\n    _getAsObject: function() {\r\n      return this.transform.apply(this, preserveObjects(this.sources))\r\n    }\r\n  })\r\n  function preserveObjects(sources) {\r\n    for (var i = 0, l = sources.length; i < l; i++) {\r\n      var source = sources[i]\r\n      if (source && source._getAsObject) {\r\n        sources[i] = source._getAsObject()\r\n      }\r\n    }\r\n    return sources\r\n  }\r\n\tfunction react(generator, options) {\r\n    if (typeof generator !== 'function') {\r\n      throw new Error('react() must be called with a generator. You need to use the babel-plugin-transform-alkali plugin if you want to use reactive expressions')\r\n    }\r\n\t\tif (options && options.reverse) {\r\n\t\t\tgenerator.reverse = options.reverse\r\n\t\t}\r\n\t\treturn new VariableExports.GeneratorVariable(generator)\r\n\t}\r\n  lang.copy(react, operators)\r\n  react.from = function(value, options) {\r\n    if (value && value.property) {\r\n      return value\r\n    }\r\n    if (typeof value === 'function' && isGenerator(value)) {\r\n      return react(value, options)\r\n    }\r\n    return Variable.from(value)\r\n  }\r\n  react.prop = function(object, property) {\r\n    if (object) {\r\n      // TODO: Use a static set of public methods/properties that can be accessed\r\n      if (object.property) {\r\n        // it is a variable already, but check to see if we are using a method/property directly on the variable\r\n        var directPropertyValue = object[property]\r\n        return directPropertyValue !== undefined ? directPropertyValue : object.property(property)\r\n      }\r\n      return object[property]\r\n    }\r\n    // not even truthy, return undefined\r\n  }\r\n  react.cond = function(test, consequent, alternate) {\r\n    return operators.if(test, operators.choose(consequent, alternate))\r\n  }\r\n  react.fcall = function(target, args) {\r\n    if (target.property && typeof target === 'function') {\r\n      return target.apply(null, preserveObjects(args))\r\n    }\r\n    return new Transform(args[0], target, args)\r\n  }\r\n  react.mcall = function(target, key, args) {\r\n    var method = target[key]\r\n    if (typeof method === 'function' && method.property || key === 'bind') {\r\n      // for now we check to see if looks like it could handle a variable, or is a bind call\r\n      return method.apply(target, preserveObjects(args))\r\n    }\r\n    return new Transform(args[0], target[key].bind(target), args)\r\n  }\r\n  react.ncall = function(target, args) {\r\n    if (target.property && typeof target === 'function') {\r\n      return new (target.bind.apply(target, [null].concat(preserveObjects(args))))()\r\n    }\r\n    return new Transform(args[0], function() {\r\n      return new (target.bind.apply(target, [null].concat(arguments)))()\r\n    }, args)\r\n  }\r\n\r\n  react.obj = function(transform, sources) {\r\n    return new ObjectTransform(sources[0], transform, sources)\r\n  }\r\n\r\n\treturn react\r\n}))\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./react.js\n ** module id = 5\n ** module chunks = 0\n **/","(function (root, factory) { if (typeof define === 'function' && define.amd) {\r\n\tdefine(['./Variable'], factory) } else if (typeof module === 'object' && module.exports) {        \r\n  module.exports = factory(require('./Variable')) // Node\r\n}}(this, function (VariableExports) {\r\n\r\n\tvar VBoolean = VariableExports.VBoolean\r\n\tvar VNumber = VariableExports.VNumber\r\n\tvar operatingFunctions = {};\r\n\tvar operators = {};\r\n\tfunction getOperatingFunction(expression){\r\n\t\t// jshint evil: true\r\n\t\treturn operatingFunctions[expression] ||\r\n\t\t\t(operatingFunctions[expression] =\r\n\t\t\t\tnew Function('a', 'b', 'return ' + expression));\r\n\t}\r\n\tfunction operator(operator, type, name, precedence, forward, reverseA, reverseB){\r\n\t\t// defines the standard operators\r\n\t\tvar reverse = function(output, inputs){\r\n\t\t\tvar a = inputs[0],\r\n\t\t\t\tb = inputs[1]\r\n\t\t\tvar firstError\r\n\t\t\tif(a && a.put){\r\n\t\t\t\ttry {\r\n\t\t\t\t\treturn a.put(reverseA(output, b && b.valueOf()))\r\n\t\t\t\t} catch(error) {\r\n\t\t\t\t\tif (error.deniedPut) {\r\n\t\t\t\t\t\tfirstError = error\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthrow error\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(b && b.put){\r\n\t\t\t\tb.put(reverseB(output, a && a.valueOf()))\r\n\t\t\t} else {\r\n\t\t\t\tthrow (firstError && firstError.message ? firstError : new Error('Can not assign change value to constant operators'))\r\n\t\t\t}\r\n\t\t};\r\n\t\t// define a function that can lazily ensure the operating function\r\n\t\t// is available\r\n\t\tvar operatorHandler = {\r\n\t\t\tapply: function(instance, args){\r\n\t\t\t\tforward = getOperatingFunction(forward);\r\n\t\t\t\treverseA = reverseA && getOperatingFunction(reverseA);\r\n\t\t\t\treverseB = reverseB && getOperatingFunction(reverseB);\r\n\t\t\t\tforward.reverse = reverse;\r\n\t\t\t\toperators[operator] = operatorHandler = new VariableExports.Variable(forward);\r\n\r\n\t\t\t\taddFlags(operatorHandler);\r\n\t\t\t\targs = Array.prototype.slice.call(args);\r\n\t\t\t\treturn operatorHandler.apply(instance, args);\r\n\t\t\t}\r\n\t\t};\r\n\t\tfunction addFlags(operatorHandler){\r\n\t\t\toperatorHandler.precedence = precedence;\r\n\t\t\toperatorHandler.infix = reverseB !== false;\r\n\t\t}\r\n\t\taddFlags(operatorHandler);\r\n\t\toperators[operator] = operatorHandler;\r\n\t\toperators[name] = function() {\r\n\t\t\tvar result = operatorHandler.apply(null, arguments)\r\n\t\t\treturn type ? result.as(type) : result\r\n\t\t}\r\n\t}\r\n\t// using order precedence from:\r\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\r\n\toperator('+', VNumber, 'add', 6, 'a+b', 'a-b', 'a-b');\r\n\toperator('-', VNumber, 'subtract', 6, 'a-b', 'a+b', 'b-a');\r\n\toperator('*', VNumber, 'multiply', 5, 'a*b', 'a/b', 'a/b');\r\n\toperator('/', VNumber, 'divide', 5, 'a/b', 'a*b', 'b/a');\r\n//\toperator('^', 7, 'a^b', 'a^(-b)', 'Math.log(a)/Math.log(b)');\r\n\toperator('?', null, 'if', 16, 'b[a?0:1]', 'a===b[0]||(a===b[1]?false:(function(){throw new Error()})())', '[a,b]');\r\n\toperator(':', null, 'choose', 15, '[a,b]', 'a[0]?a[1]:(function(){throw new Error()})()', 'a[1]');\r\n\toperator('!', VBoolean, 'not', 4, '!a', '!a', false);\r\n\toperator('%', VNumber, 'remainder', 5, 'a%b');\r\n\toperator('>', VBoolean, 'greater', 8, 'a>b');\r\n\toperator('>=', VBoolean, 'greaterOrEqual', 8, 'a>=b');\r\n\toperator('<', VBoolean, 'less', 8, 'a<b');\r\n\toperator('<=', VBoolean, 'lessOrEqual', 8, 'a<=b');\r\n\toperator('===', VBoolean, 'strictEqual', 9, 'a===b');\r\n\toperator('==', VBoolean, 'equal', 9, 'a==b');\r\n\toperator('&', VBoolean, 'and', 8, 'a&&b');\r\n\toperator('|', VBoolean, 'or', 8, 'a||b');\r\n\toperator('round', 'round', 8, 'Math.round(a*Math.pow(10,b||1))/Math.pow(10,b||1)', 'a', 'a');\r\n\treturn operators;\r\n}))\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./operators.js\n ** module id = 6\n ** module chunks = 0\n **/","(function (root, factory) { if (typeof define === 'function' && define.amd) {\r\n\tdefine(['./util/lang', './Variable'], factory) } else if (typeof module === 'object' && module.exports) {        \r\n  module.exports = factory(require('./util/lang'), require('./Variable')) // Node\r\n}}(this, function (lang, VariableExports) {\r\n\tvar Variable = VariableExports.Variable\r\n\t\r\n\tfunction deepCopy(source, target, derivativeMap) {\r\n\t\tif (source && typeof source == 'object') {\r\n\t\t\tif (source instanceof Array) {\r\n\t\t\t\ttarget = [] // always create a new array for array targets\r\n\t\t\t\tfor(var i = 0, l = source.length; i < l; i++) {\r\n\t\t\t\t\ttarget[i] = deepCopy(source[i], null, derivativeMap)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (!target || typeof target !== 'object') {\r\n\t\t\t\t\ttarget = derivativeMap && derivativeMap.get(source)\r\n\t\t\t\t\tif (!target) {\r\n\t\t\t\t\t\ttarget = {}\r\n\t\t\t\t\t\tderivativeMap && derivativeMap.set(source, target)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor (var i in source) {\r\n\t\t\t\t\ttarget[i] = deepCopy(source[i], target[i], derivativeMap)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn target\r\n\t\t}\r\n\t\treturn source\r\n\t}\r\n\r\n\tvar Copy = lang.compose(Variable, function(copiedFrom) {\r\n\t\t// this is the variable that we derive from\r\n\t\tthis.copiedFrom = copiedFrom\r\n\t\tthis.derivativeMap = new lang.WeakMap(null, 'derivative')\r\n\t\tthis.isDirty = new Variable(false)\r\n\t}, {\r\n\t\tgetValue: function(context) {\r\n\t\t\tif(this.state) {\r\n\t\t\t\tthis.state = null\r\n\t\t\t}\r\n\t\t\tvar value = this.copiedFrom.valueOf(context)\r\n\t\t\tif(value && typeof value == 'object') {\r\n\t\t\t\tvar derivative = this.derivativeMap.get(value)\r\n\t\t\t\tif (derivative == null) {\r\n\t\t\t\t\tthis.derivativeMap.set(value, derivative = deepCopy(value, undefined, this.derivativeMap))\r\n\t\t\t\t\tthis.setValue(derivative, context)\r\n\t\t\t\t}\r\n\t\t\t\treturn derivative\r\n\t\t\t}\r\n\t\t\tif(this.value === undefined) {\r\n\t\t\t\treturn value\r\n\t\t\t}\r\n\t\t\treturn this.value\r\n\t\t},\r\n\t\tgetCopyOf: function(value) {\r\n\t\t\tvar derivative = this.derivativeMap.get(value)\r\n\t\t\tif (derivative == null) {\r\n\t\t\t\tthis.derivativeMap.set(value, derivative = deepCopy(value, undefined, this.derivativeMap))\r\n\t\t\t}\r\n\t\t\treturn derivative\r\n\t\t},\r\n\t\tsave: function() {\r\n\t\t\t// copy back to the original object\r\n\t\t\tvar original = this.copiedFrom.valueOf()\r\n\t\t\tvar newCopiedFrom = deepCopy(this.valueOf(), original)\r\n\t\t\tif (this.copiedFrom.put) { // copiedFrom doesn't have to be a variable, it can be a plain object\r\n\t\t\t\t// assign it now\r\n\t\t\t\tthis.copiedFrom.put(newCopiedFrom)\r\n\t\t\t}\r\n\t\t\tthis.isDirty.put(false)\r\n\t\t\tthis.onSave && this.onSave()\r\n\t\t},\r\n\t\trevert: function() {\r\n\t\t\tvar original = this.copiedFrom.valueOf()\r\n\t\t\tthis.derivativeMap = new lang.WeakMap(null, 'derivative') // clear out the mapping, so we can start fresh\r\n\t\t\tthis.put(deepCopy(original, undefined, this.derivativeMap))\r\n\t\t\tthis.isDirty.put(false)\r\n\t\t},\r\n\t\tupdated: function() {\r\n\t\t\tthis.isDirty.put(true)\r\n\t\t\treturn Variable.prototype.updated.apply(this, arguments)\r\n\t\t}\r\n\t})\r\n\treturn Copy\r\n}))\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Copy.js\n ** module id = 7\n ** module chunks = 0\n **/"],"sourceRoot":""}