{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///index.js","webpack:///webpack/bootstrap 4eb6a3f87be686bfd6e8","webpack:///./index.js","webpack:///./Element.js","webpack:///./util/lang.js","webpack:///./Renderer.js","webpack:///./Variable.js","webpack:///./react.js","webpack:///./operators.js","webpack:///./Copy.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","apply","undefined","Element","Renderer","react","Copy","operators","Variable","main","Object","create","VMap","VArray","VPromised","all","Transform","Call","Caching","spawn","func","valueOf","ElementRenderer","assign","lang","booleanStyle","options","element","value","key","style","defaultStyle","directStyle","layoutChildren","parent","children","container","prepend","fragment","length","doc","createDocumentFragment","i","l","childNode","child","currentParent","appendChild","isContentNode","contentNode","notifies","ref","isIterable","variableAsContent","Array","nodeType","Error","createTextNode","insertBefore","firstChild","content","textNode","TextRenderer","variable","bidirectionalHandler","InputPropertyRenderer","name","inputs","tagName","bindChanges","prototype","renderSelectValueUpdate","type","isNaN","noop","applyAttribute","AttributeRenderer","setAttribute","applySubProperties","renderer","SubPropertyRenderer","compose","PropertyRenderer","arguments","renderUpdate","subKey","subValue","assignProperties","properties","propertyHandlers","_propertyHandlers","constructor","VariableClass","hasOwn","put","styleDefinition","propertyHandler","styleDefinitions","StyleRenderer","slice","addEventListener","defineProperty","enumerable","configurable","writable","assignGenerators","customGenerators","styleGenerators","nativeGenerators","generators","_generators","GeneratorVariable","bind","buildContent","each","defineHasOwn","ItemClass","getCollectionOf","Item","itemVariable","from","_item","ListRenderer","forEach","item","childElement","buildInputContent","conversion","nextTurn","inputEvents","event","result","Context","deny","parseFloat","inputType","inputProperty","date","datetime","time","mergeObject","existing","applyToConstructor","argument","applyOnCreate","_applyOnCreate","isGenerator","classHandlers","TypeError","getApplySet","Class","hasOwnProperty","getForClass","parentApplySet","getPrototypeOf","keys","getOwnPropertyNames","propertyName","toLowerCase","renderDescriptor","renderMethod","map","WeakMap","get","has","set","makeElementConstructor","selector","withProperties","setPrototypeOf","ownedClasses","forTarget","property","propertyForElement","selectorMatch","match","SELECTOR_REGEX","operator","className","remaining","createElement","presumptiveParentMap","ElementApplyOnCreate","created","shadow","attachShadow","mode","ready","append","defineTag","extendElement","customElements","extendClass","HTMLElement","extends","console","warn","getConstructor","tags","setupElement","props","elementPropertyHandlers","assigned","handlers","generate","elements","elementName","ElementClass","generateInputs","HTMLInputElement","target","From","Target","createInstance","elementMap","instanceMap","parentNode","ownedInstances","instance","subject","ThisElementVariable","_Variable","elementOverlay","alkaliRenderers","variableProperties","cleanup","renderers","stop","needsRestart","restart","elementAttached","attached","elementDetached","detached","firstVisit","node","state","__alkaliAttached__","action","body","contains","knownElementProperties","newValue","definition","ClassNameRenderer","currentClassName","changingClassName","removed","replace","document","tag","INPUT","TEXTAREA","display","visibility","color","opacity","zoom","minZoom","maxZoom","fontWeight","position","textDecoration","base","proto","__proto__","classes","flag","class","for","role","render","dataset","attributes","styleObjectHandler","input","copy","valueAsNumber","valueAsDate","checked","e","select","textarea","a","area","button","dialog","embed","form","frame","frameset","iframe","img","option","optgroup","output","label","td","th","script","track","link","meta","meter","progress","del","ins","source","video","keygen","object","param","radios","querySelectorAll","radio","dispatchEvent","Event","within","aliases","Anchor","Image","Paragraph","Textarea","DList","UList","OList","ListItem","Text","TextInput","TableRow","TableCell","TableHeaderCell","TableHeader","TableBody","alias","to","refresh","moveLiveElementsEnabled","Symbol","hasInstance","extend","ExtendedElement","descriptor","getOwnPropertyDescriptor","MutationObserver","lifeStates","nodes","observer","mutations","il","mutation","j","jl","nodeIteration","k","kl","baseNode","currentNode","nextNode","nextSibling","observe","childList","subtree","specify","distinctive","generics","push","distinctSubject","subjectMap","specifiedInstance","defaultInstance","getContextualized","_contextMap","context","matches","merge","childContext","getDistinctElement","feature","hasFeatures","queue","listener","queuedListeners","indexOf","events","diff","previous","current","callback","queued","toJSONHidden","displayName","requestAnimationFrame","promise","Promise","addKey","keyFlag","currentValue","targetAncestor","previousSet","previousGet","remove","timerStarted","setInterval","watchedObjects","watchedCopies","listeners","unobserve","splice","Hidden","toJSON","eval","processAnimationFrame","toRender","setTimeout","execute","resolve","then","reject","resolution","finished","error","errorResolution","isResolved","errback","handle","newError","values","mapProperty","intermediary","when","errorHandler","whenAll","promiseInvolved","onResolve","onError","onEach","readyInputs","lastPromiseResult","previousPromiseResult","Base","div","update","updateRendering","shouldRender","alwaysUpdate","updated","subscribe","updateOnStart","contextualized","ContentRenderer","onElementRemoval","stopNotifies","invalidatedElements","nextId","updateEvent","by","invalidated","contextMatches","newContext","addInput","invalidateElement","invalidatedParts","queueTask","processQueue","updateElement","getId","getSubject","always","thisElement","renderersOnShow","addElement","omitValueOf","started","renderLoading","eventualValue","innerHTML","builtList","updates","replaceChild","childNodes","nodeValue","eachItem","index","nextChild","childElements","removeChild","previousIndex","onShowElement","shownElement","getElementsByClassName","includingTop","onlyChildren","getElementsByTagName","NotifyingContext","registerListener","propertyListenersMap","listenerId","autoObserveObjects","listeningToObject","deregisterListener","RefreshEvent","visited","Set","PropertyChangeEvent","childEvent","AddEvent","args","DeleteEvent","forPropertyNotifyingValues","_properties","returnedVariable","hasChildNotifiers","subProperties","arrayToModify","cachedValue","array","updateVersion","results","cachedVersion","version","insertedAt","added","startingIndex","arrayLength","addedCount","arrayPosition","modifier","removedAt","removalCount","oldValue","defineArrayMethod","method","IterativeResults","IterativeMethod","addFlag","functionValue","objectUpdated","_propertyChange","transform","Composite","keyMapping","valueArray","resultObject","createForInstance","generalizeClass","prototypeNames","getGeneralizedDescriptor","generalizeMethod","instanceForContext","noChange","RequestChange","RequestSet","contextFromCache","contextualize","parentContext","contextMap","inputVariable","nextProperty","VariablePrototype","_currentValue","valueContext","gotValue","getValue","gotValueAndListen","previousNotifyingValue","PropertyClass","propertyVariable","ContextualizedVariable","defaultContext","_changeValue","onPropertyChange","eachKey","forDependencies","hasNotifyingChild","init","dependency","handles","getVersion","Math","max","selectVariable","getUpdates","since","nextUpdateMap","add","__debug","log","stack","contextualInstance","dependent","fixed","collection","invalidate","updateQueued","next","updateReceiver","unsubscribe","size","setValue","undefine","is","proxiedVariable","thisVariable","proxy","complete","onValue","toString","callbackOrItemClass","callbackOrContext","collectionOf","transformFunction","reverse","schema","parentSchemaProperties","validate","required","valid","isValid","validation","Validating","structured","structure","observeObject","observerCount","el","done","deliverChanges","_sN","_debug","unshift","pop","shift","iterator","Map","transformContext","withComputedValue","computedValue","contextualizedVariable","newVersion","computeValue","argumentName","resolved","getArguments","invoke","argsVersion","originalValue","observeArguments","handlesVariables","handlesPromises","setReverse","generic","notify","filter","emit","keyGenerator","valueGenerator","hasKeyFunction","hasValueFunction","hasKey","group","generator","resuming","lastValue","generatorIterator","isThrowing","stepReturn","nextVariable","delegatedGenerator","description","proxyHandler","deleteProperty","ownKeys","Proxy","_collectionOf","_collection","Collection","generalize","Function","ExtendedVariable","getGeneratorDescriptor","_defaultInstance","variables","preserveObjects","_getAsObject","ObjectTransform","prop","directPropertyValue","cond","test","consequent","alternate","choose","fcall","mcall","ncall","concat","obj","getOperatingFunction","expression","operatingFunctions","precedence","forward","reverseA","reverseB","addFlags","operatorHandler","infix","b","deepCopy","derivativeMap","copiedFrom","isDirty","derivative","getCopyOf","save","original","newCopiedFrom","onSave","revert"],"mappings":"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AAAqL,OAAA5J,IA+SAuE,YAuBAhG,GAAAqK,EAAA9K,KAAA,mBAAAuM,yBAAA,aAEA9L,IAAA0L,YACA1L,GAAAoB,OAAA,SAAA2L,EAAA1H,GACA,wBAAA0H,GAOA3H,EAAA2H,EAAA1H,IALA6D,EAAA6D,OACApE,GAAAtD,EAAA0H,KAQA/M,GAAA0T,OAAA,SAAAlS,KAIAiL,GACA,QACA,SACA,QACA,QACA,KACA,IACA,QACA,QACA,WACA,WACA,QACA,QACA,QACA,KACA,QACA,MACA,WACA,KACA,KACA,UACA,MACA,MACA,QACA,SACA,OACA,QACA,SACA,SACA,SACA,IACA,QACA,WACA,MACA,UACA,QACA,IACA,SACA,SACA,WACA,SACA,KACA,MACA,IACA,MACA,QACA,OACA,OACA,MACA,OACA,SACA,QACA,KACA,SACA,QACA,MACA,SACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,WACA,QACA,OACA,OACA,QACA,KACA,OACA,OACA,MACA,IACA,UACA,QACA,OACA,SACA,SACA,aACA,SACA,OACA,OACA,WACA,MACA,UACA,OACA,UACA,MACA,MACA,SACA,UACA,WACA,KACA,SACA,SACA,OACA,KACA,OACA,MAEAI,GACA,WACA,WACA,SACA,QACA,QACA,OACA,WACA,QACA,QACA,SACA,QACA,SACA,MACA,OACA,MACA,QAEA,IAAAV,OAyDAwH,IACAC,OAAA,IACAC,MAAA,MACAC,UAAA,IACAC,SAAA,WACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,SAAA,KACAC,KAAA,QACAC,UAAA,QACAC,SAAA,KACAC,UAAA,KACAC,gBAAA,KACAC,YAAA,QACAC,UAAA,QAEA,QAAAC,MAAAhB,KACA,SAAAgB,EAAAC,GACArU,OAAA2F,eAAAlG,GAAA2U,GACA3K,IAAA,WACA,MAAAhL,MAAA4V,OAGGD,GAAAhB,GAAAgB,IAGH3U,IAAAyL,SACAzL,GAAAkC,UACAlC,GAAA6U,QAAA5U,EAAA4U,QACA7U,GAAAuB,SACAuT,yBAAA,GAEA9U,GAAAyD,QAAA,SAAAjC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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"alkali\"] = factory();\n\telse\n\t\troot[\"alkali\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"alkali\"] = factory();\n\telse\n\t\troot[\"alkali\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/// <reference path=\"./typings.d.ts\" />\r\n\t(function (root, factory) { if (true) {\r\n\t  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1), __webpack_require__(3), __webpack_require__(5), __webpack_require__(7), __webpack_require__(6), __webpack_require__(4)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) } else if (typeof module === 'object' && module.exports) {        \r\n\t  module.exports = factory(require('./Element'), require('./Renderer'), require('./react'), require('./Copy'), require('./operators'), require('./Variable')) // Node\r\n\t}}(this, function (Element, Renderer, react, Copy, operators, Variable) {\r\n\t\r\n\t\tvar main = Object.create(Element)\r\n\t\tmain.Copy = Copy\r\n\t\tmain.Element = Element\r\n\t\tmain.Variable = Variable\r\n\t\tmain.VMap = Variable.VMap\r\n\t\tmain.VArray = Variable.VArray\r\n\t\tmain.VPromised = Variable.VPromised\r\n\t\tmain.all = Variable.all\r\n\t\tmain.Transform = Variable.Call\r\n\t\tmain.Caching = Variable.Caching\r\n\t\tmain.react = react\r\n\t\tmain.spawn = function(func) {\r\n\t\t\treturn react(func).valueOf()\r\n\t\t}\r\n\t\tmain.Renderer = Renderer.ElementRenderer\r\n\t\tObject.assign(main, Renderer)\r\n\t\tObject.assign(main, operators)\r\n\t\treturn main\r\n\t}))\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) { if (true) {\r\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2), __webpack_require__(3), __webpack_require__(4)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) } else if (typeof module === 'object' && module.exports) {        \r\n\t  module.exports = factory(require('./util/lang'), require('./Renderer'), require('./Variable')) // Node\r\n\t}}(this, function (lang, Renderer, Variable) {\r\n\t\tvar knownElementProperties = [\r\n\t\t\t'textContent', // Node\r\n\t\t\t'id', 'className', 'innerHTML', // Element\r\n\t\t\t'title', 'lang', 'translate', 'dir', 'tabIndex', 'accessKey', 'draggable', 'spellcheck', 'contentEditable', 'innerText', 'webkitdropzone'] // HTMLElement\r\n\t\r\n\t\tvar SELECTOR_REGEX = /^(\\.|#)([-\\w]+)(.+)?/\r\n\t\tvar isGenerator = lang.isGenerator\r\n\t\tvar Context = Variable.Context\r\n\t\tvar PropertyRenderer = Renderer.PropertyRenderer\r\n\t\tvar InputPropertyRenderer = Renderer.InputPropertyRenderer\r\n\t\tvar AttributeRenderer = Renderer.AttributeRenderer\r\n\t\tvar StyleRenderer = lang.compose(Renderer.StyleRenderer, function StyleRenderer() {\r\n\t\t\tRenderer.StyleRenderer.apply(this, arguments)\r\n\t\t}, {\r\n\t\t\trenderUpdate: function(newValue, element) {\r\n\t\t\t\tvar definition = styleDefinitions[this.name]\r\n\t\t\t\tif (definition) {\r\n\t\t\t\t\tdefinition(element, newValue, this.name)\r\n\t\t\t\t} else {\r\n\t\t\t\t\telement.style[this.name] = newValue\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\tvar ClassNameRenderer = lang.compose(Renderer.ElementRenderer, function ClassNameRenderer(options) {\r\n\t\t\tthis.className = options.className\r\n\t\t\tRenderer.apply(this, arguments)\r\n\t\t}, {\r\n\t\t\trenderUpdate: function(newValue, element) {\r\n\t\t\t\tvar currentClassName = element.className\r\n\t\t\t\tvar changingClassName = this.className\r\n\t\t\t\t// remove the className (needed for addition or removal)\r\n\t\t\t\t// see http://jsperf.com/remove-class-name-algorithm/2 for some tests on this\r\n\t\t\t\tvar removed = currentClassName && (' ' + currentClassName + ' ').replace(' ' + changingClassName + ' ', ' ')\r\n\t\t\t\tif (newValue) {\r\n\t\t\t\t\t// addition, add the className\r\n\t\t\t\t\tchangingClassName = currentClassName ? (removed + changingClassName).slice(1) : changingClassName;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// we already have removed the class, just need to trim\r\n\t\t\t\t\tchangingClassName = removed.slice(1, removed.length - 1)\r\n\t\t\t\t}\r\n\t\t\t\t// only assign if it changed, this can save a lot of time\r\n\t\t\t\tif (changingClassName != currentClassName) {\r\n\t\t\t\t\telement.className = changingClassName\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\t// TODO: check for renderContent with text updater\r\n\t\tvar TextRenderer = Renderer.TextRenderer\r\n\t\tvar ListRenderer = Renderer.ListRenderer\r\n\t\r\n\t\tvar doc = typeof document !== 'undefined' ? document : {\r\n\t\t\tcreateElement: function(tag) {\r\n\t\t\t\treturn {}\r\n\t\t\t},\r\n\t\t\taddEventListener: function() {\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tvar inputs = {\r\n\t\t\tINPUT: 1,\r\n\t\t\tTEXTAREA: 1\r\n\t\t\t// SELECT: 1, we exclude this, so the default \"content\" of the element can be the options\r\n\t\t}\r\n\t\r\n\t\tfunction booleanStyle(options) {\r\n\t\t\treturn function(element, value, key) {\r\n\t\t\t\tif (typeof value === 'boolean') {\r\n\t\t\t\t\t// has a boolean conversion\r\n\t\t\t\t\tvalue = options[value ? 0 : 1]\r\n\t\t\t\t}\r\n\t\t\t\telement.style[key] = value\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction defaultStyle(element, value, key) {\r\n\t\t\tif (typeof value === 'number') {\r\n\t\t\t\tvalue = value + 'px'\r\n\t\t\t}\r\n\t\t\telement.style[key] = value\r\n\t\t}\r\n\t\tfunction directStyle(element, value, key) {\r\n\t\t\telement.style[key] = value\r\n\t\t}\r\n\t\r\n\t\tvar styleDefinitions = {\r\n\t\t\tdisplay: booleanStyle(['', 'none']),\r\n\t\t\tvisibility: booleanStyle(['visible', 'hidden']),\r\n\t\t\tcolor: directStyle,\r\n\t\t\topacity: directStyle,\r\n\t\t\tzoom: directStyle,\r\n\t\t\tminZoom: directStyle,\r\n\t\t\tmaxZoom: directStyle,\r\n\t\t\tfontWeight: directStyle,\r\n\t\t\tposition: booleanStyle(['absolute', '']),\r\n\t\t\ttextDecoration: booleanStyle(['underline', '']),\r\n\t\t\tfontWeight: booleanStyle(['bold', 'normal'])\r\n\t\t}\r\n\t\t;[\"alignContent\",\"alignItems\",\"alignSelf\",\"animation\",\"animationDelay\",\"animationDirection\",\"animationDuration\",\"animationFillMode\",\"animationIterationCount\",\"animationName\",\"animationPlayState\",\"animationTimingFunction\",\"backfaceVisibility\",\"background\",\"backgroundAttachment\",\"backgroundBlendMode\",\"backgroundClip\",\"backgroundColor\",\"backgroundImage\",\"backgroundOrigin\",\"backgroundPosition\",\"backgroundPositionX\",\"backgroundPositionY\",\"backgroundRepeat\",\"backgroundRepeatX\",\"backgroundRepeatY\",\"backgroundSize\",\"baselineShift\",\"border\",\"borderBottom\",\"borderBottomColor\",\"borderBottomLeftRadius\",\"borderBottomRightRadius\",\"borderBottomStyle\",\"borderBottomWidth\",\"borderCollapse\",\"borderColor\",\"borderImage\",\"borderImageOutset\",\"borderImageRepeat\",\"borderImageSlice\",\"borderImageSource\",\"borderImageWidth\",\"borderLeft\",\"borderLeftColor\",\"borderLeftStyle\",\"borderLeftWidth\",\"borderRadius\",\"borderRight\",\"borderRightColor\",\"borderRightStyle\",\"borderRightWidth\",\"borderSpacing\",\"borderStyle\",\"borderTop\",\"borderTopColor\",\"borderTopLeftRadius\",\"borderTopRightRadius\",\"borderTopStyle\",\"borderTopWidth\",\"borderWidth\",\"bottom\",\"boxShadow\",\"boxSizing\",\"bufferedRendering\",\"captionSide\",\"clear\",\"clip\",\"clipPath\",\"clipRule\",\"color\",\"colorInterpolation\",\"colorInterpolationFilters\",\"colorRendering\",\"counterIncrement\",\"counterReset\",\"cursor\",\"direction\",\"display\",\"emptyCells\",\"fill\",\"fillOpacity\",\"fillRule\",\"filter\",\"flex\",\"flexBasis\",\"flexDirection\",\"flexFlow\",\"flexGrow\",\"flexShrink\",\"flexWrap\",\"float\",\"floodColor\",\"floodOpacity\",\"font\",\"fontFamily\",\"fontFeatureSettings\",\"fontKerning\",\"fontSize\",\"fontStretch\",\"fontStyle\",\"fontVariant\",\"fontVariantLigatures\",\"fontWeight\",\"height\",\"imageRendering\",\"isolation\",\"justifyContent\",\"left\",\"letterSpacing\",\"lightingColor\",\"lineHeight\",\"listStyle\",\"listStyleImage\",\"listStylePosition\",\"listStyleType\",\"margin\",\"marginBottom\",\"marginLeft\",\"marginRight\",\"marginTop\",\"marker\",\"markerEnd\",\"markerMid\",\"markerStart\",\"mask\",\"maskType\",\"maxHeight\",\"maxWidth\",\"maxZoom\",\"minHeight\",\"minWidth\",\"minZoom\",\"mixBlendMode\",\"motion\",\"motionOffset\",\"motionPath\",\"motionRotation\",\"objectFit\",\"objectPosition\",\"opacity\",\"order\",\"orientation\",\"orphans\",\"outline\",\"outlineColor\",\"outlineOffset\",\"outlineStyle\",\"outlineWidth\",\"overflow\",\"overflowWrap\",\"overflowX\",\"overflowY\",\"padding\",\"paddingBottom\",\"paddingLeft\",\"paddingRight\",\"paddingTop\",\"page\",\"pageBreakAfter\",\"pageBreakBefore\",\"pageBreakInside\",\"paintOrder\",\"perspective\",\"perspectiveOrigin\",\"pointerEvents\",\"position\",\"quotes\",\"resize\",\"right\",\"shapeImageThreshold\",\"shapeMargin\",\"shapeOutside\",\"shapeRendering\",\"size\",\"speak\",\"src\",\"stopColor\",\"stopOpacity\",\"stroke\",\"strokeDasharray\",\"strokeDashoffset\",\"strokeLinecap\",\"strokeLinejoin\",\"strokeMiterlimit\",\"strokeOpacity\",\"strokeWidth\",\"tabSize\",\"tableLayout\",\"textAlign\",\"textAlignLast\",\"textAnchor\",\"textCombineUpright\",\"textDecoration\",\"textIndent\",\"textOrientation\",\"textOverflow\",\"textRendering\",\"textShadow\",\"textTransform\",\"top\",\"touchAction\",\"transform\",\"transformOrigin\",\"transformStyle\",\"transition\",\"transitionDelay\",\"transitionDuration\",\"transitionProperty\",\"transitionTimingFunction\",\"unicodeBidi\",\"unicodeRange\",\"userZoom\",\"vectorEffect\",\"verticalAlign\",\"visibility\",\"whiteSpace\",\"widows\",\"width\",\"willChange\",\"wordBreak\",\"wordSpacing\",\"wordWrap\",\"writingMode\",\"zIndex\",\"zoom\"].forEach(function(property) {\r\n\t\t\tstyleDefinitions[property] = styleDefinitions[property] || defaultStyle\r\n\t\t})\r\n\t\tvar styleSheet\r\n\t\tvar presumptiveParentMap = new WeakMap()\r\n\t\r\n\t\tvar setPrototypeOf = Object.setPrototypeOf || (function(base, proto) { base.__proto__ = proto})\r\n\t\tvar getPrototypeOf = Object.getPrototypeOf || (function(base) { return base.__proto__ })\r\n\t\tfunction createCssRule(selector) {\r\n\t\t\tif (!styleSheet) {\r\n\t\t\t\tvar styleSheetElement = doc.createElement(\"style\")\r\n\t\t\t\tstyleSheetElement.setAttribute(\"type\", \"text/css\")\r\n\t//\t\t\tstyleSheet.appendChild(doc.createTextNode(css))\r\n\t\t\t\tdoc.head.insertBefore(styleSheetElement, doc.head.firstChild)\r\n\t\t\t\tstyleSheet = styleSheetElement.sheet\r\n\t\t\t}\r\n\t\t\tvar cssRules = styleSheet.cssRules || styleSheet.rules\r\n\t\t\treturn cssRules[styleSheet.addRule(selector, ' ', cssRules.length)]\r\n\t\t}\r\n\t\r\n\t\t// TODO: Need to do some more testing to see if that would improve performance:\r\n\t\t// var fragmentThresholdHeuristic = (typeof navigator !== 'undefined' && navigator.userAgent.indexOf('Chrome') > 0) ? 1 : 3\r\n\t\r\n\t\tfunction layoutChildren(parent, children, container, prepend) {\r\n\t\t\tvar fragment = (children.length > 1 || prepend) ? doc.createDocumentFragment() : parent\r\n\t\t\tfor(var i = 0, l = children.length; i < l; i++) {\r\n\t\t\t\tvar child = children[i]\r\n\t\t\t\tvar childNode\r\n\t\t\t\tif (child != null) { // we just skip nulls and undefined, helps make it easier to write conditional element logic\r\n\t\t\t\t\tif (child.create) {\r\n\t\t\t\t\t\t// an element constructor\r\n\t\t\t\t\t\tcurrentParent = parent\r\n\t\t\t\t\t\tchildNode = child.create()\r\n\t\t\t\t\t\tfragment.appendChild(childNode)\r\n\t\t\t\t\t\tif (child.isContentNode) {\r\n\t\t\t\t\t\t\tcontainer.contentNode = childNode\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (child.notifies) {\r\n\t\t\t\t\t\t// a variable\r\n\t\t\t\t\t\tvar ref = child.isIterable ? fragment : parent\r\n\t\t\t\t\t\tfragment.appendChild(childNode = variableAsContent(ref, child))\r\n\t\t\t\t\t} else if (typeof child == 'object') {\r\n\t\t\t\t\t\tif (child instanceof Array) {\r\n\t\t\t\t\t\t\t// array of sub-children\r\n\t\t\t\t\t\t\tcontainer = container || parent\r\n\t\t\t\t\t\t\tchildNode = childNode || parent\r\n\t\t\t\t\t\t\tlayoutChildren(childNode.contentNode || childNode, child, container)\r\n\t\t\t\t\t\t} else if (child.nodeType) {\r\n\t\t\t\t\t\t\t// an element itself\r\n\t\t\t\t\t\t\tfragment.appendChild(childNode = child)\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// TODO: apply properties to last child, but with binding to the parent (for events)\r\n\t\t\t\t\t\t\tthrow new Error('Unknown child type ' + child)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// a primitive value\r\n\t\t\t\t\t\tchildNode = doc.createTextNode(child)\r\n\t\t\t\t\t\tfragment.appendChild(childNode)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (fragment != parent) {\r\n\t\t\t\tif (prepend) {\r\n\t\t\t\t\tparent.insertBefore(fragment, parent.firstChild)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tparent.appendChild(fragment)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn childNode\r\n\t\t}\r\n\t\tfunction variableAsContent(parent, content) {\r\n\t\t\tif (content == null) {\r\n\t\t\t\treturn doc.createTextNode('')\r\n\t\t\t}\r\n\t\t\tvar textNode\r\n\t\t\tif (content.notifies) {\r\n\t\t\t\ttextNode = doc.createTextNode('')\r\n\t\t\t\tnew TextRenderer({\r\n\t\t\t\t\telement: parent,\r\n\t\t\t\t\ttextNode: textNode,\r\n\t\t\t\t\tvariable: content\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\ttextNode = doc.createTextNode(content)\r\n\t\t\t}\r\n\t\t\treturn textNode\r\n\t\t}\r\n\t\r\n\t\tfunction bidirectionalHandler(element, value, key) {\r\n\t\t\tif (value && value.notifies) {\r\n\t\t\t\tnew InputPropertyRenderer({\r\n\t\t\t\t\tname: key,\r\n\t\t\t\t\tvariable: value,\r\n\t\t\t\t\telement: element\r\n\t\t\t\t})\r\n\t\t\t\tif (inputs[element.tagName] || element.tagName === 'SELECT') {\r\n\t\t\t\t\tbindChanges(element, value, key)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (element.tagName === 'SELECT' && key === 'value') {\r\n\t\t\t\t\t// use the deferred <select> value assignment\r\n\t\t\t\t\tInputPropertyRenderer.prototype.renderSelectValueUpdate(value, element)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (element.type === 'number') {\r\n\t\t\t\t\t\tif (isNaN(value)) {\r\n\t\t\t\t\t\t\tvalue = ''\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telement[key] = value\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction noop() {}\r\n\t\tvar propertyHandlers = {\r\n\t\t\tchildren: noop,\r\n\t\t\ttagName: noop,\r\n\t\t\t_generators: noop,\r\n\t\t\tclasses: function(element, classes) {\r\n\t\t\t\tif (!(classes.length > -1)) {\r\n\t\t\t\t\t// index the classes, if necessary\r\n\t\t\t\t\tvar i = 0\r\n\t\t\t\t\tfor (var key in classes) {\r\n\t\t\t\t\t\tif (!classes[i]) {\r\n\t\t\t\t\t\t\tclasses[i] = key\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ti++\r\n\t\t\t\t\t}\r\n\t\t\t\t\tclasses.length = i\r\n\t\t\t\t}\r\n\t\t\t\tfor (var i = 0, l = classes.length; i < l; i++) {\r\n\t\t\t\t\t// find each class name\r\n\t\t\t\t\tvar className = classes[i]\r\n\t\t\t\t\tvar flag = classes[className]\r\n\t\t\t\t\tif (flag && flag.notifies) {\r\n\t\t\t\t\t\t// if it is a variable, we react to it\r\n\t\t\t\t\t\tnew ClassNameRenderer({\r\n\t\t\t\t\t\t\telement: element,\r\n\t\t\t\t\t\t\tclassName: className,\r\n\t\t\t\t\t\t\tvariable: flag\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} else if (flag || flag === undefined) {\r\n\t\t\t\t\t\telement.className += ' ' + className\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tclass: applyAttribute,\r\n\t\t\tfor: applyAttribute, // TODO: move to label?\r\n\t\t\trole: applyAttribute,\r\n\t\t\trender: function(element, value, key, properties) {\r\n\t\t\t\t// TODO: This doesn't need to be a property updater (is in place for *render())\r\n\t\t\t\t// we should also verify it is a generator\r\n\t\t\t\t// and maybe, at some point, find an optimization to eliminate the bind()\r\n\t\t\t\tnew PropertyRenderer({\r\n\t\t\t\t\tname: key,\r\n\t\t\t\t\tvariable: new Variable.GeneratorVariable(value.bind(element, properties)),\r\n\t\t\t\t\telement: element\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tdataset: applySubProperties(function(newValue, element, key) {\r\n\t\t\t\telement.dataset[key || this.name] = newValue\r\n\t\t\t}),\r\n\t\t\tattributes: applySubProperties(function(newValue, element, key) {\r\n\t\t\t\telement.setAttribute(key || this.name, newValue)\r\n\t\t\t}),\r\n\t\t\tstyle: function(element, value, key) {\r\n\t\t\t\tif (typeof value === 'string') {\r\n\t\t\t\t\telement.setAttribute('style', value)\r\n\t\t\t\t} else if (value && value.notifies) {\r\n\t\t\t\t\tnew AttributeRenderer({\r\n\t\t\t\t\t\tname: 'style',\r\n\t\t\t\t\t\tvariable: value,\r\n\t\t\t\t\t\telement: element\r\n\t\t\t\t\t})\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstyleObjectHandler(element, value, key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tknownElementProperties.forEach(function(property) {\r\n\t\t\tpropertyHandlers[property] = true\r\n\t\t})\r\n\t\tif (typeof HTMLElement !== 'undefined') {\r\n\t\t\tHTMLElement.prototype._propertyHandlers = propertyHandlers // inherit this, at least for now\r\n\t\t}\r\n\t\tvar elementPropertyHandlers = {\r\n\t\t\tinput: lang.copy(['accept', 'alt', 'autocomplete', 'autofocus', 'capture', 'defaultChecked', 'dirName', 'disabled', 'form', 'files', 'formAction', 'formEnctype', 'formMethod', 'formNoValidate', 'formTarget', 'indeterminate', 'inputMode', 'list', 'max', 'maxLength', 'min', 'minLength', 'multiple', 'name', 'pattern', 'placeholder', 'readOnly', 'required', 'size', 'src', 'step', 'type', 'defaultValue', 'willValidate', 'validity', 'validationMessage', 'useMap', 'autocapitalize', 'webkitdirectory', 'incremental', 'stepUp', 'stepDown'], {\r\n\t\t\t\tvalue: bidirectionalHandler,\r\n\t\t\t\tvalueAsNumber: bidirectionalHandler,\r\n\t\t\t\tvalueAsDate: bidirectionalHandler,\r\n\t\t\t\tchecked: bidirectionalHandler,\r\n\t\t\t\ttype: function(element, value) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\telement.type = value\r\n\t\t\t\t\t} catch(e) {\r\n\t\t\t\t\t\t// IE 11 will throw an error here\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}),\r\n\t\t\tselect: lang.copy(['name', 'size', 'type', 'selectedIndex', 'validationMessage'], {\r\n\t\t\t\tvalue: bidirectionalHandler\r\n\t\t\t}),\r\n\t\t\ttextarea: lang.copy(['cols', 'dirName', 'maxLength', 'minLength', 'name', 'placeholder', 'rows', 'wrap', 'type', 'defaultValue', 'textLength', 'validationMessage', 'autocapitalize'], {\r\n\t\t\t\tvalue: bidirectionalHandler\r\n\t\t\t}),\r\n\t\t\ta: ['target', 'download', 'ping', 'rel', 'hreflang', 'type', 'referrerPolicy', 'href', 'media'],\r\n\t\t\tarea: ['target', 'download', 'coords', 'rel', 'hreflang', 'type', 'referrerPolicy', 'href', 'media', 'alt', 'shape'],\r\n\t\t\tbutton: ['formAction', 'formEnctype', 'formMethod', 'formTarget', 'name', 'type', 'value', 'validationMessage'],\r\n\t\t\tdialog: ['open'],\r\n\t\t\tembed: ['src', 'type', 'name'],\r\n\t\t\tform: ['acceptCharset', 'action', 'autocomplete', 'enctype', 'encoding', 'method', 'name', 'target', 'novalidate'],\r\n\t\t\tframe: ['name', 'scrolling', 'src', 'frameBorder'],\r\n\t\t\tframeset: ['cols', 'rows'],\r\n\t    iframe: ['src', 'srcdoc', 'name', 'referrerPolicy', 'align', 'scrolling', 'frameBorder', 'longDesc'],\r\n\t    img: ['src', 'alt', 'crossorigin', 'ismap', 'longdesc', 'sizes', 'srcset', 'usemap', 'referrerpolicy'],\r\n\t    option: ['label', 'value', 'text', 'index'],\r\n\t    optgroup: ['label'],\r\n\t    output: ['name', 'type', 'defaultValue', 'value', 'validationMessage'],\r\n\t    label: ['htmlFor'],\r\n\t    td: ['colSpan', 'rowSpan'],\r\n\t    th: ['colSpan', 'rowSpan'],\r\n\t    script: ['src', 'type', 'charset', 'text', 'event', 'htmlFor', 'integrity'],\r\n\t    style: ['media', 'type'],\r\n\t    track: ['kind', 'src', 'srclang', 'label'],\r\n\t    link: ['href', 'rel', 'media', 'hreflang', 'type', 'charset', 'rev', 'target', 'integrity', 'as'],\r\n\t    meta: ['name', 'httpEquiv', 'content', 'scheme'],\r\n\t    meter: ['value', 'min', 'max', 'low', 'high', 'optimum'],\r\n\t    progress: ['value', 'max', 'position'],\r\n\t    del: ['cite', 'dateTime'],\r\n\t    ins: ['cite', 'dateTime'],\r\n\t    source: ['src', 'type', 'srcset', 'sizes', 'media'],\r\n\t    video: ['videoWidth', 'videoHeight', 'poster', 'webkitDecodedFrameCount', 'webkitDroppedFrameCount'],\r\n\t    keygen: ['challenge', 'keytype', 'name', 'type', 'validationMessage'],\r\n\t    object: ['data', 'type', 'name', 'useMap', 'validationMessage', 'archive', 'code', 'hspace', 'standby', 'vspace', 'codeBase', 'codeType'],\r\n\t    param: ['name', 'value', 'type', 'valueType']\r\n\t\t}\r\n\t\r\n\t\tfunction applyAttribute(element, value, key) {\r\n\t\t\tif (value && value.notifies) {\r\n\t\t\t\tnew AttributeRenderer({\r\n\t\t\t\t\tname: key,\r\n\t\t\t\t\tvariable: value,\r\n\t\t\t\t\telement: element\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\telement.setAttribute(key, value)\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tvar styleObjectHandler = applySubProperties(function(newValue, element, key) {\r\n\t\t\telement.style[key || this.name] = newValue\r\n\t\t})\r\n\t\r\n\t\tfunction applySubProperties(renderer) {\r\n\t\t\tvar SubPropertyRenderer = lang.compose(PropertyRenderer, function SubPropertyRenderer(options) {\r\n\t\t\t\tPropertyRenderer.apply(this, arguments)\r\n\t\t\t}, {\r\n\t\t\t\trenderUpdate: renderer\r\n\t\t\t})\r\n\t\t\treturn function(element, value, key) {\r\n\t\t\t\tfor (var subKey in value) {\r\n\t\t\t\t\tvar subValue = value[subKey]\r\n\t\t\t\t\tif (subValue && subValue.notifies) {\r\n\t\t\t\t\t\tnew SubPropertyRenderer({\r\n\t\t\t\t\t\t\tname: subKey,\r\n\t\t\t\t\t\t\tvariable: subValue,\r\n\t\t\t\t\t\t\telement: element\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\trenderer(subValue, element, subKey)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction assignProperties(element, properties) {\r\n\t\t\tvar propertyHandlers = element._propertyHandlers\r\n\t\t\tvar Element = element.constructor\r\n\t\t\tfor (var key in properties) {\r\n\t\t\t\tvar value = properties[key]\r\n\t\t\t\tvar VariableClass = Element[key]\r\n\t\t\t\tif (typeof VariableClass === 'function' && VariableClass.notifies && VariableClass !== value) {\r\n\t\t\t\t\thasOwn(Element, VariableClass)\r\n\t\t\t\t\t// if (value instanceof VariableClass) { TODO: assign the value as the owned instance\r\n\t\t\t\t\tVariableClass.for(element).put(value)\r\n\t\t\t\t}\r\n\t\t\t\tvar styleDefinition\r\n\t\t\t\tvar propertyHandler = propertyHandlers[key]\r\n\t\t\t\tif (propertyHandler) {\r\n\t\t\t\t\tif (propertyHandler === true) {\r\n\t\t\t\t\t\tif (value && value.notifies) {\r\n\t\t\t\t\t\t// a standard, known element property\r\n\t\t\t\t\t\t\tnew PropertyRenderer({\r\n\t\t\t\t\t\t\t\tname: key,\r\n\t\t\t\t\t\t\t\tvariable: value,\r\n\t\t\t\t\t\t\t\telement: element\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\telement[key] = value\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tpropertyHandler(element, value, key, properties)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if ((styleDefinition = styleDefinitions[key])) {\r\n\t\t\t\t\tif (value && value.notifies) {\r\n\t\t\t\t\t\tnew StyleRenderer({\r\n\t\t\t\t\t\t\tname: key,\r\n\t\t\t\t\t\t\tvariable: value,\r\n\t\t\t\t\t\t\telement: element\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tstyleDefinition(element, value, key)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (element[key] == null) {\r\n\t\t\t\t\t// we are working an unknown/unstandard property (or an event listener)\r\n\t\t\t\t\t// undefined or null means we can safely set\r\n\t\t\t\t\t// TODO: we may want to do the event listener check first so we can handle oncustomevent (that needs an addEventListener call to work)\r\n\t\t\t\t\telement[key] = value\r\n\t\t\t\t} else if (typeof value === 'function' && key.slice(0, 2) === 'on') {\r\n\t\t\t\t\t// event listener with one already defined on the prototype\r\n\t\t\t\t\telement.addEventListener(key.slice(2), value)\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// otherwise bypass/override the native getter/setter\r\n\t\t\t\t\tObject.defineProperty(element, key, {\r\n\t\t\t\t\t\tvalue: value,\r\n\t\t\t\t\t\tenumerable: true,\r\n\t\t\t\t\t\tconfigurable: true,\r\n\t\t\t\t\t\twritable: true\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction assignGenerators(element, properties) {\r\n\t\t\tvar generators = properties._generators\r\n\t\t\tvar customGenerators\r\n\t\t\tvar styleGenerators\r\n\t\t\tvar nativeGenerators\r\n\t\t\tvar propertyHandlers = element._propertyHandlers\r\n\t\t\tfor (var key in generators) {\r\n\t\t\t\tvar variable = new Variable.GeneratorVariable(generators[key].bind(element, properties))\r\n\t\t\t\tif (propertyHandlers[key]) {\r\n\t\t\t\t\t(nativeGenerators || (nativeGenerators = {}))[key] = variable\r\n\t\t\t\t} else if (styleDefinitions[key]) {\r\n\t\t\t\t\t(styleGenerators || (styleGenerators = {}))[key] = variable\r\n\t\t\t\t} else {\r\n\t\t\t\t\t(customGenerators || (customGenerators = {}))[key] = variable\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (customGenerators) {\r\n\t\t\t\t// custom ones must go first\r\n\t\t\t\tassignProperties(element, customGenerators)\r\n\t\t\t}\r\n\t\t\tif (styleGenerators) {\r\n\t\t\t\tassignProperties(element, styleGenerators)\r\n\t\t\t}\r\n\t\t\tif (nativeGenerators) {\r\n\t\t\t\t// native ones must come last so they can access custom ones\r\n\t\t\t\tassignProperties(element, nativeGenerators)\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction buildContent(element, content, key, properties) {\r\n\t\t\tvar each = element.each || properties.each\r\n\t\t\tif (each && content) {\r\n\t\t\t\t// render as list\r\n\t\t\t\tif (each.create) {\r\n\t\t\t\t\teach.defineHasOwn = function () {\r\n\t\t\t\t\t\tvar ItemClass = content.getCollectionOf && content.getCollectionOf() || Item\r\n\t\t\t\t\t\thasOwn(each, ItemClass, function (element) {\r\n\t\t\t\t\t\t\tvar itemVariable = ItemClass.from(element._item)\r\n\t\t\t\t\t\t\treturn itemVariable\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (content.notifies) {\r\n\t\t\t\t\tnew ListRenderer({\r\n\t\t\t\t\t\teach: each,\r\n\t\t\t\t\t\tvariable: content,\r\n\t\t\t\t\t\telement: element\r\n\t\t\t\t\t})\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar fragment = doc.createDocumentFragment()\r\n\t\t\t\t\tif (each.defineHasOwn) {\r\n\t\t\t\t\t\teach.defineHasOwn()\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontent.forEach(function(item) {\r\n\t\t\t\t\t\tif (each.create) {\r\n\t\t\t\t\t\t\tchildElement = each.create({parent: element, _item: item}) // TODO: make a faster object here potentially\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tchildElement = each(item, element)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfragment.appendChild(childElement)\r\n\t\t\t\t\t})\r\n\t\t\t\t\telement.appendChild(fragment)\r\n\t\t\t\t}\r\n\t\t\t} else if (inputs[element.tagName]) {\r\n\t\t\t\t// render into input\r\n\t\t\t\tbuildInputContent(element, content)\r\n\t\t\t} else if (content instanceof Array) {\r\n\t\t\t\t// treat array as children (potentially of the content node)\r\n\t\t\t\telement = element.contentNode || element\r\n\t\t\t\tlayoutChildren(element, content, element)\r\n\t\t\t} else {\r\n\t\t\t\t// render as string\r\n\t\t\t\telement.appendChild(variableAsContent(element, content))\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction bindChanges(element, variable, key, conversion) {\r\n\t\t\tlang.nextTurn(function() { // wait for next turn in case inputChanges isn't set yet\r\n\t\t\t\tvar inputEvents = element.inputEvents || ['change', 'alkali-change']\r\n\t\t\t\tfor (var i = 0, l = inputEvents.length; i < l; i++) {\r\n\t\t\t\t\telement.addEventListener(inputEvents[i], function (event) {\r\n\t\t\t\t\t\tvar value = element[key]\r\n\t\t\t\t\t\tvar result = variable.put(conversion ? conversion(value, element) : value, new Context(element))\r\n\t\t\t\t\t\tif (result === Variable.deny) {\r\n\t\t\t\t\t\t\tthrow new Error('Variable change denied')\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\r\n\t\tdoc.addEventListener('click', function(event) {\r\n\t\t\tvar target = event.target\r\n\t\t\tif (target.type === 'radio') {\r\n\t\t\t\tvar radios = doc.querySelectorAll('input[type=radio]')\r\n\t\t\t\tfor (var i = 0, l = radios.length; i < l; i++) {\r\n\t\t\t\t\tvar radio = radios[i]\r\n\t\t\t\t\tif (radio.name === target.name && radio !== target) {\r\n\t\t\t\t\t\tradio.dispatchEvent(new Event('alkali-change', {}))\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\tfunction conversion(value, element) {\r\n\t\t\tif (element.type == 'number') {\r\n\t\t\t\treturn parseFloat(value)\r\n\t\t\t}\r\n\t\t\treturn value\r\n\t\t}\r\n\t\r\n\t\tfunction buildInputContent(element, content) {\r\n\t\t\tvar inputType = element.type\r\n\t\t\tvar inputProperty = inputType in {date: 1, datetime: 1, time: 1} ?\r\n\t\t\t\t\t'valueAsDate' : (inputType === 'checkbox' || inputType === 'radio') ?\r\n\t\t\t\t\t\t'checked' : 'value'\r\n\t\r\n\t\t\tif (content && content.notifies) {\r\n\t\t\t\t// a variable, respond to changes\r\n\t\t\t\tnew InputPropertyRenderer({\r\n\t\t\t\t\tvariable: content,\r\n\t\t\t\t\tname: inputProperty,\r\n\t\t\t\t\telement: element\r\n\t\t\t\t})\r\n\t\t\t\t// and bind the other way as well, updating the variable in response to input changes\r\n\t\t\t\tbindChanges(element, content, inputProperty, conversion)\r\n\t\t\t} else {\r\n\t\t\t\t// primitive\r\n\t\t\t\telement[inputProperty] = content\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction mergeObject(Element, value, key, properties) {\r\n\t\t\tvar existing = properties[key]\r\n\t\t\tif (existing) {\r\n\t\t\t\tfor (var subKey in value) {\r\n\t\t\t\t\texisting[subKey] = value[subKey]\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tproperties[key] = value\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tvar classHandlers = {\r\n\t\t\tclasses: mergeObject,\r\n\t\t\t_generators: mergeObject,\r\n\t\t\tdataset: mergeObject,\r\n\t\t\tattributes: mergeObject,\r\n\t\t\tstyle: mergeObject,\r\n\t\t\thasOwn: function(Element, value) {\r\n\t\t\t\thasOwn(Element, value)\r\n\t\t\t},\r\n\t\t\tchildren: function(Element, value) {\r\n\t\t\t\tElement.children = value\r\n\t\t\t},\r\n\t\t\tshadow: function(Element, value) {\r\n\t\t\t\tElement.shadow = value\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction applyToConstructor(argument, Element) {\r\n\t\t\tvar applyOnCreate = Element._applyOnCreate\r\n\t\t\tif (argument && typeof argument === 'object') {\r\n\t\t\t\tif (argument instanceof Array || argument.notifies) {\r\n\t\t\t\t\tapplyOnCreate.content = argument\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (var key in argument) {\r\n\t\t\t\t\t// TODO: eventually we want to be able to set these as rules statically per element\r\n\t\t\t\t\t/*if (styleDefinitions[key]) {\r\n\t\t\t\t\t\tvar styles = Element.styles || (Element.styles = [])\r\n\t\t\t\t\t\tstyles.push(key)\r\n\t\t\t\t\t\tstyles[key] = descriptor.value\r\n\t\t\t\t\t} else {*/\r\n\t\t\t\t\t\tvar value = argument[key]\r\n\t\t\t\t\t\tvar VariableClass = Element[key]\r\n\t\t\t\t\t\tif (typeof value === 'function') {\r\n\t\t\t\t\t\t\tif (value.notifies) {\r\n\t\t\t\t\t\t\t\tif (value === Variable) {\r\n\t\t\t\t\t\t\t\t\tvalue = Variable() // create a branded variable if we are using a generic one\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t// for Variable classes we make them statically available on the element\r\n\t\t\t\t\t\t\t\tElement[key] = value\r\n\t\t\t\t\t\t\t} else if (isGenerator(value)) {\r\n\t\t\t\t\t\t\t\tif (key.slice(0, 4) === 'get_') {\r\n\t\t\t\t\t\t\t\t\tkey = key.slice(4)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t(applyOnCreate._generators || (applyOnCreate._generators = {}))[key] = value\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else if (value && value.notifies) {\r\n\t\t\t\t\t\t\t// also store any variables as statically available properties\r\n\t\t\t\t\t\t\tElement[key] = value\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (classHandlers[key]) { // Could eliminate this if we got rid of hasOwn\r\n\t\t\t\t\t\t\tclassHandlers[key](Element, value, key, applyOnCreate)\r\n\t\t\t\t\t\t} else if (typeof VariableClass === 'function' && VariableClass.notifies) {\r\n\t\t\t\t\t\t\tapplyOnCreate[key] = new VariableClass(value)\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tapplyOnCreate[key] = value\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (typeof argument === 'function' && !argument.for) {\r\n\t\t\t\tthrow new TypeError('Function as argument not supported')\r\n\t\t\t} else {\r\n\t\t\t\tapplyOnCreate.content = argument\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction getApplySet(Class) {\r\n\t\t\tif (Class.hasOwnProperty('_applyOnCreate')) {\r\n\t\t\t\treturn Class._applyOnCreate\r\n\t\t\t}\r\n\t\t\t// this means we didn't extend and evaluate the prototype yet\r\n\t\t\tif (Class.getForClass) {\r\n\t\t\t\t// we are extending an alkali constructor\r\n\t\t\t\t// if this class is inheriting from an alkali constructor, work our way up the chain\r\n\t\t\t\tvar applyOnCreate = Class._applyOnCreate = {}\r\n\t\t\t\tvar parentApplySet = getApplySet(getPrototypeOf(Class))\r\n\t\t\t\tfor (var key in parentApplySet) {\r\n\t\t\t\t\tapplyOnCreate[key] = classHandlers[key] ? Object.create(parentApplySet[key]) : parentApplySet[key]\r\n\t\t\t\t}\r\n\t\t\t\t// we need to check the prototype for event handlers\r\n\t\t\t\tvar prototype = Class.prototype\r\n\t\t\t\tvar propertyHandlers\r\n\t\t\t\tvar keys = Object.getOwnPropertyNames(prototype)\r\n\t\t\t\tfor (var i = 0, l = keys.length; i < l; i++) {\r\n\t\t\t\t\tvar key = keys[i]\r\n\t\t\t\t\tif (key.slice(0, 2) === 'on' || (key === 'render' && isGenerator(prototype[key]))) {\r\n\t\t\t\t\t\tapplyOnCreate[key] = prototype[key]\r\n\t\t\t\t\t} else if (key.slice(0, 6) === 'render') {\r\n\t\t\t\t\t\tvar propertyName = key[6].toLowerCase() + key.slice(7)\r\n\t\t\t\t\t\tif (!propertyHandlers) {\r\n\t\t\t\t\t\t\tpropertyHandlers = prototype._propertyHandlers = Object.create(prototype._propertyHandlers)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tpropertyHandlers[propertyName] = true // TODO: is it better to implement this with property handlers?\r\n\t\t\t\t\t\tObject.defineProperty(prototype, propertyName, renderDescriptor(key))\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn applyOnCreate\r\n\t\t\t}\r\n\t\t\treturn null\r\n\t\t}\r\n\t\r\n\t\tfunction renderDescriptor(renderMethod) {\r\n\t\t\tvar map = new WeakMap()\r\n\t\t\treturn {\r\n\t\t\t\tget: function() {\r\n\t\t\t\t\treturn map.has(this) ? map.get(this) : null\r\n\t\t\t\t},\r\n\t\t\t\tset: function(value) {\r\n\t\t\t\t\tmap.set(this, value)\r\n\t\t\t\t\tthis[renderMethod](value)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction makeElementConstructor() {\r\n\t\t\tfunction Element(selector, properties) {\r\n\t\t\t\tif (this instanceof Element){\r\n\t\t\t\t\t// create DOM element\r\n\t\t\t\t\t// Need to detect if we have registered the element and `this` is actually already the correct instance\r\n\t\t\t\t\treturn create.apply(Element.prototype === getPrototypeOf(this) ? Element :// this means it is from this constructor\r\n\t\t\t\t\t\tthis.constructor, // this means it was constructed from a subclass\r\n\t\t\t\t\t\targuments)\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// extend to create new class\r\n\t\t\t\t\treturn withProperties.apply(Element, arguments)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn Element\r\n\t\t}\r\n\t\r\n\t\tfunction withProperties(selector, properties) {\r\n\t\t\tvar Element = makeElementConstructor()\r\n\t\t\tif (this.with) {\r\n\t\t\t\t// TODO: Might consider only doing this for derivatives of derivatives, since we don't need to inherit from base constructors\r\n\t\t\t\t// or only doing this in the case of element having custom properties (could mark it with a flag)\r\n\t\t\t\tsetPrototypeOf(Element, this)\r\n\t\t\t\tElement.ownedClasses = null\r\n\t\t\t} else {\r\n\t\t\t\tElement.create = create\r\n\t\t\t\tElement.with = withProperties\r\n\t\t\t\tElement.for = forTarget\r\n\t\t\t\tElement.property = propertyForElement\r\n\t\t\t\tElement.getForClass = getForClass\r\n\t\t\t}\r\n\t\t\tElement.prototype = this.prototype\r\n\t\r\n\t\t\tvar applyOnCreate = Element._applyOnCreate = {}\r\n\t\t\tvar parentApplySet = getApplySet(this)\r\n\t\t\t// copy parent properties\r\n\t\t\tfor (var key in parentApplySet) {\r\n\t\t\t\tapplyOnCreate[key] = classHandlers[key] ? Object.create(parentApplySet[key]) : parentApplySet[key]\r\n\t\t\t}\r\n\t\r\n\t\t\tvar i = 0 // for arguments\r\n\t\t\tif (typeof selector === 'string') {\r\n\t\t\t\tvar selectorMatch = selector.match(SELECTOR_REGEX)\r\n\t\t\t\tif (selectorMatch) {\r\n\t\t\t\t\tdo {\r\n\t\t\t\t\t\tvar operator = selectorMatch[1]\r\n\t\t\t\t\t\tvar name = selectorMatch[2]\r\n\t\t\t\t\t\tif (operator == '.') {\r\n\t\t\t\t\t\t\tif (applyOnCreate.className) {\r\n\t\t\t\t\t\t\t\tapplyOnCreate.className += ' ' + name\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tapplyOnCreate.className = name\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tapplyOnCreate.id = name\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar remaining = selectorMatch[3]\r\n\t\t\t\t\t\tselectorMatch = remaining && remaining.match(SELECTOR_REGEX)\r\n\t\t\t\t\t} while (selectorMatch)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tapplyOnCreate.content = selector\r\n\t\t\t\t}\r\n\t\t\t\ti++ // skip the first argument\r\n\t\t\t}\r\n\t\r\n\t\t\tfor (var l = arguments.length; i < l; i++) {\r\n\t\t\t\tapplyToConstructor(arguments[i], Element)\r\n\t\t\t}\r\n\t\t\treturn Element\r\n\t\t}\r\n\t\tvar currentParent\r\n\t\tfunction create(selector, properties) {\r\n\t\t\t// TODO: make this a symbol\r\n\t\t\tvar applyOnCreate = getApplySet(this)\r\n\t\t\tif (currentParent) {\r\n\t\t\t\tvar parent = currentParent\r\n\t\t\t\tcurrentParent = null\r\n\t\t\t}\r\n\t/*\t\tif (this._initialized != this) {\r\n\t\t\t\tthis._initialized = this\r\n\t\t\t\tthis.initialize && this.initialize()\r\n\t\t\t\tvar styles = this.styles\r\n\t\t\t\tif (styles) {\r\n\t\t\t\t\tvar rule = createCssRule(getUniqueSelector(this))\r\n\t\t\t\t\tfor (var i = 0, l = styles.length; i < l; i++) {\r\n\t\t\t\t\t\tvar key = styles[i]\r\n\t\t\t\t\t\tvar value = styles[key]\r\n\t\t\t\t\t\t// TODO: if it is a contextualized variable, do this on the element\r\n\t\t\t\t\t\tvar styleDefinition = styleDefinitions[key]\r\n\t\t\t\t\t\tif (styleDefinition) {\r\n\t\t\t\t\t\t\tstyleDefinition(rule, value, key)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!this.hasOwnProperty('_applyOnCreate')) {\r\n\t\t\t\t\tapplyOnCreate = getApplySet(this)\r\n\t\t\t\t}\r\n\t\t\t}*/\r\n\t\t\tvar element = doc.createElement(this.tagName)\r\n\t\t\tif (selector && selector.parent) {\r\n\t\t\t\tparent = selector.parent\r\n\t\t\t}\r\n\t\t\tif (parent) {\r\n\t\t\t\tpresumptiveParentMap.set(element, parent)\r\n\t\t\t}\r\n\t\t\tif (!(element instanceof this)) {\r\n\t\t\t\t// ideally we want to avoid this call, as it is expensive, but for classes that\r\n\t\t\t\t// don't register a tag name, we have to make sure the prototype chain is correct\r\n\t\t\t\tsetPrototypeOf(element, this.prototype)\r\n\t\t\t}\r\n\t\t\tif (element.constructor != this) {\r\n\t\t\t\telement.constructor = this // need to do this for hasOwn contextualization to work\r\n\t\t\t}\r\n\t\t\tif (arguments.length > 0) {\r\n\t\t\t\t// copy applyOnCreate when we have arguments\r\n\t\t\t\tvar ElementApplyOnCreate = applyOnCreate\r\n\t\t\t\tapplyOnCreate = {}\r\n\t\t\t\tfor (var key in ElementApplyOnCreate) {\r\n\t\t\t\t\tapplyOnCreate[key] = classHandlers[key] ? Object.create(ElementApplyOnCreate[key]) : ElementApplyOnCreate[key]\r\n\t\t\t\t}\r\n\t\t\t\tvar i = 0\r\n\t\t\t\tif (typeof selector == 'string') {\r\n\t\t\t\t\ti++\r\n\t\t\t\t\tvar selectorMatch = selector.match(SELECTOR_REGEX)\r\n\t\t\t\t\tif (selectorMatch) {\r\n\t\t\t\t\t\tdo {\r\n\t\t\t\t\t\t\tvar operator = selectorMatch[1]\r\n\t\t\t\t\t\t\tvar name = selectorMatch[2]\r\n\t\t\t\t\t\t\tif (operator == '.') {\r\n\t\t\t\t\t\t\t\tif (applyOnCreate.className) {\r\n\t\t\t\t\t\t\t\t\tapplyOnCreate.className += ' ' + name\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tif (element.className) {\r\n\t\t\t\t\t\t\t\t\t\t\telement.className += ' ' + name\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\telement.className = name\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tif (applyOnCreate.id) {\r\n\t\t\t\t\t\t\t\t\tapplyOnCreate.id = name\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// just skip right to the element\r\n\t\t\t\t\t\t\t\t\telement.id = name\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar remaining = selectorMatch[3]\r\n\t\t\t\t\t\t\tselectorMatch = remaining && remaining.match(SELECTOR_REGEX)\r\n\t\t\t\t\t\t} while (selectorMatch)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tapplyOnCreate.content = selector\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (selector && selector._item) {\r\n\t\t\t\t\t// this is kind of hack, to get the Item available before the properties, eventually we may want to\r\n\t\t\t\t\t// order static properties before variable binding applications, but for now.\r\n\t\t\t\t\telement._item = selector._item\r\n\t\t\t\t}\r\n\t\t\t\tfor (var l = arguments.length; i < l; i++) {\r\n\t\t\t\t\tvar argument = arguments[i]\r\n\t\t\t\t\tif (argument && typeof argument === 'object') {\r\n\t\t\t\t\t\tif (argument instanceof Array || argument.notifies) {\r\n\t\t\t\t\t\t\tapplyOnCreate.content = argument\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tfor (var key in argument) {\r\n\t\t\t\t\t\t\t\tif (classHandlers[key]) {\r\n\t\t\t\t\t\t\t\t\tclassHandlers[key](this, argument[key], key, applyOnCreate)\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tapplyOnCreate[key] = argument[key]\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (typeof argument === 'function' && argument.for) {\r\n\t\t\t\t\t\tapplyOnCreate.content = argument.for(element)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tapplyOnCreate.content = argument\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (element.created) {\r\n\t\t\t\tapplyOnCreate = element.created(applyOnCreate) || applyOnCreate\r\n\t\t\t} else if (applyOnCreate.created) {\r\n\t\t\t\tapplyOnCreate = applyOnCreate.created.call(element, applyOnCreate) || applyOnCreate\r\n\t\t\t}\r\n\t\t\t// TODO: inline this for better performance, possibly\r\n\t\t\tassignProperties(element, applyOnCreate)\r\n\t\r\n\t\t\tif (applyOnCreate._generators) {\r\n\t\t\t\tassignGenerators(element, applyOnCreate)\r\n\t\t\t}\r\n\t\r\n\t\t\tif (this.children) {\r\n\t\t\t\tlayoutChildren(element, this.children, element)\r\n\t\t\t}\r\n\t\t\tif (this.shadow) {\r\n\t\t\t\tlayoutChildren(element.attachShadow({mode: 'open'}), this.shadow, element)\r\n\t\t\t}\r\n\t\t\t// always do this last, so it can be properly inserted inside the children\r\n\t\t\tif (element.content) {\r\n\t\t\t\tbuildContent(element, element.content, 'content', applyOnCreate)\r\n\t\t\t}\r\n\t\t\telement.ready && element.ready(applyOnCreate)\r\n\t\t\treturn element\r\n\t\t}\r\n\t\r\n\t\tvar slice = [].slice\r\n\t\tfunction append(parent){\r\n\t\t\treturn this.nodeType ?\r\n\t\t\t\tlayoutChildren(this, arguments, this) : // called as a method\r\n\t\t\t\tlayoutChildren(parent, slice.call(arguments, 1), parent) // called as a function\r\n\t\t}\r\n\t\r\n\t\tfunction prepend(parent){\r\n\t\t\treturn this.nodeType ?\r\n\t\t\t\tlayoutChildren(this, arguments, this, true) : // called as a method\r\n\t\t\t\tlayoutChildren(parent, slice.call(arguments, 1), parent, true) // called as a function\r\n\t\t}\r\n\t\r\n\t\tfunction defineTag(tagName, Element) {\r\n\t\t\tvar extendElement = Element.tagName\r\n\t\t\tElement.tagName = tagName\r\n\t\t\tif (typeof customElements === 'object') {\r\n\t\t\t\tcustomElements.define(tagName, lang.extendClass(HTMLElement), { extends: extendElement })\r\n\t\t\t} else {\r\n\t\t\t\tconsole.warn('This browser does not support customElements, ensure that the constructor is used to create new elements')\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tvar Element = withProperties.call(typeof HTMLElement !== 'undefined' ? HTMLElement : function() {})\r\n\t\r\n\t\tElement.defineTag = defineTag\r\n\t\tElement.assign = function(target, properties) {\r\n\t\t\tif (typeof target === 'function') {\r\n\t\t\t\t// assign properties to an existing constructor/class\r\n\t\t\t\tgetApplySet(target) // make sure we have our own applyOnCreate first\r\n\t\t\t\tapplyToConstructor(properties, target)\r\n\t\t\t} else {\r\n\t\t\t\t// assign to an element\r\n\t\t\t\t// TODO: Handle content property separately\r\n\t\t\t\treturn assignProperties(target, properties)\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tElement.within = function(element){\r\n\t\t\t// find closest child\r\n\t\t}\r\n\t\r\n\t\tgenerate([\r\n\t\t\t'Video',\r\n\t\t\t'Source',\r\n\t\t\t'Media',\r\n\t\t\t'Audio',\r\n\t\t\t'UL',\r\n\t\t\t'U',\r\n\t\t\t'Track',\r\n\t\t\t'Title',\r\n\t\t\t'TextArea',\r\n\t\t\t'Template',\r\n\t\t\t'TBody',\r\n\t\t\t'THead',\r\n\t\t\t'TFoot',\r\n\t\t\t'TR',\r\n\t\t\t'Table',\r\n\t\t\t'Col',\r\n\t\t\t'ColGroup',\r\n\t\t\t'TH',\r\n\t\t\t'TD',\r\n\t\t\t'Caption',\r\n\t\t\t'Sup',\r\n\t\t\t'Sub',\r\n\t\t\t'Style',\r\n\t\t\t'Strong',\r\n\t\t\t'Span',\r\n\t\t\t'Small',\r\n\t\t\t'Shadow',\r\n\t\t\t'Select',\r\n\t\t\t'Script',\r\n\t\t\t'S',\r\n\t\t\t'Quote',\r\n\t\t\t'Progress',\r\n\t\t\t'Pre',\r\n\t\t\t'Picture',\r\n\t\t\t'Param',\r\n\t\t\t'P',\r\n\t\t\t'Output',\r\n\t\t\t'Option',\r\n\t\t\t'Optgroup',\r\n\t\t\t'Object',\r\n\t\t\t'OL',\r\n\t\t\t'Ins',\r\n\t\t\t'I',\r\n\t\t\t'Del',\r\n\t\t\t'Meter',\r\n\t\t\t'Meta',\r\n\t\t\t'Menu',\r\n\t\t\t'Map',\r\n\t\t\t'Link',\r\n\t\t\t'Legend',\r\n\t\t\t'Label',\r\n\t\t\t'LI',\r\n\t\t\t'KeyGen',\r\n\t\t\t'Input',\r\n\t\t\t'Img',\r\n\t\t\t'IFrame',\r\n\t\t\t'H1',\r\n\t\t\t'H2',\r\n\t\t\t'H3',\r\n\t\t\t'H4',\r\n\t\t\t'H5',\r\n\t\t\t'H6',\r\n\t\t\t'Hr',\r\n\t\t\t'FrameSet',\r\n\t\t\t'Frame',\r\n\t\t\t'Form',\r\n\t\t\t'Font',\r\n\t\t\t'Embed',\r\n\t\t\t'Em',\r\n\t\t\t'Code',\r\n\t\t\t'Cite',\r\n\t\t\t'Dfn',\r\n\t\t\t'B',\r\n\t\t\t'Article',\r\n\t\t\t'Aside',\r\n\t\t\t'Abbr',\r\n\t\t\t'Footer',\r\n\t\t\t'Figure',\r\n\t\t\t'FigCaption',\r\n\t\t\t'Header',\r\n\t\t\t'Main',\r\n\t\t\t'Mark',\r\n\t\t\t'MenuItem',\r\n\t\t\t'Nav',\r\n\t\t\t'Section',\r\n\t\t\t'Slot',\r\n\t\t\t'Summary',\r\n\t\t\t'WBr',\r\n\t\t\t'Div',\r\n\t\t\t'Dialog',\r\n\t\t\t'Details',\r\n\t\t\t'DataList',\r\n\t\t\t'DL',\r\n\t\t\t'Canvas',\r\n\t\t\t'Button',\r\n\t\t\t'Base',\r\n\t\t\t'Br',\r\n\t\t\t'Area',\r\n\t\t\t'A'\r\n\t\t])\r\n\t\tgenerateInputs([\r\n\t\t\t'Checkbox',\r\n\t\t\t'Password',\r\n\t\t\t'Submit',\r\n\t\t\t'Radio',\r\n\t\t\t'Color',\r\n\t\t\t'Date',\r\n\t\t\t'DateTime',\r\n\t\t\t'Email',\r\n\t\t\t'Month',\r\n\t\t\t'Number',\r\n\t\t\t'Range',\r\n\t\t\t'Search',\r\n\t\t\t'Tel',\r\n\t\t\t'Time',\r\n\t\t\t'Url',\r\n\t\t\t'Week'])\r\n\t\r\n\t\tvar tags = {}\r\n\t\tfunction getConstructor(tagName) {\r\n\t\t\ttagName = tagName.toLowerCase()\r\n\t\t\treturn tags[tagName] ||\r\n\t\t\t\t(tags[tagName] =\r\n\t\t\t\t\tsetupElement(withProperties.call(doc.createElement(tagName).constructor), tagName))\r\n\t\t}\r\n\t\r\n\t\tfunction setupElement(Element, tagName) {\r\n\t\t\tvar props = elementPropertyHandlers[tagName]\r\n\t\t\tif (props && !props.assigned) {\r\n\t\t\t\tvar handlers = Element.prototype._propertyHandlers = Object.create(propertyHandlers)\r\n\t\t\t\tfor (var i = 0, l = props.length; i < l; i++) {\r\n\t\t\t\t\thandlers[props[i]] = true\r\n\t\t\t\t}\r\n\t\t\t\tif (props.value) {\r\n\t\t\t\t\tfor (var i in props) {\r\n\t\t\t\t\t\tif (!(i > -1)) { // assign any string properties if necessary\r\n\t\t\t\t\t\t\thandlers[i] = props[i]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tprops.assigned = true\r\n\t\t\t}\r\n\t\t\tElement.tagName = tagName\r\n\t\t\treturn Element\r\n\t\t}\r\n\t\tfunction generate(elements) {\r\n\t\t\telements.forEach(function(elementName) {\r\n\t\t\t\tvar ElementClass\r\n\t\t\t\tObject.defineProperty(Element, elementName, {\r\n\t\t\t\t\tget: function() {\r\n\t\t\t\t\t\treturn ElementClass || (ElementClass = getConstructor(elementName))\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\t\tfunction generateInputs(elements) {\r\n\t\t\telements.forEach(function(inputType) {\r\n\t\t\t\tvar ElementClass\r\n\t\t\t\tObject.defineProperty(Element, inputType, {\r\n\t\t\t\t\tget: function() {\r\n\t\t\t\t\t\t// TODO: make all inputs extend from input generated from generate\r\n\t\t\t\t\t\treturn ElementClass || (ElementClass = setupElement(withProperties.call(HTMLInputElement, {\r\n\t\t\t\t\t\t\ttype: inputType.toLowerCase()\r\n\t\t\t\t\t\t}), 'input'))\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t// alias all the inputs with an Input suffix\r\n\t\t\t\tObject.defineProperty(Element, inputType + 'Input', {\r\n\t\t\t\t\tget: function() {\r\n\t\t\t\t\t\treturn this[inputType]\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\t\r\n\t\tvar aliases = {\r\n\t\t\tAnchor: 'A',\r\n\t\t\tImage: 'Img',\r\n\t\t\tParagraph: 'P',\r\n\t\t\tTextarea: 'TextArea',\r\n\t\t\tDList: 'DL',\r\n\t\t\tUList: 'UL',\r\n\t\t\tOList: 'OL',\r\n\t\t\tListItem: 'LI',\r\n\t\t\tText: 'Input',\r\n\t\t\tTextInput: 'Input',\r\n\t\t\tTableRow: 'TR',\r\n\t\t\tTableCell: 'TD',\r\n\t\t\tTableHeaderCell: 'TH',\r\n\t\t\tTableHeader: 'THead',\r\n\t\t\tTableBody: 'TBody'\r\n\t\t}\r\n\t\tfor (var alias in aliases) {\r\n\t\t\t(function(alias, to) {\r\n\t\t\t\tObject.defineProperty(Element, alias, {\r\n\t\t\t\t\tget: function() {\r\n\t\t\t\t\t\treturn this[to]\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t})(alias, aliases[alias])\r\n\t\t}\r\n\t\r\n\t\tElement.append = append\r\n\t\tElement.prepend = prepend\r\n\t\tElement.refresh = Renderer.refresh\r\n\t\tElement.options = {\r\n\t\t\tmoveLiveElementsEnabled: true,\r\n\t\t}\r\n\t\tElement.content = function(element){\r\n\t\t\t// container marker\r\n\t\t\treturn {\r\n\t\t\t\tisContentNode: true,\r\n\t\t\t\tcreate: element.create.bind(element)\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tElement.ElementClass = function() {}\r\n\t\tif (typeof Symbol !== 'undefined') {\r\n\t\t\t// make instanceof work for Element\r\n\t\t\tObject.defineProperty(Element.ElementClass, Symbol.hasInstance, { value: function(target) {\r\n\t\t\t\treturn target && (target.create && target.with)\r\n\t\t\t}})\r\n\t\t}\r\n\t\r\n\t\t// TODO: unify this in lang\r\n\t\tElement.extend = function(Class, properties) {\r\n\t\t\tfunction ExtendedElement() {\r\n\t\t\t\treturn Class.apply(this, arguments)\r\n\t\t\t}\r\n\t\t\tsetPrototypeOf(ExtendedElement, Class)\r\n\t\t\tvar prototype = ExtendedElement.prototype = Object.create(Class.prototype)\r\n\t\t\tprototype.constructor = ExtendedElement\r\n\t\t\tObject.getOwnPropertyNames(properties).forEach(function(key) {\r\n\t\t\t\tvar descriptor = Object.getOwnPropertyDescriptor(properties, key)\r\n\t\t\t\tif (classHandlers[key]) {\r\n\t\t\t\t\tclassHandlers[key](ExtendedElement, descriptor.value, key, properties)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tObject.defineProperty(prototype, key, descriptor)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\treturn ExtendedElement\r\n\t\t}\r\n\t\r\n\t\tfunction forTarget(target) {\r\n\t\t\treturn target.constructor.getForClass(target, this)\r\n\t\t}\r\n\t\r\n\t\tfunction hasOwn(From, Target, createInstance) {\r\n\t\t\tif (typeof Target === 'object') {\r\n\t\t\t\t// we were given an actual instance, use that\r\n\t\t\t\tvar elementMap = From.ownedClasses || (From.ownedClasses = new WeakMap())\r\n\t\t\t\tvar instanceMap = {get: function () {\r\n\t\t\t\t\treturn Target\r\n\t\t\t\t}}\r\n\t\t\t\telementMap.set(Target.constructor, instanceMap)\r\n\t\t\t\treturn hasOwn(From, Target.Class, Target.createInstance)\r\n\t\t\t}\r\n\t\t\tif (Target instanceof Array) {\r\n\t\t\t\treturn Target.forEach(function(Target) {\r\n\t\t\t\t\thasOwn(From, Target)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tvar elementMap = From.ownedClasses || (From.ownedClasses = new WeakMap())\r\n\t\t\t// TODO: Go up through prototype chain of Target and set each one\r\n\t\t\tif (!elementMap.has(Target)) {\r\n\t\t\t\tvar instanceMap = new WeakMap()\r\n\t\t\t\tinstanceMap.createInstance = createInstance\r\n\t\t\t\telementMap.set(Target, instanceMap)\r\n\t\t\t}\r\n\t\t\treturn From\r\n\t\t}\r\n\t\r\n\t\tfunction getForClass(element, Target) {\r\n\t\t\tvar createInstance\r\n\t\t\twhile (element && !(createInstance = element.constructor.ownedClasses && element.constructor.ownedClasses.get(Target))) {\r\n\t\t\t\telement = element.parentNode || presumptiveParentMap.get(element)\r\n\t\t\t}\r\n\t\t\tif (createInstance) {\r\n\t\t\t\tvar ownedInstances = element.ownedInstances || (element.ownedInstances = new WeakMap())\r\n\t\t\t\tvar instance = ownedInstances.get(Target)\r\n\t\t\t\tif (instance === undefined) {\r\n\t\t\t\t\townedInstances.set(Target, instance = createInstance(element))\r\n\t\t\t\t\tinstance.subject = element\r\n\t\t\t\t}\r\n\t\t\t\treturn instance\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction propertyForElement(key) {\r\n\t\t\t// we just need to establish one Variable class for each element, so we cache it\r\n\t\t\tThisElementVariable = this._Variable\r\n\t\t\tif (!ThisElementVariable) {\r\n\t\t\t\t// need our own branded variable class for this element class\r\n\t\t\t\tThisElementVariable = this._Variable = Variable()\r\n\t\r\n\t\t\t\thasOwn(this, ThisElementVariable, function(element) {\r\n\t\t\t\t\t// TODO: we might want to do this in init instead\r\n\t\t\t\t\tvar elementOverlay\r\n\t\t\t\t\tif (element.alkaliRenderers) {\r\n\t\t\t\t\t\tvar variableProperties = {}\r\n\t\t\t\t\t\tfor (var i = 0; i < element.alkaliRenderers.length; i++){\r\n\t\t\t\t\t\t\tvar renderer = element.alkaliRenderers[i]\r\n\t\t\t\t\t\t\tif (renderer.name) {\r\n\t\t\t\t\t\t\t\tvariableProperties[renderer.name] = {value: renderer.variable}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\telementOverlay = Object.create(element, variableProperties)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\telementOverlay = element\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar instance = new ThisElementVariable(elementOverlay)\r\n\t\t\t\t\t// we are not observing, because you can't delegate getters and setters in safari\r\n\t\t\t\t\t// instance.observeObject()\r\n\t\t\t\t\treturn instance\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\t// now actually get the property class\r\n\t\t\treturn ThisElementVariable.property(key)\r\n\t\t}\r\n\t\r\n\t\tvar Item = Element.Item = Variable.Item\r\n\t\r\n\t\tfunction enterRenderer(Renderer, options/*, target*/) {\r\n\t\t\t// this will be used for optimized class-level variables\r\n\t\t\t/*if (target.started) { // TODO: Might want to pass in started as a parameter\r\n\t\t\t\t// this means that the renderer has already been created, so we just need to add this instance\r\n\t\t\t\tRenderer.prototype.renderUpdate.call(options, element)\r\n\t\t\t} else {*/\r\n\t\t\tnew Renderer(options)\r\n\t\t\t//}\r\n\t\t}\r\n\t\r\n\t\tfunction cleanup(target) {\r\n\t\t\tvar renderers = target.alkaliRenderers\r\n\t\t\tif (renderers) {\r\n\t\t\t\tfor (var i = 0, l = renderers.length; i < l; i++) {\r\n\t\t\t\t\trenderers[i].stop()\r\n\t\t\t\t}\r\n\t\t\t\ttarget.needsRestart = true\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction restart(target) {\r\n\t\t\tvar renderers = target.alkaliRenderers\r\n\t\t\tif (renderers) {\r\n\t\t\t\tfor (var i = 0, l = renderers.length; i < l; i++) {\r\n\t//\t\t\t\tupdaters[i].start()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// setup the mutation observer so we can be notified of attachments and removals\r\n\t\tfunction elementAttached(element) {\r\n\t\t\tvar Class = element.constructor\r\n\t\t\tif (Class.create) {\r\n\t/*\t\t\tif (Class.attachedInstances) {\r\n\t\t\t\t\tClass.attachedInstances.push(element)\r\n\t\t\t\t\tif (Class.attachedInstances.length === 1 && Class.needsRestart) {\r\n\t\t\t\t\t\trestart(Class)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tClass.attachedInstances = [element]\r\n\t\t\t\t}*/\r\n\t\t\t\tif (element.attached) {\r\n\t\t\t\t\telement.attached()\r\n\t\t\t\t}\r\n\t\t\t\tif (element.needsRestart) {\r\n\t\t\t\t\trestart(element)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction elementDetached(element) {\r\n\t\t\t/*var attachedInstances = element.constructor.attachedInstances\r\n\t\t\tif (attachedInstances) {\r\n\t\t\t\tvar index = attachedInstances.indexOf(element)\r\n\t\t\t\tif (index > -1) {\r\n\t\t\t\t\tattachedInstances.splice(index, 1)\r\n\t\t\t\t\tif (attachedInstances.length === 0) {\r\n\t\t\t\t\t\tcleanup(Class)\r\n\t\t\t\t\t}\r\n\t\t\t\t}*/\r\n\t\t\t\tif (element.detached) {\r\n\t\t\t\t\telement.detached()\r\n\t\t\t\t}\r\n\t\t\t\tcleanup(element)\r\n\t\t\t//}\r\n\t\t}\r\n\t\tif (typeof MutationObserver === 'function') {\r\n\t\t\tvar lifeStates = [{\r\n\t\t\t\tname: 'detached',\r\n\t\t\t\tnodes: 'removedNodes',\r\n\t\t\t\taction: elementDetached\r\n\t\t\t}, {\r\n\t\t\t\tname: 'attached',\r\n\t\t\t\tnodes: 'addedNodes',\r\n\t\t\t\taction: elementAttached\r\n\t\t\t}]\r\n\t\t\tfunction firstVisit(node, state) {\r\n\t\t\t\tif (state.name === 'attached') {\r\n\t\t\t\t\tif (node.__alkaliAttached__) {\r\n\t\t\t\t\t\treturn false\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnode.__alkaliAttached__ = true\r\n\t\t\t\t\t\tstate.action(node)\r\n\t\t\t\t\t\treturn true\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (node.__alkaliAttached__) {\r\n\t\t\t\t\tif (doc.body.contains(node)) {\r\n\t\t\t\t\t\t// detached event, but it is actually still attached (will get attached in a later mutation record)\r\n\t\t\t\t\t\t// so don't get through the detached/attached lifecycle\r\n\t\t\t\t\t\treturn false\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnode.__alkaliAttached__ = false\r\n\t\t\t\t\tstate.action(node)\r\n\t\t\t\t}\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t\tvar observer = new MutationObserver(function(mutations) {\r\n\t\t\t\tfor (var i = 0, il = mutations.length; i < il; i++) {\r\n\t\t\t\t\tvar mutation = mutations[i]\r\n\t\t\t\t\t// invoke action on element if we haven't already\r\n\t\t\t\t\tactionIteration:\r\n\t\t\t\t\tfor (var j = 0, jl = lifeStates.length; j < jl; j++) { // two steps, removed nodes and added nodes\r\n\t\t\t\t\t\tvar state = lifeStates[j]\r\n\t\t\t\t\t\tvar nodes = mutation[state.nodes]\r\n\t\t\t\t\t\t// iterate over node list\r\n\t\t\t\t\t\tnodeIteration:\r\n\t\t\t\t\t\tfor (var k = 0, kl = nodes.length; k < kl; k++) {\r\n\t\t\t\t\t\t\tvar baseNode = nodes[k]\r\n\t\t\t\t\t\t\tif (firstVisit(baseNode, state)) {\r\n\t\t\t\t\t\t\t\t// start traversal with child, if it exists\r\n\t\t\t\t\t\t\t\tvar currentNode = baseNode.firstChild\r\n\t\t\t\t\t\t\t\tif (currentNode) {\r\n\t\t\t\t\t\t\t\t\tdo {\r\n\t\t\t\t\t\t\t\t\t\tvar nextNode\r\n\t\t\t\t\t\t\t\t\t\tif (currentNode.nodeType === 1 && firstVisit(currentNode, state)) {\r\n\t\t\t\t\t\t\t\t\t\t\t// depth-first search\r\n\t\t\t\t\t\t\t\t\t\t\tnextNode = currentNode.firstChild\r\n\t\t\t\t\t\t\t\t\t\t\tif (!nextNode) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tnextNode = currentNode.nextSibling\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tnextNode = currentNode.nextSibling\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tif (!nextNode) {\r\n\t\t\t\t\t\t\t\t\t\t\t// come back out to parents\r\n\t\t\t\t\t\t\t\t\t\t\t// TODO: try keeping a stack to make this faster\r\n\t\t\t\t\t\t\t\t\t\t\tdo {\r\n\t\t\t\t\t\t\t\t\t\t\t\tcurrentNode = currentNode.parentNode\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (currentNode === baseNode) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontinue nodeIteration\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t} while (!(nextNode = currentNode.nextSibling))\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tcurrentNode = nextNode\r\n\t\t\t\t\t\t\t\t\t} while (true)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// if (options.moveLiveElementsEnabled) {\r\n\t\t\t\t\t\t\t// TODO: any options that we can really do here?\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tobserver.observe(doc.body || doc, {\r\n\t\t\t\tchildList: true,\r\n\t\t\t\tsubtree: true\r\n\t\t\t})\r\n\t\t}\r\n\t\r\n\t\tlang.copy(Variable.Context.prototype, {\r\n\t\t\tspecify: function(Variable) {\r\n\t\t\t\tvar element = this.subject\r\n\t\t\t\tvar distinctive = true\r\n\t\t\t\t;(this.generics || (this.generics = [])).push(Variable)\r\n\t\t\t\tdo {\r\n\t\t\t\t\tif (this.distinctSubject === element) {\r\n\t\t\t\t\t\tdistinctive = false\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar subjectMap = element.constructor.ownedClasses\r\n\t\t\t\t\tif (subjectMap) {\r\n\t\t\t\t\t\tvar instanceMap = subjectMap.get(Variable)\r\n\t\t\t\t\t\tif (instanceMap) {\r\n\t\t\t\t\t\t\tif (distinctive) {\r\n\t\t\t\t\t\t\t\tthis.distinctSubject = element\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tspecifiedInstance = instanceMap.get(element)\r\n\t\t\t\t\t\t\tif (!specifiedInstance) {\r\n\t\t\t\t\t\t\t\tinstanceMap.set(element, specifiedInstance = instanceMap.createInstance ?\r\n\t\t\t\t\t\t\t\t\tinstanceMap.createInstance(element) : new Variable())\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn specifiedInstance\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} while ((element = element.parentNode || presumptiveParentMap.get(element)))\r\n\t\t\t\t// else if no specific context is found, return default instance\r\n\t\t\t\treturn Variable.defaultInstance\r\n\t\t\t},\r\n\t\r\n\t\t\tgetContextualized: function(variable) {\r\n\t\t\t\t// returns a variable that has already been contextualized\r\n\t\t\t\tvar element = this.subject\r\n\t\t\t\tif (!element) {\r\n\t\t\t\t\t// no element, just use the default variable\r\n\t\t\t\t\treturn variable\r\n\t\t\t\t}\r\n\t\t\t\tif (variable._contextMap) {\r\n\t\t\t\t\tdo {\r\n\t\t\t\t\t\tvar instance = variable._contextMap.get(element)\r\n\t\t\t\t\t\tif (instance && instance.context.matches(element)) {\r\n\t\t\t\t\t\t\treturn instance\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} while ((element = element.parentNode || presumptiveParentMap.get(element)))\r\n\t\t\t\t}\r\n\t\t\t\tif (variable.context && variable.context.matches(this.subject)) {\r\n\t\t\t\t\t// check if the default variable is allowed\r\n\t\t\t\t\treturn variable\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\tmerge: function(childContext) {\r\n\t\t\t\tif (!this.distinctSubject || this.distinctSubject.contains(childContext.distinctSubject)) {\r\n\t\t\t\t\tthis.distinctSubject = childContext.distinctSubject\r\n\t\t\t\t}\r\n\t\t\t\t[].push.apply(this.generics || (this.generics = []), childContext.generics)\r\n\t\t\t},\r\n\t\t\tgetDistinctElement: function(Variable, element) {\r\n\t\t\t\tdo {\r\n\t\t\t\t\tvar subjectMap = element.constructor.ownedClasses\r\n\t\t\t\t\tif (subjectMap) {\r\n\t\t\t\t\t\tvar instanceMap = subjectMap.get(Variable)\r\n\t\t\t\t\t\tif (instanceMap && instanceMap.has(element)) {\r\n\t\t\t\t\t\t\treturn element\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} while ((element = element.parentNode || presumptiveParentMap.get(element)))\r\n\t\t\t},\r\n\t\t\tmatches: function(element) {\r\n\t\t\t\tvar generics = this.generics\r\n\t\t\t\tif (generics) {\r\n\t\t\t\t\tfor (var i = 0, l = generics.length; i < l; i++) {\r\n\t\t\t\t\t\tif (this.getDistinctElement(generics[i], element) !== this.distinctSubject) {\r\n\t\t\t\t\t\t\treturn false\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\r\n\t\r\n\t\treturn Element\r\n\t}))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) { if (true) {\r\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) } else if (typeof module === 'object' && module.exports) {        \r\n\t  module.exports = factory() // Node\r\n\t}}(this, function () {\r\n\t\tvar getPrototypeOf = Object.getPrototypeOf || (function(base) { return base.__proto__ })\r\n\t\tvar setPrototypeOf = Object.setPrototypeOf || (function(base, proto) { base.__proto__ = proto})\r\n\t\tvar hasFeatures = {\r\n\t\t\trequestAnimationFrame: typeof requestAnimationFrame != 'undefined',\r\n\t\t\tdefineProperty: Object.defineProperty && (function() {\r\n\t\t\t\ttry{\r\n\t\t\t\t\tObject.defineProperty({}, 't', {})\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}catch(e) {\r\n\t\t\t\t}\r\n\t\t\t})(),\r\n\t\t\tpromise: typeof Promise !== 'undefined',\r\n\t\t\tMutationObserver: typeof MutationObserver !== 'undefined',\r\n\t\t\t'WeakMap': typeof WeakMap === 'function'\r\n\t\t}\r\n\t\tfunction has(feature) {\r\n\t\t\treturn hasFeatures[feature]\r\n\t\t}\r\n\t\t// This is an polyfill for Object.observe with just enough functionality\r\n\t\t// for what Variables need\r\n\t\t// An observe function, with polyfile\r\n\t\tvar observe =\r\n\t\t\thas('defineProperty') ? \r\n\t\t\tfunction observe(target, listener) {\r\n\t\t\t\t/*for(var i in target) {\r\n\t\t\t\t\taddKey(i)\r\n\t\t\t\t}*/\r\n\t\t\t\tlistener.addKey = addKey\r\n\t\t\t\tlistener.remove = function() {\r\n\t\t\t\t\tlistener = null\r\n\t\t\t\t}\r\n\t\t\t\treturn listener\r\n\t\t\t\tfunction addKey(key) {\r\n\t\t\t\t\tvar keyFlag = 'key' + key\r\n\t\t\t\t\tif(this[keyFlag]) {\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis[keyFlag] = true\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar currentValue = target[key]\r\n\t\t\t\t\tvar targetAncestor = target\r\n\t\t\t\t\tvar descriptor\r\n\t\t\t\t\tdo {\r\n\t\t\t\t\t\tdescriptor = Object.getOwnPropertyDescriptor(targetAncestor, key)\r\n\t\t\t\t\t} while(!descriptor && (targetAncestor = getPrototypeOf(targetAncestor)))\r\n\t\r\n\t\t\t\t\tif(descriptor && descriptor.set) {\r\n\t\t\t\t\t\tvar previousSet = descriptor.set\r\n\t\t\t\t\t\tvar previousGet = descriptor.get\r\n\t\t\t\t\t\tObject.defineProperty(target, key, {\r\n\t\t\t\t\t\t\tget: function() {\r\n\t\t\t\t\t\t\t\treturn (currentValue = previousGet.call(this))\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tset: function(value) {\r\n\t\t\t\t\t\t\t\tpreviousSet.call(this, value)\r\n\t\t\t\t\t\t\t\tif(currentValue !== value) {\r\n\t\t\t\t\t\t\t\t\tcurrentValue = value\r\n\t\t\t\t\t\t\t\t\tif(listener) {\r\n\t\t\t\t\t\t\t\t\t\tlistener([{target: this, name: key}])\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tenumerable: descriptor.enumerable\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tObject.defineProperty(target, key, {\r\n\t\t\t\t\t\t\tget: function() {\r\n\t\t\t\t\t\t\t\treturn currentValue\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tset: function(value) {\r\n\t\t\t\t\t\t\t\tif(currentValue !== value) {\r\n\t\t\t\t\t\t\t\t\tcurrentValue = value\r\n\t\t\t\t\t\t\t\t\tif(listener) {\r\n\t\t\t\t\t\t\t\t\t\tlistener([{target: this, name: key}])\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tenumerable: !descriptor || descriptor.enumerable\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} :\r\n\t\t\t// and finally a polling-based solution, for the really old browsers\r\n\t\t\tfunction(target, listener) {\r\n\t\t\t\tif(!timerStarted) {\r\n\t\t\t\t\ttimerStarted = true\r\n\t\t\t\t\tsetInterval(function() {\r\n\t\t\t\t\t\tfor(var i = 0, l = watchedObjects.length; i < l; i++) {\r\n\t\t\t\t\t\t\tdiff(watchedCopies[i], watchedObjects[i], listeners[i])\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, 20)\r\n\t\t\t\t}\r\n\t\t\t\tvar copy = {}\r\n\t\t\t\tfor(var i in target) {\r\n\t\t\t\t\tif(target.hasOwnProperty(i)) {\r\n\t\t\t\t\t\tcopy[i] = target[i]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\twatchedObjects.push(target)\r\n\t\t\t\twatchedCopies.push(copy)\r\n\t\t\t\tlisteners.push(listener)\r\n\t\t\t}\r\n\t\tvar queuedListeners\r\n\t\tfunction queue(listener, object, name) {\r\n\t\t\tif(queuedListeners) {\r\n\t\t\t\tif(queuedListeners.indexOf(listener) === -1) {\r\n\t\t\t\t\tqueuedListeners.push(listener)\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tqueuedListeners = [listener]\r\n\t\t\t\tlang.nextTurn(function() {\r\n\t\t\t\t\tqueuedListeners.forEach(function(listener) {\r\n\t\t\t\t\t\tvar events = []\r\n\t\t\t\t\t\tlistener.properties.forEach(function(property) {\r\n\t\t\t\t\t\t\tevents.push({target: listener.object, name: property})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tlistener(events)\r\n\t\t\t\t\t\tlistener.object = null\r\n\t\t\t\t\t\tlistener.properties = null\r\n\t\t\t\t\t})\r\n\t\t\t\t\tqueuedListeners = null\r\n\t\t\t\t}, 0)\r\n\t\t\t}\r\n\t\t\tlistener.object = object\r\n\t\t\tvar properties = listener.properties || (listener.properties = [])\r\n\t\t\tif(properties.indexOf(name) === -1) {\r\n\t\t\t\tproperties.push(name)\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar unobserve = has('observe') ? Object.unobserve :\r\n\t\t\tfunction(target, listener) {\r\n\t\t\t\tif(listener.remove) {\r\n\t\t\t\t\tlistener.remove()\r\n\t\t\t\t}\r\n\t\t\t\tfor(var i = 0, l = watchedObjects.length; i < l; i++) {\r\n\t\t\t\t\tif(watchedObjects[i] === target && listeners[i] === listener) {\r\n\t\t\t\t\t\twatchedObjects.splice(i, 1)\r\n\t\t\t\t\t\twatchedCopies.splice(i, 1)\r\n\t\t\t\t\t\tlisteners.splice(i, 1)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\tvar watchedObjects = []\r\n\t\tvar watchedCopies = []\r\n\t\tvar listeners = []\r\n\t\tvar timerStarted = false\r\n\t\tfunction diff(previous, current, callback) {\r\n\t\t\t// TODO: keep an array of properties for each watch for faster iteration\r\n\t\t\tvar queued\r\n\t\t\tfor(var i in previous) {\r\n\t\t\t\tif(previous.hasOwnProperty(i) && previous[i] !== current[i]) {\r\n\t\t\t\t\t// a property has changed\r\n\t\t\t\t\tprevious[i] = current[i]\r\n\t\t\t\t\t(queued || (queued = [])).push({name: i})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor(var i in current) {\r\n\t\t\t\tif(current.hasOwnProperty(i) && !previous.hasOwnProperty(i)) {\r\n\t\t\t\t\t// a property has been added\r\n\t\t\t\t\tprevious[i] = current[i]\r\n\t\t\t\t\t(queued || (queued = [])).push({name: i})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(queued) {\r\n\t\t\t\tcallback(queued)\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tvar id = 1\r\n\t\t// a function that returns a function, to stop JSON serialization of an\r\n\t\t// object\r\n\t\tfunction toJSONHidden() {\r\n\t\t\treturn toJSONHidden\r\n\t\t}\r\n\t\t// An object that will be hidden from JSON serialization\r\n\t\tvar Hidden = function () {\r\n\t\t}\r\n\t\tHidden.prototype.toJSON = toJSONHidden\r\n\t\r\n\t\tvar extendClass\r\n\t\ttry {\r\n\t\t\textendClass = eval('(function(Base){ return class extends Base {}})')\r\n\t\t} catch(e) {}\r\n\t\r\n\t\tvar lang = {\r\n\t\t\trequestAnimationFrame: has('requestAnimationFrame') ? requestAnimationFrame :\r\n\t\t\t\t(function() {\r\n\t\t\t\t\tvar toRender = []\r\n\t\t\t\t\tvar queued = false\r\n\t\t\t\t\tfunction processAnimationFrame() {\r\n\t\t\t\t\t\tfor (var i = 0; i < toRender.length; i++) {\r\n\t\t\t\t\t\t\ttoRender[i]()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttoRender = []\r\n\t\t\t\t\t\tqueued = false\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfunction requestAnimationFrame(renderer) {\r\n\t\t\t\t\t \tif (!queued) {\r\n\t\t\t\t\t\t\tsetTimeout(processAnimationFrame)\r\n\t\t\t\t\t\t\tqueued = true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttoRender.push(renderer)\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn requestAnimationFrame\r\n\t\t\t\t})(),\r\n\t\t\tPromise: has('promise') ? Promise : (function() {\r\n\t\t\t\tfunction Promise(execute) {\r\n\t\t\t\t\tvar isResolved, resolution, errorResolution\r\n\t\t\t\t\tvar queue = 0\r\n\t\t\t\t\tfunction resolve(value) {\r\n\t\t\t\t\t\t// resolve function\r\n\t\t\t\t\t\tif(value && value.then) {\r\n\t\t\t\t\t\t\t// received a promise, wait for it\r\n\t\t\t\t\t\t\tvalue.then(resolve, reject)\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tresolution = value\r\n\t\t\t\t\t\t\tfinished()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfunction reject(error) {\r\n\t\t\t\t\t\t// reject function\r\n\t\t\t\t\t\terrorResolution = error\r\n\t\t\t\t\t\tfinished()\r\n\t\t\t\t\t}\r\n\t\t\t\t\texecute(resolve, reject)\r\n\t\t\t\t\tfunction finished() {\r\n\t\t\t\t\t\tisResolved = true\r\n\t\t\t\t\t\tfor(var i = 0, l = queue.length; i < l; i++) {\r\n\t\t\t\t\t\t\tqueue[i]()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// clean out the memory\r\n\t\t\t\t\t\tqueue = 0\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tthen: function(callback, errback) {\r\n\t\t\t\t\t\t\treturn new Promise(function(resolve, reject) {\r\n\t\t\t\t\t\t\t\tfunction handle() {\r\n\t\t\t\t\t\t\t\t\t// promise fulfilled, call the appropriate callback\r\n\t\t\t\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\t\t\t\tif(errorResolution && !errback) {\r\n\t\t\t\t\t\t\t\t\t\t\t// errors without a handler flow through\r\n\t\t\t\t\t\t\t\t\t\t\treject(errorResolution)\r\n\t\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\t\t// resolve to the callback's result\r\n\t\t\t\t\t\t\t\t\t\t\tresolve(errorResolution ?\r\n\t\t\t\t\t\t\t\t\t\t\t\terrback(errorResolution) :\r\n\t\t\t\t\t\t\t\t\t\t\t\tcallback ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcallback(resolution) : resolution)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}catch(newError) {\r\n\t\t\t\t\t\t\t\t\t\t// caught an error, reject the returned promise\r\n\t\t\t\t\t\t\t\t\t\treject(newError)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif(isResolved) {\r\n\t\t\t\t\t\t\t\t\t// already resolved, immediately handle\r\n\t\t\t\t\t\t\t\t\thandle()\r\n\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t(queue || (queue = [])).push(handle)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn Promise\r\n\t\t\t}()),\r\n\t\r\n\t\t\tWeakMap: has('WeakMap') ? WeakMap :\r\n\t\t \tfunction (values, name) {\r\n\t\t \t\tvar mapProperty = '__' + (name || '') + id++\r\n\t\t \t\treturn has('defineProperty') ?\r\n\t\t \t\t{\r\n\t\t \t\t\tget: function (key) {\r\n\t\t \t\t\t\treturn key[mapProperty]\r\n\t\t \t\t\t},\r\n\t\t \t\t\tset: function (key, value) {\r\n\t\t \t\t\t\tObject.defineProperty(key, mapProperty, {\r\n\t\t \t\t\t\t\tvalue: value,\r\n\t\t \t\t\t\t\tenumerable: false\r\n\t\t \t\t\t\t})\r\n\t\t \t\t\t}\r\n\t\t \t\t} :\r\n\t\t \t\t{\r\n\t\t \t\t\tget: function (key) {\r\n\t\t \t\t\t\tvar intermediary = key[mapProperty]\r\n\t\t \t\t\t\treturn intermediary && intermediary.value\r\n\t\t \t\t\t},\r\n\t\t \t\t\tset: function (key, value) {\r\n\t\t \t\t\t\t// we use an intermediary that is hidden from JSON serialization, at least\r\n\t\t \t\t\t\tvar intermediary = key[mapProperty] || (key[mapProperty] = new Hidden())\r\n\t\t \t\t\t\tintermediary.value = value\r\n\t\t \t\t\t}\r\n\t\t \t\t}\r\n\t\t \t},\r\n\t\r\n\t\t\tobserve: observe,\r\n\t\t\tunobserve: unobserve,\r\n\t\t\textendClass: extendClass,\r\n\t\t\twhen: function(value, callback, errorHandler) {\r\n\t\t\t\treturn value && value.then ?\r\n\t\t\t\t\t(value.then(callback, errorHandler) || value) : callback(value)\r\n\t\t\t},\r\n\t\t\twhenAll: function(inputs, callback) {\r\n\t\t\t\tvar promiseInvolved\r\n\t\t\t\tfor(var i = 0, l = inputs.length; i < l; i++) {\r\n\t\t\t\t\tif(inputs[i] && inputs[i].then) {\r\n\t\t\t\t\t\tpromiseInvolved = true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(promiseInvolved) {\r\n\t\t\t\t\t// we have asynch inputs, do lazy loading\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tthen: function(onResolve, onError) {\r\n\t\t\t\t\t\t\tvar remaining = 1\r\n\t\t\t\t\t\t\tvar result\r\n\t\t\t\t\t\t\tvar readyInputs = []\r\n\t\t\t\t\t\t\tvar lastPromiseResult\r\n\t\t\t\t\t\t\tfor(var i = 0; i < inputs.length; i++) {\r\n\t\t\t\t\t\t\t\tvar input = inputs[i]\r\n\t\t\t\t\t\t\t\tremaining++\r\n\t\t\t\t\t\t\t\tif(input && input.then) {\r\n\t\t\t\t\t\t\t\t\t(function(i, previousPromiseResult) {\r\n\t\t\t\t\t\t\t\t\t\tlastPromiseResult = input.then(function(value) {\r\n\t\t\t\t\t\t\t\t\t\t\treadyInputs[i] = value\r\n\t\t\t\t\t\t\t\t\t\t\tonEach()\r\n\t\t\t\t\t\t\t\t\t\t\tif(!remaining) {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn result\r\n\t\t\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn previousPromiseResult\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}, onError)\r\n\t\t\t\t\t\t\t\t\t})(i, lastPromiseResult)\r\n\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\treadyInputs[i] = input\r\n\t\t\t\t\t\t\t\t\tonEach()\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonEach()\r\n\t\t\t\t\t\t\tfunction onEach() {\r\n\t\t\t\t\t\t\t\tremaining--\r\n\t\t\t\t\t\t\t\tif(!remaining) {\r\n\t\t\t\t\t\t\t\t\tresult = onResolve(callback(readyInputs))\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn lastPromiseResult\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tinputs: inputs\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// just sync inputs\r\n\t\t\t\treturn callback(inputs)\r\n\t\r\n\t\t\t},\r\n\t\t\tcompose: function(Base, constructor, properties) {\r\n\t\t\t\tvar prototype = constructor.prototype = Object.create(Base.prototype)\r\n\t\t\t\tsetPrototypeOf(constructor, Base)\r\n\t\t\t\tfor(var i in properties) {\r\n\t\t\t\t\tprototype[i] = properties[i]\r\n\t\t\t\t}\r\n\t\t\t\tprototype.constructor = constructor\r\n\t\t\t\treturn constructor\r\n\t\t\t},\r\n\t\t\tnextTurn: has('MutationObserver') ?\r\n\t\t\t\tfunction (callback) {\r\n\t\t\t\t\t// promises don't resolve consistently on the next micro turn (Edge doesn't do it right),\r\n\t\t\t\t\t// so use mutation observer\r\n\t\t\t\t\t// TODO: make a faster mode that doesn't recreate each time\r\n\t\t\t\t\tvar div = document.createElement('div')\r\n\t\t\t\t\tvar observer = new MutationObserver(callback)\r\n\t\t\t\t\tobserver.observe(div, {\r\n\t\t\t\t\t\tattributes: true\r\n\t\t\t\t\t})\r\n\t\t\t\t\tdiv.setAttribute('a', id++)\r\n\t\t\t\t} :\r\n\t\t\t\tfunction (callback) {\r\n\t\t\t\t\t// TODO: we can do better for other, older browsers\r\n\t\t\t\t\tsetTimeout(callback, 0)\r\n\t\t\t\t},\r\n\t\t\tcopy: Object.assign || function(target, source) {\r\n\t\t\t\tfor(var i in source) {\r\n\t\t\t\t\ttarget[i] = source[i]\r\n\t\t\t\t}\r\n\t\t\t\treturn target\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction isGenerator(func) {\r\n\t\t\tif (typeof func === 'function') {\r\n\t\t\t\tvar constructor = func.constructor\r\n\t\t\t\t// this is used to handle both native generators and transpiled generators\r\n\t\t\t\treturn (constructor.displayName || constructor.name) === 'GeneratorFunction'\r\n\t\t\t}\r\n\t\t}\r\n\t\tlang.isGenerator = isGenerator\r\n\t\treturn lang\r\n\t}))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) { if (true) {\r\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2), __webpack_require__(4)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) } else if (typeof module === 'object' && module.exports) {        \r\n\t  module.exports = factory(require('./util/lang'), require('./Variable')) // Node\r\n\t}}(this, function (lang, Variable) {\r\n\t\tvar doc = typeof document !== 'undefined' && document\r\n\t\tvar invalidatedElements\r\n\t\tvar queued\r\n\t\tvar toRender = []\r\n\t\tvar nextId = 1\r\n\t\tvar requestAnimationFrame = lang.requestAnimationFrame\r\n\t\tvar Context = Variable.Context\r\n\t\r\n\t\tfunction Renderer(options) {\r\n\t\t\tvar variable = options.variable\r\n\t\r\n\t\t\tthis.variable = variable\r\n\t\t\tif (options.selector) {\r\n\t\t\t\tthis.selector = options.selector\r\n\t\t\t}\r\n\t\t\tif (options.elements) {\r\n\t\t\t\tthis.elements = options.elements\r\n\t\t\t\tthis.element = this.elements[0]\r\n\t\t\t\tfor(var i = 0, l = this.elements.length; i < l; i++) {\r\n\t\t\t\t\t(this.elements[i].alkaliRenderers || (this.elements[i].alkaliRenderers = [])).push(this)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\telse if (options.element) {\r\n\t\t\t\tvar element = this.element = options.element;\r\n\t\t\t\t(element.alkaliRenderers || (element.alkaliRenderers = [])).push(this)\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error('No element provided to Renderer')\r\n\t\t\t}\r\n\t\t\tif (options.update) {\r\n\t\t\t\tthis.updateRendering = options.update\r\n\t\t\t}\r\n\t\t\tif (options.shouldRender) {\r\n\t\t\t\tthis.shouldRender = options.shouldRender\r\n\t\t\t}\r\n\t\t\tif (options.renderUpdate) {\r\n\t\t\t\tthis.renderUpdate = options.renderUpdate\r\n\t\t\t}\r\n\t\t\tif (options.alwaysUpdate) {\r\n\t\t\t\tthis.alwaysUpdate = options.alwaysUpdate\r\n\t\t\t}\r\n\t\t\tif (!variable.updated) {\r\n\t\t\t\t// baconjs-esqe API\r\n\t\t\t\tvar renderer = this\r\n\t\t\t\tvariable.subscribe(function (event) {\r\n\t\t\t\t\t// replace the variable with an object\r\n\t\t\t\t\t// that returns the value from the event\r\n\t\t\t\t\trenderer.variable = {\r\n\t\t\t\t\t\tvalueOf: function () {\r\n\t\t\t\t\t\t\treturn event.value()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\trenderer.updated()\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tif (options.updateOnStart === false){\r\n\t\t\t\t// even if we don't render on start, we still need to compute the value so we can depend on the computed variables\r\n\t\t\t\tthis.variable.valueOf(this)\r\n\t\t\t\tvar contextualized = this.contextualized || this.variable\r\n\t\t\t\t// TODO: we may need to handle recontextualization if it returns a promise\r\n\t\t\t\tcontextualized.notifies(this)\r\n\t\t\t} else {\r\n\t\t\t\tthis.updateRendering(true)\r\n\t\t\t}\r\n\t\t}\r\n\t\tRenderer.prototype = {\r\n\t\t\tconstructor: Renderer,\r\n\t\t\tupdateRendering: function () {\r\n\t\t\t\tthrow new Error ('updateRendering must be implemented by sub class of Renderer')\r\n\t\t\t},\r\n\t\t\tupdated: function (updateEvent, by, context) {\r\n\t\t\t\tif (!this.invalidated) {\r\n\t\t\t\t\tif (!context || this.contextMatches(context)) {\r\n\t\t\t\t\t\t// do this only once, until we render again\r\n\t\t\t\t\t\tthis.invalidated = true\r\n\t\t\t\t\t\tvar renderer = this\r\n\t\t\t\t\t\trequestAnimationFrame(function(){\r\n\t\t\t\t\t\t\tinvalidatedElements = null\r\n\t\t\t\t\t\t\trenderer.updateRendering(renderer.alwaysUpdate)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tnewContext: function() {\r\n\t\t\t\treturn new Variable.Context(this.element)\r\n\t\t\t},\r\n\t\t\taddInput: function(contextualized) {\r\n\t\t\t\tif (this.variable !== contextualized) {\r\n\t\t\t\t\tthis.contextualized = contextualized\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tgetContextualized: function() {\r\n\t\t\t\treturn this.contextualized || this.variable\r\n\t\t\t},\r\n\t\t\tspecify: function(Variable) {\r\n\t\t\t\t// a new context to get thsi\r\n\t\t\t\treturn this.newContext().specify(Variable)\r\n\t\t\t},\r\n\t\t\tmerge: function(){\r\n\t\t\t\t// noop\r\n\t\t\t},\r\n\t\t\tcontextMatches: function(context) {\r\n\t\t\t\treturn true\r\n\t\t\t},\r\n\t\t\tinvalidateElement: function(element) {\r\n\t\t\t\tif(!invalidatedElements){\r\n\t\t\t\t\tinvalidatedElements = new WeakMap(null, 'invalidated')\r\n\t\t\t\t}\r\n\t\t\t\tvar invalidatedParts = invalidatedElements.get(element)\r\n\t\t\t\tinvalidatedElements.set(element, invalidatedParts = {})\r\n\t\t\t\tif (!invalidatedParts[id]) {\r\n\t\t\t\t\tinvalidatedParts[id] = true\r\n\t\t\t\t}\r\n\t\t\t\tif (!queued) {\r\n\t\t\t\t\tlang.queueTask(processQueue)\r\n\t\t\t\t\tqueued = true\r\n\t\t\t\t}\r\n\t\t\t\tvar renderer = this\r\n\t\t\t\ttoRender.push(function(){\r\n\t\t\t\t\trenderer.invalidated = false\r\n\t\t\t\t\trenderer.updateElement(element)\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tgetId: function(){\r\n\t\t\t\treturn this.id || (this.id = nextId++)\r\n\t\t\t},\r\n\t\t\tstop: function() {\r\n\t\t\t\tvar contextualized = this.contextualized || this.variable\r\n\t\t\t\tcontextualized.stopNotifies(this)\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction ElementRenderer(options) {\r\n\t\t\tRenderer.call(this, options)\r\n\t\t}\r\n\t\tElementRenderer.prototype = Object.create(Renderer.prototype)\r\n\t\tElementRenderer.prototype.shouldRender = function (element) {\r\n\t\t\treturn document.body.contains(element)\r\n\t\t}\r\n\t\tElementRenderer.prototype.getSubject = function () {\r\n\t\t\treturn this.element\r\n\t\t}\r\n\t\tElementRenderer.prototype.updateRendering = function (always, element) {\r\n\t\t\tif (!element && this.elements) {\r\n\t\t\t\tvar elements = this.elements\r\n\t\t\t\tif(!elements.length){\r\n\t\t\t\t\tif(this.selector){\r\n\t\t\t\t\t\telements = document.querySelectorAll(this.selector)\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthrow new Error('No element or selector was provided to the Renderer')\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tfor(var i = 0, l = elements.length; i < l; i++){\r\n\t\t\t\t\tthis.updateRendering(always, elements[i])\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar thisElement = element || this.element\r\n\t\r\n\t\t\t\tif(always || this.shouldRender(thisElement)){\r\n\t\t\t\t\t// it is connected\r\n\t\t\t\t\tthis.updateElement(thisElement)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar id = this.getId()\r\n\t\t\t\t\tvar renderers = thisElement.renderersOnShow\r\n\t\t\t\t\tif(!renderers){\r\n\t\t\t\t\t\trenderers = thisElement.renderersOnShow = []\r\n\t\t\t\t\t\tthisElement.className += ' needs-rerendering'\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!renderers[id]) {\r\n\t\t\t\t\t\trenderers[id] = this\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tElementRenderer.prototype.addElement = function (element) {\r\n\t\t\tif (this.selector) {\r\n\t\t\t\telement.renderersOnShow = [this]\r\n\t\t\t} else {\r\n\t\t\t\tthis.elements.push(element)\r\n\t\t\t}\r\n\t\t\t// and immediately do an update\r\n\t\t\tthis.updateElement(element)\r\n\t\t}\r\n\t\tElementRenderer.prototype.updateElement = function(element) {\r\n\t\t\tthis.invalidated = false\r\n\t\t\ttry {\r\n\t\t\t\tif (!this.omitValueOf) {\r\n\t\t\t\t\tvar value = this.variable.valueOf(this)\r\n\t\t\t\t\tvar contextualized = this.contextualized || this.variable\r\n\t\t\t\t\t// TODO: we may need to handle recontextualization if it returns a promise\r\n\t\t\t\t\tcontextualized.notifies(this)\r\n\t\t\t\t}\r\n\t\t\t} catch (error) {\r\n\t\t\t\telement.appendChild(document.createTextNode(error))\r\n\t\t\t}\r\n\t\t\tif(value !== undefined || this.started || this.omitValueOf){\r\n\t\t\t\tthis.started = true\r\n\t\t\t\tif(value && value.then){\r\n\t\t\t\t\tif(this.renderLoading){\r\n\t\t\t\t\t\tthis.renderLoading(value, element)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar renderer = this\r\n\t\t\t\t\tvalue.then(function (value) {\r\n\t\t\t\t\t\trenderer.renderUpdate(value, element)\r\n\t\t\t\t\t})\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.renderUpdate(value, element)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tElementRenderer.prototype.renderUpdate = function (newValue, element) {\r\n\t\t\tthrow new Error('renderUpdate(newValue) must be implemented')\r\n\t\t}\r\n\t\tRenderer.Renderer = Renderer\r\n\t\tRenderer.ElementRenderer = ElementRenderer\r\n\t\r\n\t\tfunction AttributeRenderer(options) {\r\n\t\t\tif(options.name){\r\n\t\t\t\tthis.name = options.name\r\n\t\t\t}\r\n\t\t\tElementRenderer.apply(this, arguments)\r\n\t\t}\r\n\t\tAttributeRenderer.prototype = Object.create(ElementRenderer.prototype)\r\n\t\tAttributeRenderer.prototype.type = 'AttributeRenderer'\r\n\t\tAttributeRenderer.prototype.renderUpdate = function (newValue, element) {\r\n\t\t\telement.setAttribute(this.name, newValue)\r\n\t\t}\r\n\t\tRenderer.AttributeRenderer = AttributeRenderer\r\n\t\r\n\t\tfunction PropertyRenderer(options) {\r\n\t\t\tif (options.name) {\r\n\t\t\t\tthis.name = options.name\r\n\t\t\t}\r\n\t\t\tElementRenderer.apply(this, arguments)\r\n\t\t}\r\n\t\tPropertyRenderer.prototype = Object.create(ElementRenderer.prototype)\r\n\t\tPropertyRenderer.prototype.type = 'PropertyRenderer'\r\n\t\tPropertyRenderer.prototype.renderUpdate = function (newValue, element) {\r\n\t\t\telement[this.name] = newValue\r\n\t\t}\r\n\t\tRenderer.PropertyRenderer = PropertyRenderer\r\n\t\r\n\t\tfunction InputPropertyRenderer(options) {\r\n\t\t\tif (options.element && options.element.tagName === 'SELECT' && options.name === 'value') {\r\n\t\t\t\t// use the deferred value assignment for <select>\r\n\t\t\t\tthis.renderUpdate = this.renderSelectValueUpdate\r\n\t\t\t}\r\n\t\t\tPropertyRenderer.apply(this, arguments)\r\n\t\t}\r\n\t\tInputPropertyRenderer.prototype = Object.create(PropertyRenderer.prototype)\r\n\t\tInputPropertyRenderer.prototype.type = 'InputPropertyRenderer'\r\n\t\tInputPropertyRenderer.prototype.renderUpdate = function(newValue, element) {\r\n\t\t\tif (newValue == null || (element.type === 'number' && isNaN(newValue))) {\r\n\t\t\t\tnewValue = ''\r\n\t\t\t}\r\n\t\t\tif (element[this.name] != newValue) {\r\n\t\t\t\telement[this.name] = newValue\r\n\t\t\t}\r\n\t\t}\r\n\t\tInputPropertyRenderer.prototype.renderSelectValueUpdate = function (newValue, element) {\r\n\t\t\telement.value = newValue\r\n\t\t\tif (element.value != newValue && !element.value) {\r\n\t\t\t\t// if we didn't successfully set the value of a <select>, we may need to wait until the children are constructed\r\n\t\t\t\telement.eventualValue = newValue\r\n\t\t\t\tlang.nextTurn(function() {\r\n\t\t\t\t\tif (element.eventualValue) {\r\n\t\t\t\t\t\telement.value = element.eventualValue\r\n\t\t\t\t\t\telement.eventualValue = undefined\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\telement.eventualValue = undefined\r\n\t\t\t}\r\n\t\t}\r\n\t\tRenderer.InputPropertyRenderer = InputPropertyRenderer\r\n\t\r\n\t\tfunction StyleRenderer(options) {\r\n\t\t\tif(options.name){\r\n\t\t\t\tthis.name = options.name\r\n\t\t\t}\r\n\t\t\tElementRenderer.apply(this, arguments)\r\n\t\t}\r\n\t\tStyleRenderer.prototype = Object.create(ElementRenderer.prototype)\r\n\t\tStyleRenderer.prototype.type = 'StyleRenderer'\r\n\t\tStyleRenderer.prototype.renderUpdate = function (newValue, element) {\r\n\t\t\telement.style[this.name] = newValue\r\n\t\t}\r\n\t\tRenderer.StyleRenderer = StyleRenderer\r\n\t\r\n\t\tfunction ContentRenderer(options) {\r\n\t\t\tElementRenderer.apply(this, arguments)\r\n\t\t}\r\n\t\tContentRenderer.prototype = Object.create(ElementRenderer.prototype)\r\n\t\tContentRenderer.prototype.type = 'ContentRenderer'\r\n\t\tContentRenderer.prototype.renderUpdate = function (newValue, element) {\r\n\t\t\telement.innerHTML = ''\r\n\t\t\tif (newValue === undefined){\r\n\t\t\t\tnewValue = ''\r\n\t\t\t}\r\n\t\t\telement.appendChild(document.createTextNode(newValue))\r\n\t\t}\r\n\t\tRenderer.ContentRenderer = ContentRenderer\r\n\t\r\n\t\tfunction TextRenderer(options) {\r\n\t\t\tthis.position = options.position\r\n\t\t\tthis.textNode = options.textNode\r\n\t\t\tElementRenderer.apply(this, arguments)\r\n\t\t}\r\n\t\tTextRenderer.prototype = Object.create(ElementRenderer.prototype)\r\n\t\tTextRenderer.prototype.type = 'TextRenderer'\r\n\t\tTextRenderer.prototype.updated = function (updateEvent, context) {\r\n\t\t\tif (this.builtList) {\r\n\t\t\t\tif (updateEvent.type === 'refresh') {\r\n\t\t\t\t\tthis.builtList = false\r\n\t\t\t\t\tthis.omitValueOf = false\r\n\t\t\t\t} else {\r\n\t\t\t\t\t(this.updates || (this.updates = [])).push(updateEvent)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tElementRenderer.prototype.updated.call(this, updateEvent, context)\r\n\t\t}\r\n\t\tTextRenderer.prototype.renderUpdate = function (newValue, element) {\r\n\t\t\tif (newValue == null){\r\n\t\t\t\tnewValue = ''\r\n\t\t\t}\r\n\t\t\tif (newValue.nodeType) {\r\n\t\t\t\tif (this.textNode && this.textNode.parentNode == element) {\r\n\t\t\t\t\t// text node is attached, we can replace it with the node\r\n\t\t\t\t\telement.replaceChild(newValue, this.textNode)\r\n\t\t\t\t} else {\r\n\t\t\t\t\telement.appendChild(newValue)\r\n\t\t\t\t}\r\n\t\t\t\tthis.textNode = newValue\r\n\t\t\t} else if (newValue instanceof Array) {\r\n\t\t\t\tthis.renderUpdate = ListRenderer.prototype.renderUpdate\r\n\t\t\t\tthis.omitValueOf = true\r\n\t\t\t\tthis.renderUpdate(newValue, element)\r\n\t\t\t} else {\r\n\t\t\t\t(this.textNode || element.childNodes[this.position]).nodeValue = newValue\r\n\t\t\t}\r\n\t\t}\r\n\t\tRenderer.TextRenderer = TextRenderer\r\n\t\r\n\t\tfunction ListRenderer(options) {\r\n\t\t\tif (options.each) {\r\n\t\t\t\tthis.each = options.each\r\n\t\t\t}\r\n\t\t\tElementRenderer.apply(this, arguments)\r\n\t\t}\r\n\t\tListRenderer.prototype = Object.create(ElementRenderer.prototype)\r\n\t\tListRenderer.prototype.updated = function (updateEvent, context) {\r\n\t\t\tif (this.builtList) {\r\n\t\t\t\tif (updateEvent.type === 'refresh') {\r\n\t\t\t\t\tthis.builtList = false\r\n\t\t\t\t\tthis.omitValueOf = false\r\n\t\t\t\t} else {\r\n\t\t\t\t\t(this.updates || (this.updates = [])).push(updateEvent)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tElementRenderer.prototype.updated.call(this, updateEvent, context)\r\n\t\t}\r\n\t\tListRenderer.prototype.type = 'ListRenderer'\r\n\t\tListRenderer.prototype.renderUpdate = function (newValue, element) {\r\n\t\t\tvar container\r\n\t\t\tvar each = this.each || function(item) { // TODO: make a single identity function\r\n\t\t\t\treturn item\r\n\t\t\t}\r\n\t\t\tvar thisElement = this.element\r\n\t\t\tvar renderer = this\r\n\t\t\tif (!this.builtList) {\r\n\t\t\t\tthis.builtList = true\r\n\t\t\t\tthis.omitValueOf = true\r\n\t\t\t\telement.innerHTML = ''\r\n\t\t\t\tcontainer = document.createDocumentFragment()\r\n\t\t\t\tvar childElements = this.childElements = []\r\n\t\t\t\tif (each.defineHasOwn) {\r\n\t\t\t\t\teach.defineHasOwn()\r\n\t\t\t\t}\r\n\t\t\t\tif (newValue) {\r\n\t\t\t\t\tnewValue.forEach(function(item) {\r\n\t\t\t\t\t\teachItem(item)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tvar contextualized = this.contextualized || this.variable\r\n\t\t\t\tcontextualized.notifies(this)\r\n\t\r\n\t\t\t\tthisElement.appendChild(container)\r\n\t\t\t} else {\r\n\t\t\t\tvar childElements = this.childElements\r\n\t\t\t\tvar updates = this.updates\r\n\t\t\t\tcontainer = thisElement\r\n\t\t\t\tupdates.forEach(function(update) {\r\n\t\t\t\t\tif (update.type === 'refresh') {\r\n\t\t\t\t\t\trenderer.builtList = false\r\n\t\t\t\t\t\tfor (var i = 0, l = childElements.length; i < l; i++) {\r\n\t\t\t\t\t\t\tthisElement.removeChild(childElements[i])\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\trenderer.renderUpdate()\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (update.previousIndex > -1) {\r\n\t\t\t\t\t\t\tthisElement.removeChild(childElements[update.previousIndex])\r\n\t\t\t\t\t\t\tchildElements.splice(update.previousIndex, 1)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (update.index > -1) {\r\n\t\t\t\t\t\t\tvar nextChild = childElements[update.index] || null\r\n\t\t\t\t\t\t\teachItem(update.value, update.index, nextChild)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tthis.updates = [] // clear the updates\r\n\t\t\t}\r\n\t\t\tfunction eachItem(item, index, nextChild) {\r\n\t\t\t\tvar childElement\r\n\t\t\t\tif (each.create) {\r\n\t\t\t\t\tchildElement = each.create({parent: thisElement, _item: item}) // TODO: make a faster object here potentially\r\n\t\t\t\t} else {\r\n\t\t\t\t\tchildElement = each(item, thisElement)\r\n\t\t\t\t\tif (childElement.create) {\r\n\t\t\t\t\t\tchildElement = childElement.create({parent: thisElement, _item: item})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (nextChild) {\r\n\t\t\t\t\tcontainer.insertBefore(childElement, nextChild)\r\n\t\t\t\t\tchildElements.splice(index, 0, childElement)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcontainer.appendChild(childElement)\r\n\t\t\t\t\tchildElements.push(childElement)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tRenderer.ListRenderer = ListRenderer\r\n\t\r\n\t\tRenderer.onShowElement = function(shownElement){\r\n\t\t\trequestAnimationFrame(function(){\r\n\t\t\t\tinvalidatedElements = null\r\n\t\t\t\tvar elements = [].slice.call(shownElement.getElementsByClassName('needs-rerendering'))\r\n\t\t\t\tif (shownElement.className.indexOf('needs-rerendering') > 0){\r\n\t\t\t\t\tvar includingTop = [shownElement]\r\n\t\t\t\t\tincludingTop.push.apply(includingTop, elements)\r\n\t\t\t\t\telements = includingTop\r\n\t\t\t\t}\r\n\t\t\t\tfor (var i = 0, l = elements.length; i < l; i++){\r\n\t\t\t\t\tvar element = elements[i]\r\n\t\t\t\t\tvar renderers = element.renderersOnShow\r\n\t\t\t\t\tif(renderers){\r\n\t\t\t\t\t\telement.renderersOnShow = null\r\n\t\t\t\t\t\t// remove needs-rerendering class\r\n\t\t\t\t\t\telement.className = element.className.replace(/\\s?needs\\-rerendering\\s?/g, '')\r\n\t\t\t\t\t\tfor (var id in renderers) {\r\n\t\t\t\t\t\t\tvar renderer = renderers[id]\r\n\t\t\t\t\t\t\trenderer.updateElement(element)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\r\n\t\tfunction onElementRemoval(element){\r\n\t\t\t// cleanup element renderers\r\n\t\t\tif(element.alkaliRenderers){\r\n\t\t\t\tvar renderers = element.alkaliRenderers\r\n\t\t\t\tfor(var i = 0; i < renderers.length; i++){\r\n\t\t\t\t\tvar renderer = renderers[i]\r\n\t\t\t\t\trenderer.variable.stopNotifies(renderer)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tRenderer.onElementRemoval = function(element, onlyChildren){\r\n\t\t\tif(!onlyChildren){\r\n\t\t\t\tonElementRemoval(element)\r\n\t\t\t}\r\n\t\t\tvar children = element.getElementsByTagName('*')\r\n\t\t\tfor(var i = 0, l = children.length; i < l; i++){\r\n\t\t\t\tvar child = children[i]\r\n\t\t\t\tif(child.alkaliRenderers){\r\n\t\t\t\t\tonElementRemoval(child)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn Renderer\r\n\t}))\r\n\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) { if (true) {\r\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) } else if (typeof module === 'object' && module.exports) {        \r\n\t  module.exports = factory(require('./util/lang')) // Node\r\n\t}}(this, function (lang) {\r\n\t\tvar deny = {}\r\n\t\tvar noChange = {}\r\n\t\tvar WeakMap = lang.WeakMap\r\n\t\tvar setPrototypeOf = Object.setPrototypeOf || (function(base, proto) { base.__proto__ = proto})\r\n\t\tvar getPrototypeOf = Object.getPrototypeOf || (function(base) { return base.__proto__ })\r\n\t\tvar isGenerator = lang.isGenerator\r\n\t\t// update types\r\n\t\tvar RequestChange = 3\r\n\t\tvar RequestSet = 4\r\n\t\r\n\t\tvar nextId = 1\r\n\t\tvar propertyListenersMap = new WeakMap(null, 'propertyListenersMap')\r\n\t\tvar isStructureChecked = new WeakMap()\r\n\t\r\n\t\tvar CacheEntry = lang.compose(WeakMap, function() {\r\n\t\t},{\r\n\t\t\t_propertyChange: function(propertyName) {\r\n\t\t\t\tthis.variable._propertyChange(propertyName, contextFromCache(this))\r\n\t\t\t}\r\n\t\t})\r\n\t\tvar listenerId = 1\r\n\t\r\n\t\tfunction when(value, callback) {\r\n\t\t\tif (value && value.then) {\r\n\t\t\t\treturn value.then(callback)\r\n\t\t\t}\r\n\t\t\treturn callback(value)\r\n\t\t}\r\n\t\r\n\t\tfunction Context(subject){\r\n\t\t\tthis.subject = subject\r\n\t\t\tthis.inputs = []\r\n\t\t}\r\n\t\tContext.prototype = {\r\n\t\t\tconstructor: Context,\r\n\t\t\tnewContext: function(variable) {\r\n\t\t\t\treturn new Context(this.subject)\r\n\t\t\t},\r\n\t\t\tcontextualize: function(variable, parentContext) {\r\n\t\t\t\t// resolve the contextualization of a variable, and updates this context to be aware of what distinctive aspect of the context has\r\n\t\t\t\t// been used for resolution\r\n\t\t\t\tvar contextualized\r\n\t\t\t\tif (this.distinctSubject) {\r\n\t\t\t\t\tvar contextMap = variable._contextMap || (variable._contextMap = new WeakMap())\r\n\t\t\t\t\tcontextualized = contextMap.get(this.distinctSubject)\r\n\t\t\t\t\tif (!contextualized) {\r\n\t\t\t\t\t\tcontextMap.set(this.distinctSubject, contextualized = Object.create(variable))\r\n\t\t\t\t\t\tcontextualized.listeners = false\r\n\t\t\t\t\t\tcontextualized.context = this\r\n\t\t\t\t\t\tvar inputs = this.inputs\r\n\t\t\t\t\t\tfor (var i = 0, l = inputs.length; i < l; i++) {\r\n\t\t\t\t\t\t\tcontextualized[inputs[i]] = inputs[++i]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis.contextualized = contextualized\r\n\t\t\t\t\t// do the merge\r\n\t\t\t\t\tif (parentContext) {\r\n\t\t\t\t\t\tparentContext.merge(this)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcontextualized = variable\r\n\t\t\t\t}\r\n\t\t\t\t//if (this.contextualized && this.contextualized !== contextualized) {\r\n\t\t\t\t\t// TOOD: if it has previously been contextualized to a different context (can happen in a promise/async situation), stop previous notifiers and start new ones\r\n\t\t\t\t//}\r\n\t\t\t\tparentContext.addInput(contextualized)\r\n\t\t\t\treturn contextualized\r\n\t\t\t},\r\n\t\t\tmerge: function(childContext) {\r\n\t\t\t\tif (!this.distinctSubject) {\r\n\t\t\t\t\tthis.distinctSubject = childContext.distinctSubject\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tspecify: function(Variable) {\r\n\t\t\t\t// specify a particular instance of a generic variable\r\n\t\t\t\tvar subject = this.subject\r\n\t\t\t\tvar subjectMap = subject.constructor.ownedClasses\r\n\t\t\t\tvar specifiedInstance\r\n\t\t\t\tif (subjectMap) {\r\n\t\t\t\t\tif (!this.distinctSubject) {\r\n\t\t        this.distinctSubject = subject\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar instanceMap = subjectMap.get(Variable)\r\n\t\t\t\t\tif (instanceMap) {\r\n\t\t\t\t\t\tspecifiedInstance = instanceMap.get(subject)\r\n\t\t\t\t\t\tif (!specifiedInstance) {\r\n\t\t\t\t\t\t\tinstanceMap.set(subject, specifiedInstance = instanceMap.createInstance ? instanceMap.createInstance(subject) : new Variable())\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn specifiedInstance\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// else if no specific context is found, return default instance\r\n\t\t\t\treturn Variable.defaultInstance\r\n\t\t\t},\r\n\t\t\tgetContextualized: function(variable) {\r\n\t\r\n\t\t\t\t// returns a variable that has already been contextualized\r\n\t\t\t\tvar instance = variable._contextMap && this.subject && variable._contextMap.get(this.subject)\r\n\t\t\t\tif (instance && instance.context && instance.context.matches(this)) {\r\n\t\t\t\t\treturn instance\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\taddInput: function(inputVariable) {\r\n\t\t\t\tthis.inputs.push(this.nextProperty, inputVariable)\r\n\t\t\t},\r\n\t\t\tmatches: function(context) {\r\n\t\t\t\t// does another context match the resolution of this one?\r\n\t\t\t\treturn context.subject === this.subject\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction NotifyingContext(listener, subject){\r\n\t\t\tthis.subject = subject\r\n\t\t\tthis.listener = listener\r\n\t\t}\r\n\t\tNotifyingContext.prototype = Object.create(Context.prototype)\r\n\t\tNotifyingContext.prototype.constructor = NotifyingContext\r\n\t\tNotifyingContext.prototype.addInput = function(contextualized) {\r\n\t\t\tcontextualized.notifies(this.listener)\r\n\t\t}\r\n\t\r\n\t\tfunction whenAll(inputs, callback){\r\n\t\t\tvar promiseInvolved\r\n\t\t\tfor (var i = 0, l = inputs.length; i < l; i++) {\r\n\t\t\t\tif (inputs[i] && inputs[i].then) {\r\n\t\t\t\t\tpromiseInvolved = true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (promiseInvolved) {\r\n\t\t\t\treturn lang.whenAll(inputs, callback)\r\n\t\t\t}\r\n\t\t\treturn callback(inputs)\r\n\t\t}\r\n\t\r\n\t\tfunction registerListener(value, listener) {\r\n\t\t\tvar listeners = propertyListenersMap.get(value)\r\n\t\t\tvar id = listener.listenerId || (listener.listenerId = ('-' + listenerId++))\r\n\t\t\tif (listeners) {\r\n\t\t\t\tif (listeners[id] === undefined) {\r\n\t\t\t\t\tlisteners[id] = listeners.push(listener) - 1\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tpropertyListenersMap.set(value, listeners = [listener])\r\n\t\t\t\tlisteners[id] = 0\r\n\t\t\t\tif (Variable.autoObserveObjects) {\r\n\t\t\t\t\tobserve(value)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlistener.listeningToObject = value\r\n\t\t}\r\n\t\tfunction deregisterListener(listener) {\r\n\t\t\tif (listener.listeningToObject) {\r\n\t\t\t\tvar value = listener.listeningToObject\r\n\t\t\t\tlistener.listeningToObject = null\r\n\t\t\t\tvar listeners = propertyListenersMap.get(value)\r\n\t\t\t\tif (listeners) {\r\n\t\t\t\t\tvar index = listeners[listener.listenerId]\r\n\t\t\t\t\tif (index > -1) {\r\n\t\t\t\t\t\tlisteners.splice(index, 1)\r\n\t\t\t\t\t\tdelete listeners[listener.listenerId]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction RefreshEvent() {\r\n\t\t\tthis.visited = new Set()\r\n\t\t}\r\n\t\tRefreshEvent.prototype.type = 'refresh'\r\n\t\r\n\t\tfunction PropertyChangeEvent(key, childEvent, parent) {\r\n\t\t\tthis.key = key\r\n\t\t\tthis.childEvent = childEvent\r\n\t\t\tthis.parent = parent\r\n\t\t\tthis.visited = childEvent.visited\r\n\t\t}\r\n\t\tPropertyChangeEvent.prototype.type = 'update'\r\n\t\r\n\t\tfunction AddEvent(args) {\r\n\t\t\tthis.visited = new Set()\r\n\t\t\tfor (var key in args) {\r\n\t\t\t\tthis[key] = args[key]\r\n\t\t\t}\r\n\t\t}\r\n\t\tAddEvent.prototype.type = 'add'\r\n\t\tfunction DeleteEvent(args) {\r\n\t\t\tthis.visited = new Set()\r\n\t\t\tfor (var key in args) {\r\n\t\t\t\tthis[key] = args[key]\r\n\t\t\t}\r\n\t\t}\r\n\t\tDeleteEvent.prototype.type = 'delete'\r\n\t\r\n\t\tfunction forPropertyNotifyingValues(variable, properties, callback) {\r\n\t\t\tif (variable === properties) {\r\n\t\t\t\tforPropertyNotifyingValues(variable, variable._properties, callback)\r\n\t\t\t}\r\n\t\t\tfor (var key in properties) {\r\n\t\t\t\tvar property = properties[key]\r\n\t\t\t\tif (property && property.parent == variable) {\r\n\t\t\t\t\tif (property.returnedVariable) {\r\n\t\t\t\t\t\tcallback(property.returnedVariable)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (property.hasChildNotifiers) {\r\n\t\t\t\t\t\tvar subProperties = property._properties\r\n\t\t\t\t\t\tif (subProperties) {\r\n\t\t\t\t\t\t\tforPropertyNotifyingValues(property, property, callback)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction Variable(value) {\r\n\t\t\tif (this instanceof Variable) {\r\n\t\t\t\t// new call, may eventually use new.target\r\n\t\t\t\tif (value === undefined) {\r\n\t\t\t\t\tif (this.default !== undefined) {\r\n\t\t\t\t\t\tthis.value = this.default\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.value = value\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn Variable.with(value)\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar VariablePrototype = Variable.prototype = {\r\n\t\t\t// for debugging use\r\n\t\t\tget _currentValue() {\r\n\t\t\t\treturn this.valueOf()\r\n\t\t\t},\r\n\t\t\tset _currentValue(value) {\r\n\t\t\t\tthis.put(value)\r\n\t\t\t},\r\n\t\t\tconstructor: Variable,\r\n\t\t\tvalueOf: function(context) {\r\n\t\t\t\tvar valueContext\r\n\t\t\t\treturn this.gotValue(this.getValue ?\r\n\t\t\t\t\tthis.getValue(context, context && (valueContext = context.newContext())) :\r\n\t\t\t\t\tthis.value, context, valueContext)\r\n\t\t\t},\r\n\t\t\tgetValue: function(context, valueContext) {\r\n\t\t\t\tif (this.parent) {\r\n\t\t\t\t\tif (context) {\r\n\t\t\t\t\t\tif (!valueContext) {\r\n\t\t\t\t\t\t\tvalueContext = context.newContext()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvalueContext.nextProperty = 'parent'\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar key = this.key\r\n\t\t\t\t\tvar property = this\r\n\t\t\t\t\tvar parent = this.parent\r\n\t\t\t\t\tvar object = parent.getValue ? parent.getValue(valueContext) : parent.value\r\n\t\t\t\t\tvar gotValueAndListen = function(object) {\r\n\t\t\t\t\t\tvar value = object == null ? undefined :\r\n\t\t\t\t\t\t\ttypeof object.property === 'function' ? object.property(key) :\r\n\t\t\t\t\t\t\ttypeof object.get === 'function' ? object.get(key) : object[key]\r\n\t\t\t\t\t\t//if (property.listeners) {\r\n\t\t\t\t\t\t\tvar listeners = propertyListenersMap.get(object)\r\n\t\t\t\t\t\t\tif (listeners && listeners.observer && listeners.observer.addKey) {\r\n\t\t\t\t\t\t\t\tlisteners.observer.addKey(key)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t//}\r\n\t\t\t\t\t\treturn value\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (object && object.then) {\r\n\t\t\t\t\t\treturn when(object, gotValueAndListen)\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn gotValueAndListen(object)\r\n\t\t\t\t}\r\n\t\t\t\treturn this.value\r\n\t\t\t},\r\n\t\t\tgotValue: function(value, parentContext, context) {\r\n\t\t\t\tvar previousNotifyingValue = this.returnedVariable\r\n\t\t\t\tvar variable = this\r\n\t\t\t\tif (previousNotifyingValue) {\r\n\t\t\t\t\tif (value === previousNotifyingValue) {\r\n\t\t\t\t\t\t// nothing changed, immediately return valueOf\r\n\t\t\t\t\t\tif (parentContext) {\r\n\t\t\t\t\t\t\tif (!context) {\r\n\t\t\t\t\t\t\t\tcontext = parentContext.newContext()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tcontext.contextualize(this, parentContext)\r\n\t\t\t\t\t\t\tcontext.nextProperty = 'returnedVariable'\r\n\t\t\t\t\t\t\treturn value.valueOf(context)\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn value.valueOf()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// if there was a another value that we were dependent on before, stop listening to it\r\n\t\t\t\t\t// TODO: we may want to consider doing cleanup after the next rendering turn\r\n\t\t\t\t\tif (variable.listeners) {\r\n\t\t\t\t\t\tpreviousNotifyingValue.stopNotifies(variable)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvariable.returnedVariable = null\r\n\t\t\t\t}\r\n\t\t\t\tif (value && value.notifies) {\r\n\t\t\t\t\tvariable.returnedVariable = value\r\n\t\t\t\t\tif (variable.listeners) {\r\n\t\t\t\t\t\tvalue.notifies(variable)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t/*var parent = variable\r\n\t\t\t\t\tdo {\r\n\t\t\t\t\t\tif (parent.listeners) {\r\n\t\t\t\t\t\t\t// the value is another variable, start receiving notifications, if we, or any parent is live\r\n\t\t\t\t\t\t\tvariable.returnedVariable.notifies(variable)\r\n\t\t\t\t\t\t\tbreak\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tparent.hasNotifyingChild = true\r\n\t\t\t\t\t} while((parent = parent.parent))*/\r\n\t\t\t\t\tcontext = context || parentContext && (context = parentContext.newContext())\r\n\t\t\t\t\tif (context) {\r\n\t\t\t\t\t\tcontext.nextProperty = 'returnedVariable'\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalue = value.valueOf(context)\r\n\t\t\t\t}\r\n\t\t\t\tif (value === undefined) {\r\n\t\t\t\t\tvalue = variable.default\r\n\t\t\t\t}\r\n\t\t\t\tif (context) {\r\n\t\t\t\t\tcontext.contextualize(this, parentContext)\r\n\t\t\t\t}\r\n\t\t\t\tif (parentContext) {\r\n\t\r\n\t\t\t\t\t/*if (!contextualized.listeners) {\r\n\t\t\t\t\t\t// mark it as initialized, since we have already recursively dependended on inputs\r\n\t\t\t\t\t\tcontextualized.listeners = []\r\n\t\t\t\t\t}*/\r\n\t\r\n\t\t\t\t\tif (!context) {\r\n\t\t\t\t\t\tparentContext.addInput(this)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (value && value.then) {\r\n\t\t\t\t\treturn when(value, function(value) {\r\n\t\t\t\t\t\treturn Variable.prototype.gotValue.call(variable, value, context)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\treturn value\r\n\t\t\t},\r\n\t\t\tPropertyClass: Variable,\r\n\t\t\tproperty: function(key, PropertyClass) {\r\n\t\t\t\tvar propertyVariable = this[key]\r\n\t\t\t\tif (!propertyVariable || !propertyVariable.notifies) {\r\n\t\t\t\t\tpropertyVariable = this._properties && this._properties[key]\r\n\t\t\t\t}\r\n\t\t\t\tif (!propertyVariable) {\r\n\t\t\t\t\t// create the property variable\r\n\t\t\t\t\tvar Class = PropertyClass || this.constructor[key]\r\n\t\t\t\t\tpropertyVariable = new (Class && typeof Class === 'function' && Class.notifies ? Class : this.PropertyClass)()\r\n\t\t\t\t\tpropertyVariable.key = key\r\n\t\t\t\t\tpropertyVariable.parent = this\r\n\t\t\t\t\tif (this[key] === undefined) {\r\n\t\t\t\t\t\tthis[key] = propertyVariable\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t(this._properties || (this._properties = {}))[key] = propertyVariable\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (PropertyClass) {\r\n\t\t\t\t\tif (!(propertyVariable instanceof PropertyClass)) {\r\n\t\t\t\t\t\tthrow new TypeError('Existing property variable does not match requested variable type')\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn propertyVariable\r\n\t\t\t},\r\n\t\t\tfor: function(subject) {\r\n\t\t\t\tif (subject && subject.target && !subject.constructor.getForClass) {\r\n\t\t\t\t\t// makes HTML events work\r\n\t\t\t\t\tsubject = subject.target\r\n\t\t\t\t}\r\n\t\t\t\tif (this.parent) {\r\n\t\t\t\t\treturn this.parent.for(subject).property(this.key)\r\n\t\t\t\t}\r\n\t\t\t\treturn new ContextualizedVariable(this, subject || defaultContext)\r\n\t\t\t},\r\n\t\t\t_changeValue: function(context, type, newValue) {\r\n\t\t\t\tvar key = this.key\r\n\t\t\t\tvar parent = this.parent\r\n\t\t\t\tvar variable = this\r\n\t\t\t\treturn when(parent.getValue ? parent.getValue(context) : parent.value, function(object) {\r\n\t\t\t\t\tif (object == null) {\r\n\t\t\t\t\t\t// nothing there yet, create an object to hold the new property\r\n\t\t\t\t\t\tparent.put(object = typeof key == 'number' ? [] : {}, context)\r\n\t\t\t\t\t} else if (typeof object != 'object') {\r\n\t\t\t\t\t\t// if the parent is not an object, we can't set anything (that will be retained)\r\n\t\t\t\t\t\treturn deny\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar oldValue = typeof object.get === 'function' ? object.get(key) : object[key]\r\n\t\t\t\t\tif (oldValue === newValue) {\r\n\t\t\t\t\t\t// no actual change to make\r\n\t\t\t\t\t\treturn noChange\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (typeof object.set === 'function') {\r\n\t\t\t\t\t\tobject.set(key, newValue)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (type == RequestChange && oldValue && oldValue.put && (!newValue && newValue.put)) {\r\n\t\t\t\t\t\t\t// if a put and the property value is a variable, assign it to that.\r\n\t\t\t\t\t\t\toldValue.put(newValue)\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tobject[key] = newValue\r\n\t\t\t\t\t\t\t// or set the setter/getter\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar event = new RefreshEvent()\r\n\t\t\t\t\tevent.oldValue = oldValue\r\n\t\t\t\t\tevent.target = variable\r\n\t\t\t\t\tvariable.updated(event, variable, context)\r\n\t\r\n\t\t\t\t\t// now notify any object listeners\r\n\t\t\t\t\tvar listeners = propertyListenersMap.get(object)\r\n\t\t\t\t\t// we need to do it before the other listeners, so we can update it before\r\n\t\t\t\t\t// we trigger a full clobbering of the object\r\n\t\t\t\t\tif (listeners) {\r\n\t\t\t\t\t\tlisteners = listeners.slice(0)\r\n\t\t\t\t\t\tfor (var i = 0, l = listeners.length; i < l; i++) {\r\n\t\t\t\t\t\t\tvar listener = listeners[i]\r\n\t\t\t\t\t\t\tif (listener !== parent) {\r\n\t\t\t\t\t\t\t\t// now go ahead and actually trigger the other listeners (but make sure we don't do the parent again)\r\n\t\t\t\t\t\t\t\tlistener._propertyChange(key, object, context, type)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\r\n\t\t\t_propertyChange: function(propertyName, object, context, type) {\r\n\t\t\t\tif (this.onPropertyChange) {\r\n\t\t\t\t\tthis.onPropertyChange(propertyName, object, context)\r\n\t\t\t\t}\r\n\t\t\t\tthis.updated(new PropertyChangeEvent(propertyName, new RefreshEvent(), this), null, context)\r\n\t\t\t},\r\n\t\t\teachKey: function(callback) {\r\n\t\t\t\tfor (var i in this._properties) {\r\n\t\t\t\t\tcallback(i)\r\n\t\t\t\t}\r\n\t\t\t\tfor (var i in this) {\r\n\t\t\t\t\tif (this.hasOwnProperty[i]) {\r\n\t\t\t\t\t\tvar value = this[i]\r\n\t\t\t\t\t\tif (value && value.parent == this && value.listeners) {\r\n\t\t\t\t\t\t\tcallback(i)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tapply: function(instance, args) {\r\n\t\t\t\treturn new Call(this, args)\r\n\t\t\t},\r\n\t\t\tcall: function(instance) {\r\n\t\t\t\treturn this.apply(instance, Array.prototype.slice.call(arguments, 1))\r\n\t\t\t},\r\n\t\t\tforDependencies: function(callback) {\r\n\t\t\t\tif (this.returnedVariable) {\r\n\t\t\t\t\tcallback(this.returnedVariable)\r\n\t\t\t\t}\r\n\t\t\t\tif (this.hasNotifyingChild) {\r\n\t\t\t\t\tforPropertyNotifyingValues(this, this, callback)\r\n\t\t\t\t}\r\n\t\t\t\tif (this.parent) {\r\n\t\t\t\t\tcallback(this.parent)\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tinit: function() {\r\n\t\t\t\tvar variable = this\r\n\t\t\t\tthis.forDependencies(function(dependency) {\r\n\t\t\t\t\tdependency.notifies(variable)\r\n\t\t\t\t})\r\n\t\r\n\t\t\t\tif (this.listeningToObject === null) {\r\n\t\t\t\t\t// we were previously listening to an object, but it needs to be restored\r\n\t\t\t\t\t// calling valueOf will cause the listening object to be restored\r\n\t\t\t\t\tthis.valueOf()\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcleanup: function() {\r\n\t\t\t\tthis.listeners = false\r\n\t\t\t\tvar handles = this.handles\r\n\t\t\t\tif (handles) {\r\n\t\t\t\t\tfor (var i = 0; i < handles.length; i++) {\r\n\t\t\t\t\t\thandles[i].remove()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.handles = null\r\n\t\t\t\tvar returnedVariable = this.returnedVariable\r\n\t\t\t\tvar variable = this\r\n\t\t\t\tthis.forDependencies(function(dependency) {\r\n\t\t\t\t\tdependency.stopNotifies(variable)\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\r\n\t\t\tupdateVersion: function(version) {\r\n\t\t\t\tthis.version = nextId++\r\n\t\t\t},\r\n\t\r\n\t\t\tgetVersion: function(context) {\r\n\t\t\t\treturn Math.max(this.version || 0, this.returnedVariable && this.returnedVariable.getVersion ? this.returnedVariable.getVersion(context) : 0)\r\n\t\t\t},\r\n\t\r\n\t\t\tgetSubject: function(selectVariable) {\r\n\t\t\t\treturn this.subject\r\n\t\t\t},\r\n\t\r\n\t\t\tgetUpdates: function(since) {\r\n\t\t\t\tvar updates = []\r\n\t\t\t\tvar nextUpdateMap = this.nextUpdateMap\r\n\t\t\t\tif (nextUpdateMap && since) {\r\n\t\t\t\t\twhile ((since = nextUpdateMap.get(since))) {\r\n\t\t\t\t\t\tif (since.type === 'refresh') {\r\n\t\t\t\t\t\t\t// if it was refresh, we can clear any prior entries\r\n\t\t\t\t\t\t\tupdates = []\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tupdates.push(since)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn updates\r\n\t\t\t},\r\n\t\r\n\t\t\tupdated: function(updateEvent, by, context) {\r\n\t\t\t\tif (!updateEvent) {\r\n\t\t\t\t\tupdateEvent = new RefreshEvent()\r\n\t\t\t\t}\r\n\t\t\t\tif (updateEvent.visited.has(this)){\r\n\t\t\t\t\t// if this event has already visited this variable, skip it\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tupdateEvent.visited.add(this)\r\n\t\t\t\tif (this.__debug) {\r\n\t\t\t\t\t// debug is on\r\n\t\t\t\t\tconsole.log('Variable changed at')\r\n\t\t\t\t\tconsole.log((new Error().stack || '').replace(/Error/, ''))\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar contextualInstance = context ? context.getContextualized(this) : this\r\n\t\t\t\tif (contextualInstance) {\r\n\t\t\t\t\tcontextualInstance.updated(updateEvent, this, context)\r\n\t\t\t\t}\r\n\t\t\t\t/*\r\n\t\t\t\t// at some point we could do an update list so that we could incrementally update\r\n\t\t\t\t// lists in non-live situations\r\n\t\t\t\tif (this.lastUpdate) {\r\n\t\t\t\t\tvar nextUpdateMap = this.nextUpdateMap\r\n\t\t\t\t\tif (!nextUpdateMap) {\r\n\t\t\t\t\t\tnextUpdateMap = this.nextUpdateMap = new WeakMap()\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnextUpdateMap.set(this.lastUpdate, updateEvent)\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.lastUpdate = updateEvent */\r\n\t\t\t\tthis.updateVersion()\r\n\t\r\n\t\t\t\tvar listeners = this.listeners\r\n\t\t\t\tif (listeners) {\r\n\t\t\t\t\tvar variable = this\r\n\t\t\t\t\t// make a copy, in case they change\r\n\t\t\t\t\tlisteners.forEach(function(dependent) {\r\n\t\t\t\t\t\tif ((updateEvent instanceof PropertyChangeEvent) &&\r\n\t\t\t\t\t\t\t\tdependent.parent) {\r\n\t\t\t\t\t\t\tif (dependent.key === updateEvent.key) {\r\n\t\t\t\t\t\t\t\tdependent.updated(updateEvent.childEvent, variable, context)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tdependent.updated(updateEvent, variable, context)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tif (updateEvent instanceof PropertyChangeEvent) {\r\n\t\t\t\t\tif (this.returnedVariable && this.fixed) {\r\n\t\t\t\t\t\tthis.returnedVariable.updated(updateEvent, this, context)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this.constructor.collection) {\r\n\t\t\t\t\t\tthis.constructor.collection.updated(updateEvent, this, context)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (this.parent) {\r\n\t\t\t\t\t\tthis.parent.updated(new PropertyChangeEvent(this.key, updateEvent, this.parent), this, context)\r\n\t\t\t\t}\r\n\t\t\t\treturn updateEvent\r\n\t\t\t},\r\n\t\r\n\t\t\tinvalidate: function() {\r\n\t\t\t\t// for back-compatibility for now\r\n\t\t\t\tthis.updated()\r\n\t\t\t},\r\n\t\r\n\t\t\tnotifies: function(target) {\r\n\t\t\t\tvar listeners = this.listeners\r\n\t\t\t\tif (!listeners || !this.hasOwnProperty('listeners')) {\r\n\t\t\t\t\tthis.listeners = listeners = new Set()\r\n\t\t\t\t\tthis.init()\r\n\t\t\t\t}\r\n\t\t\t\tlisteners.add(target)\r\n\t\t\t},\r\n\t\t\tsubscribe: function(listener) {\r\n\t\t\t\t// ES7 Observable (and baconjs) compatible API\r\n\t\t\t\tvar updated\r\n\t\t\t\tvar updateQueued\r\n\t\t\t\tvar variable = this\r\n\t\t\t\t// it is important to make sure you register for notifications before getting the value\r\n\t\t\t\tif (typeof listener === 'function') {\r\n\t\t\t\t\t// BaconJS compatible API\r\n\t\t\t\t\tvar variable = this\r\n\t\t\t\t\tvar event = {\r\n\t\t\t\t\t\tvalue: function() {\r\n\t\t\t\t\t\t\treturn variable.valueOf()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tupdated = function() {\r\n\t\t\t\t\t\tupdateQueued = false\r\n\t\t\t\t\t\tlistener(event)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\telse if (listener.next) {\r\n\t\t\t\t\t// Assuming ES7 Observable API. It is actually a streaming API, this pretty much violates all principles of reactivity, but we will support it\r\n\t\t\t\t\tupdated = function() {\r\n\t\t\t\t\t\tupdateQueued = false\r\n\t\t\t\t\t\tlistener.next(variable.valueOf())\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error('Subscribing to an invalid listener, the listener must be a function, or have an update or next method')\r\n\t\t\t\t}\r\n\t\t\t\tvar updateReceiver = {\r\n\t\t\t\t\tupdated: function() {\r\n\t\t\t\t\t\tif (updateQueued) {\r\n\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tupdateQueued = true\r\n\t\t\t\t\t\tlang.nextTurn(updated)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tupdated()\r\n\t\t\t\tthis.notifies(updateReceiver)\r\n\t\t\t\treturn {\r\n\t\t\t\t\tunsubscribe: function() {\r\n\t\t\t\t\t\tvariable.stopNotifies(updateReceiver)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tstopNotifies: function(dependent) {\r\n\t\t\t\tvar listeners = this.listeners\r\n\t\t\t\tif (listeners) {\r\n\t\t\t\t\tlisteners.delete(dependent)\r\n\t\t\t\t\tif (listeners.size === 0) {\r\n\t\t\t\t\t\t// clear the listeners so it will be reinitialized if it has\r\n\t\t\t\t\t\t// listeners again\r\n\t\t\t\t\t\tthis.cleanup()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tput: function(value, context) {\r\n\t\t\t\tvar variable = this\r\n\t\t\t\tif (this.parent) {\r\n\t\t\t\t\treturn this._changeValue(context, RequestChange, value)\r\n\t\t\t\t}\r\n\t\t\t\treturn when(this.getValue ? this.getValue(context) : this.value, function(oldValue) {\r\n\t\t\t\t\tif (oldValue === value) {\r\n\t\t\t\t\t\treturn noChange\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (oldValue && oldValue.put &&\r\n\t\t\t\t\t\t\t// if it is set to fixed, we see we can put in the current variable\r\n\t\t\t\t\t\t\t(variable.fixed || !(value && value.put))) {\r\n\t\t\t\t\t\treturn oldValue.put(value)\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn when(variable.setValue(value, context), function(value) {\r\n\t\t\t\t\t\tvar event = new RefreshEvent()\r\n\t\t\t\t\t\tevent.oldValue = oldValue\r\n\t\t\t\t\t\tevent.target = variable\r\n\t\t\t\t\t\tvariable.updated(event, variable, context)\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tget: function(key) {\r\n\t\t\t\tif (this[key] || (this._properties && this._properties[key])) {\r\n\t\t\t\t\treturn this.property(key).valueOf()\r\n\t\t\t\t}\r\n\t\t\t\treturn when(this.getValue(), function(object) {\r\n\t\t\t\t\tvar value = object && (typeof object.get === 'function' ? object.get(key) : object[key])\r\n\t\t\t\t\tif (value && value.notifies) {\r\n\t\t\t\t\t\t// nested variable situation, get underlying value\r\n\t\t\t\t\t\treturn value.valueOf()\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn value\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tset: function(key, value) {\r\n\t\t\t\t// TODO: create an optimized route when the property doesn't exist yet\r\n\t\t\t\tthis.property(key)._changeValue(null, RequestSet, value)\r\n\t\t\t},\r\n\t\t\tundefine: function(key, context) {\r\n\t\t\t\tthis.set(key, undefined, context)\r\n\t\t\t},\r\n\t\t\tis: function(proxiedVariable) {\r\n\t\t\t\tvar thisVariable = this\r\n\t\t\t\tthis.fixed = true\r\n\t\t\t\treturn when(this.setValue(proxiedVariable), function(value) {\r\n\t\t\t\t\tthisVariable.updated(new RefreshEvent(), thisVariable)\r\n\t\t\t\t\treturn thisVariable\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tproxy: function(proxiedVariable) {\r\n\t\t\t\treturn this.is(proxiedVariable)\r\n\t\t\t},\r\n\t\t\tnext: function(value) {\r\n\t\t\t\t// for ES7 observable compatibility\r\n\t\t\t\tthis.put(value)\r\n\t\t\t},\r\n\t\t\terror: function(error) {\r\n\t\t\t\t// for ES7 observable compatibility\r\n\t\t\t\tvar listeners = this.listeners\r\n\t\t\t\tif (listeners) {\r\n\t\t\t\t\t// make a copy, in case they change\r\n\t\t\t\t\tlisteners.forEach(function(dependent) {\r\n\t\t\t\t\t\t// skip notifying property listeners if we are headed up the parent chain\r\n\t\t\t\t\t\tdependent.error(error)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcomplete: function(value) {\r\n\t\t\t\t// for ES7 observable compatibility\r\n\t\t\t\tthis.put(value)\r\n\t\t\t},\r\n\t\t\tsetValue: function(value) {\r\n\t\t\t\tthis.value = value\r\n\t\t\t},\r\n\t\t\tonValue: function(listener) {\r\n\t\t\t\treturn this.subscribe(function(event) {\r\n\t\t\t\t\tlang.when(event.value(), function(value) {\r\n\t\t\t\t\t\tlistener(value)\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\ttoJSON: function() {\r\n\t\t\t\treturn this.valueOf()\r\n\t\t\t},\r\n\t\t\ttoString: function() {\r\n\t\t\t\treturn this.valueOf()\r\n\t\t\t},\r\n\t\t\tforEach: function(callbackOrItemClass, callbackOrContext, context) {\r\n\t\t\t\t// iterate through current value of variable\r\n\t\t\t\tif (callbackOrItemClass.notifies) {\r\n\t\t\t\t\treturn this.forEach(function(item) {\r\n\t\t\t\t\t\tvar itemVariable = callbackOrItemClass.from(item)\r\n\t\t\t\t\t\tcallbackOrContext.call(this, itemVariable)\r\n\t\t\t\t\t}, context)\r\n\t\t\t\t}\r\n\t\t\t\tif (this.collectionOf) {\r\n\t\t\t\t\treturn when(this.valueOf(callbackOrContext), function(value) {\r\n\t\t\t\t\t\tif (value && value.forEach) {\r\n\t\t\t\t\t\t\tvalue.forEach(function(item) {\r\n\t\t\t\t\t\t\t\tcallbackOrItemClass.call(this, this.collectionOf.from(item))\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\treturn when(this.valueOf(callbackOrContext), function(value) {\r\n\t\t\t\t\tif (value && value.forEach) {\r\n\t\t\t\t\t\tvalue.forEach(callbackOrItemClass)\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tfor (var i in value) {\r\n\t\t\t\t\t\t\tcallbackOrItemClass.call(value, value[i], i)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\r\n\t\t\tto: function (transformFunction, reverse) {\r\n\t\t\t\tif (typeof transformFunction !== 'function') {\r\n\t\t\t\t\tif (typeof transformFunction === 'object') {\r\n\t\t\t\t\t\tthis.to(transformFunction.get, transformFunction.set)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthrow new Error('No function provided to transform')\r\n\t\t\t\t}\r\n\t\t\t\tif (reverse) {\r\n\t\t\t\t\ttransformFunction.reverse = function(value, args, context) {\r\n\t\t\t\t\t\t// for direct to, we can just use the first argument\r\n\t\t\t\t\t\treverse.call(this, args[0], context)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn new Call(transformFunction, [this])\r\n\t\t\t},\r\n\t\t\tget schema() {\r\n\t\t\t\t// default schema is the constructor\r\n\t\t\t\tif (this.returnedVariable) {\r\n\t\t\t\t\treturn this.returnedVariable.schema\r\n\t\t\t\t}\r\n\t\t\t\tif (this.parent) {\r\n\t\t\t\t\tvar parentSchemaProperties = this.parent.schema.properties || this.parent.schema\r\n\t\t\t\t\treturn parentSchemaProperties && parentSchemaProperties[this.key]\r\n\t\t\t\t}\r\n\t\t\t\treturn this.constructor\r\n\t\t\t},\r\n\t\t\tset schema(schema) {\r\n\t\t\t\t// but allow it to be overriden\r\n\t\t\t\tObject.defineProperty(this, 'schema', {\r\n\t\t\t\t\tvalue: schema\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tvalidate: function(target, schema) {\r\n\t\t\t\tif (this.returnedVariable) {\r\n\t\t\t\t\treturn this.returnedVariable.validate(target, schema)\r\n\t\t\t\t}\r\n\t\t\t\tif (this.parent) {\r\n\t\t\t\t\treturn this.parent.validate(target.valueOf(), schema)\r\n\t\t\t\t}\r\n\t\t\t\tif (schema) {\r\n\t\t\t\t\tif (schema.type && (schema.type !== typeof target)) {\r\n\t\t\t\t\t\treturn ['Target type of ' + typeof target + ' does not match schema type of ' + schema.type]\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (schema.required && (target == null || target == '' || (typeof target === 'number' && isNaN(target)))) {\r\n\t\t\t\t\t\treturn ['Value is required']\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tvar valid = []\r\n\t\t\t\tvalid.isValid = true\r\n\t\t\t\treturn valid\r\n\t\t\t},\r\n\t\r\n\t\t\tget validation() {\r\n\t\t\t\tvar validation = new Validating(this)\r\n\t\t\t\tObject.defineProperty(this, 'validation', {\r\n\t\t\t\t\tvalue: validation\r\n\t\t\t\t})\r\n\t\t\t\treturn validation\r\n\t\t\t},\r\n\t\t\tset validation(validation) {\r\n\t\t\t\t// but allow it to be overriden\r\n\t\t\t\tObject.defineProperty(this, 'validation', {\r\n\t\t\t\t\tvalue: validation\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tset structured(structure) {\r\n\t\t\t\t// find any variable properties and attaches them as a property\r\n\t\t\t\tvar keys = Object.keys(this)\r\n\t\t\t\tvar properties = keys.length > 1 && this._properties || (this._properties = {})\r\n\t\t\t\tfor(var i = 0, l = keys.length; i < l; i++) {\r\n\t\t\t\t\tvar key = keys[i]\r\n\t\t\t\t\tvar value = this[key]\r\n\t\t\t\t\tif (value instanceof Variable) {\r\n\t\t\t\t\t\tvar existing = properties[key]\r\n\t\t\t\t\t\tif (existing) {\r\n\t\t\t\t\t\t\tif (existing !== value) {\r\n\t\t\t\t\t\t\t\t// an existing property exists, put in it\r\n\t\t\t\t\t\t\t\texisting.put(value)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (value.parent) {\r\n\t\t\t\t\t\t\t\tif (value.parent === this) {\r\n\t\t\t\t\t\t\t\t\tcontinue // just being assigned to another property\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// property already exists with different parent, make a proxy\r\n\t\t\t\t\t\t\t\t\tvar newValue = new Variable()\r\n\t\t\t\t\t\t\t\t\tnewValue.proxy(value)\r\n\t\t\t\t\t\t\t\t\tvalue = newValue\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvalue.key = key\r\n\t\t\t\t\t\t\tvalue.parent = this\r\n\t\t\t\t\t\t\tproperties[key] = value\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tgetId: function() {\r\n\t\t\t\treturn this.id || (this.id = nextId++)\r\n\t\t\t},\r\n\t\t\tobserveObject: function() {\r\n\t\t\t\tvar variable = this\r\n\t\t\t\treturn when(this.valueOf(), function(object) {\r\n\t\t\t\t\tvar listeners = propertyListenersMap.get(object)\r\n\t\t\t\t\tif (!listeners) {\r\n\t\t\t\t\t\tpropertyListenersMap.set(object, listeners = [])\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (listeners.observerCount) {\r\n\t\t\t\t\t\tlisteners.observerCount++\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tlisteners.observerCount = 1\r\n\t\t\t\t\t\tvar observer = listeners.observer = lang.observe(object, function(events) {\r\n\t\t\t\t\t\t\tfor (var i = 0, l = listeners.length; i < l; i++) {\r\n\t\t\t\t\t\t\t\tvar listener = listeners[i]\r\n\t\t\t\t\t\t\t\tfor (var j = 0, el = events.length; j < el; j++) {\r\n\t\t\t\t\t\t\t\t\tvar event = events[j]\r\n\t\t\t\t\t\t\t\t\tlistener._propertyChange(event.name, object)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tif (observer.addKey) {\r\n\t\t\t\t\t\t\tfor (var i = 0, l = listeners.length; i < l; i++) {\r\n\t\t\t\t\t\t\t\tvar listener = listeners[i]\r\n\t\t\t\t\t\t\t\tlistener.eachKey(function(key) {\r\n\t\t\t\t\t\t\t\t\tobserver.addKey(key)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tregisterListener(object, variable)\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tremove: function() {\r\n\t\t\t\t\t\t\tderegisterListener(object, variable)\r\n\t\t\t\t\t\t\tif (!(--listeners.observerCount)) {\r\n\t\t\t\t\t\t\t\tlisteners.observer.remove()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tdone: function() {\r\n\t\t\t\t\t\t\t// deliver changes\r\n\t\t\t\t\t\t\tlang.deliverChanges(observer)\r\n\t\t\t\t\t\t\tthis.remove()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tgetCollectionOf: function() {\r\n\t\t\t\treturn this.constructor.collectionOf\r\n\t\t\t},\r\n\t\t\t_sN: function(name) {\r\n\t\t\t\t// for compilers to set a name\r\n\t\t\t\tthis.name = name\r\n\t\t\t\treturn this\r\n\t\t\t},\r\n\t\t\tget _debug() {\r\n\t\t\t\tif (this.__debug === undefined) {\r\n\t\t\t\t\tthis.__debug = true\r\n\t\t\t\t}\r\n\t\t\t\treturn this.__debug\r\n\t\t\t},\r\n\t\t\tset _debug(_debug) {\r\n\t\t\t\tthis.__debug = _debug\r\n\t\t\t},\r\n\t\t\t// TODO: Move these to VArray\r\n\t\t\t/* TODO: at some point, we might add support for length, but need to make it be dependent/notified by array changes\r\n\t\t\tget length() {\r\n\t\t\t\tif (typeof this !== 'function') {\r\n\t\t\t\t\tObject.defineProperty(this, 'length', {\r\n\t\t\t\t\t\tconfigurable: true\r\n\t\t\t\t\t})\r\n\t\t\t\t\treturn this.property('length')\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tset length(length) {\r\n\t\t\t\t// allow overriding\r\n\t\t\t\tObject.defineProperty(this, 'length', {\r\n\t\t\t\t\tvalue: length\r\n\t\t\t\t})\r\n\t\t\t},*/\r\n\t\t\tsplice: function(startingIndex, removalCount) {\r\n\t\t\t\tvar args = arguments\r\n\t\t\t\treturn arrayToModify(this, function(array) {\r\n\t\t\t\t\tvar results = array.splice.apply(array, args)\r\n\t\t\t\t\tremovedAt(this, results, startingIndex, removalCount, array.length)\r\n\t\t\t\t\tinsertedAt(this, [].slice.call(args, 2), startingIndex, array.length)\r\n\t\t\t\t\treturn results\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tpush: function() {\r\n\t\t\t\tvar args = arguments\r\n\t\t\t\treturn arrayToModify(this, function(array) {\r\n\t\t\t\t\tvar results = array.push.apply(array, args)\r\n\t\t\t\t\tinsertedAt(this, args, array.length - args.length, array.length)\r\n\t\t\t\t\treturn results\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tunshift: function() {\r\n\t\t\t\tvar args = arguments\r\n\t\t\t\treturn arrayToModify(this, function(array) {\r\n\t\t\t\t\tvar results = array.unshift.apply(array, args)\r\n\t\t\t\t\tinsertedAt(this, args, 0, array.length)\r\n\t\t\t\t\treturn results\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tpop: function() {\r\n\t\t\t\treturn arrayToModify(this, function(array) {\r\n\t\t\t\t\tvar results = array.pop()\r\n\t\t\t\t\tremovedAt(this, [results], array.length, 1)\r\n\t\t\t\t\treturn results\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tshift: function() {\r\n\t\t\t\treturn arrayToModify(this, function(array) {\r\n\t\t\t\t\tvar results = array.shift()\r\n\t\t\t\t\tremovedAt(this, [results], 0, 1, array.length)\r\n\t\t\t\t\treturn results\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction arrayToModify(variable, callback) {\r\n\t\t\t// TODO: switch this to allow promises\r\n\t\t\twhen(variable.cachedValue || variable.valueOf(), function(array) {\r\n\t\t\t\tif (!array) {\r\n\t\t\t\t\tvariable.put(array = [])\r\n\t\t\t\t}\r\n\t\t\t\tvariable.updateVersion()\r\n\t\t\t\tvar results = callback.call(variable, array)\r\n\t\t\t\tvariable.cachedVersion = variable.version // update the cached version so it doesn't need to be recomputed\r\n\t\t\t\treturn results\r\n\t\t\t})\r\n\t\t}\r\n\t\r\n\t\tfunction insertedAt(variable, added, startingIndex, arrayLength) {\r\n\t\t\tvar addedCount = added.length\r\n\t\t\t// adjust the key positions of any index properties after splice\r\n\t\t\tif (addedCount > 0) {\r\n\t\t\t\tvar arrayPosition\r\n\t\t\t\tfor (var i = arrayLength - addedCount; i > startingIndex;) {\r\n\t\t\t\t\tvar arrayPosition = variable[--i]\r\n\t\t\t\t\tif (arrayPosition) {\r\n\t\t\t\t\t\tvariable[i] = undefined\r\n\t\t\t\t\t\tarrayPosition.key += addedCount\r\n\t\t\t\t\t\tvariable[arrayPosition.key] = arrayPosition\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// send out updates\r\n\t\t\t\tfor (var i = 0, l = added.length; i < l; i++) {\r\n\t\t\t\t\tvariable.updated(new AddEvent({\r\n\t\t\t\t\t\tvalue: added[i],\r\n\t\t\t\t\t\tindex: i + startingIndex,\r\n\t\t\t\t\t\tmodifier: variable\r\n\t\t\t\t\t}), variable)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction removedAt(variable, removed, startingIndex, removalCount, arrayLength) {\r\n\t\t\t// adjust the properties\r\n\t\t\tvar i = startingIndex + removalCount\r\n\t\t\tvar arrayPosition\r\n\t\t\tif (removalCount > 0) {\r\n\t\t\t\tfor (var i = startingIndex + removalCount; i < arrayLength + removalCount; i++) {\r\n\t\t\t\t\tvar arrayPosition = variable[i]\r\n\t\t\t\t\tif (arrayPosition) {\r\n\t\t\t\t\t\tvariable[i] = undefined\r\n\t\t\t\t\t\tarrayPosition.key -= removalCount\r\n\t\t\t\t\t\tvariable[arrayPosition.key] = arrayPosition\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// send out updates\r\n\t\t\t\tfor (var i = 0; i < removalCount; i++) {\r\n\t\t\t\t\tvariable.updated(new DeleteEvent({\r\n\t\t\t\t\t\tpreviousIndex: startingIndex,\r\n\t\t\t\t\t\toldValue: removed[i],\r\n\t\t\t\t\t\tmodifier: variable\r\n\t\t\t\t\t}), variable)\r\n\t\t\t\t}\r\n\t\t\t\tvariable.cachedVersion = variable.version // update the cached version so it doesn't need to be recomputed\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tif (typeof Symbol !== 'undefined') {\r\n\t\t\tVariable.prototype[Symbol.iterator] = function() {\r\n\t\t\t\treturn this.valueOf()[Symbol.iterator]()\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tvar VMap = Variable.VMap = lang.compose(Variable, function(value){\r\n\t\t\tthis.value = typeof value === 'undefined' ? this.default : value\r\n\t\t}, {\r\n\t\t\tfixed: true,\r\n\t\t\t// TODO: Move all the get and set functionality for maps out of Variable\r\n\t\t\tproperty: function(key, PropertyClass) {\r\n\t\t\t\tvar properties = this._properties || (this._properties = new Map())\r\n\t\t\t\tvar propertyVariable = properties.get(key)\r\n\t\t\t\tif (!propertyVariable) {\r\n\t\t\t\t\t// create the property variable\r\n\t\t\t\t\tpropertyVariable = new (PropertyClass || this.PropertyClass)()\r\n\t\t\t\t\tpropertyVariable.key = key\r\n\t\t\t\t\tpropertyVariable.parent = this\r\n\t\t\t\t\tproperties.set(key, propertyVariable)\r\n\t\t\t\t}\r\n\t\t\t\treturn propertyVariable\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\tvar Caching = Variable.Caching = lang.compose(Variable, function Caching(getValue, setValue) {\r\n\t\t\tif (getValue) {\r\n\t\t\t\tthis.getValue = getValue\r\n\t\t\t}\r\n\t\t\tif (setValue) {\r\n\t\t\t\tthis.setValue = setValue\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tgetValue: function(context, transformContext) {\r\n\t\t\t\t// first check to see if we have the variable already computed\r\n\t\t\t\tvar contextualizedVariable = this\r\n\t\t\t\tif (context) {\r\n\t\t\t\t\tcontextualizedVariable = context.getContextualized(this)\r\n\t\t\t\t\tif (!contextualizedVariable && this.context && this.context.matches(context)) {\r\n\t\t\t\t\t\tcontextualizedVariable = this\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (contextualizedVariable && contextualizedVariable.cachedVersion === contextualizedVariable.getVersion()) {\r\n\t\t\t\t\tif (context) {\r\n\t\t\t\t\t\tcontext.addInput(contextualizedVariable)\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn contextualizedVariable.cachedValue\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar variable = this\r\n\t\t\t\tfunction withComputedValue(computedValue) {\r\n\t\t\t\t\tvar contextualizedVariable = transformContext && transformContext.contextualized || variable\r\n\t\t\t\t\tcontextualizedVariable.cachedVersion = newVersion\r\n\t\t\t\t\tcontextualizedVariable.cachedValue = computedValue\r\n\t\t\t\t\tcontextualizedVariable.context = transformContext\r\n\t\t\t\t\treturn computedValue\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar newVersion = this.getVersion()\r\n\t\t\t\tvar computedValue = this.computeValue(transformContext)\r\n\t\t\t\tif (computedValue && computedValue.then) {\r\n\t\t\t\t\treturn computedValue.then(withComputedValue)\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn withComputedValue(computedValue)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\tvar Item = Variable.Item = lang.compose(Variable, function Item(value, content) {\r\n\t\t\tthis.value = value\r\n\t\t\tthis.collection = content\r\n\t\t}, {})\r\n\t\r\n\t\tvar Composite = Variable.Composite = lang.compose(Caching, function Composite(args) {\r\n\t\t\tfor (var i = 0, l = args.length; i < l; i++) {\r\n\t\t\t\tthis[i > 0 ? 'input' + i : 'input'] = args[i]\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tforDependencies: function(callback) {\r\n\t\t\t\t// depend on the args\r\n\t\t\t\tCaching.prototype.forDependencies.call(this, callback)\r\n\t\t\t\tvar argument, argumentName\r\n\t\t\t\tfor (var i = 0; (argument = this[argumentName = i > 0 ? 'input' + i : 'input']) || argumentName in this; i++) {\r\n\t\t\t\t\tif (argument && argument.notifies) {\r\n\t\t\t\t\t\tcallback(argument)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\tupdated: function(updateEvent, by, context) {\r\n\t\t\t\tif (by !== this.returnedVariable && updateEvent && updateEvent.type !== 'refresh') {\r\n\t\t\t\t\t// search for the output in the inputs\r\n\t\t\t\t\tvar argument, argumentName\r\n\t\t\t\t\tfor (var i = 0; (argument = this[argumentName = i > 0 ? 'input' + i : 'input']) || argumentName in this; i++) {\r\n\t\t\t\t\t\tif (argument === by) {\r\n\t\t\t\t\t\t\t// if one of the args was updated, we need to do a full refresh (we can't compute differential events without knowledge of how the mapping function works)\r\n\t\t\t\t\t\t\tupdateEvent = new RefreshEvent()\r\n\t\t\t\t\t\t\tcontinue\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn Caching.prototype.updated.call(this, updateEvent, by, context)\r\n\t\t\t},\r\n\t\r\n\t\t\tgetUpdates: function(since) {\r\n\t\t\t\t// this always issues updates, nothing incremental can flow through it\r\n\t\t\t\tif (!since || since.version < getVersion()) {\r\n\t\t\t\t\treturn [new RefreshEvent()]\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\tgetVersion: function(context) {\r\n\t\t\t\tvar version = Variable.prototype.getVersion.call(this, context)\r\n\t\t\t\tvar argument, argumentName\r\n\t\t\t\tfor (var i = 0; (argument = this[argumentName = i > 0 ? 'input' + i : 'input']) || argumentName in this; i++) {\r\n\t\t\t\t\tif (argument && argument.getVersion) {\r\n\t\t\t\t\t\tversion = Math.max(version, argument.getVersion(context))\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn version\r\n\t\t\t},\r\n\t\r\n\t\t\tcomputeValue: function(context) {\r\n\t\t\t\tvar results = []\r\n\t\t\t\tvar argument, argumentName\r\n\t\t\t\tfor (var i = 0; (argument = this[argumentName = i > 0 ? 'input' + i : 'input']) || argumentName in this; i++) {\r\n\t\t\t\t\tif (context) {\r\n\t\t\t\t\t\tcontext.nextProperty = argumentName\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresults[i] = argument && argument.valueOf(context)\r\n\t\t\t\t}\r\n\t\t\t\treturn whenAll(results, function(resolved) {\r\n\t\t\t\t\treturn resolved\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tgetArguments: function() {\r\n\t\t\t\tvar args = []\r\n\t\t\t\tvar argument, argumentName\r\n\t\t\t\tfor (var i = 0; (argument = this[argumentName = i > 0 ? 'input' + i : 'input']) || argumentName in this; i++) {\r\n\t\t\t\t\targs.push(argument)\r\n\t\t\t\t}\r\n\t\t\t\treturn args\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\t// a call variable is the result of a call\r\n\t\tvar Call = lang.compose(Composite, function Transform(transform, args) {\r\n\t\t\tif (transform) {\r\n\t\t\t\tthis.transform = transform\r\n\t\t\t\tfor (var i = 0, l = args.length; i < l; i++) {\r\n\t\t\t\t\tthis[i > 0 ? 'input' + i : 'input'] = args[i]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tfixed: true,\r\n\t\t\tforDependencies: function(callback) {\r\n\t\t\t\t// depend on the args\r\n\t\t\t\tComposite.prototype.forDependencies.call(this, callback)\r\n\t\t\t\tif (this.transform.notifies) {\r\n\t\t\t\t\tcallback(this.transform)\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\tcomputeValue: function(context) {\r\n\t\t\t\tif (context) {\r\n\t\t\t\t\tcontext.nextProperty = 'transform'\r\n\t\t\t\t}\r\n\t\t\t\tvar functionValue = this.transform.valueOf(context)\r\n\t\t\t\tif (functionValue.then) {\r\n\t\t\t\t\tvar call = this\r\n\t\t\t\t\treturn functionValue.then(function(functionValue) {\r\n\t\t\t\t\t\treturn call.invoke(functionValue, context)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\treturn this.invoke(functionValue, context)\r\n\t\t\t},\r\n\t\r\n\t\t\tgetVersion: function(context) {\r\n\t\t\t\t// TODO: shortcut if we are live and since equals this.lastUpdate\r\n\t\t\t\tvar argsVersion = Composite.prototype.getVersion.call(this, context)\r\n\t\t\t\tif (this.transform.getVersion) {\r\n\t\t\t\t\treturn Math.max(argsVersion, this.transform.getVersion(context))\r\n\t\t\t\t}\r\n\t\t\t\treturn argsVersion\r\n\t\t\t},\r\n\t\r\n\t\t\texecute: function(context) {\r\n\t\t\t\tvar call = this\r\n\t\t\t\treturn when(this.transform.valueOf(context), function(functionValue) {\r\n\t\t\t\t\treturn call.invoke(functionValue, context, true)\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\r\n\t\t\tput: function(value, context) {\r\n\t\t\t\tvar call = this\r\n\t\t\t\treturn when(this.valueOf(context), function(originalValue) {\r\n\t\t\t\t\tif (originalValue === value) {\r\n\t\t\t\t\t\treturn noChange\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn when(call.transform.valueOf(context), function(functionValue) {\r\n\t\t\t\t\t\treturn call.invoke(function() {\r\n\t\t\t\t\t\t\tif (functionValue.reverse) {\r\n\t\t\t\t\t\t\t\tfunctionValue.reverse.call(call, value, call.getArguments(), context)\r\n\t\t\t\t\t\t\t\treturn Variable.prototype.put.call(call, value, context)\r\n\t\t\t\t\t\t\t} else if (originalValue && originalValue.put) {\r\n\t\t\t\t\t\t\t\treturn originalValue.put(value)\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn deny\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, context)\r\n\t\t\t\t\t});\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tinvoke: function(functionValue, context, observeArguments) {\r\n\t\t\t\tvar instance = this.transform.parent\r\n\t\t\t\tvar variable = this\r\n\t\t\t\tif (functionValue.handlesVariables || functionValue.property) {\r\n\t\t\t\t\treturn functionValue.apply(instance, this.getArguments(), context)\r\n\t\t\t\t}else{\r\n\t\t\t\t\tvar results = []\r\n\t\t\t\t\tvar argument, argumentName\r\n\t\t\t\t\tfor (var i = 0; (argument = this[argumentName = i > 0 ? 'input' + i : 'input']) || argumentName in this; i++) {\r\n\t\t\t\t\t\tif (context) {\r\n\t\t\t\t\t\t\tcontext.nextProperty = argumentName\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tresults[i] = argument && argument.valueOf(context)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinstance = instance && instance.valueOf(context)\r\n\t\t\t\t\tif (functionValue.handlesPromises) {\r\n\t\t\t\t\t\treturn functionValue.apply(instance, results, context)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// include the instance in whenAll\r\n\t\t\t\t\t\tresults.push(instance)\r\n\t\t\t\t\t\t// wait for the values to be received\r\n\t\t\t\t\t\treturn whenAll(results, function(inputs) {\r\n\t\t\t\t\t\t\tif (observeArguments) {\r\n\t\t\t\t\t\t\t\tvar handles = []\r\n\t\t\t\t\t\t\t\tfor (var i = 0, l = inputs.length; i < l; i++) {\r\n\t\t\t\t\t\t\t\t\tvar input = inputs[i]\r\n\t\t\t\t\t\t\t\t\tif (input && typeof input === 'object') {\r\n\t\t\t\t\t\t\t\t\t\thandles.push(observe(input))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tvar instance = inputs.pop()\r\n\t\t\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\t\t\tvar result = functionValue.apply(instance || variable, inputs, context)\r\n\t\t\t\t\t\t\t\t}finally{\r\n\t\t\t\t\t\t\t\t\twhen(result, function() {\r\n\t\t\t\t\t\t\t\t\t\tfor (var i = 0; i < l; i++) {\r\n\t\t\t\t\t\t\t\t\t\t\thandles[i].done()\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn result\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar instance = inputs.pop()\r\n\t\t\t\t\t\t\treturn functionValue.apply(instance || variable, inputs, context)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tsetReverse: function(reverse) {\r\n\t\t\t\tthis.transform.valueOf().reverse = reverse\r\n\t\t\t\treturn this\r\n\t\t\t},\r\n\t\t\tgetCollectionOf: function() {\r\n\t\t\t\treturn this.returnedVariable && this.returnedVariable.getCollectionOf()\r\n\t\t\t}\r\n\t\t})\r\n\t\tVariable.Call = Call\r\n\t\r\n\t\tvar ContextualizedVariable = lang.compose(Variable, function ContextualizedVariable(generic, subject) {\r\n\t\t\tthis.generic = generic\r\n\t\t\tthis.subject = subject\r\n\t\t}, {\r\n\t\t\tvalueOf: function() {\r\n\t\t\t\t// TODO: Lookup Context type for all of these using registry or something\r\n\t\t\t\tvar subject = this.subject\r\n\t\t\t\treturn this.generic.valueOf(subject.getContextualized ? subject : new Context(subject))\r\n\t\t\t},\r\n\t\r\n\t\t\tforDependencies: function(callback) {\r\n\t\t\t\tthis.inputs && this.inputs.forEach(callback)\r\n\t\t\t},\r\n\t\r\n\t\t\tgetVersion: function() {\r\n\t\t\t\tvar version = Variable.prototype.getVersion.call(this)\r\n\t\t\t\tvar inputs = this.inputs || 0\r\n\t\t\t\tfor (var i = 0, l = inputs.length; i < l; i++) {\r\n\t\t\t\t\tvar input = inputs[i]\r\n\t\t\t\t\tif (input.getVersion) {\r\n\t\t\t\t\t\tversion = Math.max(version, input.getVersion())\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn version\r\n\t\t\t},\r\n\t\r\n\t\t\tput: function(value) {\r\n\t\t\t\tvar subject = this.subject\r\n\t\t\t\treturn this.generic.put(value, subject.getContextualized ? subject : new Context(subject))\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\tvar IterativeMethod = lang.compose(Composite, function(source, method, args) {\r\n\t\t\tthis.source = source\r\n\t\t\t// source.interestWithin = true\r\n\t\t\tthis.method = method\r\n\t\t\tthis.arguments = args\r\n\t\t}, {\r\n\t\t\tcomputeValue: function(context) {\r\n\t\t\t\tvar method = this.method\r\n\t\t\t\tvar args = this.arguments\r\n\t\t\t\tvar variable = this\r\n\t\t\t\tif (context) {\r\n\t\t\t\t\tcontext.nextProperty = 'source'\r\n\t\t\t\t}\r\n\t\t\t\tvar collectionOf = this.collectionOf\r\n\t\t\t\treturn when(this.source.valueOf(context), function(array) {\r\n\t\t\t\t\tif (array && array.forEach) {\r\n\t\t\t\t\t\tif (context && context.notify) {\r\n\t\t\t\t\t\t\tvar contextualizedVariable\r\n\t\t\t\t\t\t\tif (context.distinctSubject) {\r\n\t\t\t\t\t\t\t\tvar contextMap = variable._contextMap || (variable._contextMap = new WeakMap())\r\n\t\t\t\t\t\t\t\tif (contextMap.has(context.distinctSubject)) {\r\n\t\t\t\t\t\t\t\t\tcontextualizedVariable = contextMap.get(context.distinctSubject)\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tcontextMap.set(context.distinctSubject, contextualizedVariable = Object.create(variable))\r\n\t\t\t\t\t\t\t\t\tcontextualizedVariable.listeners = false\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tcontextualizedVariable = variable\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvariable.notifies(contextualizedVariable)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (collectionOf) {\r\n\t\t\t\t\t\t\tarray = array.map(function(item) {\r\n\t\t\t\t\t\t\t\treturn collection.from(item)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (method === 'map'){\r\n\t\t\t\t\t\t\t// fast path, and special behavior for map\r\n\t\t\t\t\t\t\treturn args[0](array)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// if not an array convert to an array\r\n\t\t\t\t\t\tarray = [array]\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (typeof method === 'string') {\r\n\t\t\t\t\t\t// apply method\r\n\t\t\t\t\t\treturn array[method].apply(array, args)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn method(array, args)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\t// TODO: Create specialized updated handlers for faster recomputation of other array derivatives\r\n\t\t\tforDependencies: function(callback) {\r\n\t\t\t\t// depend on the args\r\n\t\t\t\tComposite.prototype.forDependencies.call(this, callback)\r\n\t\t\t\tcallback(this.source)\r\n\t\t\t},\r\n\t\t\tgetVersion: function(context) {\r\n\t\t\t\treturn Math.max(Composite.prototype.getVersion.call(this, context), this.source.getVersion(context))\r\n\t\t\t},\r\n\t\t\tgetCollectionOf: function(){\r\n\t\t\t\treturn this.source.getCollectionOf()\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\tfunction defineArrayMethod(method, constructor, properties) {\r\n\t\t\tvar IterativeResults = lang.compose(IterativeMethod, constructor, properties)\r\n\t\t\tIterativeResults.prototype.method || (IterativeResults.prototype.method = method)\r\n\t\t\tObject.defineProperty(IterativeResults.prototype, 'isIterable', {value: true});\r\n\t\t\tVariable.prototype[method] = function() {\r\n\t\t\t\tvar results = new IterativeResults()\r\n\t\t\t\tresults.source = this\r\n\t\t\t\tresults.arguments = arguments\r\n\t\t\t\treturn results\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tdefineArrayMethod('filter', function Filtered() {}, {\r\n\t\t\tupdated: function(event, by, context) {\r\n\t\t\t\tif (!event || event.modifier === this || (event.modifier && event.modifier.constructor === this)) {\r\n\t\t\t\t\treturn Composite.prototype.updated.call(this, event, by, context)\r\n\t\t\t\t}\r\n\t\t\t\tvar contextualizedVariable = context ? context.getContextualized(this) : this\r\n\t\t\t\tif (event.type === 'delete') {\r\n\t\t\t\t\tvar index = contextualizedVariable.cachedValue.indexOf(event.oldValue)\r\n\t\t\t\t\tif (index > -1) {\r\n\t\t\t\t\t\tcontextualizedVariable.splice(index, 1)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (event.type === 'add') {\r\n\t\t\t\t\tif ([event.value].filter(this.arguments[0]).length > 0) {\r\n\t\t\t\t\t\tcontextualizedVariable.push(event.value)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (event.type === 'update') {\r\n\t\t\t\t\tvar object = event.parent.valueOf(context)\r\n\t\t\t\t\tvar index = contextualizedVariable.cachedValue.indexOf(object)\r\n\t\t\t\t\tvar matches = [object].filter(this.arguments[0]).length > 0\r\n\t\t\t\t\tif (index > -1) {\r\n\t\t\t\t\t\tif (matches) {\r\n\t\t\t\t\t\t\treturn new PropertyChangeEvent(index, event, contextualizedVariable.cachedValue,\r\n\t\t\t\t\t\t\t\t// might need to do something with this\r\n\t\t\t\t\t\t\t\tobject)\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcontextualizedVariable.splice(index, 1)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\telse {\r\n\t\t\t\t\t\tif (matches) {\r\n\t\t\t\t\t\t\tcontextualizedVariable.push(object)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// else nothing mactches\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn Composite.prototype.updated.call(this, event, by, context)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\tdefineArrayMethod('map', function Mapped() {}, {\r\n\t\t\tupdated: function(event, by, context) {\r\n\t\t\t\tif (!event || event.modifier === this || (event.modifier && event.modifier.constructor === this)) {\r\n\t\t\t\t\treturn Composite.prototype.updated.call(this, event, by, context)\r\n\t\t\t\t}\r\n\t\t\t\tvar contextualizedVariable = context ? context.getContextualized(this) : this\r\n\t\t\t\tif (event.type === 'delete') {\r\n\t\t\t\t\tcontextualizedVariable.splice(event.previousIndex, 1)\r\n\t\t\t\t} else if (event.type === 'add') {\r\n\t\t\t\t\tcontextualizedVariable.push(this.arguments[0].call(this.arguments[1], event.value))\r\n\t\t\t\t} else if (event.type === 'update') {\r\n\t\t\t\t\tvar object = event.parent.valueOf(context)\r\n\t\t\t\t\tvar array = contextualizedVariable.cachedValue\r\n\t\t\t\t\tif (array && array.map) {\r\n\t\t\t\t\t\tvar index = array.indexOf(object)\r\n\t\t\t\t\t\tcontextualizedVariable.splice(index, 1, this.arguments[0].call(this.arguments[1], event.value))\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn Composite.prototype.updated.call(this, event, by, context)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn Composite.prototype.updated.call(this, event, by, context)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\tdefineArrayMethod('reduce', function Reduced() {})\r\n\t\tdefineArrayMethod('reduceRight', function Reduced() {})\r\n\t\tdefineArrayMethod('some', function Aggregated() {})\r\n\t\tdefineArrayMethod('every', function Aggregated() {})\r\n\t\tdefineArrayMethod('slice', function Aggregated() {})\r\n\t\tdefineArrayMethod('keyBy', function UniqueIndex(source, args) {}, {\r\n\t\t\tproperty: VMap.prototype.property,\r\n\t\t\tmethod: function(array, args) {\r\n\t\t\t\tvar index = new Map()\r\n\t\t\t\tvar keyGenerator = args[0]\r\n\t\t\t\tvar valueGenerator = args[1]\r\n\t\t\t\tvar hasKeyFunction = typeof keyGenerator === 'function'\r\n\t\t\t\tvar hasValueFunction = typeof valueGenerator === 'function'\r\n\t\t\t\tvar hasKey = !!keyGenerator\r\n\t\t\t\tfor (var i = 0, l = array.length; i < l; i++) {\r\n\t\t\t\t\tvar element = array[i]\r\n\t\t\t\t\tindex.set(\r\n\t\t\t\t\t\thasKeyFunction ? keyGenerator(element, emit) :\r\n\t\t\t\t\t\t\thasKey ? element[keyGenerator] : element,\r\n\t\t\t\t\t\thasValueFunction ? valueGenerator(element) : element)\r\n\t\t\t\t}\r\n\t\t\t\tfunction emit(key, value) {\r\n\t\t\t\t\tindex.set(key, value)\r\n\t\t\t\t}\r\n\t\t\t\treturn index\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\tdefineArrayMethod('groupBy', function UniqueIndex(source, args) {}, {\r\n\t\t\tproperty: VMap.prototype.property,\r\n\t\t\tmethod: function(array, args) {\r\n\t\t\t\tvar index = new Map()\r\n\t\t\t\tvar keyGenerator = args[0]\r\n\t\t\t\tvar valueGenerator = args[1]\r\n\t\t\t\tvar hasKeyFunction = typeof keyGenerator === 'function'\r\n\t\t\t\tvar hasValueFunction = typeof valueGenerator === 'function'\r\n\t\t\t\tvar hasKey = !!keyGenerator\r\n\t\t\t\tfor (var i = 0, l = array.length; i < l; i++) {\r\n\t\t\t\t\tvar element = array[i]\r\n\t\t\t\t\tvar key = hasKeyFunction ? keyGenerator(element) :\r\n\t\t\t\t\t\t\thasKey ? element[keyGenerator] : element\r\n\t\t\t\t\tvar group = index.get(key)\r\n\t\t\t\t\tif (!group) {\r\n\t\t\t\t\t\tindex.set(key, group = [])\r\n\t\t\t\t\t}\r\n\t\t\t\t\tgroup.push(hasValueFunction ? valueGenerator(element) : element)\r\n\t\t\t\t}\r\n\t\t\t\tfunction emit(key, value) {\r\n\t\t\t\t\tvar group = index.get(key)\r\n\t\t\t\t\tif (!group) {\r\n\t\t\t\t\t\tindex.set(key, group = [])\r\n\t\t\t\t\t}\r\n\t\t\t\t\tgroup.push(value)\r\n\t\t\t\t}\r\n\t\t\t\treturn index\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\r\n\t\tvar getValue\r\n\t\tvar GeneratorVariable = Variable.GeneratorVariable = lang.compose(Variable.Composite, function ReactiveGenerator(generator){\r\n\t\t\tthis.generator = generator\r\n\t\t}, {\r\n\t\t\tcomputeValue: getValue = function(context, resuming) {\r\n\t\t\t\tvar lastValue\r\n\t\t\t\tvar i\r\n\t\t\t\tvar generatorIterator\r\n\t\t\t\tvar isThrowing\r\n\t\t\t\tif (resuming) {\r\n\t\t\t\t\t// resuming from a promise\r\n\t\t\t\t\tgeneratorIterator = resuming.iterator\r\n\t\t\t\t\ti = resuming.i\r\n\t\t\t\t\tlastValue = resuming.value\r\n\t\t\t\t\tisThrowing = resuming.isThrowing\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// a fresh start\r\n\t\t\t\t\ti = 0\r\n\t\t\t\t\tgeneratorIterator = this.generator()\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tdo {\r\n\t\t\t\t\tvar stepReturn = generatorIterator[isThrowing ? 'throw' : 'next'](lastValue)\r\n\t\t\t\t\tif (stepReturn.done) {\r\n\t\t\t\t\t\treturn stepReturn.value\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar nextVariable = stepReturn.value\r\n\t\t\t\t\t// compare with the arguments from the last\r\n\t\t\t\t\t// execution to see if they are the same\r\n\t\t\t\t\tvar argumentName = i > 0 ? 'input' + i : 'input'\r\n\t\t\t\t\tif (this[argumentName] !== nextVariable) {\r\n\t\t\t\t\t\tif (this[argumentName]) {\r\n\t\t\t\t\t\t\tthis[argumentName].stopNotifies(this)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// subscribe if it is a variable\r\n\t\t\t\t\t\tif (nextVariable && nextVariable.notifies) {\r\n\t\t\t\t\t\t\tif (this.listeners) {\r\n\t\t\t\t\t\t\t\tnextVariable.notifies(this)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tthis[argumentName] = nextVariable\r\n\t\t\t\t\t\t} else if (typeof nextVariable === 'function' && isGenerator(nextVariable)) {\r\n\t\t\t\t\t\t\tvar delegatedGenerator\r\n\t\t\t\t\t\t\tgetValue.call(this, context, delegatedGenerator = {\r\n\t\t\t\t\t\t\t\ti: i,\r\n\t\t\t\t\t\t\t\titerator: nextVariable()\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\ti = delegatedGenerator.i\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis[argumentName] = null\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\ti++\r\n\t\t\t\t\tif (resuming) {\r\n\t\t\t\t\t\tresuming.i = i\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (context) {\r\n\t\t\t\t\t\tcontext.nextProperty = argumentName\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlastValue = nextVariable && nextVariable.valueOf(context)\r\n\t\t\t\t\tif (lastValue && lastValue.then) {\r\n\t\t\t\t\t\t// if it is a promise, we will wait on it\r\n\t\t\t\t\t\tvar variable = this\r\n\t\t\t\t\t\t// and return the promise so that the getValue caller can wait on this\r\n\t\t\t\t\t\treturn lastValue.then(function(value) {\r\n\t\t\t\t\t\t\treturn getValue.call(variable, context, {\r\n\t\t\t\t\t\t\t\ti: i,\r\n\t\t\t\t\t\t\t\titerator: generatorIterator,\r\n\t\t\t\t\t\t\t\tvalue: value\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}, function(error) {\r\n\t\t\t\t\t\t\treturn getValue.call(variable, context, {\r\n\t\t\t\t\t\t\t\ti: i,\r\n\t\t\t\t\t\t\t\titerator: generatorIterator,\r\n\t\t\t\t\t\t\t\tvalue: error,\r\n\t\t\t\t\t\t\t\tisThrowing: true\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t} while(true)\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\tvar Validating = lang.compose(Caching, function(target) {\r\n\t\t\tthis.target = target\r\n\t\t}, {\r\n\t\t\tforDependencies: function(callback) {\r\n\t\t\t\tCaching.prototype.forDependencies.call(this, callback)\r\n\t\t\t\tcallback(this.target)\r\n\t\t\t},\r\n\t\t\tgetVersion: function(context) {\r\n\t\t\t\treturn Math.max(Variable.prototype.getVersion.call(this, context), this.target.getVersion(context))\r\n\t\t\t},\r\n\t\t\tcomputeValue: function(context) {\r\n\t\t\t\tvar target = this.target\r\n\t\t\t\t// need to actually access the target value, so it can be evaluated in case it\r\n\t\t\t\t// there is a returned variable that we should delegate to.\r\n\t\t\t\ttarget.valueOf(context)\r\n\t\t\t\treturn target.validate(target, target.schema)\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\tVariable.VArray = Variable\r\n\t\tVariable.VPromised = Variable\r\n\t\tVariable.deny = deny\r\n\t\tVariable.noChange = noChange\r\n\t\tfunction addFlag(name) {\r\n\t\t\tVariable[name] = function(functionValue) {\r\n\t\t\t\tfunctionValue[name] = true\r\n\t\t\t}\r\n\t\t}\r\n\t\taddFlag(Variable, 'handlesContext')\r\n\t\taddFlag(Variable, 'handlesPromises')\r\n\t\r\n\t\tfunction objectUpdated(object) {\r\n\t\t\t// simply notifies any subscribers to an object, that it has changed\r\n\t\t\tvar listeners = propertyListenersMap.get(object)\r\n\t\t\tif (listeners) {\r\n\t\t\t\tfor (var i = 0, l = listeners.length; i < l; i++) {\r\n\t\t\t\t\tlisteners[i]._propertyChange(null, object)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction all(array, transform) {\r\n\t\t\t// This is intended to mirror Promise.all. It actually takes\r\n\t\t\t// an iterable, but for now we are just looking for array-like\r\n\t\t\tif (array.length > -1) {\r\n\t\t\t\treturn typeof transform === 'function' ? new Call(transform, array) : new Composite(array)\r\n\t\t\t}\r\n\t\t\tif (arguments.length > 1) {\r\n\t\t\t\t// support multiple arguments as an array\r\n\t\t\t\treturn new Composite(arguments)\r\n\t\t\t}\r\n\t\t\tif (typeof array === 'object') {\r\n\t\t\t\t// allow an object as a hash to be mapped\r\n\t\t\t\tvar keyMapping = []\r\n\t\t\t\tvar valueArray = []\r\n\t\t\t\tfor (var key in array) {\r\n\t\t\t\t\tkeyMapping.push(key)\r\n\t\t\t\t\tvalueArray.push(array[key])\r\n\t\t\t\t}\r\n\t\t\t\treturn new Variable(function(results) {\r\n\t\t\t\t\tvar resultObject = {}\r\n\t\t\t\t\tfor (var i = 0; i < results.length; i++) {\r\n\t\t\t\t\t\tresultObject[keyMapping[i]] = results[i]\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn resultObject\r\n\t\t\t\t}).apply(null, valueArray)\r\n\t\t\t}\r\n\t\t\tthrow new TypeError('Variable.all requires an array')\r\n\t\t}\r\n\t\r\n\t\tfunction hasOwn(Target, createForInstance) {\r\n\t\r\n\t\t\tvar ownedClasses = this.ownedClasses || (this.ownedClasses = new WeakMap())\r\n\t\t\t// TODO: assign to super classes\r\n\t\t\tvar Class = this\r\n\t\t\townedClasses.set(Target, createForInstance || function() { return new Target() })\r\n\t\t\treturn this\r\n\t\t}\r\n\t\tfunction generalizeClass() {\r\n\t\t\tvar prototype = this.prototype\r\n\t\t\tvar prototypeNames = Object.getOwnPropertyNames(prototype)\r\n\t\t\tfor(var i = 0, l = prototypeNames.length; i < l; i++) {\r\n\t\t\t\tvar name = prototypeNames[i]\r\n\t\t\t\tObject.defineProperty(this, name, getGeneralizedDescriptor(Object.getOwnPropertyDescriptor(prototype, name), name, this))\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction getGeneralizedDescriptor(descriptor, name, Class) {\r\n\t\t\tif (typeof descriptor.value === 'function') {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: generalizeMethod(Class, name)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn descriptor\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction generalizeMethod(Class, name) {\r\n\t\t\t// I think we can just rely on `this`, but we could use the argument:\r\n\t\t\t// function(possibleEvent) {\r\n\t\t\t// \tvar target = possibleEvent && possibleEvent.target\r\n\t\t\tvar method = Class[name] = function() {\r\n\t\t\t\tvar instance = Class.for(this)\r\n\t\t\t\treturn instance[name].apply(instance, arguments)\r\n\t\t\t}\r\n\t\t\tmethod.for = function(context) {\r\n\t\t\t\tvar instance = Class.for(context)\r\n\t\t\t\treturn function() {\r\n\t\t\t\t\treturn instance[name].apply(instance, arguments)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn method\r\n\t\t}\r\n\t\r\n\t\tvar defaultContext = {\r\n\t\t\tname: 'Default context',\r\n\t\t\tdescription: 'This object is the default context for classes, corresponding to a singleton instance of that class',\r\n\t\t\tconstructor: {\r\n\t\t\t\tgetForClass: function(subject, Class) {\r\n\t\t\t\t\treturn Class.defaultInstance\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcontains: function() {\r\n\t\t\t\treturn true // contains everything\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction instanceForContext(Class, context) {\r\n\t\t\tif (!context) {\r\n\t\t\t\treturn Class.defaultInstance\r\n\t\t\t}\r\n\t\t\treturn context.specify(Class)\r\n\t//\t\tvar instance = context.subject.constructor.getForClass && context.subject.constructor.getForClass(context.subject, Class) || Class.defaultInstance\r\n\t//\t\tcontext.distinctSubject = mergeSubject(context.distinctSubject, instance.subject)\r\n\t//\t\treturn instance\r\n\t\t}\r\n\t\t// a variable inheritance change goes through its own prototype, so classes/constructor\r\n\t\t// can be used as variables as well\r\n\t\tfor (var key in VariablePrototype) {\r\n\t\t\tObject.defineProperty(Variable, key, Object.getOwnPropertyDescriptor(VariablePrototype, key))\r\n\t\t}\r\n\t\tVariable.valueOf = function(context) {\r\n\t\t\t// contextualized valueOf\r\n\t\t\treturn instanceForContext(this, context).valueOf(context)\r\n\t\t}\r\n\t\tVariable.getValue = function(context) {\r\n\t\t\t// contextualized getValue\r\n\t\t\treturn instanceForContext(this, context)\r\n\t\t}\r\n\t\tVariable.put = function(value, context) {\r\n\t\t\t// contextualized setValue\r\n\t\t\treturn instanceForContext(this, context).put(value, context)\r\n\t\t}\r\n\t\tVariable.for = function(subject) {\r\n\t\t\tif (subject != null) {\r\n\t\t\t\tif (subject.target && !subject.constructor.getForClass) {\r\n\t\t\t\t\t// makes HTML events work\r\n\t\t\t\t\tsubject = subject.target\r\n\t\t\t\t}\r\n\t\t\t\tvar instance\r\n\t\t\t\tinstance = new Context(subject).specify(this)\r\n\t\t\t\tif (instance && !instance.subject) {\r\n\t\t\t\t\tinstance.subject = subject\r\n\t\t\t\t}\r\n\t\t\t\t// TODO: Do we have a global context that we set on defaultInstance?\r\n\t\t\t\treturn instance || this.defaultInstance\r\n\t\t\t} else {\r\n\t\t\t\treturn this.defaultInstance\r\n\t\t\t}\r\n\t\t}\r\n\t\tVariable.from = function(value) {\r\n\t\t\tif (value && typeof value === 'object') {\r\n\t\t\t\t// a plain object, we use our own map to retrieve the instance (or create one)\r\n\t\t\t\tvar instanceMap = this.instanceMap || (this.instanceMap = new WeakMap())\r\n\t\t\t\tvar instance = instanceMap.get(value)\r\n\t\t\t\tif (!instance) {\r\n\t\t\t\t\tinstanceMap.set(value, instance = new this(value))\r\n\t\t\t\t}\r\n\t\t\t\treturn instance\r\n\t\t\t} else {\r\n\t\t\t\t// a primitive, just unconditionally create a new variable for it\r\n\t\t\t\treturn new this(value)\r\n\t\t\t}\r\n\t\t}\r\n\t\tVariable.notifies = function(target) {\r\n\t\t\tthis.defaultInstance.notifies(target)\r\n\t\t}\r\n\t\tVariable.stopNotifies = function(target) {\r\n\t\t\tthis.defaultInstance.stopNotifies(target)\r\n\t\t}\r\n\t\tVariable.getCollectionOf = function () {\r\n\t\t\treturn this.collectionOf\r\n\t\t}\r\n\t\tVariable.updated = function(updateEvent, by, context) {\r\n\t\t\treturn instanceForContext(this, context).updated(updateEvent, by, context)\r\n\t\t}\r\n\t\tvar proxyHandler = {\r\n\t\t\tget: function(target, name) {\r\n\t\t\t\tvar value = target[name]\r\n\t\t\t\treturn value === undefined ? target.property(name) : value\r\n\t\t\t},\r\n\t\t\tset: function(target, name, value) {\r\n\t\t\t\tvar oldValue = target[name]\r\n\t\t\t\tif (oldValue && oldValue.put) {\r\n\t\t\t\t\t// own property available to put into\r\n\t\t\t\t\toldValue.put(value)\r\n\t\t\t\t} else {\r\n\t\t\t\t\ttarget.set(name, value)\r\n\t\t\t\t}\r\n\t\t\t\treturn true\r\n\t\t\t},\r\n\t\t\thas: function(target, name) {\r\n\t\t\t\treturn (name in target) || (name in target.valueOf())\r\n\t\t\t},\r\n\t\t\tdeleteProperty: function(target, name) {\r\n\t\t\t\treturn proxyHandler.set(target, name, undefined)\r\n\t\t\t},\r\n\t\t\townKeys: function(target) {\r\n\t\t\t\treturn Object.getOwnPropertyNames(target.valueOf())\r\n\t\t\t}\r\n\t\t}\r\n\t\tVariable.proxy = function(source) {\r\n\t\t\t// should we memoize?\r\n\t\t\treturn new Proxy(source instanceof this ? source : this.from(source), proxyHandler)\r\n\t\t}\r\n\t\tObject.defineProperty(Variable, 'collectionOf', {\r\n\t\t\tget: function() {\r\n\t\t\t\treturn this._collectionOf\r\n\t\t\t},\r\n\t\t\tset: function(ItemClass) {\r\n\t\t\t\tif (this._collectionOf != ItemClass) {\r\n\t\t\t\t\tthis._collectionOf = ItemClass\r\n\t\t\t\t\tItemClass.collection = this\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\tObject.defineProperty(Variable, 'collection', {\r\n\t\t\tget: function() {\r\n\t\t\t\treturn this._collection\r\n\t\t\t},\r\n\t\t\tset: function(Collection) {\r\n\t\t\t\tif (this._collection != Collection) {\r\n\t\t\t\t\tthis._collection = Collection\r\n\t\t\t\t\tCollection.collectionOf = this\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\tVariable.Context = Context\r\n\t\tVariable.NotifyingContext = NotifyingContext\r\n\t\tVariable.generalize = generalizeClass\r\n\t\tVariable.call = Function.prototype.call // restore these\r\n\t\tVariable.apply = Function.prototype.apply\r\n\t\tVariable.with = function(properties) {\r\n\t\t\t// TODO: handle arguments\r\n\t\t\tvar Base = this\r\n\t\t\tvar ExtendedVariable, prototype\r\n\t\t\tif (Object.getOwnPropertyDescriptor(this, 'prototype').writable === false) {\r\n\t\t\t\t// extending native class\r\n\t\t\t\tExtendedVariable = lang.extendClass(this)\r\n\t\t\t\tprototype = ExtendedVariable.prototype\r\n\t\t\t} else {\r\n\t\t\t\t// extending function/constructor\r\n\t\t\t\tExtendedVariable = function() {\r\n\t\t\t\t\tif (this instanceof ExtendedVariable) {\r\n\t\t\t\t\t\tBase.apply(this, arguments)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn ExtendedVariable.with(properties)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tprototype = ExtendedVariable.prototype = Object.create(this.prototype)\r\n\t\t\t\tExtendedVariable.prototype.constructor = ExtendedVariable\r\n\t\t\t\tsetPrototypeOf(ExtendedVariable, this)\r\n\t\t\t}\r\n\t\t\tfor (var key in properties) {\r\n\t\t\t\tvar descriptor = Object.getOwnPropertyDescriptor(properties, key)\r\n\t\t\t\tvar value = descriptor.value\r\n\t\t\t\tif (typeof value === 'function') {\r\n\t\t\t\t\tif (value.notifies) {\r\n\t\t\t\t\t\t// variable class\r\n\t\t\t\t\t\tdescriptor = (function(key, Class) {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\tget: function() {\r\n\t\t\t\t\t\t\t\t\tvar property = (this._properties || (this._properties = {}))[key]\r\n\t\t\t\t\t\t\t\t\tif (!property) {\r\n\t\t\t\t\t\t\t\t\t\tthis._properties[key] = property = new Class()\r\n\t\t\t\t\t\t\t\t\t\tproperty.key = key\r\n\t\t\t\t\t\t\t\t\t\tproperty.parent = this\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\treturn property\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tset: function(value) {\r\n\t\t\t\t\t\t\t\t\tthis[key]._changeValue(null, RequestSet, value)\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t\tenumerable: true\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})(key, value)\r\n\t\t\t\t\t} else if (isGenerator(value)) {\r\n\t\t\t\t\t\tdescriptor = getGeneratorDescriptor(value)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tvalue = generalizeMethod(value, key)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tObject.defineProperty(prototype, key, descriptor)\r\n\t\t\t\tif (value !== undefined) {\r\n\t\t\t\t\t// TODO: If there is a getter/setter here, use defineProperty\r\n\t\t\t\t\tExtendedVariable[key] = value\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// getter/setter\r\n\t\t\t\t\tObject.defineProperty(ExtendedVariable, key, descriptor)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (properties && properties.hasOwn) {\r\n\t\t\t\thasOwn.call(ExtendedVariable, properties.hasOwn)\r\n\t\t\t}\r\n\t\t\treturn ExtendedVariable\r\n\t\t}\r\n\t\tObject.defineProperty(Variable, 'defaultInstance', {\r\n\t\t\tget: function() {\r\n\t\t\t\treturn this.hasOwnProperty('_defaultInstance') ?\r\n\t\t\t\t\tthis._defaultInstance : (\r\n\t\t\t\t\t\tthis._defaultInstance = new this(),\r\n\t\t\t\t\t\tthis._defaultInstance.subject = defaultContext,\r\n\t\t\t\t\t\tthis._defaultInstance)\r\n\t\t\t}\r\n\t\t})\r\n\t\tVariable.hasOwn = function(Target, createInstance) {\r\n\t\t\tvar instanceMap = new WeakMap()\r\n\t\t\tinstanceMap.createInstance = createInstance\r\n\t\t\tvar subjectMap = this.ownedClasses || (this.ownedClasses = new WeakMap())\r\n\t\t\tsubjectMap.set(Target, instanceMap)\r\n\t\t}\r\n\t\r\n\t\tvar getGeneratorDescriptor = Variable.getGeneratorDescriptor = function(value) {\r\n\t\t\tvar variables\r\n\t\t\treturn {\r\n\t\t\t\tget: function() {\r\n\t\t\t\t\tif (!variables) {\r\n\t\t\t\t\t\t variables = new WeakMap()\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar variable = variables.get(this)\r\n\t\t\t\t\tif (!variable) {\r\n\t\t\t\t\t\tvariables.set(this, variable = new Variable.GeneratorVariable(value.bind(this)))\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn variable\r\n\t\t\t\t},\r\n\t\t\t\tenumerable: true\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tVariable.all = all\r\n\t\tVariable.objectUpdated = objectUpdated\r\n\t\r\n\t\treturn Variable\r\n\t}))\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) { if (true) {\r\n\t  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2), __webpack_require__(6), __webpack_require__(4)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) } else if (typeof module === 'object' && module.exports) {        \r\n\t  module.exports = factory(require('./util/lang'), require('./operators'), require('./Variable')) // Node\r\n\t}}(this, function (lang, operators, Variable) {\r\n\t\r\n\t  var isGenerator = lang.isGenerator\r\n\t  var ObjectTransform = lang.compose(Variable.Call, function ObjectTransform(transform, inputs) {\r\n\t    this.inputs = inputs\r\n\t    Variable.Call.apply(this, arguments)\r\n\t  }, {\r\n\t    _getAsObject: function() {\r\n\t      return this.transform.apply(this, preserveObjects(this.inputs))\r\n\t    }\r\n\t  })\r\n\t  function preserveObjects(inputs) {\r\n\t    for (var i = 0, l = inputs.length; i < l; i++) {\r\n\t      var input = inputs[i]\r\n\t      if (input && input._getAsObject) {\r\n\t        inputs[i] = input._getAsObject()\r\n\t      }\r\n\t    }\r\n\t    return inputs\r\n\t  }\r\n\t\tfunction react(generator, options) {\r\n\t    if (typeof generator !== 'function') {\r\n\t      throw new Error('react() must be called with a generator. You need to use the babel-plugin-transform-alkali plugin if you want to use reactive expressions')\r\n\t    }\r\n\t\t\tif (options && options.reverse) {\r\n\t\t\t\tgenerator.reverse = options.reverse\r\n\t\t\t}\r\n\t\t\treturn new Variable.GeneratorVariable(generator)\r\n\t\t}\r\n\t  Object.assign(react, operators)\r\n\t  react.from = function(value, options) {\r\n\t    if (value && value.property) {\r\n\t      return value\r\n\t    }\r\n\t    if (typeof value === 'function' && isGenerator(value)) {\r\n\t      return react(value, options)\r\n\t    }\r\n\t    return Variable.from(value)\r\n\t  }\r\n\t  react.prop = function(object, property) {\r\n\t    if (object) {\r\n\t      // TODO: Use a static set of public methods/properties that can be accessed\r\n\t      if (object.property) {\r\n\t        // it is a variable already, but check to see if we are using a method/property directly on the variable\r\n\t        var directPropertyValue = object[property]\r\n\t        return directPropertyValue !== undefined ? directPropertyValue : object.property(property)\r\n\t      }\r\n\t      return object[property]\r\n\t    }\r\n\t    // not even truthy, return undefined\r\n\t  }\r\n\t  react.cond = function(test, consequent, alternate) {\r\n\t    return operators.if(test, operators.choose(consequent, alternate))\r\n\t  }\r\n\t  react.fcall = function(target, args) {\r\n\t    if (target.property && typeof target === 'function') {\r\n\t      return target.apply(null, preserveObjects(args))\r\n\t    }\r\n\t    return new Variable.Call(target, args)\r\n\t  }\r\n\t  react.mcall = function(target, key, args) {\r\n\t    var method = target[key]\r\n\t    if (typeof method === 'function' && method.property || key === 'bind') {\r\n\t      // for now we check to see if looks like it could handle a variable, or is a bind call\r\n\t      return method.apply(target, preserveObjects(args))\r\n\t    }\r\n\t    return new Variable.Call(target[key].bind(target), args)\r\n\t  }\r\n\t  react.ncall = function(target, args) {\r\n\t    if (target.property && typeof target === 'function') {\r\n\t      return new (target.bind.apply(target, [null].concat(preserveObjects(args))))()\r\n\t    }\r\n\t    return new Variable.Call(function() {\r\n\t      return new (target.bind.apply(target, [null].concat(arguments)))()\r\n\t    }, args)\r\n\t  }\r\n\t\r\n\t  react.obj = function(transform, inputs) {\r\n\t    return new ObjectTransform(transform, inputs)\r\n\t  }\r\n\t\r\n\t\treturn react\r\n\t}))\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) { if (true) {\r\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(4)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) } else if (typeof module === 'object' && module.exports) {        \r\n\t  module.exports = factory(require('./Variable')) // Node\r\n\t}}(this, function (Variable) {\r\n\t\r\n\t\tvar deny = Variable.deny;\r\n\t\tvar operatingFunctions = {};\r\n\t\tvar operators = {};\r\n\t\tfunction getOperatingFunction(expression){\r\n\t\t\t// jshint evil: true\r\n\t\t\treturn operatingFunctions[expression] ||\r\n\t\t\t\t(operatingFunctions[expression] =\r\n\t\t\t\t\tnew Function('a', 'b', 'deny', 'return ' + expression));\r\n\t\t}\r\n\t\tfunction operator(operator, name, precedence, forward, reverseA, reverseB){\r\n\t\t\t// defines the standard operators\r\n\t\t\tvar reverse = function(output, inputs){\r\n\t\t\t\tvar a = inputs[0],\r\n\t\t\t\t\tb = inputs[1];\r\n\t\t\t\tif(a && a.put){\r\n\t\t\t\t\tvar result = reverseA(output, b && b.valueOf());\r\n\t\t\t\t\tif(result !== deny){\r\n\t\t\t\t\t\ta.put(result);\r\n\t\t\t\t\t}\r\n\t\t\t\t}else if(b && b.put){\r\n\t\t\t\t\tb.put(reverseB(output, a && a.valueOf()));\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn deny;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\t// define a function that can lazily ensure the operating function\r\n\t\t\t// is available\r\n\t\t\tvar operatorHandler = {\r\n\t\t\t\tapply: function(instance, args){\r\n\t\t\t\t\tforward = getOperatingFunction(forward);\r\n\t\t\t\t\treverseA = reverseA && getOperatingFunction(reverseA);\r\n\t\t\t\t\treverseB = reverseB && getOperatingFunction(reverseB);\r\n\t\t\t\t\tforward.reverse = reverse;\r\n\t\t\t\t\toperators[operator] = operatorHandler = new Variable(forward);\r\n\t\r\n\t\t\t\t\taddFlags(operatorHandler);\r\n\t\t\t\t\targs = Array.prototype.slice.call(args);\r\n\t\t\t\t\targs.push(deny)\r\n\t\t\t\t\treturn operatorHandler.apply(instance, args);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tfunction addFlags(operatorHandler){\r\n\t\t\t\toperatorHandler.precedence = precedence;\r\n\t\t\t\toperatorHandler.infix = reverseB !== false;\r\n\t\t\t}\r\n\t\t\taddFlags(operatorHandler);\r\n\t\t\toperators[operator] = operatorHandler;\r\n\t\t\toperators[name] = function() {\r\n\t\t\t\treturn operatorHandler.apply(null, arguments)\r\n\t\t\t}\r\n\t\t}\r\n\t\t// using order precedence from:\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\r\n\t\toperator('+', 'add', 6, 'a+b', 'a-b', 'a-b');\r\n\t\toperator('-', 'subtract', 6, 'a-b', 'a+b', 'b-a');\r\n\t\toperator('*', 'multiply', 5, 'a*b', 'a/b', 'a/b');\r\n\t\toperator('/', 'divide', 5, 'a/b', 'a*b', 'b/a');\r\n\t//\toperator('^', 7, 'a^b', 'a^(-b)', 'Math.log(a)/Math.log(b)');\r\n\t\toperator('?', 'if', 16, 'b[a?0:1]', 'a===b[0]||(a===b[1]?false:deny)', '[a,b]');\r\n\t\toperator(':', 'choose', 15, '[a,b]', 'a[0]?a[1]:deny', 'a[1]');\r\n\t\toperator('!', 'not', 4, '!a', '!a', false);\r\n\t\toperator('%', 'remainder', 5, 'a%b');\r\n\t\toperator('>', 'greater', 8, 'a>b');\r\n\t\toperator('>=', 'greaterOrEqual', 8, 'a>=b');\r\n\t\toperator('<', 'less', 8, 'a<b');\r\n\t\toperator('<=', 'lessOrEqual', 8, 'a<=b');\r\n\t\toperator('===', 'strictEqual', 9, 'a===b');\r\n\t\toperator('==', 'equal', 9, 'a==b');\r\n\t\toperator('&', 'and', 8, 'a&&b');\r\n\t\toperator('|', 'or', 8, 'a||b');\r\n\t\toperator('round', 'round', 8, 'Math.round(a*Math.pow(10,b||1))/Math.pow(10,b||1)', 'a', 'a');\r\n\t\treturn operators;\r\n\t}))\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (root, factory) { if (true) {\r\n\t\t!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2), __webpack_require__(4)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) } else if (typeof module === 'object' && module.exports) {        \r\n\t  module.exports = factory(require('./util/lang'), require('./Variable')) // Node\r\n\t}}(this, function (lang, Variable) {\r\n\t\r\n\t\tfunction deepCopy(source, target, derivativeMap) {\r\n\t\t\tif (source && typeof source == 'object') {\r\n\t\t\t\tif (source instanceof Array) {\r\n\t\t\t\t\ttarget = [] // always create a new array for array targets\r\n\t\t\t\t\tfor(var i = 0, l = source.length; i < l; i++) {\r\n\t\t\t\t\t\ttarget[i] = deepCopy(source[i], null, derivativeMap)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (!target || typeof target !== 'object') {\r\n\t\t\t\t\t\ttarget = derivativeMap && derivativeMap.get(source)\r\n\t\t\t\t\t\tif (!target) {\r\n\t\t\t\t\t\t\ttarget = {}\r\n\t\t\t\t\t\t\tderivativeMap && derivativeMap.set(source, target)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (var i in source) {\r\n\t\t\t\t\t\ttarget[i] = deepCopy(source[i], target[i], derivativeMap)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn target\r\n\t\t\t}\r\n\t\t\treturn source\r\n\t\t}\r\n\t\r\n\t\tvar Copy = lang.compose(Variable, function(copiedFrom) {\r\n\t\t\t// this is the variable that we derive from\r\n\t\t\tthis.copiedFrom = copiedFrom\r\n\t\t\tthis.derivativeMap = new lang.WeakMap(null, 'derivative')\r\n\t\t\tthis.isDirty = new Variable(false)\r\n\t\t}, {\r\n\t\t\tgetValue: function(context) {\r\n\t\t\t\tif(this.state) {\r\n\t\t\t\t\tthis.state = null\r\n\t\t\t\t}\r\n\t\t\t\tvar value = this.copiedFrom.valueOf(context)\r\n\t\t\t\tif(value && typeof value == 'object') {\r\n\t\t\t\t\tvar derivative = this.derivativeMap.get(value)\r\n\t\t\t\t\tif (derivative == null) {\r\n\t\t\t\t\t\tthis.derivativeMap.set(value, derivative = deepCopy(value, undefined, this.derivativeMap))\r\n\t\t\t\t\t\tthis.setValue(derivative, context)\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn derivative\r\n\t\t\t\t}\r\n\t\t\t\tif(this.value === undefined) {\r\n\t\t\t\t\treturn value\r\n\t\t\t\t}\r\n\t\t\t\treturn this.value\r\n\t\t\t},\r\n\t\t\tgetCopyOf: function(value) {\r\n\t\t\t\tvar derivative = this.derivativeMap.get(value)\r\n\t\t\t\tif (derivative == null) {\r\n\t\t\t\t\tthis.derivativeMap.set(value, derivative = deepCopy(value, undefined, this.derivativeMap))\r\n\t\t\t\t}\r\n\t\t\t\treturn derivative\r\n\t\t\t},\r\n\t\t\tsave: function() {\r\n\t\t\t\t// copy back to the original object\r\n\t\t\t\tvar original = this.copiedFrom.valueOf()\r\n\t\t\t\tvar newCopiedFrom = deepCopy(this.valueOf(), original)\r\n\t\t\t\tif (original !== newCopiedFrom) {\r\n\t\t\t\t\t// if we have replaced it with a new object/value, put it\r\n\t\t\t\t\tthis.copiedFrom.put && this.copiedFrom.put(newCopiedFrom)\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// else we have modified an existing object, but we still need to notify\r\n\t\t\t\t\tif (this.copiedFrom.notifies && this.copiedFrom.updated) { // copiedFrom doesn't have to be a variable, it can be a plain object\r\n\t\t\t\t\t\tthis.copiedFrom.updated()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.isDirty.put(false)\r\n\t\t\t\tthis.onSave && this.onSave()\r\n\t\t\t},\r\n\t\t\trevert: function() {\r\n\t\t\t\tvar original = this.copiedFrom.valueOf()\r\n\t\t\t\tthis.put(deepCopy(original, this.derivativeMap.get(original), this.derivativeMap))\r\n\t\t\t\tthis.isDirty.put(false)\r\n\t\t\t},\r\n\t\t\tupdated: function() {\r\n\t\t\t\tthis.isDirty.put(true)\r\n\t\t\t\treturn Variable.prototype.updated.apply(this, arguments)\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn Copy\r\n\t}))\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** index.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 4eb6a3f87be686bfd6e8\n **/","/// <reference path=\"./typings.d.ts\" />\r\n(function (root, factory) { if (typeof define === 'function' && define.amd) {\r\n  define(['./Element', './Renderer', './react', './Copy', './operators', './Variable'], factory) } else if (typeof module === 'object' && module.exports) {        \r\n  module.exports = factory(require('./Element'), require('./Renderer'), require('./react'), require('./Copy'), require('./operators'), require('./Variable')) // Node\r\n}}(this, function (Element, Renderer, react, Copy, operators, Variable) {\r\n\r\n\tvar main = Object.create(Element)\r\n\tmain.Copy = Copy\r\n\tmain.Element = Element\r\n\tmain.Variable = Variable\r\n\tmain.VMap = Variable.VMap\r\n\tmain.VArray = Variable.VArray\r\n\tmain.VPromised = Variable.VPromised\r\n\tmain.all = Variable.all\r\n\tmain.Transform = Variable.Call\r\n\tmain.Caching = Variable.Caching\r\n\tmain.react = react\r\n\tmain.spawn = function(func) {\r\n\t\treturn react(func).valueOf()\r\n\t}\r\n\tmain.Renderer = Renderer.ElementRenderer\r\n\tObject.assign(main, Renderer)\r\n\tObject.assign(main, operators)\r\n\treturn main\r\n}))\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./index.js\n ** module id = 0\n ** module chunks = 0\n **/","(function (root, factory) { if (typeof define === 'function' && define.amd) {\r\n\tdefine(['./util/lang', './Renderer', './Variable'], factory) } else if (typeof module === 'object' && module.exports) {        \r\n  module.exports = factory(require('./util/lang'), require('./Renderer'), require('./Variable')) // Node\r\n}}(this, function (lang, Renderer, Variable) {\r\n\tvar knownElementProperties = [\r\n\t\t'textContent', // Node\r\n\t\t'id', 'className', 'innerHTML', // Element\r\n\t\t'title', 'lang', 'translate', 'dir', 'tabIndex', 'accessKey', 'draggable', 'spellcheck', 'contentEditable', 'innerText', 'webkitdropzone'] // HTMLElement\r\n\r\n\tvar SELECTOR_REGEX = /^(\\.|#)([-\\w]+)(.+)?/\r\n\tvar isGenerator = lang.isGenerator\r\n\tvar Context = Variable.Context\r\n\tvar PropertyRenderer = Renderer.PropertyRenderer\r\n\tvar InputPropertyRenderer = Renderer.InputPropertyRenderer\r\n\tvar AttributeRenderer = Renderer.AttributeRenderer\r\n\tvar StyleRenderer = lang.compose(Renderer.StyleRenderer, function StyleRenderer() {\r\n\t\tRenderer.StyleRenderer.apply(this, arguments)\r\n\t}, {\r\n\t\trenderUpdate: function(newValue, element) {\r\n\t\t\tvar definition = styleDefinitions[this.name]\r\n\t\t\tif (definition) {\r\n\t\t\t\tdefinition(element, newValue, this.name)\r\n\t\t\t} else {\r\n\t\t\t\telement.style[this.name] = newValue\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\n\tvar ClassNameRenderer = lang.compose(Renderer.ElementRenderer, function ClassNameRenderer(options) {\r\n\t\tthis.className = options.className\r\n\t\tRenderer.apply(this, arguments)\r\n\t}, {\r\n\t\trenderUpdate: function(newValue, element) {\r\n\t\t\tvar currentClassName = element.className\r\n\t\t\tvar changingClassName = this.className\r\n\t\t\t// remove the className (needed for addition or removal)\r\n\t\t\t// see http://jsperf.com/remove-class-name-algorithm/2 for some tests on this\r\n\t\t\tvar removed = currentClassName && (' ' + currentClassName + ' ').replace(' ' + changingClassName + ' ', ' ')\r\n\t\t\tif (newValue) {\r\n\t\t\t\t// addition, add the className\r\n\t\t\t\tchangingClassName = currentClassName ? (removed + changingClassName).slice(1) : changingClassName;\r\n\t\t\t} else {\r\n\t\t\t\t// we already have removed the class, just need to trim\r\n\t\t\t\tchangingClassName = removed.slice(1, removed.length - 1)\r\n\t\t\t}\r\n\t\t\t// only assign if it changed, this can save a lot of time\r\n\t\t\tif (changingClassName != currentClassName) {\r\n\t\t\t\telement.className = changingClassName\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\n\t// TODO: check for renderContent with text updater\r\n\tvar TextRenderer = Renderer.TextRenderer\r\n\tvar ListRenderer = Renderer.ListRenderer\r\n\r\n\tvar doc = typeof document !== 'undefined' ? document : {\r\n\t\tcreateElement: function(tag) {\r\n\t\t\treturn {}\r\n\t\t},\r\n\t\taddEventListener: function() {\r\n\t\t}\r\n\t}\r\n\r\n\tvar inputs = {\r\n\t\tINPUT: 1,\r\n\t\tTEXTAREA: 1\r\n\t\t// SELECT: 1, we exclude this, so the default \"content\" of the element can be the options\r\n\t}\r\n\r\n\tfunction booleanStyle(options) {\r\n\t\treturn function(element, value, key) {\r\n\t\t\tif (typeof value === 'boolean') {\r\n\t\t\t\t// has a boolean conversion\r\n\t\t\t\tvalue = options[value ? 0 : 1]\r\n\t\t\t}\r\n\t\t\telement.style[key] = value\r\n\t\t}\r\n\t}\r\n\r\n\tfunction defaultStyle(element, value, key) {\r\n\t\tif (typeof value === 'number') {\r\n\t\t\tvalue = value + 'px'\r\n\t\t}\r\n\t\telement.style[key] = value\r\n\t}\r\n\tfunction directStyle(element, value, key) {\r\n\t\telement.style[key] = value\r\n\t}\r\n\r\n\tvar styleDefinitions = {\r\n\t\tdisplay: booleanStyle(['', 'none']),\r\n\t\tvisibility: booleanStyle(['visible', 'hidden']),\r\n\t\tcolor: directStyle,\r\n\t\topacity: directStyle,\r\n\t\tzoom: directStyle,\r\n\t\tminZoom: directStyle,\r\n\t\tmaxZoom: directStyle,\r\n\t\tfontWeight: directStyle,\r\n\t\tposition: booleanStyle(['absolute', '']),\r\n\t\ttextDecoration: booleanStyle(['underline', '']),\r\n\t\tfontWeight: booleanStyle(['bold', 'normal'])\r\n\t}\r\n\t;[\"alignContent\",\"alignItems\",\"alignSelf\",\"animation\",\"animationDelay\",\"animationDirection\",\"animationDuration\",\"animationFillMode\",\"animationIterationCount\",\"animationName\",\"animationPlayState\",\"animationTimingFunction\",\"backfaceVisibility\",\"background\",\"backgroundAttachment\",\"backgroundBlendMode\",\"backgroundClip\",\"backgroundColor\",\"backgroundImage\",\"backgroundOrigin\",\"backgroundPosition\",\"backgroundPositionX\",\"backgroundPositionY\",\"backgroundRepeat\",\"backgroundRepeatX\",\"backgroundRepeatY\",\"backgroundSize\",\"baselineShift\",\"border\",\"borderBottom\",\"borderBottomColor\",\"borderBottomLeftRadius\",\"borderBottomRightRadius\",\"borderBottomStyle\",\"borderBottomWidth\",\"borderCollapse\",\"borderColor\",\"borderImage\",\"borderImageOutset\",\"borderImageRepeat\",\"borderImageSlice\",\"borderImageSource\",\"borderImageWidth\",\"borderLeft\",\"borderLeftColor\",\"borderLeftStyle\",\"borderLeftWidth\",\"borderRadius\",\"borderRight\",\"borderRightColor\",\"borderRightStyle\",\"borderRightWidth\",\"borderSpacing\",\"borderStyle\",\"borderTop\",\"borderTopColor\",\"borderTopLeftRadius\",\"borderTopRightRadius\",\"borderTopStyle\",\"borderTopWidth\",\"borderWidth\",\"bottom\",\"boxShadow\",\"boxSizing\",\"bufferedRendering\",\"captionSide\",\"clear\",\"clip\",\"clipPath\",\"clipRule\",\"color\",\"colorInterpolation\",\"colorInterpolationFilters\",\"colorRendering\",\"counterIncrement\",\"counterReset\",\"cursor\",\"direction\",\"display\",\"emptyCells\",\"fill\",\"fillOpacity\",\"fillRule\",\"filter\",\"flex\",\"flexBasis\",\"flexDirection\",\"flexFlow\",\"flexGrow\",\"flexShrink\",\"flexWrap\",\"float\",\"floodColor\",\"floodOpacity\",\"font\",\"fontFamily\",\"fontFeatureSettings\",\"fontKerning\",\"fontSize\",\"fontStretch\",\"fontStyle\",\"fontVariant\",\"fontVariantLigatures\",\"fontWeight\",\"height\",\"imageRendering\",\"isolation\",\"justifyContent\",\"left\",\"letterSpacing\",\"lightingColor\",\"lineHeight\",\"listStyle\",\"listStyleImage\",\"listStylePosition\",\"listStyleType\",\"margin\",\"marginBottom\",\"marginLeft\",\"marginRight\",\"marginTop\",\"marker\",\"markerEnd\",\"markerMid\",\"markerStart\",\"mask\",\"maskType\",\"maxHeight\",\"maxWidth\",\"maxZoom\",\"minHeight\",\"minWidth\",\"minZoom\",\"mixBlendMode\",\"motion\",\"motionOffset\",\"motionPath\",\"motionRotation\",\"objectFit\",\"objectPosition\",\"opacity\",\"order\",\"orientation\",\"orphans\",\"outline\",\"outlineColor\",\"outlineOffset\",\"outlineStyle\",\"outlineWidth\",\"overflow\",\"overflowWrap\",\"overflowX\",\"overflowY\",\"padding\",\"paddingBottom\",\"paddingLeft\",\"paddingRight\",\"paddingTop\",\"page\",\"pageBreakAfter\",\"pageBreakBefore\",\"pageBreakInside\",\"paintOrder\",\"perspective\",\"perspectiveOrigin\",\"pointerEvents\",\"position\",\"quotes\",\"resize\",\"right\",\"shapeImageThreshold\",\"shapeMargin\",\"shapeOutside\",\"shapeRendering\",\"size\",\"speak\",\"src\",\"stopColor\",\"stopOpacity\",\"stroke\",\"strokeDasharray\",\"strokeDashoffset\",\"strokeLinecap\",\"strokeLinejoin\",\"strokeMiterlimit\",\"strokeOpacity\",\"strokeWidth\",\"tabSize\",\"tableLayout\",\"textAlign\",\"textAlignLast\",\"textAnchor\",\"textCombineUpright\",\"textDecoration\",\"textIndent\",\"textOrientation\",\"textOverflow\",\"textRendering\",\"textShadow\",\"textTransform\",\"top\",\"touchAction\",\"transform\",\"transformOrigin\",\"transformStyle\",\"transition\",\"transitionDelay\",\"transitionDuration\",\"transitionProperty\",\"transitionTimingFunction\",\"unicodeBidi\",\"unicodeRange\",\"userZoom\",\"vectorEffect\",\"verticalAlign\",\"visibility\",\"whiteSpace\",\"widows\",\"width\",\"willChange\",\"wordBreak\",\"wordSpacing\",\"wordWrap\",\"writingMode\",\"zIndex\",\"zoom\"].forEach(function(property) {\r\n\t\tstyleDefinitions[property] = styleDefinitions[property] || defaultStyle\r\n\t})\r\n\tvar styleSheet\r\n\tvar presumptiveParentMap = new WeakMap()\r\n\r\n\tvar setPrototypeOf = Object.setPrototypeOf || (function(base, proto) { base.__proto__ = proto})\r\n\tvar getPrototypeOf = Object.getPrototypeOf || (function(base) { return base.__proto__ })\r\n\tfunction createCssRule(selector) {\r\n\t\tif (!styleSheet) {\r\n\t\t\tvar styleSheetElement = doc.createElement(\"style\")\r\n\t\t\tstyleSheetElement.setAttribute(\"type\", \"text/css\")\r\n//\t\t\tstyleSheet.appendChild(doc.createTextNode(css))\r\n\t\t\tdoc.head.insertBefore(styleSheetElement, doc.head.firstChild)\r\n\t\t\tstyleSheet = styleSheetElement.sheet\r\n\t\t}\r\n\t\tvar cssRules = styleSheet.cssRules || styleSheet.rules\r\n\t\treturn cssRules[styleSheet.addRule(selector, ' ', cssRules.length)]\r\n\t}\r\n\r\n\t// TODO: Need to do some more testing to see if that would improve performance:\r\n\t// var fragmentThresholdHeuristic = (typeof navigator !== 'undefined' && navigator.userAgent.indexOf('Chrome') > 0) ? 1 : 3\r\n\r\n\tfunction layoutChildren(parent, children, container, prepend) {\r\n\t\tvar fragment = (children.length > 1 || prepend) ? doc.createDocumentFragment() : parent\r\n\t\tfor(var i = 0, l = children.length; i < l; i++) {\r\n\t\t\tvar child = children[i]\r\n\t\t\tvar childNode\r\n\t\t\tif (child != null) { // we just skip nulls and undefined, helps make it easier to write conditional element logic\r\n\t\t\t\tif (child.create) {\r\n\t\t\t\t\t// an element constructor\r\n\t\t\t\t\tcurrentParent = parent\r\n\t\t\t\t\tchildNode = child.create()\r\n\t\t\t\t\tfragment.appendChild(childNode)\r\n\t\t\t\t\tif (child.isContentNode) {\r\n\t\t\t\t\t\tcontainer.contentNode = childNode\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (child.notifies) {\r\n\t\t\t\t\t// a variable\r\n\t\t\t\t\tvar ref = child.isIterable ? fragment : parent\r\n\t\t\t\t\tfragment.appendChild(childNode = variableAsContent(ref, child))\r\n\t\t\t\t} else if (typeof child == 'object') {\r\n\t\t\t\t\tif (child instanceof Array) {\r\n\t\t\t\t\t\t// array of sub-children\r\n\t\t\t\t\t\tcontainer = container || parent\r\n\t\t\t\t\t\tchildNode = childNode || parent\r\n\t\t\t\t\t\tlayoutChildren(childNode.contentNode || childNode, child, container)\r\n\t\t\t\t\t} else if (child.nodeType) {\r\n\t\t\t\t\t\t// an element itself\r\n\t\t\t\t\t\tfragment.appendChild(childNode = child)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// TODO: apply properties to last child, but with binding to the parent (for events)\r\n\t\t\t\t\t\tthrow new Error('Unknown child type ' + child)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// a primitive value\r\n\t\t\t\t\tchildNode = doc.createTextNode(child)\r\n\t\t\t\t\tfragment.appendChild(childNode)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (fragment != parent) {\r\n\t\t\tif (prepend) {\r\n\t\t\t\tparent.insertBefore(fragment, parent.firstChild)\r\n\t\t\t} else {\r\n\t\t\t\tparent.appendChild(fragment)\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn childNode\r\n\t}\r\n\tfunction variableAsContent(parent, content) {\r\n\t\tif (content == null) {\r\n\t\t\treturn doc.createTextNode('')\r\n\t\t}\r\n\t\tvar textNode\r\n\t\tif (content.notifies) {\r\n\t\t\ttextNode = doc.createTextNode('')\r\n\t\t\tnew TextRenderer({\r\n\t\t\t\telement: parent,\r\n\t\t\t\ttextNode: textNode,\r\n\t\t\t\tvariable: content\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\ttextNode = doc.createTextNode(content)\r\n\t\t}\r\n\t\treturn textNode\r\n\t}\r\n\r\n\tfunction bidirectionalHandler(element, value, key) {\r\n\t\tif (value && value.notifies) {\r\n\t\t\tnew InputPropertyRenderer({\r\n\t\t\t\tname: key,\r\n\t\t\t\tvariable: value,\r\n\t\t\t\telement: element\r\n\t\t\t})\r\n\t\t\tif (inputs[element.tagName] || element.tagName === 'SELECT') {\r\n\t\t\t\tbindChanges(element, value, key)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tif (element.tagName === 'SELECT' && key === 'value') {\r\n\t\t\t\t// use the deferred <select> value assignment\r\n\t\t\t\tInputPropertyRenderer.prototype.renderSelectValueUpdate(value, element)\r\n\t\t\t} else {\r\n\t\t\t\tif (element.type === 'number') {\r\n\t\t\t\t\tif (isNaN(value)) {\r\n\t\t\t\t\t\tvalue = ''\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\telement[key] = value\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction noop() {}\r\n\tvar propertyHandlers = {\r\n\t\tchildren: noop,\r\n\t\ttagName: noop,\r\n\t\t_generators: noop,\r\n\t\tclasses: function(element, classes) {\r\n\t\t\tif (!(classes.length > -1)) {\r\n\t\t\t\t// index the classes, if necessary\r\n\t\t\t\tvar i = 0\r\n\t\t\t\tfor (var key in classes) {\r\n\t\t\t\t\tif (!classes[i]) {\r\n\t\t\t\t\t\tclasses[i] = key\r\n\t\t\t\t\t}\r\n\t\t\t\t\ti++\r\n\t\t\t\t}\r\n\t\t\t\tclasses.length = i\r\n\t\t\t}\r\n\t\t\tfor (var i = 0, l = classes.length; i < l; i++) {\r\n\t\t\t\t// find each class name\r\n\t\t\t\tvar className = classes[i]\r\n\t\t\t\tvar flag = classes[className]\r\n\t\t\t\tif (flag && flag.notifies) {\r\n\t\t\t\t\t// if it is a variable, we react to it\r\n\t\t\t\t\tnew ClassNameRenderer({\r\n\t\t\t\t\t\telement: element,\r\n\t\t\t\t\t\tclassName: className,\r\n\t\t\t\t\t\tvariable: flag\r\n\t\t\t\t\t})\r\n\t\t\t\t} else if (flag || flag === undefined) {\r\n\t\t\t\t\telement.className += ' ' + className\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tclass: applyAttribute,\r\n\t\tfor: applyAttribute, // TODO: move to label?\r\n\t\trole: applyAttribute,\r\n\t\trender: function(element, value, key, properties) {\r\n\t\t\t// TODO: This doesn't need to be a property updater (is in place for *render())\r\n\t\t\t// we should also verify it is a generator\r\n\t\t\t// and maybe, at some point, find an optimization to eliminate the bind()\r\n\t\t\tnew PropertyRenderer({\r\n\t\t\t\tname: key,\r\n\t\t\t\tvariable: new Variable.GeneratorVariable(value.bind(element, properties)),\r\n\t\t\t\telement: element\r\n\t\t\t})\r\n\t\t},\r\n\t\tdataset: applySubProperties(function(newValue, element, key) {\r\n\t\t\telement.dataset[key || this.name] = newValue\r\n\t\t}),\r\n\t\tattributes: applySubProperties(function(newValue, element, key) {\r\n\t\t\telement.setAttribute(key || this.name, newValue)\r\n\t\t}),\r\n\t\tstyle: function(element, value, key) {\r\n\t\t\tif (typeof value === 'string') {\r\n\t\t\t\telement.setAttribute('style', value)\r\n\t\t\t} else if (value && value.notifies) {\r\n\t\t\t\tnew AttributeRenderer({\r\n\t\t\t\t\tname: 'style',\r\n\t\t\t\t\tvariable: value,\r\n\t\t\t\t\telement: element\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tstyleObjectHandler(element, value, key)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tknownElementProperties.forEach(function(property) {\r\n\t\tpropertyHandlers[property] = true\r\n\t})\r\n\tif (typeof HTMLElement !== 'undefined') {\r\n\t\tHTMLElement.prototype._propertyHandlers = propertyHandlers // inherit this, at least for now\r\n\t}\r\n\tvar elementPropertyHandlers = {\r\n\t\tinput: lang.copy(['accept', 'alt', 'autocomplete', 'autofocus', 'capture', 'defaultChecked', 'dirName', 'disabled', 'form', 'files', 'formAction', 'formEnctype', 'formMethod', 'formNoValidate', 'formTarget', 'indeterminate', 'inputMode', 'list', 'max', 'maxLength', 'min', 'minLength', 'multiple', 'name', 'pattern', 'placeholder', 'readOnly', 'required', 'size', 'src', 'step', 'type', 'defaultValue', 'willValidate', 'validity', 'validationMessage', 'useMap', 'autocapitalize', 'webkitdirectory', 'incremental', 'stepUp', 'stepDown'], {\r\n\t\t\tvalue: bidirectionalHandler,\r\n\t\t\tvalueAsNumber: bidirectionalHandler,\r\n\t\t\tvalueAsDate: bidirectionalHandler,\r\n\t\t\tchecked: bidirectionalHandler,\r\n\t\t\ttype: function(element, value) {\r\n\t\t\t\ttry {\r\n\t\t\t\t\telement.type = value\r\n\t\t\t\t} catch(e) {\r\n\t\t\t\t\t// IE 11 will throw an error here\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}),\r\n\t\tselect: lang.copy(['name', 'size', 'type', 'selectedIndex', 'validationMessage'], {\r\n\t\t\tvalue: bidirectionalHandler\r\n\t\t}),\r\n\t\ttextarea: lang.copy(['cols', 'dirName', 'maxLength', 'minLength', 'name', 'placeholder', 'rows', 'wrap', 'type', 'defaultValue', 'textLength', 'validationMessage', 'autocapitalize'], {\r\n\t\t\tvalue: bidirectionalHandler\r\n\t\t}),\r\n\t\ta: ['target', 'download', 'ping', 'rel', 'hreflang', 'type', 'referrerPolicy', 'href', 'media'],\r\n\t\tarea: ['target', 'download', 'coords', 'rel', 'hreflang', 'type', 'referrerPolicy', 'href', 'media', 'alt', 'shape'],\r\n\t\tbutton: ['formAction', 'formEnctype', 'formMethod', 'formTarget', 'name', 'type', 'value', 'validationMessage'],\r\n\t\tdialog: ['open'],\r\n\t\tembed: ['src', 'type', 'name'],\r\n\t\tform: ['acceptCharset', 'action', 'autocomplete', 'enctype', 'encoding', 'method', 'name', 'target', 'novalidate'],\r\n\t\tframe: ['name', 'scrolling', 'src', 'frameBorder'],\r\n\t\tframeset: ['cols', 'rows'],\r\n    iframe: ['src', 'srcdoc', 'name', 'referrerPolicy', 'align', 'scrolling', 'frameBorder', 'longDesc'],\r\n    img: ['src', 'alt', 'crossorigin', 'ismap', 'longdesc', 'sizes', 'srcset', 'usemap', 'referrerpolicy'],\r\n    option: ['label', 'value', 'text', 'index'],\r\n    optgroup: ['label'],\r\n    output: ['name', 'type', 'defaultValue', 'value', 'validationMessage'],\r\n    label: ['htmlFor'],\r\n    td: ['colSpan', 'rowSpan'],\r\n    th: ['colSpan', 'rowSpan'],\r\n    script: ['src', 'type', 'charset', 'text', 'event', 'htmlFor', 'integrity'],\r\n    style: ['media', 'type'],\r\n    track: ['kind', 'src', 'srclang', 'label'],\r\n    link: ['href', 'rel', 'media', 'hreflang', 'type', 'charset', 'rev', 'target', 'integrity', 'as'],\r\n    meta: ['name', 'httpEquiv', 'content', 'scheme'],\r\n    meter: ['value', 'min', 'max', 'low', 'high', 'optimum'],\r\n    progress: ['value', 'max', 'position'],\r\n    del: ['cite', 'dateTime'],\r\n    ins: ['cite', 'dateTime'],\r\n    source: ['src', 'type', 'srcset', 'sizes', 'media'],\r\n    video: ['videoWidth', 'videoHeight', 'poster', 'webkitDecodedFrameCount', 'webkitDroppedFrameCount'],\r\n    keygen: ['challenge', 'keytype', 'name', 'type', 'validationMessage'],\r\n    object: ['data', 'type', 'name', 'useMap', 'validationMessage', 'archive', 'code', 'hspace', 'standby', 'vspace', 'codeBase', 'codeType'],\r\n    param: ['name', 'value', 'type', 'valueType']\r\n\t}\r\n\r\n\tfunction applyAttribute(element, value, key) {\r\n\t\tif (value && value.notifies) {\r\n\t\t\tnew AttributeRenderer({\r\n\t\t\t\tname: key,\r\n\t\t\t\tvariable: value,\r\n\t\t\t\telement: element\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\telement.setAttribute(key, value)\r\n\t\t}\r\n\t}\r\n\r\n\tvar styleObjectHandler = applySubProperties(function(newValue, element, key) {\r\n\t\telement.style[key || this.name] = newValue\r\n\t})\r\n\r\n\tfunction applySubProperties(renderer) {\r\n\t\tvar SubPropertyRenderer = lang.compose(PropertyRenderer, function SubPropertyRenderer(options) {\r\n\t\t\tPropertyRenderer.apply(this, arguments)\r\n\t\t}, {\r\n\t\t\trenderUpdate: renderer\r\n\t\t})\r\n\t\treturn function(element, value, key) {\r\n\t\t\tfor (var subKey in value) {\r\n\t\t\t\tvar subValue = value[subKey]\r\n\t\t\t\tif (subValue && subValue.notifies) {\r\n\t\t\t\t\tnew SubPropertyRenderer({\r\n\t\t\t\t\t\tname: subKey,\r\n\t\t\t\t\t\tvariable: subValue,\r\n\t\t\t\t\t\telement: element\r\n\t\t\t\t\t})\r\n\t\t\t\t} else {\r\n\t\t\t\t\trenderer(subValue, element, subKey)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction assignProperties(element, properties) {\r\n\t\tvar propertyHandlers = element._propertyHandlers\r\n\t\tvar Element = element.constructor\r\n\t\tfor (var key in properties) {\r\n\t\t\tvar value = properties[key]\r\n\t\t\tvar VariableClass = Element[key]\r\n\t\t\tif (typeof VariableClass === 'function' && VariableClass.notifies && VariableClass !== value) {\r\n\t\t\t\thasOwn(Element, VariableClass)\r\n\t\t\t\t// if (value instanceof VariableClass) { TODO: assign the value as the owned instance\r\n\t\t\t\tVariableClass.for(element).put(value)\r\n\t\t\t}\r\n\t\t\tvar styleDefinition\r\n\t\t\tvar propertyHandler = propertyHandlers[key]\r\n\t\t\tif (propertyHandler) {\r\n\t\t\t\tif (propertyHandler === true) {\r\n\t\t\t\t\tif (value && value.notifies) {\r\n\t\t\t\t\t// a standard, known element property\r\n\t\t\t\t\t\tnew PropertyRenderer({\r\n\t\t\t\t\t\t\tname: key,\r\n\t\t\t\t\t\t\tvariable: value,\r\n\t\t\t\t\t\t\telement: element\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\telement[key] = value\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tpropertyHandler(element, value, key, properties)\r\n\t\t\t\t}\r\n\t\t\t} else if ((styleDefinition = styleDefinitions[key])) {\r\n\t\t\t\tif (value && value.notifies) {\r\n\t\t\t\t\tnew StyleRenderer({\r\n\t\t\t\t\t\tname: key,\r\n\t\t\t\t\t\tvariable: value,\r\n\t\t\t\t\t\telement: element\r\n\t\t\t\t\t})\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstyleDefinition(element, value, key)\r\n\t\t\t\t}\r\n\t\t\t} else if (element[key] == null) {\r\n\t\t\t\t// we are working an unknown/unstandard property (or an event listener)\r\n\t\t\t\t// undefined or null means we can safely set\r\n\t\t\t\t// TODO: we may want to do the event listener check first so we can handle oncustomevent (that needs an addEventListener call to work)\r\n\t\t\t\telement[key] = value\r\n\t\t\t} else if (typeof value === 'function' && key.slice(0, 2) === 'on') {\r\n\t\t\t\t// event listener with one already defined on the prototype\r\n\t\t\t\telement.addEventListener(key.slice(2), value)\r\n\t\t\t} else {\r\n\t\t\t\t// otherwise bypass/override the native getter/setter\r\n\t\t\t\tObject.defineProperty(element, key, {\r\n\t\t\t\t\tvalue: value,\r\n\t\t\t\t\tenumerable: true,\r\n\t\t\t\t\tconfigurable: true,\r\n\t\t\t\t\twritable: true\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction assignGenerators(element, properties) {\r\n\t\tvar generators = properties._generators\r\n\t\tvar customGenerators\r\n\t\tvar styleGenerators\r\n\t\tvar nativeGenerators\r\n\t\tvar propertyHandlers = element._propertyHandlers\r\n\t\tfor (var key in generators) {\r\n\t\t\tvar variable = new Variable.GeneratorVariable(generators[key].bind(element, properties))\r\n\t\t\tif (propertyHandlers[key]) {\r\n\t\t\t\t(nativeGenerators || (nativeGenerators = {}))[key] = variable\r\n\t\t\t} else if (styleDefinitions[key]) {\r\n\t\t\t\t(styleGenerators || (styleGenerators = {}))[key] = variable\r\n\t\t\t} else {\r\n\t\t\t\t(customGenerators || (customGenerators = {}))[key] = variable\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (customGenerators) {\r\n\t\t\t// custom ones must go first\r\n\t\t\tassignProperties(element, customGenerators)\r\n\t\t}\r\n\t\tif (styleGenerators) {\r\n\t\t\tassignProperties(element, styleGenerators)\r\n\t\t}\r\n\t\tif (nativeGenerators) {\r\n\t\t\t// native ones must come last so they can access custom ones\r\n\t\t\tassignProperties(element, nativeGenerators)\r\n\t\t}\r\n\t}\r\n\r\n\tfunction buildContent(element, content, key, properties) {\r\n\t\tvar each = element.each || properties.each\r\n\t\tif (each && content) {\r\n\t\t\t// render as list\r\n\t\t\tif (each.create) {\r\n\t\t\t\teach.defineHasOwn = function () {\r\n\t\t\t\t\tvar ItemClass = content.getCollectionOf && content.getCollectionOf() || Item\r\n\t\t\t\t\thasOwn(each, ItemClass, function (element) {\r\n\t\t\t\t\t\tvar itemVariable = ItemClass.from(element._item)\r\n\t\t\t\t\t\treturn itemVariable\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (content.notifies) {\r\n\t\t\t\tnew ListRenderer({\r\n\t\t\t\t\teach: each,\r\n\t\t\t\t\tvariable: content,\r\n\t\t\t\t\telement: element\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tvar fragment = doc.createDocumentFragment()\r\n\t\t\t\tif (each.defineHasOwn) {\r\n\t\t\t\t\teach.defineHasOwn()\r\n\t\t\t\t}\r\n\t\t\t\tcontent.forEach(function(item) {\r\n\t\t\t\t\tif (each.create) {\r\n\t\t\t\t\t\tchildElement = each.create({parent: element, _item: item}) // TODO: make a faster object here potentially\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tchildElement = each(item, element)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfragment.appendChild(childElement)\r\n\t\t\t\t})\r\n\t\t\t\telement.appendChild(fragment)\r\n\t\t\t}\r\n\t\t} else if (inputs[element.tagName]) {\r\n\t\t\t// render into input\r\n\t\t\tbuildInputContent(element, content)\r\n\t\t} else if (content instanceof Array) {\r\n\t\t\t// treat array as children (potentially of the content node)\r\n\t\t\telement = element.contentNode || element\r\n\t\t\tlayoutChildren(element, content, element)\r\n\t\t} else {\r\n\t\t\t// render as string\r\n\t\t\telement.appendChild(variableAsContent(element, content))\r\n\t\t}\r\n\t}\r\n\r\n\tfunction bindChanges(element, variable, key, conversion) {\r\n\t\tlang.nextTurn(function() { // wait for next turn in case inputChanges isn't set yet\r\n\t\t\tvar inputEvents = element.inputEvents || ['change', 'alkali-change']\r\n\t\t\tfor (var i = 0, l = inputEvents.length; i < l; i++) {\r\n\t\t\t\telement.addEventListener(inputEvents[i], function (event) {\r\n\t\t\t\t\tvar value = element[key]\r\n\t\t\t\t\tvar result = variable.put(conversion ? conversion(value, element) : value, new Context(element))\r\n\t\t\t\t\tif (result === Variable.deny) {\r\n\t\t\t\t\t\tthrow new Error('Variable change denied')\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tdoc.addEventListener('click', function(event) {\r\n\t\tvar target = event.target\r\n\t\tif (target.type === 'radio') {\r\n\t\t\tvar radios = doc.querySelectorAll('input[type=radio]')\r\n\t\t\tfor (var i = 0, l = radios.length; i < l; i++) {\r\n\t\t\t\tvar radio = radios[i]\r\n\t\t\t\tif (radio.name === target.name && radio !== target) {\r\n\t\t\t\t\tradio.dispatchEvent(new Event('alkali-change', {}))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\n\tfunction conversion(value, element) {\r\n\t\tif (element.type == 'number') {\r\n\t\t\treturn parseFloat(value)\r\n\t\t}\r\n\t\treturn value\r\n\t}\r\n\r\n\tfunction buildInputContent(element, content) {\r\n\t\tvar inputType = element.type\r\n\t\tvar inputProperty = inputType in {date: 1, datetime: 1, time: 1} ?\r\n\t\t\t\t'valueAsDate' : (inputType === 'checkbox' || inputType === 'radio') ?\r\n\t\t\t\t\t'checked' : 'value'\r\n\r\n\t\tif (content && content.notifies) {\r\n\t\t\t// a variable, respond to changes\r\n\t\t\tnew InputPropertyRenderer({\r\n\t\t\t\tvariable: content,\r\n\t\t\t\tname: inputProperty,\r\n\t\t\t\telement: element\r\n\t\t\t})\r\n\t\t\t// and bind the other way as well, updating the variable in response to input changes\r\n\t\t\tbindChanges(element, content, inputProperty, conversion)\r\n\t\t} else {\r\n\t\t\t// primitive\r\n\t\t\telement[inputProperty] = content\r\n\t\t}\r\n\t}\r\n\r\n\tfunction mergeObject(Element, value, key, properties) {\r\n\t\tvar existing = properties[key]\r\n\t\tif (existing) {\r\n\t\t\tfor (var subKey in value) {\r\n\t\t\t\texisting[subKey] = value[subKey]\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tproperties[key] = value\r\n\t\t}\r\n\t}\r\n\r\n\tvar classHandlers = {\r\n\t\tclasses: mergeObject,\r\n\t\t_generators: mergeObject,\r\n\t\tdataset: mergeObject,\r\n\t\tattributes: mergeObject,\r\n\t\tstyle: mergeObject,\r\n\t\thasOwn: function(Element, value) {\r\n\t\t\thasOwn(Element, value)\r\n\t\t},\r\n\t\tchildren: function(Element, value) {\r\n\t\t\tElement.children = value\r\n\t\t},\r\n\t\tshadow: function(Element, value) {\r\n\t\t\tElement.shadow = value\r\n\t\t}\r\n\t}\r\n\r\n\tfunction applyToConstructor(argument, Element) {\r\n\t\tvar applyOnCreate = Element._applyOnCreate\r\n\t\tif (argument && typeof argument === 'object') {\r\n\t\t\tif (argument instanceof Array || argument.notifies) {\r\n\t\t\t\tapplyOnCreate.content = argument\r\n\t\t\t} else {\r\n\t\t\t\tfor (var key in argument) {\r\n\t\t\t\t// TODO: eventually we want to be able to set these as rules statically per element\r\n\t\t\t\t/*if (styleDefinitions[key]) {\r\n\t\t\t\t\tvar styles = Element.styles || (Element.styles = [])\r\n\t\t\t\t\tstyles.push(key)\r\n\t\t\t\t\tstyles[key] = descriptor.value\r\n\t\t\t\t} else {*/\r\n\t\t\t\t\tvar value = argument[key]\r\n\t\t\t\t\tvar VariableClass = Element[key]\r\n\t\t\t\t\tif (typeof value === 'function') {\r\n\t\t\t\t\t\tif (value.notifies) {\r\n\t\t\t\t\t\t\tif (value === Variable) {\r\n\t\t\t\t\t\t\t\tvalue = Variable() // create a branded variable if we are using a generic one\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t// for Variable classes we make them statically available on the element\r\n\t\t\t\t\t\t\tElement[key] = value\r\n\t\t\t\t\t\t} else if (isGenerator(value)) {\r\n\t\t\t\t\t\t\tif (key.slice(0, 4) === 'get_') {\r\n\t\t\t\t\t\t\t\tkey = key.slice(4)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t(applyOnCreate._generators || (applyOnCreate._generators = {}))[key] = value\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (value && value.notifies) {\r\n\t\t\t\t\t\t// also store any variables as statically available properties\r\n\t\t\t\t\t\tElement[key] = value\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (classHandlers[key]) { // Could eliminate this if we got rid of hasOwn\r\n\t\t\t\t\t\tclassHandlers[key](Element, value, key, applyOnCreate)\r\n\t\t\t\t\t} else if (typeof VariableClass === 'function' && VariableClass.notifies) {\r\n\t\t\t\t\t\tapplyOnCreate[key] = new VariableClass(value)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tapplyOnCreate[key] = value\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (typeof argument === 'function' && !argument.for) {\r\n\t\t\tthrow new TypeError('Function as argument not supported')\r\n\t\t} else {\r\n\t\t\tapplyOnCreate.content = argument\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getApplySet(Class) {\r\n\t\tif (Class.hasOwnProperty('_applyOnCreate')) {\r\n\t\t\treturn Class._applyOnCreate\r\n\t\t}\r\n\t\t// this means we didn't extend and evaluate the prototype yet\r\n\t\tif (Class.getForClass) {\r\n\t\t\t// we are extending an alkali constructor\r\n\t\t\t// if this class is inheriting from an alkali constructor, work our way up the chain\r\n\t\t\tvar applyOnCreate = Class._applyOnCreate = {}\r\n\t\t\tvar parentApplySet = getApplySet(getPrototypeOf(Class))\r\n\t\t\tfor (var key in parentApplySet) {\r\n\t\t\t\tapplyOnCreate[key] = classHandlers[key] ? Object.create(parentApplySet[key]) : parentApplySet[key]\r\n\t\t\t}\r\n\t\t\t// we need to check the prototype for event handlers\r\n\t\t\tvar prototype = Class.prototype\r\n\t\t\tvar propertyHandlers\r\n\t\t\tvar keys = Object.getOwnPropertyNames(prototype)\r\n\t\t\tfor (var i = 0, l = keys.length; i < l; i++) {\r\n\t\t\t\tvar key = keys[i]\r\n\t\t\t\tif (key.slice(0, 2) === 'on' || (key === 'render' && isGenerator(prototype[key]))) {\r\n\t\t\t\t\tapplyOnCreate[key] = prototype[key]\r\n\t\t\t\t} else if (key.slice(0, 6) === 'render') {\r\n\t\t\t\t\tvar propertyName = key[6].toLowerCase() + key.slice(7)\r\n\t\t\t\t\tif (!propertyHandlers) {\r\n\t\t\t\t\t\tpropertyHandlers = prototype._propertyHandlers = Object.create(prototype._propertyHandlers)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tpropertyHandlers[propertyName] = true // TODO: is it better to implement this with property handlers?\r\n\t\t\t\t\tObject.defineProperty(prototype, propertyName, renderDescriptor(key))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn applyOnCreate\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\tfunction renderDescriptor(renderMethod) {\r\n\t\tvar map = new WeakMap()\r\n\t\treturn {\r\n\t\t\tget: function() {\r\n\t\t\t\treturn map.has(this) ? map.get(this) : null\r\n\t\t\t},\r\n\t\t\tset: function(value) {\r\n\t\t\t\tmap.set(this, value)\r\n\t\t\t\tthis[renderMethod](value)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction makeElementConstructor() {\r\n\t\tfunction Element(selector, properties) {\r\n\t\t\tif (this instanceof Element){\r\n\t\t\t\t// create DOM element\r\n\t\t\t\t// Need to detect if we have registered the element and `this` is actually already the correct instance\r\n\t\t\t\treturn create.apply(Element.prototype === getPrototypeOf(this) ? Element :// this means it is from this constructor\r\n\t\t\t\t\tthis.constructor, // this means it was constructed from a subclass\r\n\t\t\t\t\targuments)\r\n\t\t\t} else {\r\n\t\t\t\t// extend to create new class\r\n\t\t\t\treturn withProperties.apply(Element, arguments)\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn Element\r\n\t}\r\n\r\n\tfunction withProperties(selector, properties) {\r\n\t\tvar Element = makeElementConstructor()\r\n\t\tif (this.with) {\r\n\t\t\t// TODO: Might consider only doing this for derivatives of derivatives, since we don't need to inherit from base constructors\r\n\t\t\t// or only doing this in the case of element having custom properties (could mark it with a flag)\r\n\t\t\tsetPrototypeOf(Element, this)\r\n\t\t\tElement.ownedClasses = null\r\n\t\t} else {\r\n\t\t\tElement.create = create\r\n\t\t\tElement.with = withProperties\r\n\t\t\tElement.for = forTarget\r\n\t\t\tElement.property = propertyForElement\r\n\t\t\tElement.getForClass = getForClass\r\n\t\t}\r\n\t\tElement.prototype = this.prototype\r\n\r\n\t\tvar applyOnCreate = Element._applyOnCreate = {}\r\n\t\tvar parentApplySet = getApplySet(this)\r\n\t\t// copy parent properties\r\n\t\tfor (var key in parentApplySet) {\r\n\t\t\tapplyOnCreate[key] = classHandlers[key] ? Object.create(parentApplySet[key]) : parentApplySet[key]\r\n\t\t}\r\n\r\n\t\tvar i = 0 // for arguments\r\n\t\tif (typeof selector === 'string') {\r\n\t\t\tvar selectorMatch = selector.match(SELECTOR_REGEX)\r\n\t\t\tif (selectorMatch) {\r\n\t\t\t\tdo {\r\n\t\t\t\t\tvar operator = selectorMatch[1]\r\n\t\t\t\t\tvar name = selectorMatch[2]\r\n\t\t\t\t\tif (operator == '.') {\r\n\t\t\t\t\t\tif (applyOnCreate.className) {\r\n\t\t\t\t\t\t\tapplyOnCreate.className += ' ' + name\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tapplyOnCreate.className = name\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tapplyOnCreate.id = name\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar remaining = selectorMatch[3]\r\n\t\t\t\t\tselectorMatch = remaining && remaining.match(SELECTOR_REGEX)\r\n\t\t\t\t} while (selectorMatch)\r\n\t\t\t} else {\r\n\t\t\t\tapplyOnCreate.content = selector\r\n\t\t\t}\r\n\t\t\ti++ // skip the first argument\r\n\t\t}\r\n\r\n\t\tfor (var l = arguments.length; i < l; i++) {\r\n\t\t\tapplyToConstructor(arguments[i], Element)\r\n\t\t}\r\n\t\treturn Element\r\n\t}\r\n\tvar currentParent\r\n\tfunction create(selector, properties) {\r\n\t\t// TODO: make this a symbol\r\n\t\tvar applyOnCreate = getApplySet(this)\r\n\t\tif (currentParent) {\r\n\t\t\tvar parent = currentParent\r\n\t\t\tcurrentParent = null\r\n\t\t}\r\n/*\t\tif (this._initialized != this) {\r\n\t\t\tthis._initialized = this\r\n\t\t\tthis.initialize && this.initialize()\r\n\t\t\tvar styles = this.styles\r\n\t\t\tif (styles) {\r\n\t\t\t\tvar rule = createCssRule(getUniqueSelector(this))\r\n\t\t\t\tfor (var i = 0, l = styles.length; i < l; i++) {\r\n\t\t\t\t\tvar key = styles[i]\r\n\t\t\t\t\tvar value = styles[key]\r\n\t\t\t\t\t// TODO: if it is a contextualized variable, do this on the element\r\n\t\t\t\t\tvar styleDefinition = styleDefinitions[key]\r\n\t\t\t\t\tif (styleDefinition) {\r\n\t\t\t\t\t\tstyleDefinition(rule, value, key)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!this.hasOwnProperty('_applyOnCreate')) {\r\n\t\t\t\tapplyOnCreate = getApplySet(this)\r\n\t\t\t}\r\n\t\t}*/\r\n\t\tvar element = doc.createElement(this.tagName)\r\n\t\tif (selector && selector.parent) {\r\n\t\t\tparent = selector.parent\r\n\t\t}\r\n\t\tif (parent) {\r\n\t\t\tpresumptiveParentMap.set(element, parent)\r\n\t\t}\r\n\t\tif (!(element instanceof this)) {\r\n\t\t\t// ideally we want to avoid this call, as it is expensive, but for classes that\r\n\t\t\t// don't register a tag name, we have to make sure the prototype chain is correct\r\n\t\t\tsetPrototypeOf(element, this.prototype)\r\n\t\t}\r\n\t\tif (element.constructor != this) {\r\n\t\t\telement.constructor = this // need to do this for hasOwn contextualization to work\r\n\t\t}\r\n\t\tif (arguments.length > 0) {\r\n\t\t\t// copy applyOnCreate when we have arguments\r\n\t\t\tvar ElementApplyOnCreate = applyOnCreate\r\n\t\t\tapplyOnCreate = {}\r\n\t\t\tfor (var key in ElementApplyOnCreate) {\r\n\t\t\t\tapplyOnCreate[key] = classHandlers[key] ? Object.create(ElementApplyOnCreate[key]) : ElementApplyOnCreate[key]\r\n\t\t\t}\r\n\t\t\tvar i = 0\r\n\t\t\tif (typeof selector == 'string') {\r\n\t\t\t\ti++\r\n\t\t\t\tvar selectorMatch = selector.match(SELECTOR_REGEX)\r\n\t\t\t\tif (selectorMatch) {\r\n\t\t\t\t\tdo {\r\n\t\t\t\t\t\tvar operator = selectorMatch[1]\r\n\t\t\t\t\t\tvar name = selectorMatch[2]\r\n\t\t\t\t\t\tif (operator == '.') {\r\n\t\t\t\t\t\t\tif (applyOnCreate.className) {\r\n\t\t\t\t\t\t\t\tapplyOnCreate.className += ' ' + name\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tif (element.className) {\r\n\t\t\t\t\t\t\t\t\t\telement.className += ' ' + name\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\telement.className = name\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (applyOnCreate.id) {\r\n\t\t\t\t\t\t\t\tapplyOnCreate.id = name\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// just skip right to the element\r\n\t\t\t\t\t\t\t\telement.id = name\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar remaining = selectorMatch[3]\r\n\t\t\t\t\t\tselectorMatch = remaining && remaining.match(SELECTOR_REGEX)\r\n\t\t\t\t\t} while (selectorMatch)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tapplyOnCreate.content = selector\r\n\t\t\t\t}\r\n\t\t\t} else if (selector && selector._item) {\r\n\t\t\t\t// this is kind of hack, to get the Item available before the properties, eventually we may want to\r\n\t\t\t\t// order static properties before variable binding applications, but for now.\r\n\t\t\t\telement._item = selector._item\r\n\t\t\t}\r\n\t\t\tfor (var l = arguments.length; i < l; i++) {\r\n\t\t\t\tvar argument = arguments[i]\r\n\t\t\t\tif (argument && typeof argument === 'object') {\r\n\t\t\t\t\tif (argument instanceof Array || argument.notifies) {\r\n\t\t\t\t\t\tapplyOnCreate.content = argument\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tfor (var key in argument) {\r\n\t\t\t\t\t\t\tif (classHandlers[key]) {\r\n\t\t\t\t\t\t\t\tclassHandlers[key](this, argument[key], key, applyOnCreate)\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tapplyOnCreate[key] = argument[key]\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (typeof argument === 'function' && argument.for) {\r\n\t\t\t\t\tapplyOnCreate.content = argument.for(element)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tapplyOnCreate.content = argument\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (element.created) {\r\n\t\t\tapplyOnCreate = element.created(applyOnCreate) || applyOnCreate\r\n\t\t} else if (applyOnCreate.created) {\r\n\t\t\tapplyOnCreate = applyOnCreate.created.call(element, applyOnCreate) || applyOnCreate\r\n\t\t}\r\n\t\t// TODO: inline this for better performance, possibly\r\n\t\tassignProperties(element, applyOnCreate)\r\n\r\n\t\tif (applyOnCreate._generators) {\r\n\t\t\tassignGenerators(element, applyOnCreate)\r\n\t\t}\r\n\r\n\t\tif (this.children) {\r\n\t\t\tlayoutChildren(element, this.children, element)\r\n\t\t}\r\n\t\tif (this.shadow) {\r\n\t\t\tlayoutChildren(element.attachShadow({mode: 'open'}), this.shadow, element)\r\n\t\t}\r\n\t\t// always do this last, so it can be properly inserted inside the children\r\n\t\tif (element.content) {\r\n\t\t\tbuildContent(element, element.content, 'content', applyOnCreate)\r\n\t\t}\r\n\t\telement.ready && element.ready(applyOnCreate)\r\n\t\treturn element\r\n\t}\r\n\r\n\tvar slice = [].slice\r\n\tfunction append(parent){\r\n\t\treturn this.nodeType ?\r\n\t\t\tlayoutChildren(this, arguments, this) : // called as a method\r\n\t\t\tlayoutChildren(parent, slice.call(arguments, 1), parent) // called as a function\r\n\t}\r\n\r\n\tfunction prepend(parent){\r\n\t\treturn this.nodeType ?\r\n\t\t\tlayoutChildren(this, arguments, this, true) : // called as a method\r\n\t\t\tlayoutChildren(parent, slice.call(arguments, 1), parent, true) // called as a function\r\n\t}\r\n\r\n\tfunction defineTag(tagName, Element) {\r\n\t\tvar extendElement = Element.tagName\r\n\t\tElement.tagName = tagName\r\n\t\tif (typeof customElements === 'object') {\r\n\t\t\tcustomElements.define(tagName, lang.extendClass(HTMLElement), { extends: extendElement })\r\n\t\t} else {\r\n\t\t\tconsole.warn('This browser does not support customElements, ensure that the constructor is used to create new elements')\r\n\t\t}\r\n\t}\r\n\r\n\tvar Element = withProperties.call(typeof HTMLElement !== 'undefined' ? HTMLElement : function() {})\r\n\r\n\tElement.defineTag = defineTag\r\n\tElement.assign = function(target, properties) {\r\n\t\tif (typeof target === 'function') {\r\n\t\t\t// assign properties to an existing constructor/class\r\n\t\t\tgetApplySet(target) // make sure we have our own applyOnCreate first\r\n\t\t\tapplyToConstructor(properties, target)\r\n\t\t} else {\r\n\t\t\t// assign to an element\r\n\t\t\t// TODO: Handle content property separately\r\n\t\t\treturn assignProperties(target, properties)\r\n\t\t}\r\n\t}\r\n\r\n\tElement.within = function(element){\r\n\t\t// find closest child\r\n\t}\r\n\r\n\tgenerate([\r\n\t\t'Video',\r\n\t\t'Source',\r\n\t\t'Media',\r\n\t\t'Audio',\r\n\t\t'UL',\r\n\t\t'U',\r\n\t\t'Track',\r\n\t\t'Title',\r\n\t\t'TextArea',\r\n\t\t'Template',\r\n\t\t'TBody',\r\n\t\t'THead',\r\n\t\t'TFoot',\r\n\t\t'TR',\r\n\t\t'Table',\r\n\t\t'Col',\r\n\t\t'ColGroup',\r\n\t\t'TH',\r\n\t\t'TD',\r\n\t\t'Caption',\r\n\t\t'Sup',\r\n\t\t'Sub',\r\n\t\t'Style',\r\n\t\t'Strong',\r\n\t\t'Span',\r\n\t\t'Small',\r\n\t\t'Shadow',\r\n\t\t'Select',\r\n\t\t'Script',\r\n\t\t'S',\r\n\t\t'Quote',\r\n\t\t'Progress',\r\n\t\t'Pre',\r\n\t\t'Picture',\r\n\t\t'Param',\r\n\t\t'P',\r\n\t\t'Output',\r\n\t\t'Option',\r\n\t\t'Optgroup',\r\n\t\t'Object',\r\n\t\t'OL',\r\n\t\t'Ins',\r\n\t\t'I',\r\n\t\t'Del',\r\n\t\t'Meter',\r\n\t\t'Meta',\r\n\t\t'Menu',\r\n\t\t'Map',\r\n\t\t'Link',\r\n\t\t'Legend',\r\n\t\t'Label',\r\n\t\t'LI',\r\n\t\t'KeyGen',\r\n\t\t'Input',\r\n\t\t'Img',\r\n\t\t'IFrame',\r\n\t\t'H1',\r\n\t\t'H2',\r\n\t\t'H3',\r\n\t\t'H4',\r\n\t\t'H5',\r\n\t\t'H6',\r\n\t\t'Hr',\r\n\t\t'FrameSet',\r\n\t\t'Frame',\r\n\t\t'Form',\r\n\t\t'Font',\r\n\t\t'Embed',\r\n\t\t'Em',\r\n\t\t'Code',\r\n\t\t'Cite',\r\n\t\t'Dfn',\r\n\t\t'B',\r\n\t\t'Article',\r\n\t\t'Aside',\r\n\t\t'Abbr',\r\n\t\t'Footer',\r\n\t\t'Figure',\r\n\t\t'FigCaption',\r\n\t\t'Header',\r\n\t\t'Main',\r\n\t\t'Mark',\r\n\t\t'MenuItem',\r\n\t\t'Nav',\r\n\t\t'Section',\r\n\t\t'Slot',\r\n\t\t'Summary',\r\n\t\t'WBr',\r\n\t\t'Div',\r\n\t\t'Dialog',\r\n\t\t'Details',\r\n\t\t'DataList',\r\n\t\t'DL',\r\n\t\t'Canvas',\r\n\t\t'Button',\r\n\t\t'Base',\r\n\t\t'Br',\r\n\t\t'Area',\r\n\t\t'A'\r\n\t])\r\n\tgenerateInputs([\r\n\t\t'Checkbox',\r\n\t\t'Password',\r\n\t\t'Submit',\r\n\t\t'Radio',\r\n\t\t'Color',\r\n\t\t'Date',\r\n\t\t'DateTime',\r\n\t\t'Email',\r\n\t\t'Month',\r\n\t\t'Number',\r\n\t\t'Range',\r\n\t\t'Search',\r\n\t\t'Tel',\r\n\t\t'Time',\r\n\t\t'Url',\r\n\t\t'Week'])\r\n\r\n\tvar tags = {}\r\n\tfunction getConstructor(tagName) {\r\n\t\ttagName = tagName.toLowerCase()\r\n\t\treturn tags[tagName] ||\r\n\t\t\t(tags[tagName] =\r\n\t\t\t\tsetupElement(withProperties.call(doc.createElement(tagName).constructor), tagName))\r\n\t}\r\n\r\n\tfunction setupElement(Element, tagName) {\r\n\t\tvar props = elementPropertyHandlers[tagName]\r\n\t\tif (props && !props.assigned) {\r\n\t\t\tvar handlers = Element.prototype._propertyHandlers = Object.create(propertyHandlers)\r\n\t\t\tfor (var i = 0, l = props.length; i < l; i++) {\r\n\t\t\t\thandlers[props[i]] = true\r\n\t\t\t}\r\n\t\t\tif (props.value) {\r\n\t\t\t\tfor (var i in props) {\r\n\t\t\t\t\tif (!(i > -1)) { // assign any string properties if necessary\r\n\t\t\t\t\t\thandlers[i] = props[i]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tprops.assigned = true\r\n\t\t}\r\n\t\tElement.tagName = tagName\r\n\t\treturn Element\r\n\t}\r\n\tfunction generate(elements) {\r\n\t\telements.forEach(function(elementName) {\r\n\t\t\tvar ElementClass\r\n\t\t\tObject.defineProperty(Element, elementName, {\r\n\t\t\t\tget: function() {\r\n\t\t\t\t\treturn ElementClass || (ElementClass = getConstructor(elementName))\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\tfunction generateInputs(elements) {\r\n\t\telements.forEach(function(inputType) {\r\n\t\t\tvar ElementClass\r\n\t\t\tObject.defineProperty(Element, inputType, {\r\n\t\t\t\tget: function() {\r\n\t\t\t\t\t// TODO: make all inputs extend from input generated from generate\r\n\t\t\t\t\treturn ElementClass || (ElementClass = setupElement(withProperties.call(HTMLInputElement, {\r\n\t\t\t\t\t\ttype: inputType.toLowerCase()\r\n\t\t\t\t\t}), 'input'))\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t// alias all the inputs with an Input suffix\r\n\t\t\tObject.defineProperty(Element, inputType + 'Input', {\r\n\t\t\t\tget: function() {\r\n\t\t\t\t\treturn this[inputType]\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\tvar aliases = {\r\n\t\tAnchor: 'A',\r\n\t\tImage: 'Img',\r\n\t\tParagraph: 'P',\r\n\t\tTextarea: 'TextArea',\r\n\t\tDList: 'DL',\r\n\t\tUList: 'UL',\r\n\t\tOList: 'OL',\r\n\t\tListItem: 'LI',\r\n\t\tText: 'Input',\r\n\t\tTextInput: 'Input',\r\n\t\tTableRow: 'TR',\r\n\t\tTableCell: 'TD',\r\n\t\tTableHeaderCell: 'TH',\r\n\t\tTableHeader: 'THead',\r\n\t\tTableBody: 'TBody'\r\n\t}\r\n\tfor (var alias in aliases) {\r\n\t\t(function(alias, to) {\r\n\t\t\tObject.defineProperty(Element, alias, {\r\n\t\t\t\tget: function() {\r\n\t\t\t\t\treturn this[to]\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})(alias, aliases[alias])\r\n\t}\r\n\r\n\tElement.append = append\r\n\tElement.prepend = prepend\r\n\tElement.refresh = Renderer.refresh\r\n\tElement.options = {\r\n\t\tmoveLiveElementsEnabled: true,\r\n\t}\r\n\tElement.content = function(element){\r\n\t\t// container marker\r\n\t\treturn {\r\n\t\t\tisContentNode: true,\r\n\t\t\tcreate: element.create.bind(element)\r\n\t\t}\r\n\t}\r\n\r\n\tElement.ElementClass = function() {}\r\n\tif (typeof Symbol !== 'undefined') {\r\n\t\t// make instanceof work for Element\r\n\t\tObject.defineProperty(Element.ElementClass, Symbol.hasInstance, { value: function(target) {\r\n\t\t\treturn target && (target.create && target.with)\r\n\t\t}})\r\n\t}\r\n\r\n\t// TODO: unify this in lang\r\n\tElement.extend = function(Class, properties) {\r\n\t\tfunction ExtendedElement() {\r\n\t\t\treturn Class.apply(this, arguments)\r\n\t\t}\r\n\t\tsetPrototypeOf(ExtendedElement, Class)\r\n\t\tvar prototype = ExtendedElement.prototype = Object.create(Class.prototype)\r\n\t\tprototype.constructor = ExtendedElement\r\n\t\tObject.getOwnPropertyNames(properties).forEach(function(key) {\r\n\t\t\tvar descriptor = Object.getOwnPropertyDescriptor(properties, key)\r\n\t\t\tif (classHandlers[key]) {\r\n\t\t\t\tclassHandlers[key](ExtendedElement, descriptor.value, key, properties)\r\n\t\t\t} else {\r\n\t\t\t\tObject.defineProperty(prototype, key, descriptor)\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn ExtendedElement\r\n\t}\r\n\r\n\tfunction forTarget(target) {\r\n\t\treturn target.constructor.getForClass(target, this)\r\n\t}\r\n\r\n\tfunction hasOwn(From, Target, createInstance) {\r\n\t\tif (typeof Target === 'object') {\r\n\t\t\t// we were given an actual instance, use that\r\n\t\t\tvar elementMap = From.ownedClasses || (From.ownedClasses = new WeakMap())\r\n\t\t\tvar instanceMap = {get: function () {\r\n\t\t\t\treturn Target\r\n\t\t\t}}\r\n\t\t\telementMap.set(Target.constructor, instanceMap)\r\n\t\t\treturn hasOwn(From, Target.Class, Target.createInstance)\r\n\t\t}\r\n\t\tif (Target instanceof Array) {\r\n\t\t\treturn Target.forEach(function(Target) {\r\n\t\t\t\thasOwn(From, Target)\r\n\t\t\t})\r\n\t\t}\r\n\t\tvar elementMap = From.ownedClasses || (From.ownedClasses = new WeakMap())\r\n\t\t// TODO: Go up through prototype chain of Target and set each one\r\n\t\tif (!elementMap.has(Target)) {\r\n\t\t\tvar instanceMap = new WeakMap()\r\n\t\t\tinstanceMap.createInstance = createInstance\r\n\t\t\telementMap.set(Target, instanceMap)\r\n\t\t}\r\n\t\treturn From\r\n\t}\r\n\r\n\tfunction getForClass(element, Target) {\r\n\t\tvar createInstance\r\n\t\twhile (element && !(createInstance = element.constructor.ownedClasses && element.constructor.ownedClasses.get(Target))) {\r\n\t\t\telement = element.parentNode || presumptiveParentMap.get(element)\r\n\t\t}\r\n\t\tif (createInstance) {\r\n\t\t\tvar ownedInstances = element.ownedInstances || (element.ownedInstances = new WeakMap())\r\n\t\t\tvar instance = ownedInstances.get(Target)\r\n\t\t\tif (instance === undefined) {\r\n\t\t\t\townedInstances.set(Target, instance = createInstance(element))\r\n\t\t\t\tinstance.subject = element\r\n\t\t\t}\r\n\t\t\treturn instance\r\n\t\t}\r\n\t}\r\n\r\n\tfunction propertyForElement(key) {\r\n\t\t// we just need to establish one Variable class for each element, so we cache it\r\n\t\tThisElementVariable = this._Variable\r\n\t\tif (!ThisElementVariable) {\r\n\t\t\t// need our own branded variable class for this element class\r\n\t\t\tThisElementVariable = this._Variable = Variable()\r\n\r\n\t\t\thasOwn(this, ThisElementVariable, function(element) {\r\n\t\t\t\t// TODO: we might want to do this in init instead\r\n\t\t\t\tvar elementOverlay\r\n\t\t\t\tif (element.alkaliRenderers) {\r\n\t\t\t\t\tvar variableProperties = {}\r\n\t\t\t\t\tfor (var i = 0; i < element.alkaliRenderers.length; i++){\r\n\t\t\t\t\t\tvar renderer = element.alkaliRenderers[i]\r\n\t\t\t\t\t\tif (renderer.name) {\r\n\t\t\t\t\t\t\tvariableProperties[renderer.name] = {value: renderer.variable}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\telementOverlay = Object.create(element, variableProperties)\r\n\t\t\t\t} else {\r\n\t\t\t\t\telementOverlay = element\r\n\t\t\t\t}\r\n\t\t\t\tvar instance = new ThisElementVariable(elementOverlay)\r\n\t\t\t\t// we are not observing, because you can't delegate getters and setters in safari\r\n\t\t\t\t// instance.observeObject()\r\n\t\t\t\treturn instance\r\n\t\t\t})\r\n\t\t}\r\n\t\t// now actually get the property class\r\n\t\treturn ThisElementVariable.property(key)\r\n\t}\r\n\r\n\tvar Item = Element.Item = Variable.Item\r\n\r\n\tfunction enterRenderer(Renderer, options/*, target*/) {\r\n\t\t// this will be used for optimized class-level variables\r\n\t\t/*if (target.started) { // TODO: Might want to pass in started as a parameter\r\n\t\t\t// this means that the renderer has already been created, so we just need to add this instance\r\n\t\t\tRenderer.prototype.renderUpdate.call(options, element)\r\n\t\t} else {*/\r\n\t\tnew Renderer(options)\r\n\t\t//}\r\n\t}\r\n\r\n\tfunction cleanup(target) {\r\n\t\tvar renderers = target.alkaliRenderers\r\n\t\tif (renderers) {\r\n\t\t\tfor (var i = 0, l = renderers.length; i < l; i++) {\r\n\t\t\t\trenderers[i].stop()\r\n\t\t\t}\r\n\t\t\ttarget.needsRestart = true\r\n\t\t}\r\n\t}\r\n\tfunction restart(target) {\r\n\t\tvar renderers = target.alkaliRenderers\r\n\t\tif (renderers) {\r\n\t\t\tfor (var i = 0, l = renderers.length; i < l; i++) {\r\n//\t\t\t\tupdaters[i].start()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// setup the mutation observer so we can be notified of attachments and removals\r\n\tfunction elementAttached(element) {\r\n\t\tvar Class = element.constructor\r\n\t\tif (Class.create) {\r\n/*\t\t\tif (Class.attachedInstances) {\r\n\t\t\t\tClass.attachedInstances.push(element)\r\n\t\t\t\tif (Class.attachedInstances.length === 1 && Class.needsRestart) {\r\n\t\t\t\t\trestart(Class)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tClass.attachedInstances = [element]\r\n\t\t\t}*/\r\n\t\t\tif (element.attached) {\r\n\t\t\t\telement.attached()\r\n\t\t\t}\r\n\t\t\tif (element.needsRestart) {\r\n\t\t\t\trestart(element)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfunction elementDetached(element) {\r\n\t\t/*var attachedInstances = element.constructor.attachedInstances\r\n\t\tif (attachedInstances) {\r\n\t\t\tvar index = attachedInstances.indexOf(element)\r\n\t\t\tif (index > -1) {\r\n\t\t\t\tattachedInstances.splice(index, 1)\r\n\t\t\t\tif (attachedInstances.length === 0) {\r\n\t\t\t\t\tcleanup(Class)\r\n\t\t\t\t}\r\n\t\t\t}*/\r\n\t\t\tif (element.detached) {\r\n\t\t\t\telement.detached()\r\n\t\t\t}\r\n\t\t\tcleanup(element)\r\n\t\t//}\r\n\t}\r\n\tif (typeof MutationObserver === 'function') {\r\n\t\tvar lifeStates = [{\r\n\t\t\tname: 'detached',\r\n\t\t\tnodes: 'removedNodes',\r\n\t\t\taction: elementDetached\r\n\t\t}, {\r\n\t\t\tname: 'attached',\r\n\t\t\tnodes: 'addedNodes',\r\n\t\t\taction: elementAttached\r\n\t\t}]\r\n\t\tfunction firstVisit(node, state) {\r\n\t\t\tif (state.name === 'attached') {\r\n\t\t\t\tif (node.__alkaliAttached__) {\r\n\t\t\t\t\treturn false\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnode.__alkaliAttached__ = true\r\n\t\t\t\t\tstate.action(node)\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}\r\n\t\t\t} else if (node.__alkaliAttached__) {\r\n\t\t\t\tif (doc.body.contains(node)) {\r\n\t\t\t\t\t// detached event, but it is actually still attached (will get attached in a later mutation record)\r\n\t\t\t\t\t// so don't get through the detached/attached lifecycle\r\n\t\t\t\t\treturn false\r\n\t\t\t\t}\r\n\t\t\t\tnode.__alkaliAttached__ = false\r\n\t\t\t\tstate.action(node)\r\n\t\t\t}\r\n\t\t\treturn true\r\n\t\t}\r\n\t\tvar observer = new MutationObserver(function(mutations) {\r\n\t\t\tfor (var i = 0, il = mutations.length; i < il; i++) {\r\n\t\t\t\tvar mutation = mutations[i]\r\n\t\t\t\t// invoke action on element if we haven't already\r\n\t\t\t\tactionIteration:\r\n\t\t\t\tfor (var j = 0, jl = lifeStates.length; j < jl; j++) { // two steps, removed nodes and added nodes\r\n\t\t\t\t\tvar state = lifeStates[j]\r\n\t\t\t\t\tvar nodes = mutation[state.nodes]\r\n\t\t\t\t\t// iterate over node list\r\n\t\t\t\t\tnodeIteration:\r\n\t\t\t\t\tfor (var k = 0, kl = nodes.length; k < kl; k++) {\r\n\t\t\t\t\t\tvar baseNode = nodes[k]\r\n\t\t\t\t\t\tif (firstVisit(baseNode, state)) {\r\n\t\t\t\t\t\t\t// start traversal with child, if it exists\r\n\t\t\t\t\t\t\tvar currentNode = baseNode.firstChild\r\n\t\t\t\t\t\t\tif (currentNode) {\r\n\t\t\t\t\t\t\t\tdo {\r\n\t\t\t\t\t\t\t\t\tvar nextNode\r\n\t\t\t\t\t\t\t\t\tif (currentNode.nodeType === 1 && firstVisit(currentNode, state)) {\r\n\t\t\t\t\t\t\t\t\t\t// depth-first search\r\n\t\t\t\t\t\t\t\t\t\tnextNode = currentNode.firstChild\r\n\t\t\t\t\t\t\t\t\t\tif (!nextNode) {\r\n\t\t\t\t\t\t\t\t\t\t\tnextNode = currentNode.nextSibling\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tnextNode = currentNode.nextSibling\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif (!nextNode) {\r\n\t\t\t\t\t\t\t\t\t\t// come back out to parents\r\n\t\t\t\t\t\t\t\t\t\t// TODO: try keeping a stack to make this faster\r\n\t\t\t\t\t\t\t\t\t\tdo {\r\n\t\t\t\t\t\t\t\t\t\t\tcurrentNode = currentNode.parentNode\r\n\t\t\t\t\t\t\t\t\t\t\tif (currentNode === baseNode) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tcontinue nodeIteration\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t} while (!(nextNode = currentNode.nextSibling))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tcurrentNode = nextNode\r\n\t\t\t\t\t\t\t\t} while (true)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// if (options.moveLiveElementsEnabled) {\r\n\t\t\t\t\t\t// TODO: any options that we can really do here?\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\tobserver.observe(doc.body || doc, {\r\n\t\t\tchildList: true,\r\n\t\t\tsubtree: true\r\n\t\t})\r\n\t}\r\n\r\n\tlang.copy(Variable.Context.prototype, {\r\n\t\tspecify: function(Variable) {\r\n\t\t\tvar element = this.subject\r\n\t\t\tvar distinctive = true\r\n\t\t\t;(this.generics || (this.generics = [])).push(Variable)\r\n\t\t\tdo {\r\n\t\t\t\tif (this.distinctSubject === element) {\r\n\t\t\t\t\tdistinctive = false\r\n\t\t\t\t}\r\n\t\t\t\tvar subjectMap = element.constructor.ownedClasses\r\n\t\t\t\tif (subjectMap) {\r\n\t\t\t\t\tvar instanceMap = subjectMap.get(Variable)\r\n\t\t\t\t\tif (instanceMap) {\r\n\t\t\t\t\t\tif (distinctive) {\r\n\t\t\t\t\t\t\tthis.distinctSubject = element\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tspecifiedInstance = instanceMap.get(element)\r\n\t\t\t\t\t\tif (!specifiedInstance) {\r\n\t\t\t\t\t\t\tinstanceMap.set(element, specifiedInstance = instanceMap.createInstance ?\r\n\t\t\t\t\t\t\t\tinstanceMap.createInstance(element) : new Variable())\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn specifiedInstance\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} while ((element = element.parentNode || presumptiveParentMap.get(element)))\r\n\t\t\t// else if no specific context is found, return default instance\r\n\t\t\treturn Variable.defaultInstance\r\n\t\t},\r\n\r\n\t\tgetContextualized: function(variable) {\r\n\t\t\t// returns a variable that has already been contextualized\r\n\t\t\tvar element = this.subject\r\n\t\t\tif (!element) {\r\n\t\t\t\t// no element, just use the default variable\r\n\t\t\t\treturn variable\r\n\t\t\t}\r\n\t\t\tif (variable._contextMap) {\r\n\t\t\t\tdo {\r\n\t\t\t\t\tvar instance = variable._contextMap.get(element)\r\n\t\t\t\t\tif (instance && instance.context.matches(element)) {\r\n\t\t\t\t\t\treturn instance\r\n\t\t\t\t\t}\r\n\t\t\t\t} while ((element = element.parentNode || presumptiveParentMap.get(element)))\r\n\t\t\t}\r\n\t\t\tif (variable.context && variable.context.matches(this.subject)) {\r\n\t\t\t\t// check if the default variable is allowed\r\n\t\t\t\treturn variable\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tmerge: function(childContext) {\r\n\t\t\tif (!this.distinctSubject || this.distinctSubject.contains(childContext.distinctSubject)) {\r\n\t\t\t\tthis.distinctSubject = childContext.distinctSubject\r\n\t\t\t}\r\n\t\t\t[].push.apply(this.generics || (this.generics = []), childContext.generics)\r\n\t\t},\r\n\t\tgetDistinctElement: function(Variable, element) {\r\n\t\t\tdo {\r\n\t\t\t\tvar subjectMap = element.constructor.ownedClasses\r\n\t\t\t\tif (subjectMap) {\r\n\t\t\t\t\tvar instanceMap = subjectMap.get(Variable)\r\n\t\t\t\t\tif (instanceMap && instanceMap.has(element)) {\r\n\t\t\t\t\t\treturn element\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} while ((element = element.parentNode || presumptiveParentMap.get(element)))\r\n\t\t},\r\n\t\tmatches: function(element) {\r\n\t\t\tvar generics = this.generics\r\n\t\t\tif (generics) {\r\n\t\t\t\tfor (var i = 0, l = generics.length; i < l; i++) {\r\n\t\t\t\t\tif (this.getDistinctElement(generics[i], element) !== this.distinctSubject) {\r\n\t\t\t\t\t\treturn false\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn true\r\n\t\t}\r\n\t})\r\n\r\n\r\n\r\n\treturn Element\r\n}))\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Element.js\n ** module id = 1\n ** module chunks = 0\n **/","(function (root, factory) { if (typeof define === 'function' && define.amd) {\r\n\tdefine([], factory) } else if (typeof module === 'object' && module.exports) {        \r\n  module.exports = factory() // Node\r\n}}(this, function () {\r\n\tvar getPrototypeOf = Object.getPrototypeOf || (function(base) { return base.__proto__ })\r\n\tvar setPrototypeOf = Object.setPrototypeOf || (function(base, proto) { base.__proto__ = proto})\r\n\tvar hasFeatures = {\r\n\t\trequestAnimationFrame: typeof requestAnimationFrame != 'undefined',\r\n\t\tdefineProperty: Object.defineProperty && (function() {\r\n\t\t\ttry{\r\n\t\t\t\tObject.defineProperty({}, 't', {})\r\n\t\t\t\treturn true\r\n\t\t\t}catch(e) {\r\n\t\t\t}\r\n\t\t})(),\r\n\t\tpromise: typeof Promise !== 'undefined',\r\n\t\tMutationObserver: typeof MutationObserver !== 'undefined',\r\n\t\t'WeakMap': typeof WeakMap === 'function'\r\n\t}\r\n\tfunction has(feature) {\r\n\t\treturn hasFeatures[feature]\r\n\t}\r\n\t// This is an polyfill for Object.observe with just enough functionality\r\n\t// for what Variables need\r\n\t// An observe function, with polyfile\r\n\tvar observe =\r\n\t\thas('defineProperty') ? \r\n\t\tfunction observe(target, listener) {\r\n\t\t\t/*for(var i in target) {\r\n\t\t\t\taddKey(i)\r\n\t\t\t}*/\r\n\t\t\tlistener.addKey = addKey\r\n\t\t\tlistener.remove = function() {\r\n\t\t\t\tlistener = null\r\n\t\t\t}\r\n\t\t\treturn listener\r\n\t\t\tfunction addKey(key) {\r\n\t\t\t\tvar keyFlag = 'key' + key\r\n\t\t\t\tif(this[keyFlag]) {\r\n\t\t\t\t\treturn\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis[keyFlag] = true\r\n\t\t\t\t}\r\n\t\t\t\tvar currentValue = target[key]\r\n\t\t\t\tvar targetAncestor = target\r\n\t\t\t\tvar descriptor\r\n\t\t\t\tdo {\r\n\t\t\t\t\tdescriptor = Object.getOwnPropertyDescriptor(targetAncestor, key)\r\n\t\t\t\t} while(!descriptor && (targetAncestor = getPrototypeOf(targetAncestor)))\r\n\r\n\t\t\t\tif(descriptor && descriptor.set) {\r\n\t\t\t\t\tvar previousSet = descriptor.set\r\n\t\t\t\t\tvar previousGet = descriptor.get\r\n\t\t\t\t\tObject.defineProperty(target, key, {\r\n\t\t\t\t\t\tget: function() {\r\n\t\t\t\t\t\t\treturn (currentValue = previousGet.call(this))\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tset: function(value) {\r\n\t\t\t\t\t\t\tpreviousSet.call(this, value)\r\n\t\t\t\t\t\t\tif(currentValue !== value) {\r\n\t\t\t\t\t\t\t\tcurrentValue = value\r\n\t\t\t\t\t\t\t\tif(listener) {\r\n\t\t\t\t\t\t\t\t\tlistener([{target: this, name: key}])\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tenumerable: descriptor.enumerable\r\n\t\t\t\t\t})\r\n\t\t\t\t}else{\r\n\t\t\t\t\tObject.defineProperty(target, key, {\r\n\t\t\t\t\t\tget: function() {\r\n\t\t\t\t\t\t\treturn currentValue\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tset: function(value) {\r\n\t\t\t\t\t\t\tif(currentValue !== value) {\r\n\t\t\t\t\t\t\t\tcurrentValue = value\r\n\t\t\t\t\t\t\t\tif(listener) {\r\n\t\t\t\t\t\t\t\t\tlistener([{target: this, name: key}])\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tenumerable: !descriptor || descriptor.enumerable\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} :\r\n\t\t// and finally a polling-based solution, for the really old browsers\r\n\t\tfunction(target, listener) {\r\n\t\t\tif(!timerStarted) {\r\n\t\t\t\ttimerStarted = true\r\n\t\t\t\tsetInterval(function() {\r\n\t\t\t\t\tfor(var i = 0, l = watchedObjects.length; i < l; i++) {\r\n\t\t\t\t\t\tdiff(watchedCopies[i], watchedObjects[i], listeners[i])\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 20)\r\n\t\t\t}\r\n\t\t\tvar copy = {}\r\n\t\t\tfor(var i in target) {\r\n\t\t\t\tif(target.hasOwnProperty(i)) {\r\n\t\t\t\t\tcopy[i] = target[i]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twatchedObjects.push(target)\r\n\t\t\twatchedCopies.push(copy)\r\n\t\t\tlisteners.push(listener)\r\n\t\t}\r\n\tvar queuedListeners\r\n\tfunction queue(listener, object, name) {\r\n\t\tif(queuedListeners) {\r\n\t\t\tif(queuedListeners.indexOf(listener) === -1) {\r\n\t\t\t\tqueuedListeners.push(listener)\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tqueuedListeners = [listener]\r\n\t\t\tlang.nextTurn(function() {\r\n\t\t\t\tqueuedListeners.forEach(function(listener) {\r\n\t\t\t\t\tvar events = []\r\n\t\t\t\t\tlistener.properties.forEach(function(property) {\r\n\t\t\t\t\t\tevents.push({target: listener.object, name: property})\r\n\t\t\t\t\t})\r\n\t\t\t\t\tlistener(events)\r\n\t\t\t\t\tlistener.object = null\r\n\t\t\t\t\tlistener.properties = null\r\n\t\t\t\t})\r\n\t\t\t\tqueuedListeners = null\r\n\t\t\t}, 0)\r\n\t\t}\r\n\t\tlistener.object = object\r\n\t\tvar properties = listener.properties || (listener.properties = [])\r\n\t\tif(properties.indexOf(name) === -1) {\r\n\t\t\tproperties.push(name)\r\n\t\t}\r\n\t}\r\n\tvar unobserve = has('observe') ? Object.unobserve :\r\n\t\tfunction(target, listener) {\r\n\t\t\tif(listener.remove) {\r\n\t\t\t\tlistener.remove()\r\n\t\t\t}\r\n\t\t\tfor(var i = 0, l = watchedObjects.length; i < l; i++) {\r\n\t\t\t\tif(watchedObjects[i] === target && listeners[i] === listener) {\r\n\t\t\t\t\twatchedObjects.splice(i, 1)\r\n\t\t\t\t\twatchedCopies.splice(i, 1)\r\n\t\t\t\t\tlisteners.splice(i, 1)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\tvar watchedObjects = []\r\n\tvar watchedCopies = []\r\n\tvar listeners = []\r\n\tvar timerStarted = false\r\n\tfunction diff(previous, current, callback) {\r\n\t\t// TODO: keep an array of properties for each watch for faster iteration\r\n\t\tvar queued\r\n\t\tfor(var i in previous) {\r\n\t\t\tif(previous.hasOwnProperty(i) && previous[i] !== current[i]) {\r\n\t\t\t\t// a property has changed\r\n\t\t\t\tprevious[i] = current[i]\r\n\t\t\t\t(queued || (queued = [])).push({name: i})\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(var i in current) {\r\n\t\t\tif(current.hasOwnProperty(i) && !previous.hasOwnProperty(i)) {\r\n\t\t\t\t// a property has been added\r\n\t\t\t\tprevious[i] = current[i]\r\n\t\t\t\t(queued || (queued = [])).push({name: i})\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(queued) {\r\n\t\t\tcallback(queued)\r\n\t\t}\r\n\t}\r\n\r\n\tvar id = 1\r\n\t// a function that returns a function, to stop JSON serialization of an\r\n\t// object\r\n\tfunction toJSONHidden() {\r\n\t\treturn toJSONHidden\r\n\t}\r\n\t// An object that will be hidden from JSON serialization\r\n\tvar Hidden = function () {\r\n\t}\r\n\tHidden.prototype.toJSON = toJSONHidden\r\n\r\n\tvar extendClass\r\n\ttry {\r\n\t\textendClass = eval('(function(Base){ return class extends Base {}})')\r\n\t} catch(e) {}\r\n\r\n\tvar lang = {\r\n\t\trequestAnimationFrame: has('requestAnimationFrame') ? requestAnimationFrame :\r\n\t\t\t(function() {\r\n\t\t\t\tvar toRender = []\r\n\t\t\t\tvar queued = false\r\n\t\t\t\tfunction processAnimationFrame() {\r\n\t\t\t\t\tfor (var i = 0; i < toRender.length; i++) {\r\n\t\t\t\t\t\ttoRender[i]()\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttoRender = []\r\n\t\t\t\t\tqueued = false\r\n\t\t\t\t}\r\n\t\t\t\tfunction requestAnimationFrame(renderer) {\r\n\t\t\t\t \tif (!queued) {\r\n\t\t\t\t\t\tsetTimeout(processAnimationFrame)\r\n\t\t\t\t\t\tqueued = true\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttoRender.push(renderer)\r\n\t\t\t\t}\r\n\t\t\t\treturn requestAnimationFrame\r\n\t\t\t})(),\r\n\t\tPromise: has('promise') ? Promise : (function() {\r\n\t\t\tfunction Promise(execute) {\r\n\t\t\t\tvar isResolved, resolution, errorResolution\r\n\t\t\t\tvar queue = 0\r\n\t\t\t\tfunction resolve(value) {\r\n\t\t\t\t\t// resolve function\r\n\t\t\t\t\tif(value && value.then) {\r\n\t\t\t\t\t\t// received a promise, wait for it\r\n\t\t\t\t\t\tvalue.then(resolve, reject)\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tresolution = value\r\n\t\t\t\t\t\tfinished()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfunction reject(error) {\r\n\t\t\t\t\t// reject function\r\n\t\t\t\t\terrorResolution = error\r\n\t\t\t\t\tfinished()\r\n\t\t\t\t}\r\n\t\t\t\texecute(resolve, reject)\r\n\t\t\t\tfunction finished() {\r\n\t\t\t\t\tisResolved = true\r\n\t\t\t\t\tfor(var i = 0, l = queue.length; i < l; i++) {\r\n\t\t\t\t\t\tqueue[i]()\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// clean out the memory\r\n\t\t\t\t\tqueue = 0\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\tthen: function(callback, errback) {\r\n\t\t\t\t\t\treturn new Promise(function(resolve, reject) {\r\n\t\t\t\t\t\t\tfunction handle() {\r\n\t\t\t\t\t\t\t\t// promise fulfilled, call the appropriate callback\r\n\t\t\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\t\t\tif(errorResolution && !errback) {\r\n\t\t\t\t\t\t\t\t\t\t// errors without a handler flow through\r\n\t\t\t\t\t\t\t\t\t\treject(errorResolution)\r\n\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\t// resolve to the callback's result\r\n\t\t\t\t\t\t\t\t\t\tresolve(errorResolution ?\r\n\t\t\t\t\t\t\t\t\t\t\terrback(errorResolution) :\r\n\t\t\t\t\t\t\t\t\t\t\tcallback ?\r\n\t\t\t\t\t\t\t\t\t\t\t\tcallback(resolution) : resolution)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}catch(newError) {\r\n\t\t\t\t\t\t\t\t\t// caught an error, reject the returned promise\r\n\t\t\t\t\t\t\t\t\treject(newError)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(isResolved) {\r\n\t\t\t\t\t\t\t\t// already resolved, immediately handle\r\n\t\t\t\t\t\t\t\thandle()\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t(queue || (queue = [])).push(handle)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn Promise\r\n\t\t}()),\r\n\r\n\t\tWeakMap: has('WeakMap') ? WeakMap :\r\n\t \tfunction (values, name) {\r\n\t \t\tvar mapProperty = '__' + (name || '') + id++\r\n\t \t\treturn has('defineProperty') ?\r\n\t \t\t{\r\n\t \t\t\tget: function (key) {\r\n\t \t\t\t\treturn key[mapProperty]\r\n\t \t\t\t},\r\n\t \t\t\tset: function (key, value) {\r\n\t \t\t\t\tObject.defineProperty(key, mapProperty, {\r\n\t \t\t\t\t\tvalue: value,\r\n\t \t\t\t\t\tenumerable: false\r\n\t \t\t\t\t})\r\n\t \t\t\t}\r\n\t \t\t} :\r\n\t \t\t{\r\n\t \t\t\tget: function (key) {\r\n\t \t\t\t\tvar intermediary = key[mapProperty]\r\n\t \t\t\t\treturn intermediary && intermediary.value\r\n\t \t\t\t},\r\n\t \t\t\tset: function (key, value) {\r\n\t \t\t\t\t// we use an intermediary that is hidden from JSON serialization, at least\r\n\t \t\t\t\tvar intermediary = key[mapProperty] || (key[mapProperty] = new Hidden())\r\n\t \t\t\t\tintermediary.value = value\r\n\t \t\t\t}\r\n\t \t\t}\r\n\t \t},\r\n\r\n\t\tobserve: observe,\r\n\t\tunobserve: unobserve,\r\n\t\textendClass: extendClass,\r\n\t\twhen: function(value, callback, errorHandler) {\r\n\t\t\treturn value && value.then ?\r\n\t\t\t\t(value.then(callback, errorHandler) || value) : callback(value)\r\n\t\t},\r\n\t\twhenAll: function(inputs, callback) {\r\n\t\t\tvar promiseInvolved\r\n\t\t\tfor(var i = 0, l = inputs.length; i < l; i++) {\r\n\t\t\t\tif(inputs[i] && inputs[i].then) {\r\n\t\t\t\t\tpromiseInvolved = true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(promiseInvolved) {\r\n\t\t\t\t// we have asynch inputs, do lazy loading\r\n\t\t\t\treturn {\r\n\t\t\t\t\tthen: function(onResolve, onError) {\r\n\t\t\t\t\t\tvar remaining = 1\r\n\t\t\t\t\t\tvar result\r\n\t\t\t\t\t\tvar readyInputs = []\r\n\t\t\t\t\t\tvar lastPromiseResult\r\n\t\t\t\t\t\tfor(var i = 0; i < inputs.length; i++) {\r\n\t\t\t\t\t\t\tvar input = inputs[i]\r\n\t\t\t\t\t\t\tremaining++\r\n\t\t\t\t\t\t\tif(input && input.then) {\r\n\t\t\t\t\t\t\t\t(function(i, previousPromiseResult) {\r\n\t\t\t\t\t\t\t\t\tlastPromiseResult = input.then(function(value) {\r\n\t\t\t\t\t\t\t\t\t\treadyInputs[i] = value\r\n\t\t\t\t\t\t\t\t\t\tonEach()\r\n\t\t\t\t\t\t\t\t\t\tif(!remaining) {\r\n\t\t\t\t\t\t\t\t\t\t\treturn result\r\n\t\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\t\treturn previousPromiseResult\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}, onError)\r\n\t\t\t\t\t\t\t\t})(i, lastPromiseResult)\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\treadyInputs[i] = input\r\n\t\t\t\t\t\t\t\tonEach()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tonEach()\r\n\t\t\t\t\t\tfunction onEach() {\r\n\t\t\t\t\t\t\tremaining--\r\n\t\t\t\t\t\t\tif(!remaining) {\r\n\t\t\t\t\t\t\t\tresult = onResolve(callback(readyInputs))\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn lastPromiseResult\r\n\t\t\t\t\t},\r\n\t\t\t\t\tinputs: inputs\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// just sync inputs\r\n\t\t\treturn callback(inputs)\r\n\r\n\t\t},\r\n\t\tcompose: function(Base, constructor, properties) {\r\n\t\t\tvar prototype = constructor.prototype = Object.create(Base.prototype)\r\n\t\t\tsetPrototypeOf(constructor, Base)\r\n\t\t\tfor(var i in properties) {\r\n\t\t\t\tprototype[i] = properties[i]\r\n\t\t\t}\r\n\t\t\tprototype.constructor = constructor\r\n\t\t\treturn constructor\r\n\t\t},\r\n\t\tnextTurn: has('MutationObserver') ?\r\n\t\t\tfunction (callback) {\r\n\t\t\t\t// promises don't resolve consistently on the next micro turn (Edge doesn't do it right),\r\n\t\t\t\t// so use mutation observer\r\n\t\t\t\t// TODO: make a faster mode that doesn't recreate each time\r\n\t\t\t\tvar div = document.createElement('div')\r\n\t\t\t\tvar observer = new MutationObserver(callback)\r\n\t\t\t\tobserver.observe(div, {\r\n\t\t\t\t\tattributes: true\r\n\t\t\t\t})\r\n\t\t\t\tdiv.setAttribute('a', id++)\r\n\t\t\t} :\r\n\t\t\tfunction (callback) {\r\n\t\t\t\t// TODO: we can do better for other, older browsers\r\n\t\t\t\tsetTimeout(callback, 0)\r\n\t\t\t},\r\n\t\tcopy: Object.assign || function(target, source) {\r\n\t\t\tfor(var i in source) {\r\n\t\t\t\ttarget[i] = source[i]\r\n\t\t\t}\r\n\t\t\treturn target\r\n\t\t}\r\n\t}\r\n\tfunction isGenerator(func) {\r\n\t\tif (typeof func === 'function') {\r\n\t\t\tvar constructor = func.constructor\r\n\t\t\t// this is used to handle both native generators and transpiled generators\r\n\t\t\treturn (constructor.displayName || constructor.name) === 'GeneratorFunction'\r\n\t\t}\r\n\t}\r\n\tlang.isGenerator = isGenerator\r\n\treturn lang\r\n}))\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./util/lang.js\n ** module id = 2\n ** module chunks = 0\n **/","(function (root, factory) { if (typeof define === 'function' && define.amd) {\r\n\tdefine(['./util/lang', './Variable'], factory) } else if (typeof module === 'object' && module.exports) {        \r\n  module.exports = factory(require('./util/lang'), require('./Variable')) // Node\r\n}}(this, function (lang, Variable) {\r\n\tvar doc = typeof document !== 'undefined' && document\r\n\tvar invalidatedElements\r\n\tvar queued\r\n\tvar toRender = []\r\n\tvar nextId = 1\r\n\tvar requestAnimationFrame = lang.requestAnimationFrame\r\n\tvar Context = Variable.Context\r\n\r\n\tfunction Renderer(options) {\r\n\t\tvar variable = options.variable\r\n\r\n\t\tthis.variable = variable\r\n\t\tif (options.selector) {\r\n\t\t\tthis.selector = options.selector\r\n\t\t}\r\n\t\tif (options.elements) {\r\n\t\t\tthis.elements = options.elements\r\n\t\t\tthis.element = this.elements[0]\r\n\t\t\tfor(var i = 0, l = this.elements.length; i < l; i++) {\r\n\t\t\t\t(this.elements[i].alkaliRenderers || (this.elements[i].alkaliRenderers = [])).push(this)\r\n\t\t\t}\r\n\t\t}\r\n\t\telse if (options.element) {\r\n\t\t\tvar element = this.element = options.element;\r\n\t\t\t(element.alkaliRenderers || (element.alkaliRenderers = [])).push(this)\r\n\t\t} else {\r\n\t\t\tthrow new Error('No element provided to Renderer')\r\n\t\t}\r\n\t\tif (options.update) {\r\n\t\t\tthis.updateRendering = options.update\r\n\t\t}\r\n\t\tif (options.shouldRender) {\r\n\t\t\tthis.shouldRender = options.shouldRender\r\n\t\t}\r\n\t\tif (options.renderUpdate) {\r\n\t\t\tthis.renderUpdate = options.renderUpdate\r\n\t\t}\r\n\t\tif (options.alwaysUpdate) {\r\n\t\t\tthis.alwaysUpdate = options.alwaysUpdate\r\n\t\t}\r\n\t\tif (!variable.updated) {\r\n\t\t\t// baconjs-esqe API\r\n\t\t\tvar renderer = this\r\n\t\t\tvariable.subscribe(function (event) {\r\n\t\t\t\t// replace the variable with an object\r\n\t\t\t\t// that returns the value from the event\r\n\t\t\t\trenderer.variable = {\r\n\t\t\t\t\tvalueOf: function () {\r\n\t\t\t\t\t\treturn event.value()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\trenderer.updated()\r\n\t\t\t})\r\n\t\t}\r\n\t\tif (options.updateOnStart === false){\r\n\t\t\t// even if we don't render on start, we still need to compute the value so we can depend on the computed variables\r\n\t\t\tthis.variable.valueOf(this)\r\n\t\t\tvar contextualized = this.contextualized || this.variable\r\n\t\t\t// TODO: we may need to handle recontextualization if it returns a promise\r\n\t\t\tcontextualized.notifies(this)\r\n\t\t} else {\r\n\t\t\tthis.updateRendering(true)\r\n\t\t}\r\n\t}\r\n\tRenderer.prototype = {\r\n\t\tconstructor: Renderer,\r\n\t\tupdateRendering: function () {\r\n\t\t\tthrow new Error ('updateRendering must be implemented by sub class of Renderer')\r\n\t\t},\r\n\t\tupdated: function (updateEvent, by, context) {\r\n\t\t\tif (!this.invalidated) {\r\n\t\t\t\tif (!context || this.contextMatches(context)) {\r\n\t\t\t\t\t// do this only once, until we render again\r\n\t\t\t\t\tthis.invalidated = true\r\n\t\t\t\t\tvar renderer = this\r\n\t\t\t\t\trequestAnimationFrame(function(){\r\n\t\t\t\t\t\tinvalidatedElements = null\r\n\t\t\t\t\t\trenderer.updateRendering(renderer.alwaysUpdate)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tnewContext: function() {\r\n\t\t\treturn new Variable.Context(this.element)\r\n\t\t},\r\n\t\taddInput: function(contextualized) {\r\n\t\t\tif (this.variable !== contextualized) {\r\n\t\t\t\tthis.contextualized = contextualized\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetContextualized: function() {\r\n\t\t\treturn this.contextualized || this.variable\r\n\t\t},\r\n\t\tspecify: function(Variable) {\r\n\t\t\t// a new context to get thsi\r\n\t\t\treturn this.newContext().specify(Variable)\r\n\t\t},\r\n\t\tmerge: function(){\r\n\t\t\t// noop\r\n\t\t},\r\n\t\tcontextMatches: function(context) {\r\n\t\t\treturn true\r\n\t\t},\r\n\t\tinvalidateElement: function(element) {\r\n\t\t\tif(!invalidatedElements){\r\n\t\t\t\tinvalidatedElements = new WeakMap(null, 'invalidated')\r\n\t\t\t}\r\n\t\t\tvar invalidatedParts = invalidatedElements.get(element)\r\n\t\t\tinvalidatedElements.set(element, invalidatedParts = {})\r\n\t\t\tif (!invalidatedParts[id]) {\r\n\t\t\t\tinvalidatedParts[id] = true\r\n\t\t\t}\r\n\t\t\tif (!queued) {\r\n\t\t\t\tlang.queueTask(processQueue)\r\n\t\t\t\tqueued = true\r\n\t\t\t}\r\n\t\t\tvar renderer = this\r\n\t\t\ttoRender.push(function(){\r\n\t\t\t\trenderer.invalidated = false\r\n\t\t\t\trenderer.updateElement(element)\r\n\t\t\t})\r\n\t\t},\r\n\t\tgetId: function(){\r\n\t\t\treturn this.id || (this.id = nextId++)\r\n\t\t},\r\n\t\tstop: function() {\r\n\t\t\tvar contextualized = this.contextualized || this.variable\r\n\t\t\tcontextualized.stopNotifies(this)\r\n\t\t}\r\n\t}\r\n\r\n\tfunction ElementRenderer(options) {\r\n\t\tRenderer.call(this, options)\r\n\t}\r\n\tElementRenderer.prototype = Object.create(Renderer.prototype)\r\n\tElementRenderer.prototype.shouldRender = function (element) {\r\n\t\treturn document.body.contains(element)\r\n\t}\r\n\tElementRenderer.prototype.getSubject = function () {\r\n\t\treturn this.element\r\n\t}\r\n\tElementRenderer.prototype.updateRendering = function (always, element) {\r\n\t\tif (!element && this.elements) {\r\n\t\t\tvar elements = this.elements\r\n\t\t\tif(!elements.length){\r\n\t\t\t\tif(this.selector){\r\n\t\t\t\t\telements = document.querySelectorAll(this.selector)\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthrow new Error('No element or selector was provided to the Renderer')\r\n\t\t\t\t}\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tfor(var i = 0, l = elements.length; i < l; i++){\r\n\t\t\t\tthis.updateRendering(always, elements[i])\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar thisElement = element || this.element\r\n\r\n\t\t\tif(always || this.shouldRender(thisElement)){\r\n\t\t\t\t// it is connected\r\n\t\t\t\tthis.updateElement(thisElement)\r\n\t\t\t} else {\r\n\t\t\t\tvar id = this.getId()\r\n\t\t\t\tvar renderers = thisElement.renderersOnShow\r\n\t\t\t\tif(!renderers){\r\n\t\t\t\t\trenderers = thisElement.renderersOnShow = []\r\n\t\t\t\t\tthisElement.className += ' needs-rerendering'\r\n\t\t\t\t}\r\n\t\t\t\tif (!renderers[id]) {\r\n\t\t\t\t\trenderers[id] = this\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tElementRenderer.prototype.addElement = function (element) {\r\n\t\tif (this.selector) {\r\n\t\t\telement.renderersOnShow = [this]\r\n\t\t} else {\r\n\t\t\tthis.elements.push(element)\r\n\t\t}\r\n\t\t// and immediately do an update\r\n\t\tthis.updateElement(element)\r\n\t}\r\n\tElementRenderer.prototype.updateElement = function(element) {\r\n\t\tthis.invalidated = false\r\n\t\ttry {\r\n\t\t\tif (!this.omitValueOf) {\r\n\t\t\t\tvar value = this.variable.valueOf(this)\r\n\t\t\t\tvar contextualized = this.contextualized || this.variable\r\n\t\t\t\t// TODO: we may need to handle recontextualization if it returns a promise\r\n\t\t\t\tcontextualized.notifies(this)\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\telement.appendChild(document.createTextNode(error))\r\n\t\t}\r\n\t\tif(value !== undefined || this.started || this.omitValueOf){\r\n\t\t\tthis.started = true\r\n\t\t\tif(value && value.then){\r\n\t\t\t\tif(this.renderLoading){\r\n\t\t\t\t\tthis.renderLoading(value, element)\r\n\t\t\t\t}\r\n\t\t\t\tvar renderer = this\r\n\t\t\t\tvalue.then(function (value) {\r\n\t\t\t\t\trenderer.renderUpdate(value, element)\r\n\t\t\t\t})\r\n\t\t\t}else{\r\n\t\t\t\tthis.renderUpdate(value, element)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tElementRenderer.prototype.renderUpdate = function (newValue, element) {\r\n\t\tthrow new Error('renderUpdate(newValue) must be implemented')\r\n\t}\r\n\tRenderer.Renderer = Renderer\r\n\tRenderer.ElementRenderer = ElementRenderer\r\n\r\n\tfunction AttributeRenderer(options) {\r\n\t\tif(options.name){\r\n\t\t\tthis.name = options.name\r\n\t\t}\r\n\t\tElementRenderer.apply(this, arguments)\r\n\t}\r\n\tAttributeRenderer.prototype = Object.create(ElementRenderer.prototype)\r\n\tAttributeRenderer.prototype.type = 'AttributeRenderer'\r\n\tAttributeRenderer.prototype.renderUpdate = function (newValue, element) {\r\n\t\telement.setAttribute(this.name, newValue)\r\n\t}\r\n\tRenderer.AttributeRenderer = AttributeRenderer\r\n\r\n\tfunction PropertyRenderer(options) {\r\n\t\tif (options.name) {\r\n\t\t\tthis.name = options.name\r\n\t\t}\r\n\t\tElementRenderer.apply(this, arguments)\r\n\t}\r\n\tPropertyRenderer.prototype = Object.create(ElementRenderer.prototype)\r\n\tPropertyRenderer.prototype.type = 'PropertyRenderer'\r\n\tPropertyRenderer.prototype.renderUpdate = function (newValue, element) {\r\n\t\telement[this.name] = newValue\r\n\t}\r\n\tRenderer.PropertyRenderer = PropertyRenderer\r\n\r\n\tfunction InputPropertyRenderer(options) {\r\n\t\tif (options.element && options.element.tagName === 'SELECT' && options.name === 'value') {\r\n\t\t\t// use the deferred value assignment for <select>\r\n\t\t\tthis.renderUpdate = this.renderSelectValueUpdate\r\n\t\t}\r\n\t\tPropertyRenderer.apply(this, arguments)\r\n\t}\r\n\tInputPropertyRenderer.prototype = Object.create(PropertyRenderer.prototype)\r\n\tInputPropertyRenderer.prototype.type = 'InputPropertyRenderer'\r\n\tInputPropertyRenderer.prototype.renderUpdate = function(newValue, element) {\r\n\t\tif (newValue == null || (element.type === 'number' && isNaN(newValue))) {\r\n\t\t\tnewValue = ''\r\n\t\t}\r\n\t\tif (element[this.name] != newValue) {\r\n\t\t\telement[this.name] = newValue\r\n\t\t}\r\n\t}\r\n\tInputPropertyRenderer.prototype.renderSelectValueUpdate = function (newValue, element) {\r\n\t\telement.value = newValue\r\n\t\tif (element.value != newValue && !element.value) {\r\n\t\t\t// if we didn't successfully set the value of a <select>, we may need to wait until the children are constructed\r\n\t\t\telement.eventualValue = newValue\r\n\t\t\tlang.nextTurn(function() {\r\n\t\t\t\tif (element.eventualValue) {\r\n\t\t\t\t\telement.value = element.eventualValue\r\n\t\t\t\t\telement.eventualValue = undefined\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\telement.eventualValue = undefined\r\n\t\t}\r\n\t}\r\n\tRenderer.InputPropertyRenderer = InputPropertyRenderer\r\n\r\n\tfunction StyleRenderer(options) {\r\n\t\tif(options.name){\r\n\t\t\tthis.name = options.name\r\n\t\t}\r\n\t\tElementRenderer.apply(this, arguments)\r\n\t}\r\n\tStyleRenderer.prototype = Object.create(ElementRenderer.prototype)\r\n\tStyleRenderer.prototype.type = 'StyleRenderer'\r\n\tStyleRenderer.prototype.renderUpdate = function (newValue, element) {\r\n\t\telement.style[this.name] = newValue\r\n\t}\r\n\tRenderer.StyleRenderer = StyleRenderer\r\n\r\n\tfunction ContentRenderer(options) {\r\n\t\tElementRenderer.apply(this, arguments)\r\n\t}\r\n\tContentRenderer.prototype = Object.create(ElementRenderer.prototype)\r\n\tContentRenderer.prototype.type = 'ContentRenderer'\r\n\tContentRenderer.prototype.renderUpdate = function (newValue, element) {\r\n\t\telement.innerHTML = ''\r\n\t\tif (newValue === undefined){\r\n\t\t\tnewValue = ''\r\n\t\t}\r\n\t\telement.appendChild(document.createTextNode(newValue))\r\n\t}\r\n\tRenderer.ContentRenderer = ContentRenderer\r\n\r\n\tfunction TextRenderer(options) {\r\n\t\tthis.position = options.position\r\n\t\tthis.textNode = options.textNode\r\n\t\tElementRenderer.apply(this, arguments)\r\n\t}\r\n\tTextRenderer.prototype = Object.create(ElementRenderer.prototype)\r\n\tTextRenderer.prototype.type = 'TextRenderer'\r\n\tTextRenderer.prototype.updated = function (updateEvent, context) {\r\n\t\tif (this.builtList) {\r\n\t\t\tif (updateEvent.type === 'refresh') {\r\n\t\t\t\tthis.builtList = false\r\n\t\t\t\tthis.omitValueOf = false\r\n\t\t\t} else {\r\n\t\t\t\t(this.updates || (this.updates = [])).push(updateEvent)\r\n\t\t\t}\r\n\t\t}\r\n\t\tElementRenderer.prototype.updated.call(this, updateEvent, context)\r\n\t}\r\n\tTextRenderer.prototype.renderUpdate = function (newValue, element) {\r\n\t\tif (newValue == null){\r\n\t\t\tnewValue = ''\r\n\t\t}\r\n\t\tif (newValue.nodeType) {\r\n\t\t\tif (this.textNode && this.textNode.parentNode == element) {\r\n\t\t\t\t// text node is attached, we can replace it with the node\r\n\t\t\t\telement.replaceChild(newValue, this.textNode)\r\n\t\t\t} else {\r\n\t\t\t\telement.appendChild(newValue)\r\n\t\t\t}\r\n\t\t\tthis.textNode = newValue\r\n\t\t} else if (newValue instanceof Array) {\r\n\t\t\tthis.renderUpdate = ListRenderer.prototype.renderUpdate\r\n\t\t\tthis.omitValueOf = true\r\n\t\t\tthis.renderUpdate(newValue, element)\r\n\t\t} else {\r\n\t\t\t(this.textNode || element.childNodes[this.position]).nodeValue = newValue\r\n\t\t}\r\n\t}\r\n\tRenderer.TextRenderer = TextRenderer\r\n\r\n\tfunction ListRenderer(options) {\r\n\t\tif (options.each) {\r\n\t\t\tthis.each = options.each\r\n\t\t}\r\n\t\tElementRenderer.apply(this, arguments)\r\n\t}\r\n\tListRenderer.prototype = Object.create(ElementRenderer.prototype)\r\n\tListRenderer.prototype.updated = function (updateEvent, context) {\r\n\t\tif (this.builtList) {\r\n\t\t\tif (updateEvent.type === 'refresh') {\r\n\t\t\t\tthis.builtList = false\r\n\t\t\t\tthis.omitValueOf = false\r\n\t\t\t} else {\r\n\t\t\t\t(this.updates || (this.updates = [])).push(updateEvent)\r\n\t\t\t}\r\n\t\t}\r\n\t\tElementRenderer.prototype.updated.call(this, updateEvent, context)\r\n\t}\r\n\tListRenderer.prototype.type = 'ListRenderer'\r\n\tListRenderer.prototype.renderUpdate = function (newValue, element) {\r\n\t\tvar container\r\n\t\tvar each = this.each || function(item) { // TODO: make a single identity function\r\n\t\t\treturn item\r\n\t\t}\r\n\t\tvar thisElement = this.element\r\n\t\tvar renderer = this\r\n\t\tif (!this.builtList) {\r\n\t\t\tthis.builtList = true\r\n\t\t\tthis.omitValueOf = true\r\n\t\t\telement.innerHTML = ''\r\n\t\t\tcontainer = document.createDocumentFragment()\r\n\t\t\tvar childElements = this.childElements = []\r\n\t\t\tif (each.defineHasOwn) {\r\n\t\t\t\teach.defineHasOwn()\r\n\t\t\t}\r\n\t\t\tif (newValue) {\r\n\t\t\t\tnewValue.forEach(function(item) {\r\n\t\t\t\t\teachItem(item)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tvar contextualized = this.contextualized || this.variable\r\n\t\t\tcontextualized.notifies(this)\r\n\r\n\t\t\tthisElement.appendChild(container)\r\n\t\t} else {\r\n\t\t\tvar childElements = this.childElements\r\n\t\t\tvar updates = this.updates\r\n\t\t\tcontainer = thisElement\r\n\t\t\tupdates.forEach(function(update) {\r\n\t\t\t\tif (update.type === 'refresh') {\r\n\t\t\t\t\trenderer.builtList = false\r\n\t\t\t\t\tfor (var i = 0, l = childElements.length; i < l; i++) {\r\n\t\t\t\t\t\tthisElement.removeChild(childElements[i])\r\n\t\t\t\t\t}\r\n\t\t\t\t\trenderer.renderUpdate()\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (update.previousIndex > -1) {\r\n\t\t\t\t\t\tthisElement.removeChild(childElements[update.previousIndex])\r\n\t\t\t\t\t\tchildElements.splice(update.previousIndex, 1)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (update.index > -1) {\r\n\t\t\t\t\t\tvar nextChild = childElements[update.index] || null\r\n\t\t\t\t\t\teachItem(update.value, update.index, nextChild)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tthis.updates = [] // clear the updates\r\n\t\t}\r\n\t\tfunction eachItem(item, index, nextChild) {\r\n\t\t\tvar childElement\r\n\t\t\tif (each.create) {\r\n\t\t\t\tchildElement = each.create({parent: thisElement, _item: item}) // TODO: make a faster object here potentially\r\n\t\t\t} else {\r\n\t\t\t\tchildElement = each(item, thisElement)\r\n\t\t\t\tif (childElement.create) {\r\n\t\t\t\t\tchildElement = childElement.create({parent: thisElement, _item: item})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (nextChild) {\r\n\t\t\t\tcontainer.insertBefore(childElement, nextChild)\r\n\t\t\t\tchildElements.splice(index, 0, childElement)\r\n\t\t\t} else {\r\n\t\t\t\tcontainer.appendChild(childElement)\r\n\t\t\t\tchildElements.push(childElement)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tRenderer.ListRenderer = ListRenderer\r\n\r\n\tRenderer.onShowElement = function(shownElement){\r\n\t\trequestAnimationFrame(function(){\r\n\t\t\tinvalidatedElements = null\r\n\t\t\tvar elements = [].slice.call(shownElement.getElementsByClassName('needs-rerendering'))\r\n\t\t\tif (shownElement.className.indexOf('needs-rerendering') > 0){\r\n\t\t\t\tvar includingTop = [shownElement]\r\n\t\t\t\tincludingTop.push.apply(includingTop, elements)\r\n\t\t\t\telements = includingTop\r\n\t\t\t}\r\n\t\t\tfor (var i = 0, l = elements.length; i < l; i++){\r\n\t\t\t\tvar element = elements[i]\r\n\t\t\t\tvar renderers = element.renderersOnShow\r\n\t\t\t\tif(renderers){\r\n\t\t\t\t\telement.renderersOnShow = null\r\n\t\t\t\t\t// remove needs-rerendering class\r\n\t\t\t\t\telement.className = element.className.replace(/\\s?needs\\-rerendering\\s?/g, '')\r\n\t\t\t\t\tfor (var id in renderers) {\r\n\t\t\t\t\t\tvar renderer = renderers[id]\r\n\t\t\t\t\t\trenderer.updateElement(element)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tfunction onElementRemoval(element){\r\n\t\t// cleanup element renderers\r\n\t\tif(element.alkaliRenderers){\r\n\t\t\tvar renderers = element.alkaliRenderers\r\n\t\t\tfor(var i = 0; i < renderers.length; i++){\r\n\t\t\t\tvar renderer = renderers[i]\r\n\t\t\t\trenderer.variable.stopNotifies(renderer)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tRenderer.onElementRemoval = function(element, onlyChildren){\r\n\t\tif(!onlyChildren){\r\n\t\t\tonElementRemoval(element)\r\n\t\t}\r\n\t\tvar children = element.getElementsByTagName('*')\r\n\t\tfor(var i = 0, l = children.length; i < l; i++){\r\n\t\t\tvar child = children[i]\r\n\t\t\tif(child.alkaliRenderers){\r\n\t\t\t\tonElementRemoval(child)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn Renderer\r\n}))\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Renderer.js\n ** module id = 3\n ** module chunks = 0\n **/","(function (root, factory) { if (typeof define === 'function' && define.amd) {\r\n\tdefine(['./util/lang'], factory) } else if (typeof module === 'object' && module.exports) {        \r\n  module.exports = factory(require('./util/lang')) // Node\r\n}}(this, function (lang) {\r\n\tvar deny = {}\r\n\tvar noChange = {}\r\n\tvar WeakMap = lang.WeakMap\r\n\tvar setPrototypeOf = Object.setPrototypeOf || (function(base, proto) { base.__proto__ = proto})\r\n\tvar getPrototypeOf = Object.getPrototypeOf || (function(base) { return base.__proto__ })\r\n\tvar isGenerator = lang.isGenerator\r\n\t// update types\r\n\tvar RequestChange = 3\r\n\tvar RequestSet = 4\r\n\r\n\tvar nextId = 1\r\n\tvar propertyListenersMap = new WeakMap(null, 'propertyListenersMap')\r\n\tvar isStructureChecked = new WeakMap()\r\n\r\n\tvar CacheEntry = lang.compose(WeakMap, function() {\r\n\t},{\r\n\t\t_propertyChange: function(propertyName) {\r\n\t\t\tthis.variable._propertyChange(propertyName, contextFromCache(this))\r\n\t\t}\r\n\t})\r\n\tvar listenerId = 1\r\n\r\n\tfunction when(value, callback) {\r\n\t\tif (value && value.then) {\r\n\t\t\treturn value.then(callback)\r\n\t\t}\r\n\t\treturn callback(value)\r\n\t}\r\n\r\n\tfunction Context(subject){\r\n\t\tthis.subject = subject\r\n\t\tthis.inputs = []\r\n\t}\r\n\tContext.prototype = {\r\n\t\tconstructor: Context,\r\n\t\tnewContext: function(variable) {\r\n\t\t\treturn new Context(this.subject)\r\n\t\t},\r\n\t\tcontextualize: function(variable, parentContext) {\r\n\t\t\t// resolve the contextualization of a variable, and updates this context to be aware of what distinctive aspect of the context has\r\n\t\t\t// been used for resolution\r\n\t\t\tvar contextualized\r\n\t\t\tif (this.distinctSubject) {\r\n\t\t\t\tvar contextMap = variable._contextMap || (variable._contextMap = new WeakMap())\r\n\t\t\t\tcontextualized = contextMap.get(this.distinctSubject)\r\n\t\t\t\tif (!contextualized) {\r\n\t\t\t\t\tcontextMap.set(this.distinctSubject, contextualized = Object.create(variable))\r\n\t\t\t\t\tcontextualized.listeners = false\r\n\t\t\t\t\tcontextualized.context = this\r\n\t\t\t\t\tvar inputs = this.inputs\r\n\t\t\t\t\tfor (var i = 0, l = inputs.length; i < l; i++) {\r\n\t\t\t\t\t\tcontextualized[inputs[i]] = inputs[++i]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.contextualized = contextualized\r\n\t\t\t\t// do the merge\r\n\t\t\t\tif (parentContext) {\r\n\t\t\t\t\tparentContext.merge(this)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tcontextualized = variable\r\n\t\t\t}\r\n\t\t\t//if (this.contextualized && this.contextualized !== contextualized) {\r\n\t\t\t\t// TOOD: if it has previously been contextualized to a different context (can happen in a promise/async situation), stop previous notifiers and start new ones\r\n\t\t\t//}\r\n\t\t\tparentContext.addInput(contextualized)\r\n\t\t\treturn contextualized\r\n\t\t},\r\n\t\tmerge: function(childContext) {\r\n\t\t\tif (!this.distinctSubject) {\r\n\t\t\t\tthis.distinctSubject = childContext.distinctSubject\r\n\t\t\t}\r\n\t\t},\r\n\t\tspecify: function(Variable) {\r\n\t\t\t// specify a particular instance of a generic variable\r\n\t\t\tvar subject = this.subject\r\n\t\t\tvar subjectMap = subject.constructor.ownedClasses\r\n\t\t\tvar specifiedInstance\r\n\t\t\tif (subjectMap) {\r\n\t\t\t\tif (!this.distinctSubject) {\r\n\t        this.distinctSubject = subject\r\n\t\t\t\t}\r\n\t\t\t\tvar instanceMap = subjectMap.get(Variable)\r\n\t\t\t\tif (instanceMap) {\r\n\t\t\t\t\tspecifiedInstance = instanceMap.get(subject)\r\n\t\t\t\t\tif (!specifiedInstance) {\r\n\t\t\t\t\t\tinstanceMap.set(subject, specifiedInstance = instanceMap.createInstance ? instanceMap.createInstance(subject) : new Variable())\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn specifiedInstance\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// else if no specific context is found, return default instance\r\n\t\t\treturn Variable.defaultInstance\r\n\t\t},\r\n\t\tgetContextualized: function(variable) {\r\n\r\n\t\t\t// returns a variable that has already been contextualized\r\n\t\t\tvar instance = variable._contextMap && this.subject && variable._contextMap.get(this.subject)\r\n\t\t\tif (instance && instance.context && instance.context.matches(this)) {\r\n\t\t\t\treturn instance\r\n\t\t\t}\r\n\t\t},\r\n\t\taddInput: function(inputVariable) {\r\n\t\t\tthis.inputs.push(this.nextProperty, inputVariable)\r\n\t\t},\r\n\t\tmatches: function(context) {\r\n\t\t\t// does another context match the resolution of this one?\r\n\t\t\treturn context.subject === this.subject\r\n\t\t}\r\n\t}\r\n\r\n\tfunction NotifyingContext(listener, subject){\r\n\t\tthis.subject = subject\r\n\t\tthis.listener = listener\r\n\t}\r\n\tNotifyingContext.prototype = Object.create(Context.prototype)\r\n\tNotifyingContext.prototype.constructor = NotifyingContext\r\n\tNotifyingContext.prototype.addInput = function(contextualized) {\r\n\t\tcontextualized.notifies(this.listener)\r\n\t}\r\n\r\n\tfunction whenAll(inputs, callback){\r\n\t\tvar promiseInvolved\r\n\t\tfor (var i = 0, l = inputs.length; i < l; i++) {\r\n\t\t\tif (inputs[i] && inputs[i].then) {\r\n\t\t\t\tpromiseInvolved = true\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (promiseInvolved) {\r\n\t\t\treturn lang.whenAll(inputs, callback)\r\n\t\t}\r\n\t\treturn callback(inputs)\r\n\t}\r\n\r\n\tfunction registerListener(value, listener) {\r\n\t\tvar listeners = propertyListenersMap.get(value)\r\n\t\tvar id = listener.listenerId || (listener.listenerId = ('-' + listenerId++))\r\n\t\tif (listeners) {\r\n\t\t\tif (listeners[id] === undefined) {\r\n\t\t\t\tlisteners[id] = listeners.push(listener) - 1\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tpropertyListenersMap.set(value, listeners = [listener])\r\n\t\t\tlisteners[id] = 0\r\n\t\t\tif (Variable.autoObserveObjects) {\r\n\t\t\t\tobserve(value)\r\n\t\t\t}\r\n\t\t}\r\n\t\tlistener.listeningToObject = value\r\n\t}\r\n\tfunction deregisterListener(listener) {\r\n\t\tif (listener.listeningToObject) {\r\n\t\t\tvar value = listener.listeningToObject\r\n\t\t\tlistener.listeningToObject = null\r\n\t\t\tvar listeners = propertyListenersMap.get(value)\r\n\t\t\tif (listeners) {\r\n\t\t\t\tvar index = listeners[listener.listenerId]\r\n\t\t\t\tif (index > -1) {\r\n\t\t\t\t\tlisteners.splice(index, 1)\r\n\t\t\t\t\tdelete listeners[listener.listenerId]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction RefreshEvent() {\r\n\t\tthis.visited = new Set()\r\n\t}\r\n\tRefreshEvent.prototype.type = 'refresh'\r\n\r\n\tfunction PropertyChangeEvent(key, childEvent, parent) {\r\n\t\tthis.key = key\r\n\t\tthis.childEvent = childEvent\r\n\t\tthis.parent = parent\r\n\t\tthis.visited = childEvent.visited\r\n\t}\r\n\tPropertyChangeEvent.prototype.type = 'update'\r\n\r\n\tfunction AddEvent(args) {\r\n\t\tthis.visited = new Set()\r\n\t\tfor (var key in args) {\r\n\t\t\tthis[key] = args[key]\r\n\t\t}\r\n\t}\r\n\tAddEvent.prototype.type = 'add'\r\n\tfunction DeleteEvent(args) {\r\n\t\tthis.visited = new Set()\r\n\t\tfor (var key in args) {\r\n\t\t\tthis[key] = args[key]\r\n\t\t}\r\n\t}\r\n\tDeleteEvent.prototype.type = 'delete'\r\n\r\n\tfunction forPropertyNotifyingValues(variable, properties, callback) {\r\n\t\tif (variable === properties) {\r\n\t\t\tforPropertyNotifyingValues(variable, variable._properties, callback)\r\n\t\t}\r\n\t\tfor (var key in properties) {\r\n\t\t\tvar property = properties[key]\r\n\t\t\tif (property && property.parent == variable) {\r\n\t\t\t\tif (property.returnedVariable) {\r\n\t\t\t\t\tcallback(property.returnedVariable)\r\n\t\t\t\t}\r\n\t\t\t\tif (property.hasChildNotifiers) {\r\n\t\t\t\t\tvar subProperties = property._properties\r\n\t\t\t\t\tif (subProperties) {\r\n\t\t\t\t\t\tforPropertyNotifyingValues(property, property, callback)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction Variable(value) {\r\n\t\tif (this instanceof Variable) {\r\n\t\t\t// new call, may eventually use new.target\r\n\t\t\tif (value === undefined) {\r\n\t\t\t\tif (this.default !== undefined) {\r\n\t\t\t\t\tthis.value = this.default\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthis.value = value\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn Variable.with(value)\r\n\t\t}\r\n\t}\r\n\tvar VariablePrototype = Variable.prototype = {\r\n\t\t// for debugging use\r\n\t\tget _currentValue() {\r\n\t\t\treturn this.valueOf()\r\n\t\t},\r\n\t\tset _currentValue(value) {\r\n\t\t\tthis.put(value)\r\n\t\t},\r\n\t\tconstructor: Variable,\r\n\t\tvalueOf: function(context) {\r\n\t\t\tvar valueContext\r\n\t\t\treturn this.gotValue(this.getValue ?\r\n\t\t\t\tthis.getValue(context, context && (valueContext = context.newContext())) :\r\n\t\t\t\tthis.value, context, valueContext)\r\n\t\t},\r\n\t\tgetValue: function(context, valueContext) {\r\n\t\t\tif (this.parent) {\r\n\t\t\t\tif (context) {\r\n\t\t\t\t\tif (!valueContext) {\r\n\t\t\t\t\t\tvalueContext = context.newContext()\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvalueContext.nextProperty = 'parent'\r\n\t\t\t\t}\r\n\t\t\t\tvar key = this.key\r\n\t\t\t\tvar property = this\r\n\t\t\t\tvar parent = this.parent\r\n\t\t\t\tvar object = parent.getValue ? parent.getValue(valueContext) : parent.value\r\n\t\t\t\tvar gotValueAndListen = function(object) {\r\n\t\t\t\t\tvar value = object == null ? undefined :\r\n\t\t\t\t\t\ttypeof object.property === 'function' ? object.property(key) :\r\n\t\t\t\t\t\ttypeof object.get === 'function' ? object.get(key) : object[key]\r\n\t\t\t\t\t//if (property.listeners) {\r\n\t\t\t\t\t\tvar listeners = propertyListenersMap.get(object)\r\n\t\t\t\t\t\tif (listeners && listeners.observer && listeners.observer.addKey) {\r\n\t\t\t\t\t\t\tlisteners.observer.addKey(key)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t//}\r\n\t\t\t\t\treturn value\r\n\t\t\t\t}\r\n\t\t\t\tif (object && object.then) {\r\n\t\t\t\t\treturn when(object, gotValueAndListen)\r\n\t\t\t\t}\r\n\t\t\t\treturn gotValueAndListen(object)\r\n\t\t\t}\r\n\t\t\treturn this.value\r\n\t\t},\r\n\t\tgotValue: function(value, parentContext, context) {\r\n\t\t\tvar previousNotifyingValue = this.returnedVariable\r\n\t\t\tvar variable = this\r\n\t\t\tif (previousNotifyingValue) {\r\n\t\t\t\tif (value === previousNotifyingValue) {\r\n\t\t\t\t\t// nothing changed, immediately return valueOf\r\n\t\t\t\t\tif (parentContext) {\r\n\t\t\t\t\t\tif (!context) {\r\n\t\t\t\t\t\t\tcontext = parentContext.newContext()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tcontext.contextualize(this, parentContext)\r\n\t\t\t\t\t\tcontext.nextProperty = 'returnedVariable'\r\n\t\t\t\t\t\treturn value.valueOf(context)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn value.valueOf()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// if there was a another value that we were dependent on before, stop listening to it\r\n\t\t\t\t// TODO: we may want to consider doing cleanup after the next rendering turn\r\n\t\t\t\tif (variable.listeners) {\r\n\t\t\t\t\tpreviousNotifyingValue.stopNotifies(variable)\r\n\t\t\t\t}\r\n\t\t\t\tvariable.returnedVariable = null\r\n\t\t\t}\r\n\t\t\tif (value && value.notifies) {\r\n\t\t\t\tvariable.returnedVariable = value\r\n\t\t\t\tif (variable.listeners) {\r\n\t\t\t\t\tvalue.notifies(variable)\r\n\t\t\t\t}\r\n\t\t\t\t/*var parent = variable\r\n\t\t\t\tdo {\r\n\t\t\t\t\tif (parent.listeners) {\r\n\t\t\t\t\t\t// the value is another variable, start receiving notifications, if we, or any parent is live\r\n\t\t\t\t\t\tvariable.returnedVariable.notifies(variable)\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\t}\r\n\t\t\t\t\tparent.hasNotifyingChild = true\r\n\t\t\t\t} while((parent = parent.parent))*/\r\n\t\t\t\tcontext = context || parentContext && (context = parentContext.newContext())\r\n\t\t\t\tif (context) {\r\n\t\t\t\t\tcontext.nextProperty = 'returnedVariable'\r\n\t\t\t\t}\r\n\t\t\t\tvalue = value.valueOf(context)\r\n\t\t\t}\r\n\t\t\tif (value === undefined) {\r\n\t\t\t\tvalue = variable.default\r\n\t\t\t}\r\n\t\t\tif (context) {\r\n\t\t\t\tcontext.contextualize(this, parentContext)\r\n\t\t\t}\r\n\t\t\tif (parentContext) {\r\n\r\n\t\t\t\t/*if (!contextualized.listeners) {\r\n\t\t\t\t\t// mark it as initialized, since we have already recursively dependended on inputs\r\n\t\t\t\t\tcontextualized.listeners = []\r\n\t\t\t\t}*/\r\n\r\n\t\t\t\tif (!context) {\r\n\t\t\t\t\tparentContext.addInput(this)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (value && value.then) {\r\n\t\t\t\treturn when(value, function(value) {\r\n\t\t\t\t\treturn Variable.prototype.gotValue.call(variable, value, context)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\treturn value\r\n\t\t},\r\n\t\tPropertyClass: Variable,\r\n\t\tproperty: function(key, PropertyClass) {\r\n\t\t\tvar propertyVariable = this[key]\r\n\t\t\tif (!propertyVariable || !propertyVariable.notifies) {\r\n\t\t\t\tpropertyVariable = this._properties && this._properties[key]\r\n\t\t\t}\r\n\t\t\tif (!propertyVariable) {\r\n\t\t\t\t// create the property variable\r\n\t\t\t\tvar Class = PropertyClass || this.constructor[key]\r\n\t\t\t\tpropertyVariable = new (Class && typeof Class === 'function' && Class.notifies ? Class : this.PropertyClass)()\r\n\t\t\t\tpropertyVariable.key = key\r\n\t\t\t\tpropertyVariable.parent = this\r\n\t\t\t\tif (this[key] === undefined) {\r\n\t\t\t\t\tthis[key] = propertyVariable\r\n\t\t\t\t} else {\r\n\t\t\t\t\t(this._properties || (this._properties = {}))[key] = propertyVariable\r\n\t\t\t\t}\r\n\t\t\t} else if (PropertyClass) {\r\n\t\t\t\tif (!(propertyVariable instanceof PropertyClass)) {\r\n\t\t\t\t\tthrow new TypeError('Existing property variable does not match requested variable type')\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn propertyVariable\r\n\t\t},\r\n\t\tfor: function(subject) {\r\n\t\t\tif (subject && subject.target && !subject.constructor.getForClass) {\r\n\t\t\t\t// makes HTML events work\r\n\t\t\t\tsubject = subject.target\r\n\t\t\t}\r\n\t\t\tif (this.parent) {\r\n\t\t\t\treturn this.parent.for(subject).property(this.key)\r\n\t\t\t}\r\n\t\t\treturn new ContextualizedVariable(this, subject || defaultContext)\r\n\t\t},\r\n\t\t_changeValue: function(context, type, newValue) {\r\n\t\t\tvar key = this.key\r\n\t\t\tvar parent = this.parent\r\n\t\t\tvar variable = this\r\n\t\t\treturn when(parent.getValue ? parent.getValue(context) : parent.value, function(object) {\r\n\t\t\t\tif (object == null) {\r\n\t\t\t\t\t// nothing there yet, create an object to hold the new property\r\n\t\t\t\t\tparent.put(object = typeof key == 'number' ? [] : {}, context)\r\n\t\t\t\t} else if (typeof object != 'object') {\r\n\t\t\t\t\t// if the parent is not an object, we can't set anything (that will be retained)\r\n\t\t\t\t\treturn deny\r\n\t\t\t\t}\r\n\t\t\t\tvar oldValue = typeof object.get === 'function' ? object.get(key) : object[key]\r\n\t\t\t\tif (oldValue === newValue) {\r\n\t\t\t\t\t// no actual change to make\r\n\t\t\t\t\treturn noChange\r\n\t\t\t\t}\r\n\t\t\t\tif (typeof object.set === 'function') {\r\n\t\t\t\t\tobject.set(key, newValue)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (type == RequestChange && oldValue && oldValue.put && (!newValue && newValue.put)) {\r\n\t\t\t\t\t\t// if a put and the property value is a variable, assign it to that.\r\n\t\t\t\t\t\toldValue.put(newValue)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tobject[key] = newValue\r\n\t\t\t\t\t\t// or set the setter/getter\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tvar event = new RefreshEvent()\r\n\t\t\t\tevent.oldValue = oldValue\r\n\t\t\t\tevent.target = variable\r\n\t\t\t\tvariable.updated(event, variable, context)\r\n\r\n\t\t\t\t// now notify any object listeners\r\n\t\t\t\tvar listeners = propertyListenersMap.get(object)\r\n\t\t\t\t// we need to do it before the other listeners, so we can update it before\r\n\t\t\t\t// we trigger a full clobbering of the object\r\n\t\t\t\tif (listeners) {\r\n\t\t\t\t\tlisteners = listeners.slice(0)\r\n\t\t\t\t\tfor (var i = 0, l = listeners.length; i < l; i++) {\r\n\t\t\t\t\t\tvar listener = listeners[i]\r\n\t\t\t\t\t\tif (listener !== parent) {\r\n\t\t\t\t\t\t\t// now go ahead and actually trigger the other listeners (but make sure we don't do the parent again)\r\n\t\t\t\t\t\t\tlistener._propertyChange(key, object, context, type)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\t_propertyChange: function(propertyName, object, context, type) {\r\n\t\t\tif (this.onPropertyChange) {\r\n\t\t\t\tthis.onPropertyChange(propertyName, object, context)\r\n\t\t\t}\r\n\t\t\tthis.updated(new PropertyChangeEvent(propertyName, new RefreshEvent(), this), null, context)\r\n\t\t},\r\n\t\teachKey: function(callback) {\r\n\t\t\tfor (var i in this._properties) {\r\n\t\t\t\tcallback(i)\r\n\t\t\t}\r\n\t\t\tfor (var i in this) {\r\n\t\t\t\tif (this.hasOwnProperty[i]) {\r\n\t\t\t\t\tvar value = this[i]\r\n\t\t\t\t\tif (value && value.parent == this && value.listeners) {\r\n\t\t\t\t\t\tcallback(i)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tapply: function(instance, args) {\r\n\t\t\treturn new Call(this, args)\r\n\t\t},\r\n\t\tcall: function(instance) {\r\n\t\t\treturn this.apply(instance, Array.prototype.slice.call(arguments, 1))\r\n\t\t},\r\n\t\tforDependencies: function(callback) {\r\n\t\t\tif (this.returnedVariable) {\r\n\t\t\t\tcallback(this.returnedVariable)\r\n\t\t\t}\r\n\t\t\tif (this.hasNotifyingChild) {\r\n\t\t\t\tforPropertyNotifyingValues(this, this, callback)\r\n\t\t\t}\r\n\t\t\tif (this.parent) {\r\n\t\t\t\tcallback(this.parent)\r\n\t\t\t}\r\n\t\t},\r\n\t\tinit: function() {\r\n\t\t\tvar variable = this\r\n\t\t\tthis.forDependencies(function(dependency) {\r\n\t\t\t\tdependency.notifies(variable)\r\n\t\t\t})\r\n\r\n\t\t\tif (this.listeningToObject === null) {\r\n\t\t\t\t// we were previously listening to an object, but it needs to be restored\r\n\t\t\t\t// calling valueOf will cause the listening object to be restored\r\n\t\t\t\tthis.valueOf()\r\n\t\t\t}\r\n\t\t},\r\n\t\tcleanup: function() {\r\n\t\t\tthis.listeners = false\r\n\t\t\tvar handles = this.handles\r\n\t\t\tif (handles) {\r\n\t\t\t\tfor (var i = 0; i < handles.length; i++) {\r\n\t\t\t\t\thandles[i].remove()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.handles = null\r\n\t\t\tvar returnedVariable = this.returnedVariable\r\n\t\t\tvar variable = this\r\n\t\t\tthis.forDependencies(function(dependency) {\r\n\t\t\t\tdependency.stopNotifies(variable)\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\tupdateVersion: function(version) {\r\n\t\t\tthis.version = nextId++\r\n\t\t},\r\n\r\n\t\tgetVersion: function(context) {\r\n\t\t\treturn Math.max(this.version || 0, this.returnedVariable && this.returnedVariable.getVersion ? this.returnedVariable.getVersion(context) : 0)\r\n\t\t},\r\n\r\n\t\tgetSubject: function(selectVariable) {\r\n\t\t\treturn this.subject\r\n\t\t},\r\n\r\n\t\tgetUpdates: function(since) {\r\n\t\t\tvar updates = []\r\n\t\t\tvar nextUpdateMap = this.nextUpdateMap\r\n\t\t\tif (nextUpdateMap && since) {\r\n\t\t\t\twhile ((since = nextUpdateMap.get(since))) {\r\n\t\t\t\t\tif (since.type === 'refresh') {\r\n\t\t\t\t\t\t// if it was refresh, we can clear any prior entries\r\n\t\t\t\t\t\tupdates = []\r\n\t\t\t\t\t}\r\n\t\t\t\t\tupdates.push(since)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn updates\r\n\t\t},\r\n\r\n\t\tupdated: function(updateEvent, by, context) {\r\n\t\t\tif (!updateEvent) {\r\n\t\t\t\tupdateEvent = new RefreshEvent()\r\n\t\t\t}\r\n\t\t\tif (updateEvent.visited.has(this)){\r\n\t\t\t\t// if this event has already visited this variable, skip it\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tupdateEvent.visited.add(this)\r\n\t\t\tif (this.__debug) {\r\n\t\t\t\t// debug is on\r\n\t\t\t\tconsole.log('Variable changed at')\r\n\t\t\t\tconsole.log((new Error().stack || '').replace(/Error/, ''))\r\n\t\t\t}\r\n\r\n\t\t\tvar contextualInstance = context ? context.getContextualized(this) : this\r\n\t\t\tif (contextualInstance) {\r\n\t\t\t\tcontextualInstance.updated(updateEvent, this, context)\r\n\t\t\t}\r\n\t\t\t/*\r\n\t\t\t// at some point we could do an update list so that we could incrementally update\r\n\t\t\t// lists in non-live situations\r\n\t\t\tif (this.lastUpdate) {\r\n\t\t\t\tvar nextUpdateMap = this.nextUpdateMap\r\n\t\t\t\tif (!nextUpdateMap) {\r\n\t\t\t\t\tnextUpdateMap = this.nextUpdateMap = new WeakMap()\r\n\t\t\t\t}\r\n\t\t\t\tnextUpdateMap.set(this.lastUpdate, updateEvent)\r\n\t\t\t}\r\n\r\n\t\t\tthis.lastUpdate = updateEvent */\r\n\t\t\tthis.updateVersion()\r\n\r\n\t\t\tvar listeners = this.listeners\r\n\t\t\tif (listeners) {\r\n\t\t\t\tvar variable = this\r\n\t\t\t\t// make a copy, in case they change\r\n\t\t\t\tlisteners.forEach(function(dependent) {\r\n\t\t\t\t\tif ((updateEvent instanceof PropertyChangeEvent) &&\r\n\t\t\t\t\t\t\tdependent.parent) {\r\n\t\t\t\t\t\tif (dependent.key === updateEvent.key) {\r\n\t\t\t\t\t\t\tdependent.updated(updateEvent.childEvent, variable, context)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tdependent.updated(updateEvent, variable, context)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tif (updateEvent instanceof PropertyChangeEvent) {\r\n\t\t\t\tif (this.returnedVariable && this.fixed) {\r\n\t\t\t\t\tthis.returnedVariable.updated(updateEvent, this, context)\r\n\t\t\t\t}\r\n\t\t\t\tif (this.constructor.collection) {\r\n\t\t\t\t\tthis.constructor.collection.updated(updateEvent, this, context)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (this.parent) {\r\n\t\t\t\t\tthis.parent.updated(new PropertyChangeEvent(this.key, updateEvent, this.parent), this, context)\r\n\t\t\t}\r\n\t\t\treturn updateEvent\r\n\t\t},\r\n\r\n\t\tinvalidate: function() {\r\n\t\t\t// for back-compatibility for now\r\n\t\t\tthis.updated()\r\n\t\t},\r\n\r\n\t\tnotifies: function(target) {\r\n\t\t\tvar listeners = this.listeners\r\n\t\t\tif (!listeners || !this.hasOwnProperty('listeners')) {\r\n\t\t\t\tthis.listeners = listeners = new Set()\r\n\t\t\t\tthis.init()\r\n\t\t\t}\r\n\t\t\tlisteners.add(target)\r\n\t\t},\r\n\t\tsubscribe: function(listener) {\r\n\t\t\t// ES7 Observable (and baconjs) compatible API\r\n\t\t\tvar updated\r\n\t\t\tvar updateQueued\r\n\t\t\tvar variable = this\r\n\t\t\t// it is important to make sure you register for notifications before getting the value\r\n\t\t\tif (typeof listener === 'function') {\r\n\t\t\t\t// BaconJS compatible API\r\n\t\t\t\tvar variable = this\r\n\t\t\t\tvar event = {\r\n\t\t\t\t\tvalue: function() {\r\n\t\t\t\t\t\treturn variable.valueOf()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tupdated = function() {\r\n\t\t\t\t\tupdateQueued = false\r\n\t\t\t\t\tlistener(event)\r\n\t\t\t\t}\r\n\t\t\t}\telse if (listener.next) {\r\n\t\t\t\t// Assuming ES7 Observable API. It is actually a streaming API, this pretty much violates all principles of reactivity, but we will support it\r\n\t\t\t\tupdated = function() {\r\n\t\t\t\t\tupdateQueued = false\r\n\t\t\t\t\tlistener.next(variable.valueOf())\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error('Subscribing to an invalid listener, the listener must be a function, or have an update or next method')\r\n\t\t\t}\r\n\t\t\tvar updateReceiver = {\r\n\t\t\t\tupdated: function() {\r\n\t\t\t\t\tif (updateQueued) {\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\tupdateQueued = true\r\n\t\t\t\t\tlang.nextTurn(updated)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tupdated()\r\n\t\t\tthis.notifies(updateReceiver)\r\n\t\t\treturn {\r\n\t\t\t\tunsubscribe: function() {\r\n\t\t\t\t\tvariable.stopNotifies(updateReceiver)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tstopNotifies: function(dependent) {\r\n\t\t\tvar listeners = this.listeners\r\n\t\t\tif (listeners) {\r\n\t\t\t\tlisteners.delete(dependent)\r\n\t\t\t\tif (listeners.size === 0) {\r\n\t\t\t\t\t// clear the listeners so it will be reinitialized if it has\r\n\t\t\t\t\t// listeners again\r\n\t\t\t\t\tthis.cleanup()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tput: function(value, context) {\r\n\t\t\tvar variable = this\r\n\t\t\tif (this.parent) {\r\n\t\t\t\treturn this._changeValue(context, RequestChange, value)\r\n\t\t\t}\r\n\t\t\treturn when(this.getValue ? this.getValue(context) : this.value, function(oldValue) {\r\n\t\t\t\tif (oldValue === value) {\r\n\t\t\t\t\treturn noChange\r\n\t\t\t\t}\r\n\t\t\t\tif (oldValue && oldValue.put &&\r\n\t\t\t\t\t\t// if it is set to fixed, we see we can put in the current variable\r\n\t\t\t\t\t\t(variable.fixed || !(value && value.put))) {\r\n\t\t\t\t\treturn oldValue.put(value)\r\n\t\t\t\t}\r\n\t\t\t\treturn when(variable.setValue(value, context), function(value) {\r\n\t\t\t\t\tvar event = new RefreshEvent()\r\n\t\t\t\t\tevent.oldValue = oldValue\r\n\t\t\t\t\tevent.target = variable\r\n\t\t\t\t\tvariable.updated(event, variable, context)\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t},\r\n\t\tget: function(key) {\r\n\t\t\tif (this[key] || (this._properties && this._properties[key])) {\r\n\t\t\t\treturn this.property(key).valueOf()\r\n\t\t\t}\r\n\t\t\treturn when(this.getValue(), function(object) {\r\n\t\t\t\tvar value = object && (typeof object.get === 'function' ? object.get(key) : object[key])\r\n\t\t\t\tif (value && value.notifies) {\r\n\t\t\t\t\t// nested variable situation, get underlying value\r\n\t\t\t\t\treturn value.valueOf()\r\n\t\t\t\t}\r\n\t\t\t\treturn value\r\n\t\t\t})\r\n\t\t},\r\n\t\tset: function(key, value) {\r\n\t\t\t// TODO: create an optimized route when the property doesn't exist yet\r\n\t\t\tthis.property(key)._changeValue(null, RequestSet, value)\r\n\t\t},\r\n\t\tundefine: function(key, context) {\r\n\t\t\tthis.set(key, undefined, context)\r\n\t\t},\r\n\t\tis: function(proxiedVariable) {\r\n\t\t\tvar thisVariable = this\r\n\t\t\tthis.fixed = true\r\n\t\t\treturn when(this.setValue(proxiedVariable), function(value) {\r\n\t\t\t\tthisVariable.updated(new RefreshEvent(), thisVariable)\r\n\t\t\t\treturn thisVariable\r\n\t\t\t})\r\n\t\t},\r\n\t\tproxy: function(proxiedVariable) {\r\n\t\t\treturn this.is(proxiedVariable)\r\n\t\t},\r\n\t\tnext: function(value) {\r\n\t\t\t// for ES7 observable compatibility\r\n\t\t\tthis.put(value)\r\n\t\t},\r\n\t\terror: function(error) {\r\n\t\t\t// for ES7 observable compatibility\r\n\t\t\tvar listeners = this.listeners\r\n\t\t\tif (listeners) {\r\n\t\t\t\t// make a copy, in case they change\r\n\t\t\t\tlisteners.forEach(function(dependent) {\r\n\t\t\t\t\t// skip notifying property listeners if we are headed up the parent chain\r\n\t\t\t\t\tdependent.error(error)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomplete: function(value) {\r\n\t\t\t// for ES7 observable compatibility\r\n\t\t\tthis.put(value)\r\n\t\t},\r\n\t\tsetValue: function(value) {\r\n\t\t\tthis.value = value\r\n\t\t},\r\n\t\tonValue: function(listener) {\r\n\t\t\treturn this.subscribe(function(event) {\r\n\t\t\t\tlang.when(event.value(), function(value) {\r\n\t\t\t\t\tlistener(value)\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t},\r\n\t\ttoJSON: function() {\r\n\t\t\treturn this.valueOf()\r\n\t\t},\r\n\t\ttoString: function() {\r\n\t\t\treturn this.valueOf()\r\n\t\t},\r\n\t\tforEach: function(callbackOrItemClass, callbackOrContext, context) {\r\n\t\t\t// iterate through current value of variable\r\n\t\t\tif (callbackOrItemClass.notifies) {\r\n\t\t\t\treturn this.forEach(function(item) {\r\n\t\t\t\t\tvar itemVariable = callbackOrItemClass.from(item)\r\n\t\t\t\t\tcallbackOrContext.call(this, itemVariable)\r\n\t\t\t\t}, context)\r\n\t\t\t}\r\n\t\t\tif (this.collectionOf) {\r\n\t\t\t\treturn when(this.valueOf(callbackOrContext), function(value) {\r\n\t\t\t\t\tif (value && value.forEach) {\r\n\t\t\t\t\t\tvalue.forEach(function(item) {\r\n\t\t\t\t\t\t\tcallbackOrItemClass.call(this, this.collectionOf.from(item))\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\treturn when(this.valueOf(callbackOrContext), function(value) {\r\n\t\t\t\tif (value && value.forEach) {\r\n\t\t\t\t\tvalue.forEach(callbackOrItemClass)\r\n\t\t\t\t}else{\r\n\t\t\t\t\tfor (var i in value) {\r\n\t\t\t\t\t\tcallbackOrItemClass.call(value, value[i], i)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\tto: function (transformFunction, reverse) {\r\n\t\t\tif (typeof transformFunction !== 'function') {\r\n\t\t\t\tif (typeof transformFunction === 'object') {\r\n\t\t\t\t\tthis.to(transformFunction.get, transformFunction.set)\r\n\t\t\t\t}\r\n\t\t\t\tthrow new Error('No function provided to transform')\r\n\t\t\t}\r\n\t\t\tif (reverse) {\r\n\t\t\t\ttransformFunction.reverse = function(value, args, context) {\r\n\t\t\t\t\t// for direct to, we can just use the first argument\r\n\t\t\t\t\treverse.call(this, args[0], context)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn new Call(transformFunction, [this])\r\n\t\t},\r\n\t\tget schema() {\r\n\t\t\t// default schema is the constructor\r\n\t\t\tif (this.returnedVariable) {\r\n\t\t\t\treturn this.returnedVariable.schema\r\n\t\t\t}\r\n\t\t\tif (this.parent) {\r\n\t\t\t\tvar parentSchemaProperties = this.parent.schema.properties || this.parent.schema\r\n\t\t\t\treturn parentSchemaProperties && parentSchemaProperties[this.key]\r\n\t\t\t}\r\n\t\t\treturn this.constructor\r\n\t\t},\r\n\t\tset schema(schema) {\r\n\t\t\t// but allow it to be overriden\r\n\t\t\tObject.defineProperty(this, 'schema', {\r\n\t\t\t\tvalue: schema\r\n\t\t\t})\r\n\t\t},\r\n\t\tvalidate: function(target, schema) {\r\n\t\t\tif (this.returnedVariable) {\r\n\t\t\t\treturn this.returnedVariable.validate(target, schema)\r\n\t\t\t}\r\n\t\t\tif (this.parent) {\r\n\t\t\t\treturn this.parent.validate(target.valueOf(), schema)\r\n\t\t\t}\r\n\t\t\tif (schema) {\r\n\t\t\t\tif (schema.type && (schema.type !== typeof target)) {\r\n\t\t\t\t\treturn ['Target type of ' + typeof target + ' does not match schema type of ' + schema.type]\r\n\t\t\t\t}\r\n\t\t\t\tif (schema.required && (target == null || target == '' || (typeof target === 'number' && isNaN(target)))) {\r\n\t\t\t\t\treturn ['Value is required']\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar valid = []\r\n\t\t\tvalid.isValid = true\r\n\t\t\treturn valid\r\n\t\t},\r\n\r\n\t\tget validation() {\r\n\t\t\tvar validation = new Validating(this)\r\n\t\t\tObject.defineProperty(this, 'validation', {\r\n\t\t\t\tvalue: validation\r\n\t\t\t})\r\n\t\t\treturn validation\r\n\t\t},\r\n\t\tset validation(validation) {\r\n\t\t\t// but allow it to be overriden\r\n\t\t\tObject.defineProperty(this, 'validation', {\r\n\t\t\t\tvalue: validation\r\n\t\t\t})\r\n\t\t},\r\n\t\tset structured(structure) {\r\n\t\t\t// find any variable properties and attaches them as a property\r\n\t\t\tvar keys = Object.keys(this)\r\n\t\t\tvar properties = keys.length > 1 && this._properties || (this._properties = {})\r\n\t\t\tfor(var i = 0, l = keys.length; i < l; i++) {\r\n\t\t\t\tvar key = keys[i]\r\n\t\t\t\tvar value = this[key]\r\n\t\t\t\tif (value instanceof Variable) {\r\n\t\t\t\t\tvar existing = properties[key]\r\n\t\t\t\t\tif (existing) {\r\n\t\t\t\t\t\tif (existing !== value) {\r\n\t\t\t\t\t\t\t// an existing property exists, put in it\r\n\t\t\t\t\t\t\texisting.put(value)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (value.parent) {\r\n\t\t\t\t\t\t\tif (value.parent === this) {\r\n\t\t\t\t\t\t\t\tcontinue // just being assigned to another property\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// property already exists with different parent, make a proxy\r\n\t\t\t\t\t\t\t\tvar newValue = new Variable()\r\n\t\t\t\t\t\t\t\tnewValue.proxy(value)\r\n\t\t\t\t\t\t\t\tvalue = newValue\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvalue.key = key\r\n\t\t\t\t\t\tvalue.parent = this\r\n\t\t\t\t\t\tproperties[key] = value\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tgetId: function() {\r\n\t\t\treturn this.id || (this.id = nextId++)\r\n\t\t},\r\n\t\tobserveObject: function() {\r\n\t\t\tvar variable = this\r\n\t\t\treturn when(this.valueOf(), function(object) {\r\n\t\t\t\tvar listeners = propertyListenersMap.get(object)\r\n\t\t\t\tif (!listeners) {\r\n\t\t\t\t\tpropertyListenersMap.set(object, listeners = [])\r\n\t\t\t\t}\r\n\t\t\t\tif (listeners.observerCount) {\r\n\t\t\t\t\tlisteners.observerCount++\r\n\t\t\t\t}else{\r\n\t\t\t\t\tlisteners.observerCount = 1\r\n\t\t\t\t\tvar observer = listeners.observer = lang.observe(object, function(events) {\r\n\t\t\t\t\t\tfor (var i = 0, l = listeners.length; i < l; i++) {\r\n\t\t\t\t\t\t\tvar listener = listeners[i]\r\n\t\t\t\t\t\t\tfor (var j = 0, el = events.length; j < el; j++) {\r\n\t\t\t\t\t\t\t\tvar event = events[j]\r\n\t\t\t\t\t\t\t\tlistener._propertyChange(event.name, object)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\tif (observer.addKey) {\r\n\t\t\t\t\t\tfor (var i = 0, l = listeners.length; i < l; i++) {\r\n\t\t\t\t\t\t\tvar listener = listeners[i]\r\n\t\t\t\t\t\t\tlistener.eachKey(function(key) {\r\n\t\t\t\t\t\t\t\tobserver.addKey(key)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tregisterListener(object, variable)\r\n\t\t\t\treturn {\r\n\t\t\t\t\tremove: function() {\r\n\t\t\t\t\t\tderegisterListener(object, variable)\r\n\t\t\t\t\t\tif (!(--listeners.observerCount)) {\r\n\t\t\t\t\t\t\tlisteners.observer.remove()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdone: function() {\r\n\t\t\t\t\t\t// deliver changes\r\n\t\t\t\t\t\tlang.deliverChanges(observer)\r\n\t\t\t\t\t\tthis.remove()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\t\tgetCollectionOf: function() {\r\n\t\t\treturn this.constructor.collectionOf\r\n\t\t},\r\n\t\t_sN: function(name) {\r\n\t\t\t// for compilers to set a name\r\n\t\t\tthis.name = name\r\n\t\t\treturn this\r\n\t\t},\r\n\t\tget _debug() {\r\n\t\t\tif (this.__debug === undefined) {\r\n\t\t\t\tthis.__debug = true\r\n\t\t\t}\r\n\t\t\treturn this.__debug\r\n\t\t},\r\n\t\tset _debug(_debug) {\r\n\t\t\tthis.__debug = _debug\r\n\t\t},\r\n\t\t// TODO: Move these to VArray\r\n\t\t/* TODO: at some point, we might add support for length, but need to make it be dependent/notified by array changes\r\n\t\tget length() {\r\n\t\t\tif (typeof this !== 'function') {\r\n\t\t\t\tObject.defineProperty(this, 'length', {\r\n\t\t\t\t\tconfigurable: true\r\n\t\t\t\t})\r\n\t\t\t\treturn this.property('length')\r\n\t\t\t}\r\n\t\t},\r\n\t\tset length(length) {\r\n\t\t\t// allow overriding\r\n\t\t\tObject.defineProperty(this, 'length', {\r\n\t\t\t\tvalue: length\r\n\t\t\t})\r\n\t\t},*/\r\n\t\tsplice: function(startingIndex, removalCount) {\r\n\t\t\tvar args = arguments\r\n\t\t\treturn arrayToModify(this, function(array) {\r\n\t\t\t\tvar results = array.splice.apply(array, args)\r\n\t\t\t\tremovedAt(this, results, startingIndex, removalCount, array.length)\r\n\t\t\t\tinsertedAt(this, [].slice.call(args, 2), startingIndex, array.length)\r\n\t\t\t\treturn results\r\n\t\t\t})\r\n\t\t},\r\n\t\tpush: function() {\r\n\t\t\tvar args = arguments\r\n\t\t\treturn arrayToModify(this, function(array) {\r\n\t\t\t\tvar results = array.push.apply(array, args)\r\n\t\t\t\tinsertedAt(this, args, array.length - args.length, array.length)\r\n\t\t\t\treturn results\r\n\t\t\t})\r\n\t\t},\r\n\t\tunshift: function() {\r\n\t\t\tvar args = arguments\r\n\t\t\treturn arrayToModify(this, function(array) {\r\n\t\t\t\tvar results = array.unshift.apply(array, args)\r\n\t\t\t\tinsertedAt(this, args, 0, array.length)\r\n\t\t\t\treturn results\r\n\t\t\t})\r\n\t\t},\r\n\t\tpop: function() {\r\n\t\t\treturn arrayToModify(this, function(array) {\r\n\t\t\t\tvar results = array.pop()\r\n\t\t\t\tremovedAt(this, [results], array.length, 1)\r\n\t\t\t\treturn results\r\n\t\t\t})\r\n\t\t},\r\n\t\tshift: function() {\r\n\t\t\treturn arrayToModify(this, function(array) {\r\n\t\t\t\tvar results = array.shift()\r\n\t\t\t\tremovedAt(this, [results], 0, 1, array.length)\r\n\t\t\t\treturn results\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tfunction arrayToModify(variable, callback) {\r\n\t\t// TODO: switch this to allow promises\r\n\t\twhen(variable.cachedValue || variable.valueOf(), function(array) {\r\n\t\t\tif (!array) {\r\n\t\t\t\tvariable.put(array = [])\r\n\t\t\t}\r\n\t\t\tvariable.updateVersion()\r\n\t\t\tvar results = callback.call(variable, array)\r\n\t\t\tvariable.cachedVersion = variable.version // update the cached version so it doesn't need to be recomputed\r\n\t\t\treturn results\r\n\t\t})\r\n\t}\r\n\r\n\tfunction insertedAt(variable, added, startingIndex, arrayLength) {\r\n\t\tvar addedCount = added.length\r\n\t\t// adjust the key positions of any index properties after splice\r\n\t\tif (addedCount > 0) {\r\n\t\t\tvar arrayPosition\r\n\t\t\tfor (var i = arrayLength - addedCount; i > startingIndex;) {\r\n\t\t\t\tvar arrayPosition = variable[--i]\r\n\t\t\t\tif (arrayPosition) {\r\n\t\t\t\t\tvariable[i] = undefined\r\n\t\t\t\t\tarrayPosition.key += addedCount\r\n\t\t\t\t\tvariable[arrayPosition.key] = arrayPosition\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// send out updates\r\n\t\t\tfor (var i = 0, l = added.length; i < l; i++) {\r\n\t\t\t\tvariable.updated(new AddEvent({\r\n\t\t\t\t\tvalue: added[i],\r\n\t\t\t\t\tindex: i + startingIndex,\r\n\t\t\t\t\tmodifier: variable\r\n\t\t\t\t}), variable)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction removedAt(variable, removed, startingIndex, removalCount, arrayLength) {\r\n\t\t// adjust the properties\r\n\t\tvar i = startingIndex + removalCount\r\n\t\tvar arrayPosition\r\n\t\tif (removalCount > 0) {\r\n\t\t\tfor (var i = startingIndex + removalCount; i < arrayLength + removalCount; i++) {\r\n\t\t\t\tvar arrayPosition = variable[i]\r\n\t\t\t\tif (arrayPosition) {\r\n\t\t\t\t\tvariable[i] = undefined\r\n\t\t\t\t\tarrayPosition.key -= removalCount\r\n\t\t\t\t\tvariable[arrayPosition.key] = arrayPosition\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// send out updates\r\n\t\t\tfor (var i = 0; i < removalCount; i++) {\r\n\t\t\t\tvariable.updated(new DeleteEvent({\r\n\t\t\t\t\tpreviousIndex: startingIndex,\r\n\t\t\t\t\toldValue: removed[i],\r\n\t\t\t\t\tmodifier: variable\r\n\t\t\t\t}), variable)\r\n\t\t\t}\r\n\t\t\tvariable.cachedVersion = variable.version // update the cached version so it doesn't need to be recomputed\r\n\t\t}\r\n\t}\r\n\r\n\tif (typeof Symbol !== 'undefined') {\r\n\t\tVariable.prototype[Symbol.iterator] = function() {\r\n\t\t\treturn this.valueOf()[Symbol.iterator]()\r\n\t\t}\r\n\t}\r\n\r\n\tvar VMap = Variable.VMap = lang.compose(Variable, function(value){\r\n\t\tthis.value = typeof value === 'undefined' ? this.default : value\r\n\t}, {\r\n\t\tfixed: true,\r\n\t\t// TODO: Move all the get and set functionality for maps out of Variable\r\n\t\tproperty: function(key, PropertyClass) {\r\n\t\t\tvar properties = this._properties || (this._properties = new Map())\r\n\t\t\tvar propertyVariable = properties.get(key)\r\n\t\t\tif (!propertyVariable) {\r\n\t\t\t\t// create the property variable\r\n\t\t\t\tpropertyVariable = new (PropertyClass || this.PropertyClass)()\r\n\t\t\t\tpropertyVariable.key = key\r\n\t\t\t\tpropertyVariable.parent = this\r\n\t\t\t\tproperties.set(key, propertyVariable)\r\n\t\t\t}\r\n\t\t\treturn propertyVariable\r\n\t\t}\r\n\t})\r\n\r\n\tvar Caching = Variable.Caching = lang.compose(Variable, function Caching(getValue, setValue) {\r\n\t\tif (getValue) {\r\n\t\t\tthis.getValue = getValue\r\n\t\t}\r\n\t\tif (setValue) {\r\n\t\t\tthis.setValue = setValue\r\n\t\t}\r\n\t}, {\r\n\t\tgetValue: function(context, transformContext) {\r\n\t\t\t// first check to see if we have the variable already computed\r\n\t\t\tvar contextualizedVariable = this\r\n\t\t\tif (context) {\r\n\t\t\t\tcontextualizedVariable = context.getContextualized(this)\r\n\t\t\t\tif (!contextualizedVariable && this.context && this.context.matches(context)) {\r\n\t\t\t\t\tcontextualizedVariable = this\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (contextualizedVariable && contextualizedVariable.cachedVersion === contextualizedVariable.getVersion()) {\r\n\t\t\t\tif (context) {\r\n\t\t\t\t\tcontext.addInput(contextualizedVariable)\r\n\t\t\t\t}\r\n\t\t\t\treturn contextualizedVariable.cachedValue\r\n\t\t\t}\r\n\r\n\t\t\tvar variable = this\r\n\t\t\tfunction withComputedValue(computedValue) {\r\n\t\t\t\tvar contextualizedVariable = transformContext && transformContext.contextualized || variable\r\n\t\t\t\tcontextualizedVariable.cachedVersion = newVersion\r\n\t\t\t\tcontextualizedVariable.cachedValue = computedValue\r\n\t\t\t\tcontextualizedVariable.context = transformContext\r\n\t\t\t\treturn computedValue\r\n\t\t\t}\r\n\r\n\t\t\tvar newVersion = this.getVersion()\r\n\t\t\tvar computedValue = this.computeValue(transformContext)\r\n\t\t\tif (computedValue && computedValue.then) {\r\n\t\t\t\treturn computedValue.then(withComputedValue)\r\n\t\t\t} else {\r\n\t\t\t\treturn withComputedValue(computedValue)\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\n\tvar Item = Variable.Item = lang.compose(Variable, function Item(value, content) {\r\n\t\tthis.value = value\r\n\t\tthis.collection = content\r\n\t}, {})\r\n\r\n\tvar Composite = Variable.Composite = lang.compose(Caching, function Composite(args) {\r\n\t\tfor (var i = 0, l = args.length; i < l; i++) {\r\n\t\t\tthis[i > 0 ? 'input' + i : 'input'] = args[i]\r\n\t\t}\r\n\t}, {\r\n\t\tforDependencies: function(callback) {\r\n\t\t\t// depend on the args\r\n\t\t\tCaching.prototype.forDependencies.call(this, callback)\r\n\t\t\tvar argument, argumentName\r\n\t\t\tfor (var i = 0; (argument = this[argumentName = i > 0 ? 'input' + i : 'input']) || argumentName in this; i++) {\r\n\t\t\t\tif (argument && argument.notifies) {\r\n\t\t\t\t\tcallback(argument)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tupdated: function(updateEvent, by, context) {\r\n\t\t\tif (by !== this.returnedVariable && updateEvent && updateEvent.type !== 'refresh') {\r\n\t\t\t\t// search for the output in the inputs\r\n\t\t\t\tvar argument, argumentName\r\n\t\t\t\tfor (var i = 0; (argument = this[argumentName = i > 0 ? 'input' + i : 'input']) || argumentName in this; i++) {\r\n\t\t\t\t\tif (argument === by) {\r\n\t\t\t\t\t\t// if one of the args was updated, we need to do a full refresh (we can't compute differential events without knowledge of how the mapping function works)\r\n\t\t\t\t\t\tupdateEvent = new RefreshEvent()\r\n\t\t\t\t\t\tcontinue\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn Caching.prototype.updated.call(this, updateEvent, by, context)\r\n\t\t},\r\n\r\n\t\tgetUpdates: function(since) {\r\n\t\t\t// this always issues updates, nothing incremental can flow through it\r\n\t\t\tif (!since || since.version < getVersion()) {\r\n\t\t\t\treturn [new RefreshEvent()]\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetVersion: function(context) {\r\n\t\t\tvar version = Variable.prototype.getVersion.call(this, context)\r\n\t\t\tvar argument, argumentName\r\n\t\t\tfor (var i = 0; (argument = this[argumentName = i > 0 ? 'input' + i : 'input']) || argumentName in this; i++) {\r\n\t\t\t\tif (argument && argument.getVersion) {\r\n\t\t\t\t\tversion = Math.max(version, argument.getVersion(context))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn version\r\n\t\t},\r\n\r\n\t\tcomputeValue: function(context) {\r\n\t\t\tvar results = []\r\n\t\t\tvar argument, argumentName\r\n\t\t\tfor (var i = 0; (argument = this[argumentName = i > 0 ? 'input' + i : 'input']) || argumentName in this; i++) {\r\n\t\t\t\tif (context) {\r\n\t\t\t\t\tcontext.nextProperty = argumentName\r\n\t\t\t\t}\r\n\t\t\t\tresults[i] = argument && argument.valueOf(context)\r\n\t\t\t}\r\n\t\t\treturn whenAll(results, function(resolved) {\r\n\t\t\t\treturn resolved\r\n\t\t\t})\r\n\t\t},\r\n\t\tgetArguments: function() {\r\n\t\t\tvar args = []\r\n\t\t\tvar argument, argumentName\r\n\t\t\tfor (var i = 0; (argument = this[argumentName = i > 0 ? 'input' + i : 'input']) || argumentName in this; i++) {\r\n\t\t\t\targs.push(argument)\r\n\t\t\t}\r\n\t\t\treturn args\r\n\t\t}\r\n\t})\r\n\r\n\t// a call variable is the result of a call\r\n\tvar Call = lang.compose(Composite, function Transform(transform, args) {\r\n\t\tif (transform) {\r\n\t\t\tthis.transform = transform\r\n\t\t\tfor (var i = 0, l = args.length; i < l; i++) {\r\n\t\t\t\tthis[i > 0 ? 'input' + i : 'input'] = args[i]\r\n\t\t\t}\r\n\t\t}\r\n\t}, {\r\n\t\tfixed: true,\r\n\t\tforDependencies: function(callback) {\r\n\t\t\t// depend on the args\r\n\t\t\tComposite.prototype.forDependencies.call(this, callback)\r\n\t\t\tif (this.transform.notifies) {\r\n\t\t\t\tcallback(this.transform)\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tcomputeValue: function(context) {\r\n\t\t\tif (context) {\r\n\t\t\t\tcontext.nextProperty = 'transform'\r\n\t\t\t}\r\n\t\t\tvar functionValue = this.transform.valueOf(context)\r\n\t\t\tif (functionValue.then) {\r\n\t\t\t\tvar call = this\r\n\t\t\t\treturn functionValue.then(function(functionValue) {\r\n\t\t\t\t\treturn call.invoke(functionValue, context)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\treturn this.invoke(functionValue, context)\r\n\t\t},\r\n\r\n\t\tgetVersion: function(context) {\r\n\t\t\t// TODO: shortcut if we are live and since equals this.lastUpdate\r\n\t\t\tvar argsVersion = Composite.prototype.getVersion.call(this, context)\r\n\t\t\tif (this.transform.getVersion) {\r\n\t\t\t\treturn Math.max(argsVersion, this.transform.getVersion(context))\r\n\t\t\t}\r\n\t\t\treturn argsVersion\r\n\t\t},\r\n\r\n\t\texecute: function(context) {\r\n\t\t\tvar call = this\r\n\t\t\treturn when(this.transform.valueOf(context), function(functionValue) {\r\n\t\t\t\treturn call.invoke(functionValue, context, true)\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\tput: function(value, context) {\r\n\t\t\tvar call = this\r\n\t\t\treturn when(this.valueOf(context), function(originalValue) {\r\n\t\t\t\tif (originalValue === value) {\r\n\t\t\t\t\treturn noChange\r\n\t\t\t\t}\r\n\t\t\t\treturn when(call.transform.valueOf(context), function(functionValue) {\r\n\t\t\t\t\treturn call.invoke(function() {\r\n\t\t\t\t\t\tif (functionValue.reverse) {\r\n\t\t\t\t\t\t\tfunctionValue.reverse.call(call, value, call.getArguments(), context)\r\n\t\t\t\t\t\t\treturn Variable.prototype.put.call(call, value, context)\r\n\t\t\t\t\t\t} else if (originalValue && originalValue.put) {\r\n\t\t\t\t\t\t\treturn originalValue.put(value)\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\treturn deny\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, context)\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t},\r\n\t\tinvoke: function(functionValue, context, observeArguments) {\r\n\t\t\tvar instance = this.transform.parent\r\n\t\t\tvar variable = this\r\n\t\t\tif (functionValue.handlesVariables || functionValue.property) {\r\n\t\t\t\treturn functionValue.apply(instance, this.getArguments(), context)\r\n\t\t\t}else{\r\n\t\t\t\tvar results = []\r\n\t\t\t\tvar argument, argumentName\r\n\t\t\t\tfor (var i = 0; (argument = this[argumentName = i > 0 ? 'input' + i : 'input']) || argumentName in this; i++) {\r\n\t\t\t\t\tif (context) {\r\n\t\t\t\t\t\tcontext.nextProperty = argumentName\r\n\t\t\t\t\t}\r\n\t\t\t\t\tresults[i] = argument && argument.valueOf(context)\r\n\t\t\t\t}\r\n\t\t\t\tinstance = instance && instance.valueOf(context)\r\n\t\t\t\tif (functionValue.handlesPromises) {\r\n\t\t\t\t\treturn functionValue.apply(instance, results, context)\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// include the instance in whenAll\r\n\t\t\t\t\tresults.push(instance)\r\n\t\t\t\t\t// wait for the values to be received\r\n\t\t\t\t\treturn whenAll(results, function(inputs) {\r\n\t\t\t\t\t\tif (observeArguments) {\r\n\t\t\t\t\t\t\tvar handles = []\r\n\t\t\t\t\t\t\tfor (var i = 0, l = inputs.length; i < l; i++) {\r\n\t\t\t\t\t\t\t\tvar input = inputs[i]\r\n\t\t\t\t\t\t\t\tif (input && typeof input === 'object') {\r\n\t\t\t\t\t\t\t\t\thandles.push(observe(input))\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar instance = inputs.pop()\r\n\t\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\t\tvar result = functionValue.apply(instance || variable, inputs, context)\r\n\t\t\t\t\t\t\t}finally{\r\n\t\t\t\t\t\t\t\twhen(result, function() {\r\n\t\t\t\t\t\t\t\t\tfor (var i = 0; i < l; i++) {\r\n\t\t\t\t\t\t\t\t\t\thandles[i].done()\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn result\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar instance = inputs.pop()\r\n\t\t\t\t\t\treturn functionValue.apply(instance || variable, inputs, context)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tsetReverse: function(reverse) {\r\n\t\t\tthis.transform.valueOf().reverse = reverse\r\n\t\t\treturn this\r\n\t\t},\r\n\t\tgetCollectionOf: function() {\r\n\t\t\treturn this.returnedVariable && this.returnedVariable.getCollectionOf()\r\n\t\t}\r\n\t})\r\n\tVariable.Call = Call\r\n\r\n\tvar ContextualizedVariable = lang.compose(Variable, function ContextualizedVariable(generic, subject) {\r\n\t\tthis.generic = generic\r\n\t\tthis.subject = subject\r\n\t}, {\r\n\t\tvalueOf: function() {\r\n\t\t\t// TODO: Lookup Context type for all of these using registry or something\r\n\t\t\tvar subject = this.subject\r\n\t\t\treturn this.generic.valueOf(subject.getContextualized ? subject : new Context(subject))\r\n\t\t},\r\n\r\n\t\tforDependencies: function(callback) {\r\n\t\t\tthis.inputs && this.inputs.forEach(callback)\r\n\t\t},\r\n\r\n\t\tgetVersion: function() {\r\n\t\t\tvar version = Variable.prototype.getVersion.call(this)\r\n\t\t\tvar inputs = this.inputs || 0\r\n\t\t\tfor (var i = 0, l = inputs.length; i < l; i++) {\r\n\t\t\t\tvar input = inputs[i]\r\n\t\t\t\tif (input.getVersion) {\r\n\t\t\t\t\tversion = Math.max(version, input.getVersion())\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn version\r\n\t\t},\r\n\r\n\t\tput: function(value) {\r\n\t\t\tvar subject = this.subject\r\n\t\t\treturn this.generic.put(value, subject.getContextualized ? subject : new Context(subject))\r\n\t\t}\r\n\t})\r\n\r\n\tvar IterativeMethod = lang.compose(Composite, function(source, method, args) {\r\n\t\tthis.source = source\r\n\t\t// source.interestWithin = true\r\n\t\tthis.method = method\r\n\t\tthis.arguments = args\r\n\t}, {\r\n\t\tcomputeValue: function(context) {\r\n\t\t\tvar method = this.method\r\n\t\t\tvar args = this.arguments\r\n\t\t\tvar variable = this\r\n\t\t\tif (context) {\r\n\t\t\t\tcontext.nextProperty = 'source'\r\n\t\t\t}\r\n\t\t\tvar collectionOf = this.collectionOf\r\n\t\t\treturn when(this.source.valueOf(context), function(array) {\r\n\t\t\t\tif (array && array.forEach) {\r\n\t\t\t\t\tif (context && context.notify) {\r\n\t\t\t\t\t\tvar contextualizedVariable\r\n\t\t\t\t\t\tif (context.distinctSubject) {\r\n\t\t\t\t\t\t\tvar contextMap = variable._contextMap || (variable._contextMap = new WeakMap())\r\n\t\t\t\t\t\t\tif (contextMap.has(context.distinctSubject)) {\r\n\t\t\t\t\t\t\t\tcontextualizedVariable = contextMap.get(context.distinctSubject)\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tcontextMap.set(context.distinctSubject, contextualizedVariable = Object.create(variable))\r\n\t\t\t\t\t\t\t\tcontextualizedVariable.listeners = false\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcontextualizedVariable = variable\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvariable.notifies(contextualizedVariable)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (collectionOf) {\r\n\t\t\t\t\t\tarray = array.map(function(item) {\r\n\t\t\t\t\t\t\treturn collection.from(item)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (method === 'map'){\r\n\t\t\t\t\t\t// fast path, and special behavior for map\r\n\t\t\t\t\t\treturn args[0](array)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// if not an array convert to an array\r\n\t\t\t\t\tarray = [array]\r\n\t\t\t\t}\r\n\t\t\t\tif (typeof method === 'string') {\r\n\t\t\t\t\t// apply method\r\n\t\t\t\t\treturn array[method].apply(array, args)\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn method(array, args)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\t\t// TODO: Create specialized updated handlers for faster recomputation of other array derivatives\r\n\t\tforDependencies: function(callback) {\r\n\t\t\t// depend on the args\r\n\t\t\tComposite.prototype.forDependencies.call(this, callback)\r\n\t\t\tcallback(this.source)\r\n\t\t},\r\n\t\tgetVersion: function(context) {\r\n\t\t\treturn Math.max(Composite.prototype.getVersion.call(this, context), this.source.getVersion(context))\r\n\t\t},\r\n\t\tgetCollectionOf: function(){\r\n\t\t\treturn this.source.getCollectionOf()\r\n\t\t}\r\n\t})\r\n\r\n\tfunction defineArrayMethod(method, constructor, properties) {\r\n\t\tvar IterativeResults = lang.compose(IterativeMethod, constructor, properties)\r\n\t\tIterativeResults.prototype.method || (IterativeResults.prototype.method = method)\r\n\t\tObject.defineProperty(IterativeResults.prototype, 'isIterable', {value: true});\r\n\t\tVariable.prototype[method] = function() {\r\n\t\t\tvar results = new IterativeResults()\r\n\t\t\tresults.source = this\r\n\t\t\tresults.arguments = arguments\r\n\t\t\treturn results\r\n\t\t}\r\n\t}\r\n\r\n\tdefineArrayMethod('filter', function Filtered() {}, {\r\n\t\tupdated: function(event, by, context) {\r\n\t\t\tif (!event || event.modifier === this || (event.modifier && event.modifier.constructor === this)) {\r\n\t\t\t\treturn Composite.prototype.updated.call(this, event, by, context)\r\n\t\t\t}\r\n\t\t\tvar contextualizedVariable = context ? context.getContextualized(this) : this\r\n\t\t\tif (event.type === 'delete') {\r\n\t\t\t\tvar index = contextualizedVariable.cachedValue.indexOf(event.oldValue)\r\n\t\t\t\tif (index > -1) {\r\n\t\t\t\t\tcontextualizedVariable.splice(index, 1)\r\n\t\t\t\t}\r\n\t\t\t} else if (event.type === 'add') {\r\n\t\t\t\tif ([event.value].filter(this.arguments[0]).length > 0) {\r\n\t\t\t\t\tcontextualizedVariable.push(event.value)\r\n\t\t\t\t}\r\n\t\t\t} else if (event.type === 'update') {\r\n\t\t\t\tvar object = event.parent.valueOf(context)\r\n\t\t\t\tvar index = contextualizedVariable.cachedValue.indexOf(object)\r\n\t\t\t\tvar matches = [object].filter(this.arguments[0]).length > 0\r\n\t\t\t\tif (index > -1) {\r\n\t\t\t\t\tif (matches) {\r\n\t\t\t\t\t\treturn new PropertyChangeEvent(index, event, contextualizedVariable.cachedValue,\r\n\t\t\t\t\t\t\t// might need to do something with this\r\n\t\t\t\t\t\t\tobject)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcontextualizedVariable.splice(index, 1)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\telse {\r\n\t\t\t\t\tif (matches) {\r\n\t\t\t\t\t\tcontextualizedVariable.push(object)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// else nothing mactches\r\n\t\t\t\t}\r\n\t\t\t\treturn\r\n\t\t\t} else {\r\n\t\t\t\treturn Composite.prototype.updated.call(this, event, by, context)\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\tdefineArrayMethod('map', function Mapped() {}, {\r\n\t\tupdated: function(event, by, context) {\r\n\t\t\tif (!event || event.modifier === this || (event.modifier && event.modifier.constructor === this)) {\r\n\t\t\t\treturn Composite.prototype.updated.call(this, event, by, context)\r\n\t\t\t}\r\n\t\t\tvar contextualizedVariable = context ? context.getContextualized(this) : this\r\n\t\t\tif (event.type === 'delete') {\r\n\t\t\t\tcontextualizedVariable.splice(event.previousIndex, 1)\r\n\t\t\t} else if (event.type === 'add') {\r\n\t\t\t\tcontextualizedVariable.push(this.arguments[0].call(this.arguments[1], event.value))\r\n\t\t\t} else if (event.type === 'update') {\r\n\t\t\t\tvar object = event.parent.valueOf(context)\r\n\t\t\t\tvar array = contextualizedVariable.cachedValue\r\n\t\t\t\tif (array && array.map) {\r\n\t\t\t\t\tvar index = array.indexOf(object)\r\n\t\t\t\t\tcontextualizedVariable.splice(index, 1, this.arguments[0].call(this.arguments[1], event.value))\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn Composite.prototype.updated.call(this, event, by, context)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn Composite.prototype.updated.call(this, event, by, context)\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\tdefineArrayMethod('reduce', function Reduced() {})\r\n\tdefineArrayMethod('reduceRight', function Reduced() {})\r\n\tdefineArrayMethod('some', function Aggregated() {})\r\n\tdefineArrayMethod('every', function Aggregated() {})\r\n\tdefineArrayMethod('slice', function Aggregated() {})\r\n\tdefineArrayMethod('keyBy', function UniqueIndex(source, args) {}, {\r\n\t\tproperty: VMap.prototype.property,\r\n\t\tmethod: function(array, args) {\r\n\t\t\tvar index = new Map()\r\n\t\t\tvar keyGenerator = args[0]\r\n\t\t\tvar valueGenerator = args[1]\r\n\t\t\tvar hasKeyFunction = typeof keyGenerator === 'function'\r\n\t\t\tvar hasValueFunction = typeof valueGenerator === 'function'\r\n\t\t\tvar hasKey = !!keyGenerator\r\n\t\t\tfor (var i = 0, l = array.length; i < l; i++) {\r\n\t\t\t\tvar element = array[i]\r\n\t\t\t\tindex.set(\r\n\t\t\t\t\thasKeyFunction ? keyGenerator(element, emit) :\r\n\t\t\t\t\t\thasKey ? element[keyGenerator] : element,\r\n\t\t\t\t\thasValueFunction ? valueGenerator(element) : element)\r\n\t\t\t}\r\n\t\t\tfunction emit(key, value) {\r\n\t\t\t\tindex.set(key, value)\r\n\t\t\t}\r\n\t\t\treturn index\r\n\t\t}\r\n\t})\r\n\r\n\tdefineArrayMethod('groupBy', function UniqueIndex(source, args) {}, {\r\n\t\tproperty: VMap.prototype.property,\r\n\t\tmethod: function(array, args) {\r\n\t\t\tvar index = new Map()\r\n\t\t\tvar keyGenerator = args[0]\r\n\t\t\tvar valueGenerator = args[1]\r\n\t\t\tvar hasKeyFunction = typeof keyGenerator === 'function'\r\n\t\t\tvar hasValueFunction = typeof valueGenerator === 'function'\r\n\t\t\tvar hasKey = !!keyGenerator\r\n\t\t\tfor (var i = 0, l = array.length; i < l; i++) {\r\n\t\t\t\tvar element = array[i]\r\n\t\t\t\tvar key = hasKeyFunction ? keyGenerator(element) :\r\n\t\t\t\t\t\thasKey ? element[keyGenerator] : element\r\n\t\t\t\tvar group = index.get(key)\r\n\t\t\t\tif (!group) {\r\n\t\t\t\t\tindex.set(key, group = [])\r\n\t\t\t\t}\r\n\t\t\t\tgroup.push(hasValueFunction ? valueGenerator(element) : element)\r\n\t\t\t}\r\n\t\t\tfunction emit(key, value) {\r\n\t\t\t\tvar group = index.get(key)\r\n\t\t\t\tif (!group) {\r\n\t\t\t\t\tindex.set(key, group = [])\r\n\t\t\t\t}\r\n\t\t\t\tgroup.push(value)\r\n\t\t\t}\r\n\t\t\treturn index\r\n\t\t}\r\n\t})\r\n\r\n\r\n\tvar getValue\r\n\tvar GeneratorVariable = Variable.GeneratorVariable = lang.compose(Variable.Composite, function ReactiveGenerator(generator){\r\n\t\tthis.generator = generator\r\n\t}, {\r\n\t\tcomputeValue: getValue = function(context, resuming) {\r\n\t\t\tvar lastValue\r\n\t\t\tvar i\r\n\t\t\tvar generatorIterator\r\n\t\t\tvar isThrowing\r\n\t\t\tif (resuming) {\r\n\t\t\t\t// resuming from a promise\r\n\t\t\t\tgeneratorIterator = resuming.iterator\r\n\t\t\t\ti = resuming.i\r\n\t\t\t\tlastValue = resuming.value\r\n\t\t\t\tisThrowing = resuming.isThrowing\r\n\t\t\t} else {\r\n\t\t\t\t// a fresh start\r\n\t\t\t\ti = 0\r\n\t\t\t\tgeneratorIterator = this.generator()\r\n\t\t\t}\r\n\r\n\t\t\tdo {\r\n\t\t\t\tvar stepReturn = generatorIterator[isThrowing ? 'throw' : 'next'](lastValue)\r\n\t\t\t\tif (stepReturn.done) {\r\n\t\t\t\t\treturn stepReturn.value\r\n\t\t\t\t}\r\n\t\t\t\tvar nextVariable = stepReturn.value\r\n\t\t\t\t// compare with the arguments from the last\r\n\t\t\t\t// execution to see if they are the same\r\n\t\t\t\tvar argumentName = i > 0 ? 'input' + i : 'input'\r\n\t\t\t\tif (this[argumentName] !== nextVariable) {\r\n\t\t\t\t\tif (this[argumentName]) {\r\n\t\t\t\t\t\tthis[argumentName].stopNotifies(this)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// subscribe if it is a variable\r\n\t\t\t\t\tif (nextVariable && nextVariable.notifies) {\r\n\t\t\t\t\t\tif (this.listeners) {\r\n\t\t\t\t\t\t\tnextVariable.notifies(this)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tthis[argumentName] = nextVariable\r\n\t\t\t\t\t} else if (typeof nextVariable === 'function' && isGenerator(nextVariable)) {\r\n\t\t\t\t\t\tvar delegatedGenerator\r\n\t\t\t\t\t\tgetValue.call(this, context, delegatedGenerator = {\r\n\t\t\t\t\t\t\ti: i,\r\n\t\t\t\t\t\t\titerator: nextVariable()\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\ti = delegatedGenerator.i\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis[argumentName] = null\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ti++\r\n\t\t\t\tif (resuming) {\r\n\t\t\t\t\tresuming.i = i\r\n\t\t\t\t}\r\n\t\t\t\tif (context) {\r\n\t\t\t\t\tcontext.nextProperty = argumentName\r\n\t\t\t\t}\r\n\t\t\t\tlastValue = nextVariable && nextVariable.valueOf(context)\r\n\t\t\t\tif (lastValue && lastValue.then) {\r\n\t\t\t\t\t// if it is a promise, we will wait on it\r\n\t\t\t\t\tvar variable = this\r\n\t\t\t\t\t// and return the promise so that the getValue caller can wait on this\r\n\t\t\t\t\treturn lastValue.then(function(value) {\r\n\t\t\t\t\t\treturn getValue.call(variable, context, {\r\n\t\t\t\t\t\t\ti: i,\r\n\t\t\t\t\t\t\titerator: generatorIterator,\r\n\t\t\t\t\t\t\tvalue: value\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}, function(error) {\r\n\t\t\t\t\t\treturn getValue.call(variable, context, {\r\n\t\t\t\t\t\t\ti: i,\r\n\t\t\t\t\t\t\titerator: generatorIterator,\r\n\t\t\t\t\t\t\tvalue: error,\r\n\t\t\t\t\t\t\tisThrowing: true\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t} while(true)\r\n\t\t}\r\n\t})\r\n\r\n\tvar Validating = lang.compose(Caching, function(target) {\r\n\t\tthis.target = target\r\n\t}, {\r\n\t\tforDependencies: function(callback) {\r\n\t\t\tCaching.prototype.forDependencies.call(this, callback)\r\n\t\t\tcallback(this.target)\r\n\t\t},\r\n\t\tgetVersion: function(context) {\r\n\t\t\treturn Math.max(Variable.prototype.getVersion.call(this, context), this.target.getVersion(context))\r\n\t\t},\r\n\t\tcomputeValue: function(context) {\r\n\t\t\tvar target = this.target\r\n\t\t\t// need to actually access the target value, so it can be evaluated in case it\r\n\t\t\t// there is a returned variable that we should delegate to.\r\n\t\t\ttarget.valueOf(context)\r\n\t\t\treturn target.validate(target, target.schema)\r\n\t\t}\r\n\t})\r\n\r\n\tVariable.VArray = Variable\r\n\tVariable.VPromised = Variable\r\n\tVariable.deny = deny\r\n\tVariable.noChange = noChange\r\n\tfunction addFlag(name) {\r\n\t\tVariable[name] = function(functionValue) {\r\n\t\t\tfunctionValue[name] = true\r\n\t\t}\r\n\t}\r\n\taddFlag(Variable, 'handlesContext')\r\n\taddFlag(Variable, 'handlesPromises')\r\n\r\n\tfunction objectUpdated(object) {\r\n\t\t// simply notifies any subscribers to an object, that it has changed\r\n\t\tvar listeners = propertyListenersMap.get(object)\r\n\t\tif (listeners) {\r\n\t\t\tfor (var i = 0, l = listeners.length; i < l; i++) {\r\n\t\t\t\tlisteners[i]._propertyChange(null, object)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction all(array, transform) {\r\n\t\t// This is intended to mirror Promise.all. It actually takes\r\n\t\t// an iterable, but for now we are just looking for array-like\r\n\t\tif (array.length > -1) {\r\n\t\t\treturn typeof transform === 'function' ? new Call(transform, array) : new Composite(array)\r\n\t\t}\r\n\t\tif (arguments.length > 1) {\r\n\t\t\t// support multiple arguments as an array\r\n\t\t\treturn new Composite(arguments)\r\n\t\t}\r\n\t\tif (typeof array === 'object') {\r\n\t\t\t// allow an object as a hash to be mapped\r\n\t\t\tvar keyMapping = []\r\n\t\t\tvar valueArray = []\r\n\t\t\tfor (var key in array) {\r\n\t\t\t\tkeyMapping.push(key)\r\n\t\t\t\tvalueArray.push(array[key])\r\n\t\t\t}\r\n\t\t\treturn new Variable(function(results) {\r\n\t\t\t\tvar resultObject = {}\r\n\t\t\t\tfor (var i = 0; i < results.length; i++) {\r\n\t\t\t\t\tresultObject[keyMapping[i]] = results[i]\r\n\t\t\t\t}\r\n\t\t\t\treturn resultObject\r\n\t\t\t}).apply(null, valueArray)\r\n\t\t}\r\n\t\tthrow new TypeError('Variable.all requires an array')\r\n\t}\r\n\r\n\tfunction hasOwn(Target, createForInstance) {\r\n\r\n\t\tvar ownedClasses = this.ownedClasses || (this.ownedClasses = new WeakMap())\r\n\t\t// TODO: assign to super classes\r\n\t\tvar Class = this\r\n\t\townedClasses.set(Target, createForInstance || function() { return new Target() })\r\n\t\treturn this\r\n\t}\r\n\tfunction generalizeClass() {\r\n\t\tvar prototype = this.prototype\r\n\t\tvar prototypeNames = Object.getOwnPropertyNames(prototype)\r\n\t\tfor(var i = 0, l = prototypeNames.length; i < l; i++) {\r\n\t\t\tvar name = prototypeNames[i]\r\n\t\t\tObject.defineProperty(this, name, getGeneralizedDescriptor(Object.getOwnPropertyDescriptor(prototype, name), name, this))\r\n\t\t}\r\n\t}\r\n\tfunction getGeneralizedDescriptor(descriptor, name, Class) {\r\n\t\tif (typeof descriptor.value === 'function') {\r\n\t\t\treturn {\r\n\t\t\t\tvalue: generalizeMethod(Class, name)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn descriptor\r\n\t\t}\r\n\t}\r\n\tfunction generalizeMethod(Class, name) {\r\n\t\t// I think we can just rely on `this`, but we could use the argument:\r\n\t\t// function(possibleEvent) {\r\n\t\t// \tvar target = possibleEvent && possibleEvent.target\r\n\t\tvar method = Class[name] = function() {\r\n\t\t\tvar instance = Class.for(this)\r\n\t\t\treturn instance[name].apply(instance, arguments)\r\n\t\t}\r\n\t\tmethod.for = function(context) {\r\n\t\t\tvar instance = Class.for(context)\r\n\t\t\treturn function() {\r\n\t\t\t\treturn instance[name].apply(instance, arguments)\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn method\r\n\t}\r\n\r\n\tvar defaultContext = {\r\n\t\tname: 'Default context',\r\n\t\tdescription: 'This object is the default context for classes, corresponding to a singleton instance of that class',\r\n\t\tconstructor: {\r\n\t\t\tgetForClass: function(subject, Class) {\r\n\t\t\t\treturn Class.defaultInstance\r\n\t\t\t}\r\n\t\t},\r\n\t\tcontains: function() {\r\n\t\t\treturn true // contains everything\r\n\t\t}\r\n\t}\r\n\tfunction instanceForContext(Class, context) {\r\n\t\tif (!context) {\r\n\t\t\treturn Class.defaultInstance\r\n\t\t}\r\n\t\treturn context.specify(Class)\r\n//\t\tvar instance = context.subject.constructor.getForClass && context.subject.constructor.getForClass(context.subject, Class) || Class.defaultInstance\r\n//\t\tcontext.distinctSubject = mergeSubject(context.distinctSubject, instance.subject)\r\n//\t\treturn instance\r\n\t}\r\n\t// a variable inheritance change goes through its own prototype, so classes/constructor\r\n\t// can be used as variables as well\r\n\tfor (var key in VariablePrototype) {\r\n\t\tObject.defineProperty(Variable, key, Object.getOwnPropertyDescriptor(VariablePrototype, key))\r\n\t}\r\n\tVariable.valueOf = function(context) {\r\n\t\t// contextualized valueOf\r\n\t\treturn instanceForContext(this, context).valueOf(context)\r\n\t}\r\n\tVariable.getValue = function(context) {\r\n\t\t// contextualized getValue\r\n\t\treturn instanceForContext(this, context)\r\n\t}\r\n\tVariable.put = function(value, context) {\r\n\t\t// contextualized setValue\r\n\t\treturn instanceForContext(this, context).put(value, context)\r\n\t}\r\n\tVariable.for = function(subject) {\r\n\t\tif (subject != null) {\r\n\t\t\tif (subject.target && !subject.constructor.getForClass) {\r\n\t\t\t\t// makes HTML events work\r\n\t\t\t\tsubject = subject.target\r\n\t\t\t}\r\n\t\t\tvar instance\r\n\t\t\tinstance = new Context(subject).specify(this)\r\n\t\t\tif (instance && !instance.subject) {\r\n\t\t\t\tinstance.subject = subject\r\n\t\t\t}\r\n\t\t\t// TODO: Do we have a global context that we set on defaultInstance?\r\n\t\t\treturn instance || this.defaultInstance\r\n\t\t} else {\r\n\t\t\treturn this.defaultInstance\r\n\t\t}\r\n\t}\r\n\tVariable.from = function(value) {\r\n\t\tif (value && typeof value === 'object') {\r\n\t\t\t// a plain object, we use our own map to retrieve the instance (or create one)\r\n\t\t\tvar instanceMap = this.instanceMap || (this.instanceMap = new WeakMap())\r\n\t\t\tvar instance = instanceMap.get(value)\r\n\t\t\tif (!instance) {\r\n\t\t\t\tinstanceMap.set(value, instance = new this(value))\r\n\t\t\t}\r\n\t\t\treturn instance\r\n\t\t} else {\r\n\t\t\t// a primitive, just unconditionally create a new variable for it\r\n\t\t\treturn new this(value)\r\n\t\t}\r\n\t}\r\n\tVariable.notifies = function(target) {\r\n\t\tthis.defaultInstance.notifies(target)\r\n\t}\r\n\tVariable.stopNotifies = function(target) {\r\n\t\tthis.defaultInstance.stopNotifies(target)\r\n\t}\r\n\tVariable.getCollectionOf = function () {\r\n\t\treturn this.collectionOf\r\n\t}\r\n\tVariable.updated = function(updateEvent, by, context) {\r\n\t\treturn instanceForContext(this, context).updated(updateEvent, by, context)\r\n\t}\r\n\tvar proxyHandler = {\r\n\t\tget: function(target, name) {\r\n\t\t\tvar value = target[name]\r\n\t\t\treturn value === undefined ? target.property(name) : value\r\n\t\t},\r\n\t\tset: function(target, name, value) {\r\n\t\t\tvar oldValue = target[name]\r\n\t\t\tif (oldValue && oldValue.put) {\r\n\t\t\t\t// own property available to put into\r\n\t\t\t\toldValue.put(value)\r\n\t\t\t} else {\r\n\t\t\t\ttarget.set(name, value)\r\n\t\t\t}\r\n\t\t\treturn true\r\n\t\t},\r\n\t\thas: function(target, name) {\r\n\t\t\treturn (name in target) || (name in target.valueOf())\r\n\t\t},\r\n\t\tdeleteProperty: function(target, name) {\r\n\t\t\treturn proxyHandler.set(target, name, undefined)\r\n\t\t},\r\n\t\townKeys: function(target) {\r\n\t\t\treturn Object.getOwnPropertyNames(target.valueOf())\r\n\t\t}\r\n\t}\r\n\tVariable.proxy = function(source) {\r\n\t\t// should we memoize?\r\n\t\treturn new Proxy(source instanceof this ? source : this.from(source), proxyHandler)\r\n\t}\r\n\tObject.defineProperty(Variable, 'collectionOf', {\r\n\t\tget: function() {\r\n\t\t\treturn this._collectionOf\r\n\t\t},\r\n\t\tset: function(ItemClass) {\r\n\t\t\tif (this._collectionOf != ItemClass) {\r\n\t\t\t\tthis._collectionOf = ItemClass\r\n\t\t\t\tItemClass.collection = this\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\tObject.defineProperty(Variable, 'collection', {\r\n\t\tget: function() {\r\n\t\t\treturn this._collection\r\n\t\t},\r\n\t\tset: function(Collection) {\r\n\t\t\tif (this._collection != Collection) {\r\n\t\t\t\tthis._collection = Collection\r\n\t\t\t\tCollection.collectionOf = this\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\tVariable.Context = Context\r\n\tVariable.NotifyingContext = NotifyingContext\r\n\tVariable.generalize = generalizeClass\r\n\tVariable.call = Function.prototype.call // restore these\r\n\tVariable.apply = Function.prototype.apply\r\n\tVariable.with = function(properties) {\r\n\t\t// TODO: handle arguments\r\n\t\tvar Base = this\r\n\t\tvar ExtendedVariable, prototype\r\n\t\tif (Object.getOwnPropertyDescriptor(this, 'prototype').writable === false) {\r\n\t\t\t// extending native class\r\n\t\t\tExtendedVariable = lang.extendClass(this)\r\n\t\t\tprototype = ExtendedVariable.prototype\r\n\t\t} else {\r\n\t\t\t// extending function/constructor\r\n\t\t\tExtendedVariable = function() {\r\n\t\t\t\tif (this instanceof ExtendedVariable) {\r\n\t\t\t\t\tBase.apply(this, arguments)\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn ExtendedVariable.with(properties)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tprototype = ExtendedVariable.prototype = Object.create(this.prototype)\r\n\t\t\tExtendedVariable.prototype.constructor = ExtendedVariable\r\n\t\t\tsetPrototypeOf(ExtendedVariable, this)\r\n\t\t}\r\n\t\tfor (var key in properties) {\r\n\t\t\tvar descriptor = Object.getOwnPropertyDescriptor(properties, key)\r\n\t\t\tvar value = descriptor.value\r\n\t\t\tif (typeof value === 'function') {\r\n\t\t\t\tif (value.notifies) {\r\n\t\t\t\t\t// variable class\r\n\t\t\t\t\tdescriptor = (function(key, Class) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\tget: function() {\r\n\t\t\t\t\t\t\t\tvar property = (this._properties || (this._properties = {}))[key]\r\n\t\t\t\t\t\t\t\tif (!property) {\r\n\t\t\t\t\t\t\t\t\tthis._properties[key] = property = new Class()\r\n\t\t\t\t\t\t\t\t\tproperty.key = key\r\n\t\t\t\t\t\t\t\t\tproperty.parent = this\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn property\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tset: function(value) {\r\n\t\t\t\t\t\t\t\tthis[key]._changeValue(null, RequestSet, value)\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tenumerable: true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})(key, value)\r\n\t\t\t\t} else if (isGenerator(value)) {\r\n\t\t\t\t\tdescriptor = getGeneratorDescriptor(value)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvalue = generalizeMethod(value, key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tObject.defineProperty(prototype, key, descriptor)\r\n\t\t\tif (value !== undefined) {\r\n\t\t\t\t// TODO: If there is a getter/setter here, use defineProperty\r\n\t\t\t\tExtendedVariable[key] = value\r\n\t\t\t} else {\r\n\t\t\t\t// getter/setter\r\n\t\t\t\tObject.defineProperty(ExtendedVariable, key, descriptor)\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (properties && properties.hasOwn) {\r\n\t\t\thasOwn.call(ExtendedVariable, properties.hasOwn)\r\n\t\t}\r\n\t\treturn ExtendedVariable\r\n\t}\r\n\tObject.defineProperty(Variable, 'defaultInstance', {\r\n\t\tget: function() {\r\n\t\t\treturn this.hasOwnProperty('_defaultInstance') ?\r\n\t\t\t\tthis._defaultInstance : (\r\n\t\t\t\t\tthis._defaultInstance = new this(),\r\n\t\t\t\t\tthis._defaultInstance.subject = defaultContext,\r\n\t\t\t\t\tthis._defaultInstance)\r\n\t\t}\r\n\t})\r\n\tVariable.hasOwn = function(Target, createInstance) {\r\n\t\tvar instanceMap = new WeakMap()\r\n\t\tinstanceMap.createInstance = createInstance\r\n\t\tvar subjectMap = this.ownedClasses || (this.ownedClasses = new WeakMap())\r\n\t\tsubjectMap.set(Target, instanceMap)\r\n\t}\r\n\r\n\tvar getGeneratorDescriptor = Variable.getGeneratorDescriptor = function(value) {\r\n\t\tvar variables\r\n\t\treturn {\r\n\t\t\tget: function() {\r\n\t\t\t\tif (!variables) {\r\n\t\t\t\t\t variables = new WeakMap()\r\n\t\t\t\t}\r\n\t\t\t\tvar variable = variables.get(this)\r\n\t\t\t\tif (!variable) {\r\n\t\t\t\t\tvariables.set(this, variable = new Variable.GeneratorVariable(value.bind(this)))\r\n\t\t\t\t}\r\n\t\t\t\treturn variable\r\n\t\t\t},\r\n\t\t\tenumerable: true\r\n\t\t}\r\n\t}\r\n\r\n\tVariable.all = all\r\n\tVariable.objectUpdated = objectUpdated\r\n\r\n\treturn Variable\r\n}))\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Variable.js\n ** module id = 4\n ** module chunks = 0\n **/","(function (root, factory) { if (typeof define === 'function' && define.amd) {\r\n  define(['./util/lang', './operators', './Variable'], factory) } else if (typeof module === 'object' && module.exports) {        \r\n  module.exports = factory(require('./util/lang'), require('./operators'), require('./Variable')) // Node\r\n}}(this, function (lang, operators, Variable) {\r\n\r\n  var isGenerator = lang.isGenerator\r\n  var ObjectTransform = lang.compose(Variable.Call, function ObjectTransform(transform, inputs) {\r\n    this.inputs = inputs\r\n    Variable.Call.apply(this, arguments)\r\n  }, {\r\n    _getAsObject: function() {\r\n      return this.transform.apply(this, preserveObjects(this.inputs))\r\n    }\r\n  })\r\n  function preserveObjects(inputs) {\r\n    for (var i = 0, l = inputs.length; i < l; i++) {\r\n      var input = inputs[i]\r\n      if (input && input._getAsObject) {\r\n        inputs[i] = input._getAsObject()\r\n      }\r\n    }\r\n    return inputs\r\n  }\r\n\tfunction react(generator, options) {\r\n    if (typeof generator !== 'function') {\r\n      throw new Error('react() must be called with a generator. You need to use the babel-plugin-transform-alkali plugin if you want to use reactive expressions')\r\n    }\r\n\t\tif (options && options.reverse) {\r\n\t\t\tgenerator.reverse = options.reverse\r\n\t\t}\r\n\t\treturn new Variable.GeneratorVariable(generator)\r\n\t}\r\n  Object.assign(react, operators)\r\n  react.from = function(value, options) {\r\n    if (value && value.property) {\r\n      return value\r\n    }\r\n    if (typeof value === 'function' && isGenerator(value)) {\r\n      return react(value, options)\r\n    }\r\n    return Variable.from(value)\r\n  }\r\n  react.prop = function(object, property) {\r\n    if (object) {\r\n      // TODO: Use a static set of public methods/properties that can be accessed\r\n      if (object.property) {\r\n        // it is a variable already, but check to see if we are using a method/property directly on the variable\r\n        var directPropertyValue = object[property]\r\n        return directPropertyValue !== undefined ? directPropertyValue : object.property(property)\r\n      }\r\n      return object[property]\r\n    }\r\n    // not even truthy, return undefined\r\n  }\r\n  react.cond = function(test, consequent, alternate) {\r\n    return operators.if(test, operators.choose(consequent, alternate))\r\n  }\r\n  react.fcall = function(target, args) {\r\n    if (target.property && typeof target === 'function') {\r\n      return target.apply(null, preserveObjects(args))\r\n    }\r\n    return new Variable.Call(target, args)\r\n  }\r\n  react.mcall = function(target, key, args) {\r\n    var method = target[key]\r\n    if (typeof method === 'function' && method.property || key === 'bind') {\r\n      // for now we check to see if looks like it could handle a variable, or is a bind call\r\n      return method.apply(target, preserveObjects(args))\r\n    }\r\n    return new Variable.Call(target[key].bind(target), args)\r\n  }\r\n  react.ncall = function(target, args) {\r\n    if (target.property && typeof target === 'function') {\r\n      return new (target.bind.apply(target, [null].concat(preserveObjects(args))))()\r\n    }\r\n    return new Variable.Call(function() {\r\n      return new (target.bind.apply(target, [null].concat(arguments)))()\r\n    }, args)\r\n  }\r\n\r\n  react.obj = function(transform, inputs) {\r\n    return new ObjectTransform(transform, inputs)\r\n  }\r\n\r\n\treturn react\r\n}))\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./react.js\n ** module id = 5\n ** module chunks = 0\n **/","(function (root, factory) { if (typeof define === 'function' && define.amd) {\r\n\tdefine(['./Variable'], factory) } else if (typeof module === 'object' && module.exports) {        \r\n  module.exports = factory(require('./Variable')) // Node\r\n}}(this, function (Variable) {\r\n\r\n\tvar deny = Variable.deny;\r\n\tvar operatingFunctions = {};\r\n\tvar operators = {};\r\n\tfunction getOperatingFunction(expression){\r\n\t\t// jshint evil: true\r\n\t\treturn operatingFunctions[expression] ||\r\n\t\t\t(operatingFunctions[expression] =\r\n\t\t\t\tnew Function('a', 'b', 'deny', 'return ' + expression));\r\n\t}\r\n\tfunction operator(operator, name, precedence, forward, reverseA, reverseB){\r\n\t\t// defines the standard operators\r\n\t\tvar reverse = function(output, inputs){\r\n\t\t\tvar a = inputs[0],\r\n\t\t\t\tb = inputs[1];\r\n\t\t\tif(a && a.put){\r\n\t\t\t\tvar result = reverseA(output, b && b.valueOf());\r\n\t\t\t\tif(result !== deny){\r\n\t\t\t\t\ta.put(result);\r\n\t\t\t\t}\r\n\t\t\t}else if(b && b.put){\r\n\t\t\t\tb.put(reverseB(output, a && a.valueOf()));\r\n\t\t\t}else{\r\n\t\t\t\treturn deny;\r\n\t\t\t}\r\n\t\t};\r\n\t\t// define a function that can lazily ensure the operating function\r\n\t\t// is available\r\n\t\tvar operatorHandler = {\r\n\t\t\tapply: function(instance, args){\r\n\t\t\t\tforward = getOperatingFunction(forward);\r\n\t\t\t\treverseA = reverseA && getOperatingFunction(reverseA);\r\n\t\t\t\treverseB = reverseB && getOperatingFunction(reverseB);\r\n\t\t\t\tforward.reverse = reverse;\r\n\t\t\t\toperators[operator] = operatorHandler = new Variable(forward);\r\n\r\n\t\t\t\taddFlags(operatorHandler);\r\n\t\t\t\targs = Array.prototype.slice.call(args);\r\n\t\t\t\targs.push(deny)\r\n\t\t\t\treturn operatorHandler.apply(instance, args);\r\n\t\t\t}\r\n\t\t};\r\n\t\tfunction addFlags(operatorHandler){\r\n\t\t\toperatorHandler.precedence = precedence;\r\n\t\t\toperatorHandler.infix = reverseB !== false;\r\n\t\t}\r\n\t\taddFlags(operatorHandler);\r\n\t\toperators[operator] = operatorHandler;\r\n\t\toperators[name] = function() {\r\n\t\t\treturn operatorHandler.apply(null, arguments)\r\n\t\t}\r\n\t}\r\n\t// using order precedence from:\r\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\r\n\toperator('+', 'add', 6, 'a+b', 'a-b', 'a-b');\r\n\toperator('-', 'subtract', 6, 'a-b', 'a+b', 'b-a');\r\n\toperator('*', 'multiply', 5, 'a*b', 'a/b', 'a/b');\r\n\toperator('/', 'divide', 5, 'a/b', 'a*b', 'b/a');\r\n//\toperator('^', 7, 'a^b', 'a^(-b)', 'Math.log(a)/Math.log(b)');\r\n\toperator('?', 'if', 16, 'b[a?0:1]', 'a===b[0]||(a===b[1]?false:deny)', '[a,b]');\r\n\toperator(':', 'choose', 15, '[a,b]', 'a[0]?a[1]:deny', 'a[1]');\r\n\toperator('!', 'not', 4, '!a', '!a', false);\r\n\toperator('%', 'remainder', 5, 'a%b');\r\n\toperator('>', 'greater', 8, 'a>b');\r\n\toperator('>=', 'greaterOrEqual', 8, 'a>=b');\r\n\toperator('<', 'less', 8, 'a<b');\r\n\toperator('<=', 'lessOrEqual', 8, 'a<=b');\r\n\toperator('===', 'strictEqual', 9, 'a===b');\r\n\toperator('==', 'equal', 9, 'a==b');\r\n\toperator('&', 'and', 8, 'a&&b');\r\n\toperator('|', 'or', 8, 'a||b');\r\n\toperator('round', 'round', 8, 'Math.round(a*Math.pow(10,b||1))/Math.pow(10,b||1)', 'a', 'a');\r\n\treturn operators;\r\n}))\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./operators.js\n ** module id = 6\n ** module chunks = 0\n **/","(function (root, factory) { if (typeof define === 'function' && define.amd) {\r\n\tdefine(['./util/lang', './Variable'], factory) } else if (typeof module === 'object' && module.exports) {        \r\n  module.exports = factory(require('./util/lang'), require('./Variable')) // Node\r\n}}(this, function (lang, Variable) {\r\n\r\n\tfunction deepCopy(source, target, derivativeMap) {\r\n\t\tif (source && typeof source == 'object') {\r\n\t\t\tif (source instanceof Array) {\r\n\t\t\t\ttarget = [] // always create a new array for array targets\r\n\t\t\t\tfor(var i = 0, l = source.length; i < l; i++) {\r\n\t\t\t\t\ttarget[i] = deepCopy(source[i], null, derivativeMap)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (!target || typeof target !== 'object') {\r\n\t\t\t\t\ttarget = derivativeMap && derivativeMap.get(source)\r\n\t\t\t\t\tif (!target) {\r\n\t\t\t\t\t\ttarget = {}\r\n\t\t\t\t\t\tderivativeMap && derivativeMap.set(source, target)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor (var i in source) {\r\n\t\t\t\t\ttarget[i] = deepCopy(source[i], target[i], derivativeMap)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn target\r\n\t\t}\r\n\t\treturn source\r\n\t}\r\n\r\n\tvar Copy = lang.compose(Variable, function(copiedFrom) {\r\n\t\t// this is the variable that we derive from\r\n\t\tthis.copiedFrom = copiedFrom\r\n\t\tthis.derivativeMap = new lang.WeakMap(null, 'derivative')\r\n\t\tthis.isDirty = new Variable(false)\r\n\t}, {\r\n\t\tgetValue: function(context) {\r\n\t\t\tif(this.state) {\r\n\t\t\t\tthis.state = null\r\n\t\t\t}\r\n\t\t\tvar value = this.copiedFrom.valueOf(context)\r\n\t\t\tif(value && typeof value == 'object') {\r\n\t\t\t\tvar derivative = this.derivativeMap.get(value)\r\n\t\t\t\tif (derivative == null) {\r\n\t\t\t\t\tthis.derivativeMap.set(value, derivative = deepCopy(value, undefined, this.derivativeMap))\r\n\t\t\t\t\tthis.setValue(derivative, context)\r\n\t\t\t\t}\r\n\t\t\t\treturn derivative\r\n\t\t\t}\r\n\t\t\tif(this.value === undefined) {\r\n\t\t\t\treturn value\r\n\t\t\t}\r\n\t\t\treturn this.value\r\n\t\t},\r\n\t\tgetCopyOf: function(value) {\r\n\t\t\tvar derivative = this.derivativeMap.get(value)\r\n\t\t\tif (derivative == null) {\r\n\t\t\t\tthis.derivativeMap.set(value, derivative = deepCopy(value, undefined, this.derivativeMap))\r\n\t\t\t}\r\n\t\t\treturn derivative\r\n\t\t},\r\n\t\tsave: function() {\r\n\t\t\t// copy back to the original object\r\n\t\t\tvar original = this.copiedFrom.valueOf()\r\n\t\t\tvar newCopiedFrom = deepCopy(this.valueOf(), original)\r\n\t\t\tif (original !== newCopiedFrom) {\r\n\t\t\t\t// if we have replaced it with a new object/value, put it\r\n\t\t\t\tthis.copiedFrom.put && this.copiedFrom.put(newCopiedFrom)\r\n\t\t\t} else {\r\n\t\t\t\t// else we have modified an existing object, but we still need to notify\r\n\t\t\t\tif (this.copiedFrom.notifies && this.copiedFrom.updated) { // copiedFrom doesn't have to be a variable, it can be a plain object\r\n\t\t\t\t\tthis.copiedFrom.updated()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.isDirty.put(false)\r\n\t\t\tthis.onSave && this.onSave()\r\n\t\t},\r\n\t\trevert: function() {\r\n\t\t\tvar original = this.copiedFrom.valueOf()\r\n\t\t\tthis.put(deepCopy(original, this.derivativeMap.get(original), this.derivativeMap))\r\n\t\t\tthis.isDirty.put(false)\r\n\t\t},\r\n\t\tupdated: function() {\r\n\t\t\tthis.isDirty.put(true)\r\n\t\t\treturn Variable.prototype.updated.apply(this, arguments)\r\n\t\t}\r\n\t})\r\n\treturn Copy\r\n}))\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Copy.js\n ** module id = 7\n ** module chunks = 0\n **/"],"sourceRoot":""}