{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///index.js","webpack:///webpack/bootstrap d02bc4fc19212dae1b56","webpack:///./index.js","webpack:///./Element.js","webpack:///./Variable.js","webpack:///./util/lang.js","webpack:///./Updater.js","webpack:///./react.js","webpack:///./operators.js","webpack:///./Copy.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","Element","Variable","react","Updater","operators","Copy","main","Object","create","all","spawn","func","valueOf","assign","apply","undefined","lang","isGenerator","constructor","displayName","name","Context","subject","booleanStyle","options","element","value","key","style","defaultStyle","directStyle","layoutChildren","parent","children","container","prepend","fragment","length","doc","createDocumentFragment","i","l","childNode","child","currentParent","appendChild","isContentNode","contentNode","Array","notifies","variableAsText","nodeType","Error","createTextNode","insertBefore","firstChild","content","text","error","stack","textNode","enterUpdater","TextUpdater","variable","bidirectionalHandler","PropertyUpdater","inputs","tagName","bindChanges","noop","applyAttribute","AttributeUpdater","setAttribute","applySubProperties","renderer","SubPropertyUpdater","compose","arguments","renderUpdate","subKey","subValue","applyProperties","properties","styleDefinition","styleDefinitions","propertyHandlers","StyleUpdater","slice","addEventListener","buildContent","each","ItemClass","itemAs","Item","hasOwn","_item","ListUpdater","forEach","item","childElement","buildInputContent","conversion","nextTurn","inputEvents","event","result","put","deny","type","parseFloat","inputType","inputProperty","date","datetime","time","applyToClass","applyOnCreate","_applyOnCreate","prototype","classHandlers","TypeError","getApplySet","Class","hasOwnProperty","getForClass","parentApplySet","getPrototypeOf","keys","getOwnPropertyNames","defineProperty","toLowerCase","renderDescriptor","renderMethod","map","WeakMap","get","has","set","makeElementConstructor","selector","withProperties","forTarget","property","propertyForElement","superConstructor","selectorMatch","match","SELECTOR_REGEX","operator","className","remaining","createElement","presumptiveParentMap","setPrototypeOf","ElementApplyOnCreate","argument","createdCallback","created","append","registerTag","document","registerElement","getConstructor","tags","setTag","generate","elements","elementName","ElementClass","generateInputs","HTMLInputElement","target","From","Target","createInstance","ownedClasses","parentNode","ownedInstances","instance","ThisElementVariable","_Variable","observeObject","updaters","push","cleanup","stop","needsRestart","restart","elementAttached","attached","elementDetached","detached","firstVisit","node","state","__alkaliAttached__","action","contains","knownElementProperties","newValue","definition","ClassNameUpdater","ElementUpdater","currentClassName","changingClassName","removed","replace","tag","INPUT","TEXTAREA","display","visibility","color","opacity","zoom","minZoom","maxZoom","fontWeight","position","textDecoration","base","proto","__proto__","classes","flag","class","for","role","render","GeneratorVariable","bind","valueAsNumber","valueAsDate","checked","dataset","attributes","elment","styleObjectHandler","nextClassId","uniqueSelectors","radios","querySelectorAll","radio","dispatchEvent","Event","HTMLElement","within","aliases","Anchor","Paragraph","Textarea","DList","UList","OList","ListItem","Text","TextInput","TableRow","TableCell","TableHeaderCell","TableHeader","TableBody","alias","to","refresh","moveLiveElementsEnabled","extend","ExtendedElement","descriptor","getOwnPropertyDescriptor","MutationObserver","lifeStates","nodes","observer","mutations","il","mutation","j","jl","nodeIteration","k","kl","baseNode","currentNode","nextNode","nextSibling","observe","body","childList","subtree","mergeSubject","context","nextContext","getMaterializedContextualInstance","distinctSubject","contextMap","defaultContext","when","callback","then","whenAll","promiseInvolved","registerListener","listener","listeners","propertyListenersMap","listenerId","autoObserveObjects","listeningToObject","deregisterListener","index","splice","RefreshEvent","visited","Set","PropertyChangeEvent","childEvent","AddEvent","args","DeleteEvent","arrayMethod","sendUpdates","cachedValue","array","updateVersion","cachedVersion","version","iterateMethod","method","IterativeMethod","addFlag","functionValue","objectUpdated","object","_propertyChange","Composite","keyMapping","valueArray","results","resultObject","createForInstance","generalizeClass","prototypeNames","getGeneralizedDescriptor","generalizeMethod","instanceForContext","defaultInstance","noChange","RequestChange","nextId","freeze","propertyName","contextFromCache","VariablePrototype","gotValue","getValue","previousNotifyingValue","notifyingValue","dependents","stopNotifies","isMap","Map","_properties","propertyVariable","Property","ContextualizedVariable","distinctFor","contextualizedVariable","onPropertyChange","updated","eachKey","Call","forDependencies","init","dependency","handles","remove","computedVariable","getVersion","Math","max","getSubject","selectVariable","getUpdates","since","updates","nextUpdateMap","updateEvent","by","add","contextualInstance","lastUpdate","dependent","e","console","collection","invalidate","unsubscribe","subscribe","updateQueued","next","handle","initialValue","oldValue","fixed","setValue","undefine","complete","onValue","transformFunction","schema","validate","valid","isValid","validation","Validating","getId","observerCount","events","el","addKey","done","deliverChanges","Symbol","iterator","Caching","withComputedValue","computedValue","watchedContext","newVersion","gotValueAndListen","_changeValue","parentUpdated","parentSchemaProperties","arg","resolved","functionVariable","invoke","argsVersion","execute","originalValue","reverse","observeArguments","handlesContext","handlesPromises","input","pop","setReverse","Source","previousIndex","modifier","source","propagatedEvent","filterUpdated","indexOf","matches","filter","mapUpdated","generator","resuming","lastValue","generatorIterator","isThrowing","stepReturn","nextVariable","description","generalize","Function","ExtendedVariable","Base","_defaultInstance","feature","hasFeatures","diff","previous","current","queued","toJSONHidden","queuedListeners","requestAnimationFrame","promise","Promise","keyFlag","currentValue","targetAncestor","previousSet","previousGet","enumerable","timerStarted","setInterval","watchedObjects","watchedCopies","copy","unobserve","Hidden","toJSON","processAnimationFrame","toRender","setTimeout","resolve","reject","resolution","finished","errorResolution","isResolved","queue","errback","newError","values","mapProperty","intermediary","errorHandler","onResolve","onError","onEach","readyInputs","lastPromiseResult","previousPromiseResult","div","alkaliRenderers","update","updateRendering","shouldRender","alwaysUpdate","updater","updateOnStart","ContentUpdater","onElementRemoval","renderers","invalidatedElements","invalidated","contextMatches","invalidateElement","invalidatedParts","queueTask","processQueue","updateElement","always","updatersOnShow","addElement","omitValueOf","started","renderLoading","innerHTML","childNodes","nodeValue","eachItem","nextChild","thisElement","childElements","builtList","removeChild","onShowElement","shownElement","getElementsByClassName","includingTop","onlyChildren","getElementsByTagName","getOperatingFunction","expression","operatingFunctions","precedence","forward","reverseA","reverseB","addFlags","operatorHandler","infix","output","a","b","deepCopy","derivativeMap","copiedFrom","isDirty","derivative","thisValue","getCopyOf","save","original","newCopiedFrom","onSave","revert"],"mappings":"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nN,IAGAoN,GAAApN,EAAAC,EAAAC,MAgBAkN,GAAApK,EAAA,SAAA8H,EAAA9K,EAAAE,GACAF,EAAAG,MAAAD,GAAAxC,KAAAiC,MAAAmL,GAoEAuC,aAAA,EACAC,mBAwEAzM,EAAAkD,iBAAA,iBAAAgB,GACA,GAAAmE,GAAAnE,EAAAmE,MACA,cAAAA,EAAA/D,KAEA,OADAoI,GAAAhF,SAAAiF,iBAAA,qBACAzM,EAAA,EAAAC,EAAAuM,EAAA3M,OAAqCG,EAAAC,EAAOD,IAAA,CAC5C,GAAA0M,GAAAF,EAAAxM,EACA0M,GAAA9N,OAAAuJ,EAAAvJ,MAAA8N,IAAAvE,GACAuE,EAAAC,cAAA,GAAAC,OAAA,uBAiCA,IAkJAxM,IAlJA2E,IACAzB,OAAA,SAAA9F,EAAA0B,GACAoE,EAAA9F,EAAA0B,KAmQA6D,YAoBAvF,GAAA4I,EAAAlJ,KAAA,mBAAA2P,yBAAA,aAEArP,IAAA+J,cAEA/J,GAAAsP,OAAA,SAAA7N,KAIA4I,GACA,QACA,SACA,QACA,QACA,KACA,QACA,QACA,WACA,WACA,QACA,QACA,QACA,KACA,QACA,MACA,WACA,KACA,KACA,UACA,QACA,OACA,SACA,SACA,SACA,QACA,WACA,MACA,UACA,QACA,IACA,SACA,SACA,WACA,SACA,KACA,MACA,MACA,QACA,OACA,OACA,MACA,OACA,SACA,QACA,KACA,SACA,QACA,QACA,SACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,WACA,QACA,OACA,OACA,QACA,UACA,QACA,SACA,SACA,aACA,SACA,OACA,OACA,WACA,MACA,UACA,UACA,MACA,MACA,SACA,UACA,WACA,KACA,SACA,SACA,OACA,KACA,OACA,MAEAI,GACA,WACA,WACA,SACA,QACA,QACA,OACA,WACA,QACA,QACA,SACA,QACA,SACA,MACA,OACA,MACA,QAEA,IAAAN,OA0CAoF,IACAC,OAAA,IACAC,UAAA,IACAC,SAAA,WACAC,MAAA,KACAC,MAAA,KACAC,MAAA,KACAC,SAAA,KACAC,KAAA,QACAC,UAAA,QACAC,SAAA,KACAC,U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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"alkali\"] = factory();\n\telse\n\t\troot[\"alkali\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"alkali\"] = factory();\n\telse\n\t\troot[\"alkali\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(1), __webpack_require__(2), __webpack_require__(5), __webpack_require__(4), __webpack_require__(6), __webpack_require__(7)], __WEBPACK_AMD_DEFINE_RESULT__ = function(Element, Variable, react, Updater, operators, Copy) {\r\n\t\tvar main = Object.create(Element)\r\n\t\tmain.Copy = Copy\r\n\t\tmain.Element = Element\r\n\t\tmain.Variable = Variable\r\n\t\tmain.all = Variable.all\r\n\t\tmain.react = react\r\n\t\tmain.spawn = function(func) {\r\n\t\t\treturn react(func).valueOf()\r\n\t\t}\r\n\t\tmain.Updater = Updater\r\n\t\tObject.assign(main, Updater)\r\n\t\tObject.assign(main, operators)\r\n\t\treturn main\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2), __webpack_require__(4), __webpack_require__(3)], __WEBPACK_AMD_DEFINE_RESULT__ = function (Variable, Updater, lang) {\r\n\t\tvar knownElementProperties = {};\r\n\t\t['textContent', 'innerHTML', 'title', 'href', 'value', 'valueAsNumber', 'role', 'render'].forEach(function(property) {\r\n\t\t\tknownElementProperties[property] = true\r\n\t\t})\r\n\t\r\n\t\tvar SELECTOR_REGEX = /(\\.|#)([-\\w]+)(.+)?/\r\n\t\tfunction isGenerator(func) {\r\n\t\t\tif (typeof func === 'function') {\r\n\t\t\t\tvar constructor = func.constructor\r\n\t\t\t\treturn (constructor.displayName || constructor.name) === 'GeneratorFunction'\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction Context(subject){\r\n\t\t\tthis.subject = subject\r\n\t\t}\r\n\t\r\n\t\tvar PropertyUpdater = Updater.PropertyUpdater\r\n\t\tvar AttributeUpdater = Updater.AttributeUpdater\r\n\t\tvar StyleUpdater = lang.compose(Updater.StyleUpdater, function StyleUpdater() {\r\n\t\t\tUpdater.StyleUpdater.apply(this, arguments)\r\n\t\t}, {\r\n\t\t\trenderUpdate: function(newValue, element) {\r\n\t\t\t\tvar definition = styleDefinitions[this.name]\r\n\t\t\t\tif (definition) {\r\n\t\t\t\t\tdefinition(element, newValue, this.name)\r\n\t\t\t\t} else {\r\n\t\t\t\t\telement.style[this.name] = newValue\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\tvar ClassNameUpdater = lang.compose(Updater.ElementUpdater, function ClassNameUpdater(options) {\r\n\t\t\tthis.className = options.className\r\n\t\t\tUpdater.apply(this, arguments)\r\n\t\t}, {\r\n\t\t\trenderUpdate: function(newValue, element) {\r\n\t\t\t\tvar currentClassName = element.className\r\n\t\t\t\tvar changingClassName = this.className\r\n\t\t\t\t// remove the className (needed for addition or removal)\r\n\t\t\t\t// see http://jsperf.com/remove-class-name-algorithm/2 for some tests on this\r\n\t\t\t\tvar removed = currentClassName && (' ' + currentClassName + ' ').replace(' ' + changingClassName + ' ', ' ')\r\n\t\t\t\tif (newValue) {\r\n\t\t\t\t\t// addition, add the className\r\n\t\t\t\t\tchangingClassName = currentClassName ? (removed + changingClassName).slice(1) : changingClassName;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// we already have removed the class, just need to trim\r\n\t\t\t\t\tchangingClassName = removed.slice(1, removed.length - 1)\r\n\t\t\t\t}\r\n\t\t\t\t// only assign if it changed, this can save a lot of time\r\n\t\t\t\tif (changingClassName != currentClassName) {\r\n\t\t\t\t\telement.className = changingClassName\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\t// TODO: check for renderContent with text updater\r\n\t\tvar TextUpdater = Updater.TextUpdater\r\n\t\tvar ListUpdater = Updater.ListUpdater\r\n\t\t\r\n\t\tvar toAddToElementPrototypes = []\r\n\t\tvar createdBaseElements = []\r\n\t\tvar doc = typeof document !== 'undefined' ? document : {\r\n\t\t\tcreateElement: function(tag) {\r\n\t\t\t\treturn {}\r\n\t\t\t},\r\n\t\t\taddEventListener: function() {\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tvar testStyle = doc.createElement('div').style\r\n\t\tvar childTagForParent = {\r\n\t\t\tTABLE: ['tr','td'],\r\n\t\t\tTBODY: ['tr','td'],\r\n\t\t\tTR: 'td',\r\n\t\t\tUL: 'li',\r\n\t\t\tOL: 'li',\r\n\t\t\tSELECT: 'option'\r\n\t\t}\r\n\t\tvar inputs = {\r\n\t\t\tINPUT: 1,\r\n\t\t\tTEXTAREA: 1\r\n\t\t\t// SELECT: 1, we exclude this, so the default \"content\" of the element can be the options\r\n\t\t}\r\n\t\r\n\t\tfunction booleanStyle(options) {\r\n\t\t\treturn function(element, value, key) {\r\n\t\t\t\tif (typeof value === 'boolean') {\r\n\t\t\t\t\t// has a boolean conversion\r\n\t\t\t\t\tvalue = options[value ? 0 : 1]\r\n\t\t\t\t}\r\n\t\t\t\telement.style[key] = value\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction defaultStyle(element, value, key) {\r\n\t\t\tif (typeof value === 'number') {\r\n\t\t\t\tvalue = value + 'px'\r\n\t\t\t}\r\n\t\t\telement.style[key] = value\r\n\t\t}\r\n\t\tfunction directStyle(element, value, key) {\r\n\t\t\telement.style[key] = value\r\n\t\t}\r\n\t\r\n\t\tvar styleDefinitions = {\r\n\t\t\tdisplay: booleanStyle(['initial', 'none']),\r\n\t\t\tvisibility: booleanStyle(['visible', 'hidden']),\r\n\t\t\tcolor: directStyle,\r\n\t\t\topacity: directStyle,\r\n\t\t\tzoom: directStyle,\r\n\t\t\tminZoom: directStyle,\r\n\t\t\tmaxZoom: directStyle,\r\n\t\t\tfontWeight: directStyle,\r\n\t\t\tposition: booleanStyle(['absolute', '']),\r\n\t\t\ttextDecoration: booleanStyle(['underline', '']),\r\n\t\t\tfontWeight: booleanStyle(['bold', 'normal'])\r\n\t\t}\r\n\t\t;[\"alignContent\",\"alignItems\",\"alignSelf\",\"animation\",\"animationDelay\",\"animationDirection\",\"animationDuration\",\"animationFillMode\",\"animationIterationCount\",\"animationName\",\"animationPlayState\",\"animationTimingFunction\",\"backfaceVisibility\",\"background\",\"backgroundAttachment\",\"backgroundBlendMode\",\"backgroundClip\",\"backgroundColor\",\"backgroundImage\",\"backgroundOrigin\",\"backgroundPosition\",\"backgroundPositionX\",\"backgroundPositionY\",\"backgroundRepeat\",\"backgroundRepeatX\",\"backgroundRepeatY\",\"backgroundSize\",\"baselineShift\",\"border\",\"borderBottom\",\"borderBottomColor\",\"borderBottomLeftRadius\",\"borderBottomRightRadius\",\"borderBottomStyle\",\"borderBottomWidth\",\"borderCollapse\",\"borderColor\",\"borderImage\",\"borderImageOutset\",\"borderImageRepeat\",\"borderImageSlice\",\"borderImageSource\",\"borderImageWidth\",\"borderLeft\",\"borderLeftColor\",\"borderLeftStyle\",\"borderLeftWidth\",\"borderRadius\",\"borderRight\",\"borderRightColor\",\"borderRightStyle\",\"borderRightWidth\",\"borderSpacing\",\"borderStyle\",\"borderTop\",\"borderTopColor\",\"borderTopLeftRadius\",\"borderTopRightRadius\",\"borderTopStyle\",\"borderTopWidth\",\"borderWidth\",\"bottom\",\"boxShadow\",\"boxSizing\",\"bufferedRendering\",\"captionSide\",\"clear\",\"clip\",\"clipPath\",\"clipRule\",\"color\",\"colorInterpolation\",\"colorInterpolationFilters\",\"colorRendering\",\"counterIncrement\",\"counterReset\",\"cursor\",\"direction\",\"display\",\"emptyCells\",\"fill\",\"fillOpacity\",\"fillRule\",\"filter\",\"flex\",\"flexBasis\",\"flexDirection\",\"flexFlow\",\"flexGrow\",\"flexShrink\",\"flexWrap\",\"float\",\"floodColor\",\"floodOpacity\",\"font\",\"fontFamily\",\"fontFeatureSettings\",\"fontKerning\",\"fontSize\",\"fontStretch\",\"fontStyle\",\"fontVariant\",\"fontVariantLigatures\",\"fontWeight\",\"height\",\"imageRendering\",\"isolation\",\"justifyContent\",\"left\",\"letterSpacing\",\"lightingColor\",\"lineHeight\",\"listStyle\",\"listStyleImage\",\"listStylePosition\",\"listStyleType\",\"margin\",\"marginBottom\",\"marginLeft\",\"marginRight\",\"marginTop\",\"marker\",\"markerEnd\",\"markerMid\",\"markerStart\",\"mask\",\"maskType\",\"maxHeight\",\"maxWidth\",\"maxZoom\",\"minHeight\",\"minWidth\",\"minZoom\",\"mixBlendMode\",\"motion\",\"motionOffset\",\"motionPath\",\"motionRotation\",\"objectFit\",\"objectPosition\",\"opacity\",\"order\",\"orientation\",\"orphans\",\"outline\",\"outlineColor\",\"outlineOffset\",\"outlineStyle\",\"outlineWidth\",\"overflow\",\"overflowWrap\",\"overflowX\",\"overflowY\",\"padding\",\"paddingBottom\",\"paddingLeft\",\"paddingRight\",\"paddingTop\",\"page\",\"pageBreakAfter\",\"pageBreakBefore\",\"pageBreakInside\",\"paintOrder\",\"perspective\",\"perspectiveOrigin\",\"pointerEvents\",\"position\",\"quotes\",\"resize\",\"right\",\"shapeImageThreshold\",\"shapeMargin\",\"shapeOutside\",\"shapeRendering\",\"size\",\"speak\",\"src\",\"stopColor\",\"stopOpacity\",\"stroke\",\"strokeDasharray\",\"strokeDashoffset\",\"strokeLinecap\",\"strokeLinejoin\",\"strokeMiterlimit\",\"strokeOpacity\",\"strokeWidth\",\"tabSize\",\"tableLayout\",\"textAlign\",\"textAlignLast\",\"textAnchor\",\"textCombineUpright\",\"textDecoration\",\"textIndent\",\"textOrientation\",\"textOverflow\",\"textRendering\",\"textShadow\",\"textTransform\",\"top\",\"touchAction\",\"transform\",\"transformOrigin\",\"transformStyle\",\"transition\",\"transitionDelay\",\"transitionDuration\",\"transitionProperty\",\"transitionTimingFunction\",\"unicodeBidi\",\"unicodeRange\",\"userZoom\",\"vectorEffect\",\"verticalAlign\",\"visibility\",\"whiteSpace\",\"widows\",\"width\",\"willChange\",\"wordBreak\",\"wordSpacing\",\"wordWrap\",\"writingMode\",\"zIndex\",\"zoom\"].forEach(function(property) {\r\n\t\t\tstyleDefinitions[property] = styleDefinitions[property] || defaultStyle\r\n\t\t})\r\n\t\tvar styleSheet\r\n\t\tvar presumptiveParentMap = new WeakMap()\r\n\t\r\n\t\tvar setPrototypeOf = Object.setPrototypeOf || (function(base, proto) { base.__proto__ = proto})\r\n\t\tvar getPrototypeOf = Object.getPrototypeOf || (function(base) { return base.__proto__ })\r\n\t\tfunction createCssRule(selector) {\r\n\t\t\tif (!styleSheet) {\r\n\t\t\t\tvar styleSheetElement = doc.createElement(\"style\")\r\n\t\t\t\tstyleSheetElement.setAttribute(\"type\", \"text/css\")\r\n\t//\t\t\tstyleSheet.appendChild(doc.createTextNode(css))\r\n\t\t\t\tdocument.head.insertBefore(styleSheetElement, document.head.firstChild)\r\n\t\t\t\tstyleSheet = styleSheetElement.sheet\r\n\t\t\t}\r\n\t\t\tvar cssRules = styleSheet.cssRules || styleSheet.rules\r\n\t\t\treturn cssRules[styleSheet.addRule(selector, ' ', cssRules.length)]\r\n\t\t}\r\n\t\tvar invalidatedElements = new WeakMap(null, 'invalidated')\r\n\t\tvar queued\r\n\t\r\n\t\tvar toRender = []\r\n\t\tfunction flatten(target, part) {\r\n\t\t\tvar base = target.base\r\n\t\t\tif (base) {\r\n\t\t\t\tvar basePart = base[part]\r\n\t\t\t\tif (basePart) {\r\n\t\t\t\t\ttarget[part] || target[part]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction layoutChildren(parent, children, container, prepend) {\r\n\t\t\tvar fragment = (children.length > 3 || prepend) ? doc.createDocumentFragment() : parent\r\n\t\t\tfor(var i = 0, l = children.length; i < l; i++) {\r\n\t\t\t\tvar child = children[i]\r\n\t\t\t\tvar childNode\r\n\t\t\t\tif (child && child.create) {\r\n\t\t\t\t\t// an element constructor\r\n\t\t\t\t\tcurrentParent = parent\r\n\t\t\t\t\tchildNode = child.create()\r\n\t\t\t\t\tfragment.appendChild(childNode)\r\n\t\t\t\t\tif (child.isContentNode) {\r\n\t\t\t\t\t\tcontainer.contentNode = childNode\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (typeof child == 'function') {\r\n\t\t\t\t\t// TODO: reenable this\r\n\t//\t\t\t\tif (child.for) {\r\n\t\t\t\t\t\t// a variable constructor that can be contextualized\r\n\t\t//\t\t\t\tfragment.appendChild(variableAsText(parent, child))\r\n\t\t\t//\t\t} else {\r\n\t\t\t\t\t\t// an element constructor\r\n\t\t\t\t\t\tchildNode = new child()\r\n\t\t\t\t\t\tfragment.appendChild(childNode)\r\n\t\t\t\t//\t}\r\n\t\t\t\t} else if (typeof child == 'object') {\r\n\t\t\t\t\tif (child instanceof Array) {\r\n\t\t\t\t\t\t// array of sub-children\r\n\t\t\t\t\t\tcontainer = container || parent\r\n\t\t\t\t\t\tchildNode = childNode || parent\r\n\t\t\t\t\t\tlayoutChildren(childNode.contentNode || childNode, child, container)\r\n\t\t\t\t\t} else if (child.notifies) {\r\n\t\t\t\t\t\t// a variable\r\n\t\t\t\t\t\tfragment.appendChild(variableAsText(parent, child))\r\n\t\t\t\t\t} else if (child.nodeType) {\r\n\t\t\t\t\t\t// an element itself\r\n\t\t\t\t\t\tfragment.appendChild(child)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// TODO: apply properties to last child, but with binding to the parent (for events)\r\n\t\t\t\t\t\tthrow new Error('Unknown child type ' + child)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// a primitive value\r\n\t\t\t\t\tchildNode = doc.createTextNode(child)\r\n\t\t\t\t\tfragment.appendChild(childNode)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (fragment != parent) {\r\n\t\t\t\tif (prepend) {\r\n\t\t\t\t\tparent.insertBefore(fragment, parent.firstChild)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tparent.appendChild(fragment)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn childNode\r\n\t\t}\r\n\t\tfunction variableAsText(parent, content) {\r\n\t\t\tif (content == null) {\r\n\t\t\t\treturn doc.createTextNode('')\r\n\t\t\t}\r\n\t\t\tvar text\r\n\t\t\ttry {\r\n\t\t\t\ttext = content.valueOf(new Context(parent))\r\n\t\t\t} catch (error) {\r\n\t\t\t\ttext = error.stack\r\n\t\t\t}\r\n\t\t\tvar textNode = doc.createTextNode(text)\r\n\t\t\tif (content.notifies) {\r\n\t\t\t\tenterUpdater(TextUpdater, {\r\n\t\t\t\t\telement: parent,\r\n\t\t\t\t\ttextNode: textNode,\r\n\t\t\t\t\tvariable: content\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\treturn textNode\r\n\t\t}\r\n\t\r\n\t\tfunction bidirectionalHandler(element, value, key) {\r\n\t\t\tif (value && value.notifies) {\r\n\t\t\t\tenterUpdater(PropertyUpdater, {\r\n\t\t\t\t\tname: key,\r\n\t\t\t\t\tvariable: value,\r\n\t\t\t\t\telement: element\r\n\t\t\t\t})\r\n\t\t\t\tif (inputs[element.tagName] || element.tagName === 'SELECT') {\r\n\t\t\t\t\tbindChanges(element, value, key)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\telement[key] = value\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction noop() {}\r\n\t\tvar propertyHandlers = {\r\n\t\t\tcontent: noop, // content and children have special handling in create\r\n\t\t\tchildren: noop,\r\n\t\t\ttagName: noop,\r\n\t\t\teach: noop, // just used by content, doesn't need to be recorded on the element\r\n\t\t\tclasses: function(element, classes) {\r\n\t\t\t\tif (!(classes.length > -1)) {\r\n\t\t\t\t\t// index the classes, if necessary\r\n\t\t\t\t\tvar i = 0\r\n\t\t\t\t\tfor (var key in classes) {\r\n\t\t\t\t\t\tif (!classes[i]) {\r\n\t\t\t\t\t\t\tclasses[i] = key\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ti++\r\n\t\t\t\t\t}\r\n\t\t\t\t\tclasses.length = i\r\n\t\t\t\t}\r\n\t\t\t\tfor (var i = 0, l = classes.length; i < l; i++) {\r\n\t\t\t\t\t// find each class name\r\n\t\t\t\t\tvar className = classes[i]\r\n\t\t\t\t\tvar flag = classes[className]\r\n\t\t\t\t\tif (flag && flag.notifies) {\r\n\t\t\t\t\t\t// if it is a variable, we react to it\r\n\t\t\t\t\t\tenterUpdater(ClassNameUpdater, {\r\n\t\t\t\t\t\t\telement: element,\r\n\t\t\t\t\t\t\tclassName: className,\r\n\t\t\t\t\t\t\tvariable: flag\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} else if (flag || flag === undefined) {\r\n\t\t\t\t\t\telement.className += ' ' + className\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tclass: applyAttribute,\r\n\t\t\tfor: applyAttribute,\r\n\t\t\trole: applyAttribute,\r\n\t\t\trender: function(element, value, key) {\r\n\t\t\t\t// TODO: This doesn't need to be a property updater\r\n\t\t\t\t// we should also verify it is a generator\r\n\t\t\t\t// and maybe, at some point, find an optimization to eliminate the bind()\r\n\t\t\t\tenterUpdater(PropertyUpdater, {\r\n\t\t\t\t\tname: key,\r\n\t\t\t\t\tvariable: new Variable.GeneratorVariable(value.bind(element)),\r\n\t\t\t\t\telement: element\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tvalue: bidirectionalHandler,\r\n\t\t\tvalueAsNumber: bidirectionalHandler,\r\n\t\t\tvalueAsDate: bidirectionalHandler,\r\n\t\t\tchecked: bidirectionalHandler,\r\n\t\t\tdataset: applySubProperties(function(newValue, element, key) {\r\n\t\t\t\telement.dataset[key || this.name] = newValue\r\n\t\t\t}),\r\n\t\t\tattributes: applySubProperties(function(newValue, element, key) {\r\n\t\t\t\telement.setAttribute(key || this.name, newValue)\r\n\t\t\t}),\r\n\t\t\tstyle: function(element, value, key) {\r\n\t\t\t\tif (typeof value === 'string') {\r\n\t\t\t\t\telement.setAttribute('style', value)\r\n\t\t\t\t} else if (value && value.notifies) {\r\n\t\t\t\t\tenterUpdater(AttributeUpdater, {\r\n\t\t\t\t\t\tname: 'style',\r\n\t\t\t\t\t\tvariable: value,\r\n\t\t\t\t\t\telment: element\r\n\t\t\t\t\t})\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstyleObjectHandler(element, value, key)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction applyAttribute(element, value, key) {\r\n\t\t\tif (value && value.notifies) {\r\n\t\t\t\tenterUpdater(AttributeUpdater, {\r\n\t\t\t\t\tname: key,\r\n\t\t\t\t\tvariable: value,\r\n\t\t\t\t\telement: element\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\telement.setAttribute(key, value)\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tvar styleObjectHandler = applySubProperties(function(newValue, element, key) {\r\n\t\t\telement.style[key || this.name] = newValue\r\n\t\t})\r\n\t\r\n\t\tfunction applySubProperties(renderer) {\r\n\t\t\tvar SubPropertyUpdater = lang.compose(PropertyUpdater, function SubPropertyUpdater(options) {\r\n\t\t\t\tPropertyUpdater.apply(this, arguments)\r\n\t\t\t}, {\r\n\t\t\t\trenderUpdate: renderer\r\n\t\t\t})\t\r\n\t\t\treturn function(element, value, key) {\r\n\t\t\t\tvar target = element[key]\r\n\t\t\t\tfor (var subKey in value) {\r\n\t\t\t\t\tvar subValue = value[subKey]\r\n\t\t\t\t\tif (subValue && subValue.notifies) {\r\n\t\t\t\t\t\tenterUpdater(SubPropertyUpdater, {\r\n\t\t\t\t\t\t\tname: subKey,\r\n\t\t\t\t\t\t\tvariable: subValue,\r\n\t\t\t\t\t\t\telement: element\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\trenderer(subValue, element, subKey)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction applyProperties(element, properties) {\r\n\t\t\tfor (var key in properties) {\r\n\t\t\t\tvar value = properties[key]\r\n\t\t\t\tvar styleDefinition = styleDefinitions[key]\r\n\t\t\t\tif (propertyHandlers[key]) {\r\n\t\t\t\t\tpropertyHandlers[key](element, value, key, properties)\r\n\t\t\t\t} else if ((styleDefinition = styleDefinitions[key]) && element[key] === undefined) {\r\n\t\t\t\t\tif (value && value.notifies) {\r\n\t\t\t\t\t\tenterUpdater(StyleUpdater, {\r\n\t\t\t\t\t\t\tname: key,\r\n\t\t\t\t\t\t\tvariable: value,\r\n\t\t\t\t\t\t\telement: element\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tstyleDefinition(element, value, key)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (value && value.notifies) {\r\n\t\t\t\t\tenterUpdater(PropertyUpdater, {\r\n\t\t\t\t\t\tname: key,\r\n\t\t\t\t\t\tvariable: value,\r\n\t\t\t\t\t\telement: element\r\n\t\t\t\t\t})\r\n\t\t\t\t} else if (typeof value === 'function' && key.slice(0, 2) === 'on') {\r\n\t\t\t\t\telement.addEventListener(key.slice(2), value)\r\n\t\t\t\t} else {\r\n\t\t\t\t\telement[key] = value\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction applySelector(element, selector) {\r\n\t\t\tselector.replace(/(\\.|#)?(\\w+)/g, function(t, operator, name) {\r\n\t\t\t\tif (operator == '.') {\r\n\t\t\t\t\telement._class = (element._class ? element._class + ' ' : '') + name\r\n\t\t\t\t} else if (operator == '#') {\r\n\t\t\t\t\telement._id = name\r\n\t\t\t\t} else {\r\n\t\t\t\t\telement._tag = name\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\r\n\t\tnextClassId = 1\r\n\t\tuniqueSelectors = {}\r\n\t\tfunction getUniqueSelector(element) {\r\n\t\t\tvar selector = element.hasOwnProperty('_uniqueSelector') ? element._uniqueSelector :\r\n\t\t\t\t(element._tag + (element._class ? '.' + element._class.replace(/\\s+/g, '.') : '') +\r\n\t\t\t\t(element._id ? '#' + element._id : ''))\r\n\t\t\tif (!selector.match(/[#\\.-]/)) {\r\n\t\t\t\tif (uniqueSelectors[selector]) {\r\n\t\t\t\t\telement._class = '.x-' + nextClassId++\r\n\t\t\t\t\tselector = getUniqueSelector(element)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tuniqueSelectors[selector] = selector\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn selector\r\n\t\t}\r\n\t\r\n\t\tfunction buildContent(element, content, key, properties) {\r\n\t\t\tvar each = element.each || properties.each\r\n\t\t\tif (each && content) {\r\n\t\t\t\t// render as list\r\n\t\t\t\tif (each.create) {\r\n\t\t\t\t\tvar ItemClass = element.itemAs || Item\r\n\t\t\t\t\thasOwn(each, ItemClass, function (element) {\r\n\t\t\t\t\t\treturn new ItemClass(element._item, content)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tif (content.notifies) {\r\n\t\t\t\t\tenterUpdater(ListUpdater, {\r\n\t\t\t\t\t\teach: each,\r\n\t\t\t\t\t\tvariable: content,\r\n\t\t\t\t\t\telement: element\r\n\t\t\t\t\t})\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar fragment = doc.createDocumentFragment()\r\n\t\t\t\t\tcontent.forEach(function(item) {\r\n\t\t\t\t\t\tif (each.create) {\r\n\t\t\t\t\t\t\tchildElement = each.create({parent: element, _item: item}) // TODO: make a faster object here potentially\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tchildElement = each(item, element)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tfragment.appendChild(childElement)\r\n\t\t\t\t\t})\r\n\t\t\t\t\telement.appendChild(fragment)\r\n\t\t\t\t}\r\n\t\t\t} else if (inputs[element.tagName]) {\r\n\t\t\t\t// render into input\r\n\t\t\t\tbuildInputContent(element, content)\r\n\t\t\t} else if (content instanceof Array) {\r\n\t\t\t\t// treat array as children (potentially of the content node)\r\n\t\t\t\telement = element.contentNode || element\r\n\t\t\t\tlayoutChildren(element, content, element)\r\n\t\t\t} else {\r\n\t\t\t\t// render as string\r\n\t\t\t\telement.appendChild(variableAsText(element, content))\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction bindChanges(element, variable, key, conversion) {\r\n\t\t\tlang.nextTurn(function() { // wait for next turn in case inputChanges isn't set yet\r\n\t\t\t\tvar inputEvents = element.inputEvents || ['change', 'alkali-change']\r\n\t\t\t\tfor (var i = 0, l = inputEvents.length; i < l; i++) {\r\n\t\t\t\t\telement.addEventListener(inputEvents[i], function (event) {\r\n\t\t\t\t\t\tvar value = element[key]\r\n\t\t\t\t\t\tvar result = variable.put(conversion ? conversion(value, element) : value, new Context(element))\r\n\t\t\t\t\t\tif (result === Variable.deny) {\r\n\t\t\t\t\t\t\tthrow new Error('Variable change denied')\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\r\n\t\tdoc.addEventListener('click', function(event) {\r\n\t\t\tvar target = event.target\r\n\t\t\tif (target.type === 'radio') {\r\n\t\t\t\tvar radios = document.querySelectorAll('input[type=radio]')\r\n\t\t\t\tfor (var i = 0, l = radios.length; i < l; i++) {\r\n\t\t\t\t\tvar radio = radios[i]\r\n\t\t\t\t\tif (radio.name === target.name && radio !== target) {\r\n\t\t\t\t\t\tradio.dispatchEvent(new Event('alkali-change', {}))\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\tfunction conversion(value, element) {\r\n\t\t\tif (element.type == 'number') {\r\n\t\t\t\treturn parseFloat(value)\r\n\t\t\t}\r\n\t\t\treturn value\r\n\t\t}\r\n\t\r\n\t\tfunction buildInputContent(element, content) {\r\n\t\t\tvar inputType = element.type\r\n\t\t\tvar inputProperty = inputType in {date: 1, datetime: 1, time: 1} ?\r\n\t\t\t\t\t'valueAsDate' : (inputType === 'checkbox' || inputType === 'radio') ?\r\n\t\t\t\t\t\t'checked' : 'value'\r\n\t\r\n\t\t\tif (content && content.notifies) {\r\n\t\t\t\t// a variable, respond to changes\r\n\t\t\t\tenterUpdater(PropertyUpdater, {\r\n\t\t\t\t\tvariable: content,\r\n\t\t\t\t\tname: inputProperty,\r\n\t\t\t\t\telement: element\r\n\t\t\t\t})\r\n\t\t\t\t// and bind the other way as well, updating the variable in response to input changes\r\n\t\t\t\tbindChanges(element, content, inputProperty, conversion)\r\n\t\t\t} else {\r\n\t\t\t\t// primitive\r\n\t\t\t\telement[inputProperty] = content\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar classHandlers = {\r\n\t\t\thasOwn: function(Element, value) {\r\n\t\t\t\thasOwn(Element, value)\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction applyToClass(value, Element) {\r\n\t\t\tvar applyOnCreate = Element._applyOnCreate\r\n\t\t\tvar prototype = Element.prototype\r\n\t\t\tif (value && typeof value === 'object') {\r\n\t\t\t\tif (value instanceof Array || value.notifies) {\r\n\t\t\t\t\tapplyOnCreate.content = value\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (var key in value) {\r\n\t\t\t\t\t// TODO: eventually we want to be able to set these as rules statically per element\r\n\t\t\t\t\t/*if (styleDefinitions[key]) {\r\n\t\t\t\t\t\tvar styles = Element.styles || (Element.styles = [])\r\n\t\t\t\t\t\tstyles.push(key)\r\n\t\t\t\t\t\tstyles[key] = descriptor.value\r\n\t\t\t\t\t} else {*/\r\n\t\t\t\t\t\tif (classHandlers[key]) {\r\n\t\t\t\t\t\t\thasOwn(Element, value[key])\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t// TODO: do deep merging of styles and classes, but not variables\r\n\t\t\t\t\t\t\tapplyOnCreate[key] = value[key]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else if (typeof value === 'function' && !value.for) {\r\n\t\t\t\tthrow new TypeError('Function as argument not supported')\r\n\t\t\t} else {\r\n\t\t\t\tapplyOnCreate.content = value\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction getApplySet(Class) {\r\n\t\t\tif (Class.hasOwnProperty('_applyOnCreate')) {\r\n\t\t\t\treturn Class._applyOnCreate\r\n\t\t\t}\r\n\t\t\t// this means we didn't extend and evaluate the prototype yet\r\n\t\t\tif (Class.getForClass) {\r\n\t\t\t\t// we are extending an alkali constructor\r\n\t\t\t\t// if this class is inheriting from an alkali constructor, work our way up the chain\r\n\t\t\t\tapplyOnCreate = Class._applyOnCreate = {}\r\n\t\t\t\tvar parentApplySet = getApplySet(getPrototypeOf(Class))\r\n\t\t\t\tfor (var key in parentApplySet) {\r\n\t\t\t\t\tapplyOnCreate[key] = parentApplySet[key]\r\n\t\t\t\t}\r\n\t\t\t\t// we need to check the prototype for event handlers\r\n\t\t\t\tvar prototype = Class.prototype\r\n\t\t\t\tvar keys = Object.getOwnPropertyNames(prototype)\r\n\t\t\t\tfor (var i = 0, l = keys.length; i < l; i++) {\r\n\t\t\t\t\tvar key = keys[i]\r\n\t\t\t\t\tif (key.slice(0, 2) === 'on' || (key === 'render' && isGenerator(prototype[key]))) {\r\n\t\t\t\t\t\tapplyOnCreate[key] = prototype[key]\r\n\t\t\t\t\t} else if (key.slice(0, 6) === 'render') {\r\n\t\t\t\t\t\tObject.defineProperty(prototype, key[6].toLowerCase() + key.slice(7), renderDescriptor(key))\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn applyOnCreate\r\n\t\t\t}\r\n\t\t\treturn null\r\n\t\t}\r\n\t\r\n\t\tfunction renderDescriptor(renderMethod) {\r\n\t\t\tvar map = new WeakMap()\r\n\t\t\treturn {\r\n\t\t\t\tget: function() {\r\n\t\t\t\t\treturn map.has(this) ? map.get(this) : null\r\n\t\t\t\t},\r\n\t\t\t\tset: function(value) {\r\n\t\t\t\t\tmap.set(this, value)\r\n\t\t\t\t\tthis[renderMethod](value)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction makeElementConstructor() {\r\n\t\t\tfunction Element(selector, properties) {\r\n\t\t\t\tif (this instanceof Element){\r\n\t\t\t\t\t// create DOM element\r\n\t\t\t\t\t// Need to detect if we have registered the element and `this` is actually already the correct instance\r\n\t\t\t\t\treturn create.apply(Element.prototype === getPrototypeOf(this) ? Element :// this means it is from this constructor\r\n\t\t\t\t\t\tthis.constructor, // this means it was constructed from a subclass\r\n\t\t\t\t\t\targuments)\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// extend to create new class\r\n\t\t\t\t\treturn withProperties.apply(Element, arguments)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tElement.create = create\r\n\t\t\tElement.with = withProperties\r\n\t\t\tElement.for = forTarget\r\n\t\t\tElement.property = propertyForElement\r\n\t\t\tElement.getForClass = getForClass\r\n\t\t\treturn Element\r\n\t\t}\r\n\t\r\n\t\tfunction withProperties(selector, properties) {\r\n\t\t\tvar Element = makeElementConstructor()\r\n\t\t\tElement.superConstructor = this\r\n\t\t\tElement.tagName = this.tagName\r\n\t\t\tif (this.children) {\r\n\t\t\t\t// just copy this property\r\n\t\t\t\tElement.children = this.children\r\n\t\t\t}\r\n\t\t\tvar prototype = Element.prototype = this.prototype\r\n\t\r\n\t\t\tvar hasOwnApplySet\r\n\t\t\tvar applyOnCreate = Element._applyOnCreate = {}\r\n\t\t\tvar parentApplySet = getApplySet(this)\r\n\t\t\t// copy parent properties\r\n\t\t\tfor (var key in parentApplySet) {\r\n\t\t\t\tapplyOnCreate[key] = parentApplySet[key]\r\n\t\t\t}\r\n\t\r\n\t\t\tvar i = 0 // for arguments\r\n\t\t\tif (typeof selector === 'string') {\r\n\t\t\t\tvar selectorMatch = selector.match(SELECTOR_REGEX)\r\n\t\t\t\tif (selectorMatch) {\r\n\t\t\t\t\tdo {\r\n\t\t\t\t\t\tvar operator = selectorMatch[1]\r\n\t\t\t\t\t\tvar name = selectorMatch[2]\r\n\t\t\t\t\t\tif (operator == '.') {\r\n\t\t\t\t\t\t\tif (applyOnCreate.className) {\r\n\t\t\t\t\t\t\t\tapplyOnCreate.className += ' ' + name\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tapplyOnCreate.className = name\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tapplyOnCreate.id = name\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar remaining = selectorMatch[3]\r\n\t\t\t\t\t\tselectorMatch = remaining && remaining.match(SELECTOR_REGEX)\r\n\t\t\t\t\t} while (selectorMatch)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tapplyOnCreate.content = selector\r\n\t\t\t\t}\r\n\t\t\t\ti++ // skip the first argument\r\n\t\t\t}\r\n\t\r\n\t\t\tfor (var l = arguments.length; i < l; i++) {\r\n\t\t\t\tapplyToClass(arguments[i], Element)\r\n\t\t\t}\r\n\t\t\treturn Element\r\n\t\t}\r\n\t\tvar currentParent\r\n\t\tfunction create(selector, properties) {\r\n\t\t\t// TODO: make this a symbol\r\n\t\t\tvar applyOnCreate = getApplySet(this)\r\n\t\t\tif (currentParent) {\r\n\t\t\t\tvar parent = currentParent\r\n\t\t\t\tcurrentParent = null\r\n\t\t\t}\r\n\t/*\t\tif (this._initialized != this) {\r\n\t\t\t\tthis._initialized = this\r\n\t\t\t\tthis.initialize && this.initialize()\r\n\t\t\t\tvar styles = this.styles\r\n\t\t\t\tif (styles) {\r\n\t\t\t\t\tvar rule = createCssRule(getUniqueSelector(this))\r\n\t\t\t\t\tfor (var i = 0, l = styles.length; i < l; i++) {\r\n\t\t\t\t\t\tvar key = styles[i]\r\n\t\t\t\t\t\tvar value = styles[key]\r\n\t\t\t\t\t\t// TODO: if it is a contextualized variable, do this on the element\r\n\t\t\t\t\t\tvar styleDefinition = styleDefinitions[key]\r\n\t\t\t\t\t\tif (styleDefinition) {\r\n\t\t\t\t\t\t\tstyleDefinition(rule, value, key)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (!this.hasOwnProperty('_applyOnCreate')) {\r\n\t\t\t\t\tapplyOnCreate = getApplySet(this)\r\n\t\t\t\t}\r\n\t\t\t}*/\r\n\t\t\tvar element = doc.createElement(this.tagName)\r\n\t\t\tif (selector && selector.parent) {\r\n\t\t\t\tparent = selector.parent\r\n\t\t\t}\r\n\t\t\tif (parent) {\r\n\t\t\t\tpresumptiveParentMap.set(element, parent)\r\n\t\t\t}\r\n\t\t\tif (!(element instanceof this)) {\r\n\t\t\t\t// ideally we want to avoid this call, as it is expensive, but for classes that\r\n\t\t\t\t// don't register a tag name, we have to make sure the prototype chain is correct\r\n\t\t\t\tsetPrototypeOf(element, this.prototype)\r\n\t\t\t}\r\n\t\t\tif (element.constructor != this) {\r\n\t\t\t\telement.constructor = this // need to do this for hasOwn contextualization to work\r\n\t\t\t}\r\n\t\t\tif (arguments.length > 0) {\r\n\t\t\t\t// copy applyOnCreate when we have arguments\r\n\t\t\t\tvar ElementApplyOnCreate = applyOnCreate\r\n\t\t\t\tapplyOnCreate = {}\r\n\t\t\t\tfor (var key in ElementApplyOnCreate) {\r\n\t\t\t\t\tapplyOnCreate[key] = ElementApplyOnCreate[key]\r\n\t\t\t\t}\r\n\t\t\t\tvar i = 0\r\n\t\t\t\tif (typeof selector == 'string') {\r\n\t\t\t\t\ti++\r\n\t\t\t\t\tvar selectorMatch = selector.match(SELECTOR_REGEX)\r\n\t\t\t\t\tif (selectorMatch) {\r\n\t\t\t\t\t\tdo {\r\n\t\t\t\t\t\t\tvar operator = selectorMatch[1]\r\n\t\t\t\t\t\t\tvar name = selectorMatch[2]\r\n\t\t\t\t\t\t\tif (operator == '.') {\r\n\t\t\t\t\t\t\t\tif (applyOnCreate.className) {\r\n\t\t\t\t\t\t\t\t\tapplyOnCreate.className += ' ' + name\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tif (element.className) {\r\n\t\t\t\t\t\t\t\t\t    element.className += ' ' + name\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t    element.className = name\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tif (applyOnCreate.id) {\r\n\t\t\t\t\t\t\t\t\tapplyOnCreate.id = name\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t// just skip right to the element\r\n\t\t\t\t\t\t\t\t\telement.id = name\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar remaining = selectorMatch[3]\r\n\t\t\t\t\t\t\tselectorMatch = remaining && remaining.match(SELECTOR_REGEX)\r\n\t\t\t\t\t\t} while (selectorMatch)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tapplyOnCreate.content = selector\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (selector && selector._item) {\r\n\t\t\t\t\t// this is kind of hack, to get the Item available before the properties, eventually we may want to\r\n\t\t\t\t\t// order static properties before variable binding applications, but for now.\r\n\t\t\t\t\telement._item = selector._item\r\n\t\t\t\t}\r\n\t\t\t\tfor (var l = arguments.length; i < l; i++) {\r\n\t\t\t\t\tvar argument = arguments[i]\r\n\t\t\t\t\tif (argument instanceof Array || argument.notifies) {\r\n\t\t\t\t\t\tapplyOnCreate.content = argument\r\n\t\t\t\t\t} else if (typeof argument === 'function' && argument.for) {\r\n\t\t\t\t\t\tapplyOnCreate.content = argument.for(element)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tfor (var key in argument) {\r\n\t\t\t\t\t\t\t// TODO: do deep merging of styles and classes, but not variables\r\n\t\t\t\t\t\t\tapplyOnCreate[key] = argument[key]\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// TODO: inline this\r\n\t\t\tapplyProperties(element, applyOnCreate)\r\n\t\t\tif (this.children) {\r\n\t\t\t\tlayoutChildren(element, this.children, element)\r\n\t\t\t}\r\n\t\t\t// always do this last, so it can be properly inserted inside the children\r\n\t\t\tif (applyOnCreate.content) {\r\n\t\t\t\tbuildContent(element, applyOnCreate.content, 'content', applyOnCreate)\r\n\t\t\t}\r\n\t\t\telement.createdCallback && element.createdCallback()\r\n\t\t\telement.created && element.created(applyOnCreate)\r\n\t\t\treturn element\r\n\t\t}\r\n\t\r\n\t\tvar slice = [].slice\r\n\t\tfunction append(parent){\r\n\t\t\treturn this.nodeType ?\r\n\t\t\t\tlayoutChildren(this, arguments, this) : // called as a method\r\n\t\t\t\tlayoutChildren(parent, slice.call(arguments, 1), parent) // called as a function\r\n\t\t}\r\n\t\r\n\t\tfunction prepend(parent){\r\n\t\t\treturn this.nodeType ?\r\n\t\t\t\tlayoutChildren(this, arguments, this, true) : // called as a method\r\n\t\t\t\tlayoutChildren(parent, slice.call(arguments, 1), parent, true) // called as a function\r\n\t\t}\r\n\t\r\n\t\tfunction registerTag(tagName) {\r\n\t\t\tthis.tagName = tagName\r\n\t\t\tif (document.registerElement && this.prototype.constructor === this) {\r\n\t\t\t\tdocument.registerElement(tagName, this)\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tvar Element = withProperties.call(typeof HTMLElement !== 'undefined' ? HTMLElement : function() {})\r\n\t\r\n\t\tElement.registerTag = registerTag\r\n\t\r\n\t\tElement.within = function(element){\r\n\t\t\t// find closest child\r\n\t\t}\r\n\t\r\n\t\tgenerate([\r\n\t\t\t'Video',\r\n\t\t\t'Source',\r\n\t\t\t'Media',\r\n\t\t\t'Audio',\r\n\t\t\t'UL',\r\n\t\t\t'Track',\r\n\t\t\t'Title',\r\n\t\t\t'TextArea',\r\n\t\t\t'Template',\r\n\t\t\t'TBody',\r\n\t\t\t'THead',\r\n\t\t\t'TFoot',\r\n\t\t\t'TR',\r\n\t\t\t'Table',\r\n\t\t\t'Col',\r\n\t\t\t'ColGroup',\r\n\t\t\t'TH',\r\n\t\t\t'TD',\r\n\t\t\t'Caption',\r\n\t\t\t'Style',\r\n\t\t\t'Span',\r\n\t\t\t'Shadow',\r\n\t\t\t'Select',\r\n\t\t\t'Script',\r\n\t\t\t'Quote',\r\n\t\t\t'Progress',\r\n\t\t\t'Pre',\r\n\t\t\t'Picture',\r\n\t\t\t'Param',\r\n\t\t\t'P',\r\n\t\t\t'Output',\r\n\t\t\t'Option',\r\n\t\t\t'Optgroup',\r\n\t\t\t'Object',\r\n\t\t\t'OL',\r\n\t\t\t'Ins',\r\n\t\t\t'Del',\r\n\t\t\t'Meter',\r\n\t\t\t'Meta',\r\n\t\t\t'Menu',\r\n\t\t\t'Map',\r\n\t\t\t'Link',\r\n\t\t\t'Legend',\r\n\t\t\t'Label',\r\n\t\t\t'LI',\r\n\t\t\t'KeyGen',\r\n\t\t\t'Input',\r\n\t\t\t'Image',\r\n\t\t\t'IFrame',\r\n\t\t\t'H1',\r\n\t\t\t'H2',\r\n\t\t\t'H3',\r\n\t\t\t'H4',\r\n\t\t\t'H5',\r\n\t\t\t'H6',\r\n\t\t\t'Hr',\r\n\t\t\t'FrameSet',\r\n\t\t\t'Frame',\r\n\t\t\t'Form',\r\n\t\t\t'Font',\r\n\t\t\t'Embed',\r\n\t\t\t'Article',\r\n\t\t\t'Aside',\r\n\t\t\t'Footer',\r\n\t\t\t'Figure',\r\n\t\t\t'FigCaption',\r\n\t\t\t'Header',\r\n\t\t\t'Main',\r\n\t\t\t'Mark',\r\n\t\t\t'MenuItem',\r\n\t\t\t'Nav',\r\n\t\t\t'Section',\r\n\t\t\t'Summary',\r\n\t\t\t'WBr',\r\n\t\t\t'Div',\r\n\t\t\t'Dialog',\r\n\t\t\t'Details',\r\n\t\t\t'DataList',\r\n\t\t\t'DL',\r\n\t\t\t'Canvas',\r\n\t\t\t'Button',\r\n\t\t\t'Base',\r\n\t\t\t'Br',\r\n\t\t\t'Area',\r\n\t\t\t'A'\r\n\t\t])\r\n\t\tgenerateInputs([\r\n\t\t\t'Checkbox',\r\n\t\t\t'Password',\r\n\t\t\t'Submit',\r\n\t\t\t'Radio',\r\n\t\t\t'Color',\r\n\t\t\t'Date',\r\n\t\t\t'DateTime',\r\n\t\t\t'Email',\r\n\t\t\t'Month',\r\n\t\t\t'Number',\r\n\t\t\t'Range',\r\n\t\t\t'Search',\r\n\t\t\t'Tel',\r\n\t\t\t'Time',\r\n\t\t\t'Url',\r\n\t\t\t'Week'])\r\n\t\r\n\t\tvar tags = {}\r\n\t\tfunction getConstructor(tagName) {\r\n\t\t\ttagName = tagName.toLowerCase()\r\n\t\t\treturn tags[tagName] ||\r\n\t\t\t\t(tags[tagName] =\r\n\t\t\t\t\tsetTag(withProperties.call(doc.createElement(tagName).constructor), tagName))\r\n\t\t}\r\n\t\r\n\t\tfunction setTag(Element, tagName) {\r\n\t\t\tElement.tagName = tagName\r\n\t\t\treturn Element\r\n\t\t}\r\n\t\tfunction generate(elements) {\r\n\t\t\telements.forEach(function(elementName) {\r\n\t\t\t\tvar ElementClass\r\n\t\t\t\tObject.defineProperty(Element, elementName, {\r\n\t\t\t\t\tget: function() {\r\n\t\t\t\t\t\treturn ElementClass || (ElementClass = getConstructor(elementName))\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\t\tfunction generateInputs(elements) {\r\n\t\t\telements.forEach(function(inputType) {\r\n\t\t\t\tvar ElementClass\r\n\t\t\t\tObject.defineProperty(Element, inputType, {\r\n\t\t\t\t\tget: function() {\r\n\t\t\t\t\t\t// TODO: make all inputs extend from input generated from generate\r\n\t\t\t\t\t\treturn ElementClass || (ElementClass = setTag(withProperties.call(HTMLInputElement, {\r\n\t\t\t\t\t\t\ttype: inputType.toLowerCase()\r\n\t\t\t\t\t\t}), 'input'))\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t// alias all the inputs with an Input suffix\r\n\t\t\t\tObject.defineProperty(Element, inputType + 'Input', {\r\n\t\t\t\t\tget: function() {\r\n\t\t\t\t\t\treturn this[inputType]\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\t\r\n\t\tvar aliases = {\r\n\t\t\tAnchor: 'A',\r\n\t\t\tParagraph: 'P',\r\n\t\t\tTextarea: 'TextArea',\r\n\t\t\tDList: 'DL',\r\n\t\t\tUList: 'UL',\r\n\t\t\tOList: 'OL',\r\n\t\t\tListItem: 'LI',\r\n\t\t\tText: 'Input',\r\n\t\t\tTextInput: 'Input',\r\n\t\t\tTableRow: 'TR',\r\n\t\t\tTableCell: 'TD',\r\n\t\t\tTableHeaderCell: 'TH',\r\n\t\t\tTableHeader: 'THead',\r\n\t\t\tTableBody: 'TBody'\r\n\t\t}\r\n\t\tfor (var alias in aliases) {\r\n\t\t\t(function(alias, to) {\r\n\t\t\t\tObject.defineProperty(Element, alias, {\r\n\t\t\t\t\tget: function() {\r\n\t\t\t\t\t\treturn this[to]\r\n\t\t\t\t\t}\r\n\t\t\t\t})\t\t\t\r\n\t\t\t})(alias, aliases[alias])\r\n\t\t}\r\n\t\r\n\t\tElement.append = append\r\n\t\tElement.prepend = prepend\r\n\t\tElement.refresh = Updater.refresh\r\n\t\tvar options = Element.options = {\r\n\t\t\tmoveLiveElementsEnabled: true,\r\n\t\t}\r\n\t\tElement.content = function(element){\r\n\t\t\t// container marker\r\n\t\t\treturn {\r\n\t\t\t\tisContentNode: true,\r\n\t\t\t\tcreate: element.create.bind(element)\r\n\t\t\t}\r\n\t\t}\r\n\t\t// TODO: unify this in lang\r\n\t\tElement.extend = function(Class, properties) {\r\n\t\t\tfunction ExtendedElement() {\r\n\t\t\t\treturn Class.apply(this, arguments)\r\n\t\t\t}\r\n\t\t\tsetPrototypeOf(ExtendedElement, Class)\r\n\t\t\tvar prototype = ExtendedElement.prototype = Object.create(Class.prototype)\r\n\t\t\tprototype.constructor = ExtendedElement\r\n\t\t\tObject.getOwnPropertyNames(properties).forEach(function(key) {\r\n\t\t\t\tvar descriptor = Object.getOwnPropertyDescriptor(properties, key)\r\n\t\t\t\tif (classHandlers[key]) {\r\n\t\t\t\t\tclassHandlers[key](ExtendedElement, descriptor.value)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tObject.defineProperty(prototype, key, descriptor)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\treturn ExtendedElement\r\n\t\t}\r\n\t\r\n\t\tfunction forTarget(target) {\r\n\t\t\treturn target.constructor.getForClass(target, this)\r\n\t\t}\r\n\t\r\n\t\tfunction hasOwn(From, Target, createInstance) {\r\n\t\t\tif (typeof Target === 'object' && Target.Class) {\r\n\t\t\t\treturn hasOwn(From, Target.Class, Target.createInstance)\r\n\t\t\t}\r\n\t\t\tif (Target instanceof Array) {\r\n\t\t\t\treturn Target.forEach(function(Target) {\r\n\t\t\t\t\thasOwn(From, Target)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tvar ownedClasses = From.ownedClasses || (From.ownedClasses = new WeakMap())\r\n\t\t\t// TODO: assign to super classes\r\n\t\t\townedClasses.set(Target, createInstance || function() {\r\n\t\t\t\treturn new Target()\r\n\t\t\t})\r\n\t\t\treturn From\r\n\t\t}\r\n\t\r\n\t\tvar globalInstances = {}\r\n\t\tfunction getForClass(element, Target) {\r\n\t\t\tvar createInstance\r\n\t\t\twhile (element && !(createInstance = element.constructor.ownedClasses && element.constructor.ownedClasses.get(Target))) {\r\n\t\t\t\telement = element.parentNode || presumptiveParentMap.get(element)\r\n\t\t\t}\r\n\t\t\tif (createInstance) {\r\n\t\t\t\tvar ownedInstances = element.ownedInstances || (element.ownedInstances = new WeakMap())\r\n\t\t\t\tvar instance = ownedInstances.get(Target)\r\n\t\t\t\tif (instance === undefined) {\r\n\t\t\t\t\townedInstances.set(Target, instance = createInstance(element))\r\n\t\t\t\t\tinstance.subject = element\r\n\t\t\t\t}\r\n\t\t\t\treturn instance\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction propertyForElement(key) {\r\n\t\t\t// we just need to establish one Variable class for each element, so we cache it\r\n\t\t\tThisElementVariable = this._Variable\r\n\t\t\tif (!ThisElementVariable) {\r\n\t\t\t\t// need our own branded variable class for this element class\r\n\t\t\t\tThisElementVariable = this._Variable = Variable()\r\n\t\r\n\t\t\t\thasOwn(this, ThisElementVariable, function(element) {\r\n\t\t\t\t\t// when we create the instance, immediately observe it\r\n\t\t\t\t\t// TODO: we might want to do this in init instead\r\n\t\t\t\t\tvar instance = new ThisElementVariable(element)\r\n\t\t\t\t\tinstance.observeObject()\r\n\t\t\t\t\treturn instance\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\t// now actually get the property class\r\n\t\t\treturn ThisElementVariable.property(key)\r\n\t\t}\r\n\t\r\n\t\tvar Item = Element.Item = Variable.Item\r\n\t\r\n\t\tfunction enterUpdater(Updater, options/*, target*/) {\r\n\t\t\t// this will be used for optimized class-level variables\r\n\t\t\t/*if (target.started) { // TODO: Might want to pass in started as a parameter\r\n\t\t\t\t// this means that the updater has already been created, so we just need to add this instance\r\n\t\t\t\tUpdater.prototype.renderUpdate.call(options, element)\r\n\t\t\t} else {*/\r\n\t\t\tvar target = options.element\r\n\t\t\tvar updaters = target.updaters || (target.updaters = [])\r\n\t\t\tupdaters.push(new Updater(options))\r\n\t\t\t//}\r\n\t\t}\r\n\t\r\n\t\tfunction cleanup(target) {\r\n\t\t\tvar updaters = target.updaters\r\n\t\t\tif (updaters) {\r\n\t\t\t\tfor (var i = 0, l = updaters.length; i < l; i++) {\r\n\t\t\t\t\tupdaters[i].stop()\r\n\t\t\t\t}\r\n\t\t\t\ttarget.needsRestart = true\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction restart(target) {\r\n\t\t\tvar updaters = target.updaters\r\n\t\t\tif (updaters) {\r\n\t\t\t\tfor (var i = 0, l = updaters.length; i < l; i++) {\r\n\t//\t\t\t\tupdaters[i].start()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// setup the mutation observer so we can be notified of attachments and removals\r\n\t\tfunction elementAttached(element) {\r\n\t\t\tvar Class = element.constructor\r\n\t\t\tif (Class.create) {\r\n\t/*\t\t\tif (Class.attachedInstances) {\r\n\t\t\t\t\tClass.attachedInstances.push(element)\r\n\t\t\t\t\tif (Class.attachedInstances.length === 1 && Class.needsRestart) {\r\n\t\t\t\t\t\trestart(Class)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tClass.attachedInstances = [element]\r\n\t\t\t\t}*/\r\n\t\t\t\tif (element.attached) {\r\n\t\t\t\t\telement.attached()\r\n\t\t\t\t}\r\n\t\t\t\tif (element.needsRestart) {\r\n\t\t\t\t\trestart(element)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction elementDetached(element) {\r\n\t\t\t/*var attachedInstances = element.constructor.attachedInstances\r\n\t\t\tif (attachedInstances) {\r\n\t\t\t\tvar index = attachedInstances.indexOf(element)\r\n\t\t\t\tif (index > -1) {\r\n\t\t\t\t\tattachedInstances.splice(index, 1)\r\n\t\t\t\t\tif (attachedInstances.length === 0) {\r\n\t\t\t\t\t\tcleanup(Class)\r\n\t\t\t\t\t}\r\n\t\t\t\t}*/\r\n\t\t\t\tif (element.detached) {\r\n\t\t\t\t\telement.detached()\r\n\t\t\t\t}\r\n\t\t\t\tcleanup(element)\r\n\t\t\t//}\r\n\t\t}\r\n\t\tif (typeof MutationObserver === 'function') {\r\n\t\t\tvar lifeStates = [{\r\n\t\t\t\tname: 'detached',\r\n\t\t\t\tnodes: 'removedNodes',\r\n\t\t\t\taction: elementDetached\r\n\t\t\t}, {\r\n\t\t\t\tname: 'attached',\r\n\t\t\t\tnodes: 'addedNodes',\r\n\t\t\t\taction: elementAttached\r\n\t\t\t}]\r\n\t\t\tfunction firstVisit(node, state) {\r\n\t\t\t\tif (state.name === 'attached') {\r\n\t\t\t\t\tif (node.__alkaliAttached__) {\r\n\t\t\t\t\t\treturn false\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tnode.__alkaliAttached__ = true\r\n\t\t\t\t\t\tstate.action(node)\r\n\t\t\t\t\t\treturn true\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (node.__alkaliAttached__) {\r\n\t\t\t\t\tif (document.contains(node)) {\r\n\t\t\t\t\t\t// detached event, but it is actually still attached (will get attached in a later mutation record)\r\n\t\t\t\t\t\t// so don't get through the detached/attached lifecycle\r\n\t\t\t\t\t\treturn false\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnode.__alkaliAttached__ = false\r\n\t\t\t\t\tstate.action(node)\r\n\t\t\t\t}\r\n\t\t\t\treturn true\r\n\t\t\t}\r\n\t\t\tvar observer = new MutationObserver(function(mutations) {\r\n\t\t\t\tfor (var i = 0, il = mutations.length; i < il; i++) {\r\n\t\t\t\t\tvar mutation = mutations[i]\r\n\t\t\t\t\t// invoke action on element if we haven't already\r\n\t\t\t\t\tactionIteration:\r\n\t\t\t\t\tfor (var j = 0, jl = lifeStates.length; j < jl; j++) { // two steps, removed nodes and added nodes\r\n\t\t\t\t\t\tvar state = lifeStates[j]\r\n\t\t\t\t\t\tvar nodes = mutation[state.nodes]\r\n\t\t\t\t\t\t// iterate over node list\r\n\t\t\t\t\t\tnodeIteration:\r\n\t\t\t\t\t\tfor (var k = 0, kl = nodes.length; k < kl; k++) {\r\n\t\t\t\t\t\t\tvar baseNode = nodes[k]\r\n\t\t\t\t\t\t\tif (firstVisit(baseNode, state)) {\r\n\t\t\t\t\t\t\t\t// start traversal with child, if it exists\r\n\t\t\t\t\t\t\t\tvar currentNode = baseNode.firstChild\r\n\t\t\t\t\t\t\t\tif (currentNode) {\r\n\t\t\t\t\t\t\t\t\tdo {\r\n\t\t\t\t\t\t\t\t\t\tvar nextNode\r\n\t\t\t\t\t\t\t\t\t\tif (currentNode.nodeType === 1 && firstVisit(currentNode, state)) {\r\n\t\t\t\t\t\t\t\t\t\t\t// depth-first search\r\n\t\t\t\t\t\t\t\t\t\t\tnextNode = currentNode.firstChild\r\n\t\t\t\t\t\t\t\t\t\t\tif (!nextNode) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tnextNode = currentNode.nextSibling\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\t\tnextNode = currentNode.nextSibling\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tif (!nextNode) {\r\n\t\t\t\t\t\t\t\t\t\t\t// come back out to parents\r\n\t\t\t\t\t\t\t\t\t\t\t// TODO: try keeping a stack to make this faster\r\n\t\t\t\t\t\t\t\t\t\t\tdo {\r\n\t\t\t\t\t\t\t\t\t\t\t\tcurrentNode = currentNode.parentNode\r\n\t\t\t\t\t\t\t\t\t\t\t\tif (currentNode === baseNode) {\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcontinue nodeIteration\r\n\t\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t\t} while (!(nextNode = currentNode.nextSibling))\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\tcurrentNode = nextNode\r\n\t\t\t\t\t\t\t\t\t} while (true)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// if (options.moveLiveElementsEnabled) {\r\n\t\t\t\t\t\t\t// TODO: any options that we can really do here?\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tobserver.observe(document.body, {\r\n\t\t\t\tchildList: true,\r\n\t\t\t\tsubtree: true\r\n\t\t\t})\r\n\t\t}\r\n\t\r\n\t\treturn Element\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(3)], __WEBPACK_AMD_DEFINE_RESULT__ = function (lang) {\r\n\t\tvar deny = {}\r\n\t\tvar noChange = {}\r\n\t\tvar WeakMap = lang.WeakMap\r\n\t\tvar setPrototypeOf = Object.setPrototypeOf || (function(base, proto) { base.__proto__ = proto})\r\n\t\tvar getPrototypeOf = Object.getPrototypeOf || (function(base) { return base.__proto__ })\r\n\t\t// update types\r\n\t\tvar ToParent = 2\r\n\t\tvar RequestChange = 3\r\n\t\t\r\n\t\tvar ToChild = Object.freeze({\r\n\t\t\ttype: 'refresh'\r\n\t\t})\r\n\t\tvar nextId = 1\r\n\t\tvar propertyListenersMap = new WeakMap(null, 'propertyListenersMap')\r\n\t\r\n\t\tvar CacheEntry = lang.compose(WeakMap, function() {\r\n\t\t},{\r\n\t\t\t_propertyChange: function(propertyName) {\r\n\t\t\t\tthis.variable._propertyChange(propertyName, contextFromCache(this))\r\n\t\t\t}\r\n\t\t})\r\n\t\tvar listenerId = 1\r\n\t\r\n\t\tfunction mergeSubject(context) {\r\n\t\t\tfor (var i = 1, l = arguments.length; i < l; i++) {\r\n\t\t\t\tvar nextContext = arguments[i]\r\n\t\t\t\tif (nextContext !== context && (!context || nextContext && context.contains && context.contains(nextContext))) {\r\n\t\t\t\t\tcontext = nextContext\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn context\r\n\t\t}\r\n\t\r\n\t\tfunction getMaterializedContextualInstance(variable, context) {\r\n\t\t\tvar subject = context && (context.distinctSubject || context.subject)\r\n\t\t\tif (typeof variable === 'function') {\r\n\t\t\t\treturn variable.for(subject)\r\n\t\t\t}\r\n\t\t\tvar contextMap = variable.contextMap\r\n\t\t\tif (context && contextMap) {\r\n\t\t\t\twhile(subject && !contextMap.has(subject)) {\r\n\t\t\t\t\tsubject = subject.parentNode\r\n\t\t\t\t}\r\n\t\t\t\tif (!subject) {\r\n\t\t\t\t\tsubject = defaultContext\r\n\t\t\t\t}\r\n\t\t\t\treturn contextMap.get(subject)\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction when(value, callback) {\r\n\t\t\tif (value && value.then) {\r\n\t\t\t\treturn value.then(callback)\r\n\t\t\t}\r\n\t\t\treturn callback(value)\r\n\t\t}\r\n\t\r\n\t\tfunction Context(subject){\r\n\t\t\tthis.subject = subject\r\n\t\t}\r\n\t\tfunction whenAll(inputs, callback){\r\n\t\t\tvar promiseInvolved\r\n\t\t\tvar needsContext\r\n\t\t\tfor (var i = 0, l = inputs.length; i < l; i++) {\r\n\t\t\t\tif (inputs[i] && inputs[i].then) {\r\n\t\t\t\t\tpromiseInvolved = true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (promiseInvolved) {\r\n\t\t\t\treturn lang.whenAll(inputs, callback)\r\n\t\t\t}\r\n\t\t\treturn callback(inputs)\r\n\t\t}\r\n\t\r\n\t\tfunction registerListener(value, listener) {\r\n\t\t\tvar listeners = propertyListenersMap.get(value)\r\n\t\t\tvar id = listener.listenerId || (listener.listenerId = ('-' + listenerId++))\r\n\t\t\tif (listeners) {\r\n\t\t\t\tif (listeners[id] === undefined) {\r\n\t\t\t\t\tlisteners[id] = listeners.push(listener) - 1\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tpropertyListenersMap.set(value, listeners = [listener])\r\n\t\t\t\tlisteners[id] = 0\r\n\t\t\t\tif (Variable.autoObserveObjects) {\r\n\t\t\t\t\tobserve(value)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tlistener.listeningToObject = value\r\n\t\t}\r\n\t\tfunction deregisterListener(listener) {\r\n\t\t\tif (listener.listeningToObject) {\r\n\t\t\t\tvar value = listener.listeningToObject\r\n\t\t\t\tlistener.listeningToObject = null\r\n\t\t\t\tvar listeners = propertyListenersMap.get(value)\r\n\t\t\t\tif (listeners) {\r\n\t\t\t\t\tvar index = listeners[listener.listenerId]\r\n\t\t\t\t\tif (index > -1) {\r\n\t\t\t\t\t\tlisteners.splice(index, 1)\r\n\t\t\t\t\t\tdelete listeners[listener.listenerId]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction RefreshEvent() {\r\n\t\t\tthis.visited = new Set()\r\n\t\t}\r\n\t\tRefreshEvent.prototype.type = 'refresh'\r\n\t\r\n\t\tfunction PropertyChangeEvent(key, childEvent) {\r\n\t\t\tthis.key = key\r\n\t\t\tthis.childEvent = childEvent\r\n\t\t\tthis.visited = childEvent.visited\r\n\t\t}\r\n\t\tPropertyChangeEvent.prototype.type = 'update'\r\n\t\r\n\t\tfunction AddEvent(args) {\r\n\t\t\tthis.visited = new Set()\r\n\t\t\tfor (var key in args) {\r\n\t\t\t\tthis[key] = args[key]\r\n\t\t\t}\r\n\t\t}\r\n\t\tAddEvent.prototype.type = 'add'\r\n\t\tfunction DeleteEvent(args) {\r\n\t\t\tthis.visited = new Set()\r\n\t\t\tfor (var key in args) {\r\n\t\t\t\tthis[key] = args[key]\r\n\t\t\t}\r\n\t\t}\r\n\t\tDeleteEvent.prototype.type = 'delete'\r\n\t\r\n\t\r\n\t\tfunction Variable(value) {\r\n\t\t\tif (this instanceof Variable) {\r\n\t\t\t\t// new call, may eventually use new.target\r\n\t\t\t\tthis.value = typeof value === 'undefined' ? this.default : value\r\n\t\t\t} else {\r\n\t\t\t\treturn Variable.extend(value)\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar VariablePrototype = Variable.prototype = {\r\n\t\t\tconstructor: Variable,\r\n\t\t\tvalueOf: function(context) {\r\n\t\t\t\tif (this.subject) {\r\n\t\t\t\t\tvar variable = this\r\n\t\t\t\t\tcontext = new Context(this.subject)\r\n\t\t\t\t}\r\n\t\t\t\treturn this.gotValue(this.getValue(context), context)\r\n\t\t\t},\r\n\t\t\tgetValue: function() {\r\n\t\t\t\treturn this.value\r\n\t\t\t},\r\n\t\t\tgotValue: function(value, context) {\r\n\t\t\t\tvar previousNotifyingValue = this.notifyingValue\r\n\t\t\t\tvar variable = this\r\n\t\t\t\tif (value && value.then) {\r\n\t\t\t\t\treturn when(value, function(value) {\r\n\t\t\t\t\t\treturn Variable.prototype.gotValue.call(variable, value, context)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\tif (previousNotifyingValue) {\r\n\t\t\t\t\tif (value === previousNotifyingValue) {\r\n\t\t\t\t\t\t// nothing changed, immediately return valueOf\r\n\t\t\t\t\t\treturn value.valueOf(context)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// if there was a another value that we were dependent on before, stop listening to it\r\n\t\t\t\t\t// TODO: we may want to consider doing cleanup after the next rendering turn\r\n\t\t\t\t\tif (variable.dependents) {\r\n\t\t\t\t\t\tpreviousNotifyingValue.stopNotifies(variable)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvariable.notifyingValue = null\r\n\t\t\t\t}\r\n\t\t\t\tif (value && value.notifies) {\r\n\t\t\t\t\tif (variable.dependents) {\r\n\t\t\t\t\t\t\t// the value is another variable, start receiving notifications\r\n\t\t\t\t\t\tvalue.notifies(variable)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvariable.notifyingValue = value\r\n\t\t\t\t\tvalue = value.valueOf(context)\r\n\t\t\t\t}\r\n\t\t\t\tif (value === undefined) {\r\n\t\t\t\t\tvalue = variable.default\r\n\t\t\t\t}\r\n\t\t\t\treturn value\r\n\t\t\t},\r\n\t\t\tisMap: function() {\r\n\t\t\t\treturn this.value instanceof Map\r\n\t\t\t},\r\n\t\t\tproperty: function(key) {\r\n\t\t\t\tvar isMap = this.isMap()\r\n\t\t\t\tvar properties = this._properties || (this._properties = isMap ? new Map() : {})\r\n\t\t\t\tvar propertyVariable = isMap ? properties.get(key) : properties[key]\r\n\t\t\t\tif (!propertyVariable) {\r\n\t\t\t\t\t// create the property variable\r\n\t\t\t\t\tpropertyVariable = new Property(this, key)\r\n\t\t\t\t\tif (isMap) {\r\n\t\t\t\t\t\tproperties.set(key, propertyVariable)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tproperties[key] = propertyVariable\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn propertyVariable\r\n\t\t\t},\r\n\t\t\tfor: function(subject) {\r\n\t\t\t\tif (subject && subject.target && !subject.constructor.getForClass) {\r\n\t\t\t\t\t// makes HTML events work\r\n\t\t\t\t\tsubject = subject.target\r\n\t\t\t\t}\r\n\t\t\t\tif (typeof this === 'function') {\r\n\t\t\t\t\t// this is a class, the subject should hopefully have an entry\r\n\t\t\t\t\tif (subject) {\r\n\t\t\t\t\t\tvar instance = subject.constructor.getForClass(subject, this)\r\n\t\t\t\t\t\tif (instance && !instance.subject) {\r\n\t\t\t\t\t\t\tinstance.subject = subject\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// TODO: Do we have a global context that we set on defaultInstance?\r\n\t\t\t\t\t\treturn instance || this.defaultInstance\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn this.defaultInstance\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn new ContextualizedVariable(this, subject || defaultContext)\r\n\t\t\t},\r\n\t\t\tdistinctFor: function(subject) {\r\n\t\t\t\tif (typeof this === 'function') {\r\n\t\t\t\t\treturn this.for(subject)\r\n\t\t\t\t}\r\n\t\t\t\tvar map = this.contextMap || (this.contextMap = new WeakMap())\r\n\t\t\t\tif (map.has(subject)) {\r\n\t\t\t\t\treturn map.get(subject)\r\n\t\t\t\t}\r\n\t\t\t\tvar contextualizedVariable\r\n\t\t\t\tmap.set(subject, contextualizedVariable = new ContextualizedVariable(this, subject))\r\n\t\t\t\treturn contextualizedVariable\r\n\t\t\t},\r\n\t\t\t_propertyChange: function(propertyName, object, context, type) {\r\n\t\t\t\tif (this.onPropertyChange) {\r\n\t\t\t\t\tthis.onPropertyChange(propertyName, object, context)\r\n\t\t\t\t}\r\n\t\t\t\tthis.updated(new PropertyChangeEvent(propertyName, new RefreshEvent()), null, context)\r\n\t\t\t},\r\n\t\t\teachKey: function(callback) {\r\n\t\t\t\tfor (var i in this._properties) {\r\n\t\t\t\t\tcallback(i)\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tapply: function(instance, args) {\r\n\t\t\t\treturn new Call(this, args)\r\n\t\t\t},\r\n\t\t\tcall: function(instance) {\r\n\t\t\t\treturn this.apply(instance, Array.prototype.slice.call(arguments, 1))\r\n\t\t\t},\r\n\t\t\tforDependencies: function(callback) {\r\n\t\t\t\tif (this.notifyingValue) {\r\n\t\t\t\t\tcallback(this.notifyingValue)\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tinit: function() {\r\n\t\t\t\tif (this.subject) {\r\n\t\t\t\t\tthis.constructor.notifies(this)\r\n\t\t\t\t}\r\n\t\t\t\tvar variable = this\r\n\t\t\t\tthis.forDependencies(function(dependency) {\r\n\t\t\t\t\tdependency.notifies(variable)\r\n\t\t\t\t})\r\n\t\t\t\tif (this.listeningToObject === null) {\r\n\t\t\t\t\t// we were previously listening to an object, but it needs to be restored\r\n\t\t\t\t\t// calling valueOf will cause the listening object to be restored\r\n\t\t\t\t\tthis.valueOf()\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcleanup: function() {\r\n\t\t\t\tvar handles = this.handles\r\n\t\t\t\tif (handles) {\r\n\t\t\t\t\tfor (var i = 0; i < handles.length; i++) {\r\n\t\t\t\t\t\thandles[i].remove()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.handles = null\r\n\t\t\t\tvar notifyingValue = this.notifyingValue\r\n\t\t\t\tif (notifyingValue) {\r\n\t\t\t\t\t// TODO: move this into the caching class\r\n\t\t\t\t\tthis.computedVariable = null\r\n\t\t\t\t}\r\n\t\t\t\tvar variable = this\r\n\t\t\t\tthis.forDependencies(function(dependency) {\r\n\t\t\t\t\tdependency.stopNotifies(variable)\r\n\t\t\t\t})\r\n\t\t\t\tif (this.context) {\r\n\t\t\t\t\tthis.constructor.stopNotifies(this)\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\tupdateVersion: function(version) {\r\n\t\t\t\tthis.version = nextId++\r\n\t\t\t},\r\n\t\r\n\t\t\tgetVersion: function(context) {\r\n\t\t\t\treturn Math.max(this.version || 0, this.notifyingValue && this.notifyingValue.getVersion ? this.notifyingValue.getVersion(context) : 0)\r\n\t\t\t},\r\n\t\r\n\t\t\tgetSubject: function(selectVariable) {\r\n\t\t\t\treturn this.subject\r\n\t\t\t},\r\n\t\r\n\t\t\tgetUpdates: function(since) {\r\n\t\t\t\tvar updates = []\r\n\t\t\t\tvar nextUpdateMap = this.nextUpdateMap\r\n\t\t\t\tif (nextUpdateMap && since) {\r\n\t\t\t\t\twhile ((since = nextUpdateMap.get(since))) {\r\n\t\t\t\t\t\tif (since.type === 'refresh') {\r\n\t\t\t\t\t\t\t// if it was refresh, we can clear any prior entries\r\n\t\t\t\t\t\t\tupdates = []\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tupdates.push(since)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn updates\r\n\t\t\t},\r\n\t\r\n\t\t\tupdated: function(updateEvent, by, context) {\r\n\t\t\t\tif (!updateEvent) {\r\n\t\t\t\t\tupdateEvent = new RefreshEvent()\r\n\t\t\t\t}\r\n\t\t\t\tif (updateEvent.visited.has(this)){\r\n\t\t\t\t\t// if this event has already visited this variable, skip it\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t\tupdateEvent.visited.add(this)\r\n\t\t\t\tif (this.subject) {\r\n\t\t\t\t\tif (by === this.constructor) {\r\n\t\t\t\t\t\t// if we receive an update from the constructor, filter it\r\n\t\t\t\t\t\tif (!(!context || (context.distinctSubject || context.subject) === this.subject || (context.subject.contains && this.subject.nodeType && context.subject.contains(this.subject)))) {\r\n\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// if we receive an outside update, send it to the constructor\r\n\t\t\t\t\t\treturn this.constructor.updated(updateEvent, this, new Context(this.subject))\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tvar contextualInstance = getMaterializedContextualInstance(this, context)\r\n\t\t\t\tif (contextualInstance) {\r\n\t\t\t\t\tcontextualInstance.updated(updateEvent, this, context)\r\n\t\t\t\t}\r\n\t\t\t\tif (this.lastUpdate) {\r\n\t\t\t\t\tvar nextUpdateMap = this.nextUpdateMap\r\n\t\t\t\t\tif (!nextUpdateMap) {\r\n\t\t\t\t\t\tnextUpdateMap = this.nextUpdateMap = new WeakMap()\r\n\t\t\t\t\t}\r\n\t\t\t\t\tnextUpdateMap.set(this.lastUpdate, updateEvent)\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tthis.lastUpdate = updateEvent\r\n\t\t\t\tthis.updateVersion()\r\n\t\t\t\tvar value = this.value\r\n\t\r\n\t\t\t\tvar dependents = this.dependents\r\n\t\t\t\tif (dependents) {\r\n\t\t\t\t\t// make a copy, in case they change\r\n\t\t\t\t\tdependents = dependents.slice(0)\r\n\t\t\t\t\tfor (var i = 0, l = dependents.length; i < l; i++) {\r\n\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\tvar dependent = dependents[i]\r\n\t\t\t\t\t\t\tif ((updateEvent instanceof PropertyChangeEvent) &&\r\n\t\t\t\t\t\t\t\t\t(dependent instanceof Property)) {\r\n\t\t\t\t\t\t\t\tif (dependent.key === updateEvent.key) {\r\n\t\t\t\t\t\t\t\t\tdependent.updated(updateEvent.childEvent, this, context)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tdependent.updated(updateEvent, this, context)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}catch(e) {\r\n\t\t\t\t\t\t\tconsole.error(e, e.stack, 'updating a variable')\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (updateEvent instanceof PropertyChangeEvent) {\r\n\t\t\t\t\tif (this.notifyingValue) {\r\n\t\t\t\t\t\tthis.notifyingValue.updated(updateEvent, this, context)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (this.collection) {\r\n\t\t\t\t\t\tthis.collection.updated(updateEvent, this, context)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn updateEvent\r\n\t\t\t},\r\n\t\r\n\t\t\tinvalidate: function() {\r\n\t\t\t\t// for back-compatibility for now\r\n\t\t\t\tthis.updated()\r\n\t\t\t},\r\n\t\r\n\t\t\tnotifies: function(target) {\r\n\t\t\t\tvar dependents = this.dependents\r\n\t\t\t\tif (!dependents || !this.hasOwnProperty('dependents')) {\r\n\t\t\t\t\tthis.dependents = dependents = []\r\n\t\t\t\t\tthis.init()\r\n\t\t\t\t}\r\n\t\t\t\tdependents.push(target)\r\n\t\t\t\tvar variable = this\r\n\t\t\t\treturn {\r\n\t\t\t\t\tunsubscribe: function() {\r\n\t\t\t\t\t\tvariable.stopNotifies(target)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tsubscribe: function(listener) {\r\n\t\t\t\t// ES7 Observable (and baconjs) compatible API\r\n\t\t\t\tvar updated\r\n\t\t\t\tvar updateQueued\r\n\t\t\t\tvar variable = this\r\n\t\t\t\t// it is important to make sure you register for notifications before getting the value\r\n\t\t\t\tif (typeof listener === 'function') {\r\n\t\t\t\t\t// BaconJS compatible API\r\n\t\t\t\t\tvar variable = this\r\n\t\t\t\t\tvar event = {\r\n\t\t\t\t\t\tvalue: function() {\r\n\t\t\t\t\t\t\treturn variable.valueOf()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tupdated = function() {\r\n\t\t\t\t\t\tupdateQueued = false\r\n\t\t\t\t\t\tlistener(event)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\telse if (listener.next) {\r\n\t\t\t\t\t// Assuming ES7 Observable API. It is actually a streaming API, this pretty much violates all principles of reactivity, but we will support it\r\n\t\t\t\t\tupdated = function() {\r\n\t\t\t\t\t\tupdateQueued = false\r\n\t\t\t\t\t\tlistener.next(variable.valueOf())\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthrow new Error('Subscribing to an invalid listener, the listener must be a function, or have an update or next method')\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar handle = this.notifies({\r\n\t\t\t\t\tupdated: function() {\r\n\t\t\t\t\t\tif (updateQueued) {\r\n\t\t\t\t\t\t\treturn\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tupdateQueued = true\r\n\t\t\t\t\t\tlang.nextTurn(updated)\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tvar initialValue = this.valueOf()\r\n\t\t\t\tif (initialValue !== undefined) {\r\n\t\t\t\t\tupdated()\r\n\t\t\t\t}\r\n\t\t\t\treturn handle\r\n\t\t\t},\r\n\t\t\tstopNotifies: function(dependent) {\r\n\t\t\t\tvar dependents = this.dependents\r\n\t\t\t\tif (dependents) {\r\n\t\t\t\t\tfor (var i = 0; i < dependents.length; i++) {\r\n\t\t\t\t\t\tif (dependents[i] === dependent) {\r\n\t\t\t\t\t\t\tdependents.splice(i--, 1)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (dependents.length === 0) {\r\n\t\t\t\t\t\t// clear the dependents so it will be reinitialized if it has\r\n\t\t\t\t\t\t// dependents again\r\n\t\t\t\t\t\tthis.dependents = dependents = false\r\n\t\t\t\t\t\tthis.cleanup()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tput: function(value, context) {\r\n\t\t\t\tvar variable = this\r\n\t\t\t\t\r\n\t\t\t\treturn when(this.getValue(context), function(oldValue) {\r\n\t\t\t\t\tif (oldValue === value) {\r\n\t\t\t\t\t\treturn noChange\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (variable.fixed &&\r\n\t\t\t\t\t\t\t// if it is set to fixed, we see we can put in the current variable\r\n\t\t\t\t\t\t\toldValue && oldValue.put && // if we currently have a variable\r\n\t\t\t\t\t\t\t// and it is always fixed, or not a new variable\r\n\t\t\t\t\t\t\t(variable.fixed == 'always' || !(value && value.notifies))) {\r\n\t\t\t\t\t\treturn oldValue.put(value)\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn when(variable.setValue(value, context), function(value) {\r\n\t\t\t\t\t\tvariable.updated(new RefreshEvent(), variable, context)\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tget: function(key) {\r\n\t\t\t\treturn when(this.valueOf(), function(object) {\r\n\t\t\t\t\tvar value = object && (typeof object.get === 'function' ? object.get(key) : object[key])\r\n\t\t\t\t\tif (value && value.notifies) {\r\n\t\t\t\t\t\t// nested variable situation, get underlying value\r\n\t\t\t\t\t\treturn value.valueOf()\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn value\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tset: function(key, value) {\r\n\t\t\t\t// TODO: create an optimized route when the property doesn't exist yet\r\n\t\t\t\tthis.property(key).put(value)\r\n\t\t\t},\r\n\t\t\tundefine: function(key, context) {\r\n\t\t\t\tthis.set(key, undefined, context)\r\n\t\t\t},\r\n\t\r\n\t\t\tnext: function(value) {\r\n\t\t\t\t// for ES7 observable compatibility\r\n\t\t\t\tthis.put(value)\r\n\t\t\t},\r\n\t\t\terror: function(error) {\r\n\t\t\t\t// for ES7 observable compatibility\r\n\t\t\t\tvar dependents = this.dependents\r\n\t\t\t\tif (dependents) {\r\n\t\t\t\t\t// make a copy, in case they change\r\n\t\t\t\t\tdependents = dependents.slice(0)\r\n\t\t\t\t\tfor (var i = 0, l = dependents.length; i < l; i++) {\r\n\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\tvar dependent = dependents[i]\r\n\t\t\t\t\t\t\t// skip notifying property dependents if we are headed up the parent chain\r\n\t\t\t\t\t\t\tdependent.error(error)\r\n\t\t\t\t\t\t}catch(e) {\r\n\t\t\t\t\t\t\tconsole.error(e, 'sending an error')\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcomplete: function(value) {\r\n\t\t\t\t// for ES7 observable compatibility\r\n\t\t\t\tthis.put(value)\r\n\t\t\t},\r\n\t\t\tsetValue: function(value) {\r\n\t\t\t\tthis.value = value\r\n\t\t\t},\r\n\t\t\tonValue: function(listener) {\r\n\t\t\t\treturn this.subscribe(function(event) {\r\n\t\t\t\t\tlang.when(event.value(), function(value) {\r\n\t\t\t\t\t\tlistener(value)\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tforEach: function(callback, context) {\r\n\t\t\t\t// iterate through current value of variable\r\n\t\t\t\treturn when(this.valueOf(), function(value) {\r\n\t\t\t\t\tif (value && value.forEach) {\r\n\t\t\t\t\t\tvalue.forEach(callback)\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tfor (var i in value) {\r\n\t\t\t\t\t\t\tcallback(value[i], i)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\r\n\t\t\tto: function (transformFunction) {\r\n\t\t\t\t// TODO: create a more efficient map, we don't really need a full variable here\r\n\t\t\t\tif (!transformFunction) {\r\n\t\t\t\t\tthrow new Error('No function provided to transform')\r\n\t\t\t\t}\r\n\t\t\t\treturn new Call(transformFunction, [this])\r\n\t\t\t},\r\n\t\t\tget schema() {\r\n\t\t\t\t// default schema is the constructor\r\n\t\t\t\treturn this.notifyingValue ? this.notifyingValue.schema : this.constructor\r\n\t\t\t},\r\n\t\t\tset schema(schema) {\r\n\t\t\t\t// but allow it to be overriden\r\n\t\t\t\tObject.defineProperty(this, 'schema', {\r\n\t\t\t\t\tvalue: schema\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tvalidate: function(target, schema) {\r\n\t\t\t\tif (this.notifyingValue) {\r\n\t\t\t\t\treturn this.notifyingValue.validate(target, schema)\r\n\t\t\t\t}\r\n\t\t\t\tif (schema.type && (schema.type !== typeof target)) {\r\n\t\t\t\t\treturn ['Target type of ' + typeof target + ' does not match schema type of ' + schema.type]\r\n\t\t\t\t}\r\n\t\t\t\tvar valid = []\r\n\t\t\t\tvalid.isValid = true\r\n\t\t\t\treturn valid\r\n\t\t\t},\r\n\t\r\n\t\t\tget validation() {\r\n\t\t\t\tvar validation = new Validating(this)\r\n\t\t\t\tObject.defineProperty(this, 'validation', {\r\n\t\t\t\t\tvalue: validation\r\n\t\t\t\t})\r\n\t\t\t\treturn validation\r\n\t\t\t},\r\n\t\t\tset validation(validation) {\r\n\t\t\t\t// but allow it to be overriden\r\n\t\t\t\tObject.defineProperty(this, 'validation', {\r\n\t\t\t\t\tvalue: validation\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tgetId: function() {\r\n\t\t\t\treturn this.id || (this.id = nextId++)\r\n\t\t\t},\r\n\t\t\tobserveObject: function() {\r\n\t\t\t\tvar variable = this\r\n\t\t\t\treturn when(this.valueOf(), function(object) {\r\n\t\t\t\t\tvar listeners = propertyListenersMap.get(object)\r\n\t\t\t\t\tif (!listeners) {\r\n\t\t\t\t\t\tpropertyListenersMap.set(object, listeners = [])\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (listeners.observerCount) {\r\n\t\t\t\t\t\tlisteners.observerCount++\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tlisteners.observerCount = 1\r\n\t\t\t\t\t\tvar observer = listeners.observer = lang.observe(object, function(events) {\r\n\t\t\t\t\t\t\tfor (var i = 0, l = listeners.length; i < l; i++) {\r\n\t\t\t\t\t\t\t\tvar listener = listeners[i]\r\n\t\t\t\t\t\t\t\tfor (var j = 0, el = events.length; j < el; j++) {\r\n\t\t\t\t\t\t\t\t\tvar event = events[j]\r\n\t\t\t\t\t\t\t\t\tlistener._propertyChange(event.name, object)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tif (observer.addKey) {\r\n\t\t\t\t\t\t\tfor (var i = 0, l = listeners.length; i < l; i++) {\r\n\t\t\t\t\t\t\t\tvar listener = listeners[i]\r\n\t\t\t\t\t\t\t\tlistener.eachKey(function(key) {\r\n\t\t\t\t\t\t\t\t\tobserver.addKey(key)\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tregisterListener(object, variable)\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tremove: function() {\r\n\t\t\t\t\t\t\tderegisterListener(object, variable)\r\n\t\t\t\t\t\t\tif (!(--listeners.observerCount)) {\r\n\t\t\t\t\t\t\t\tlisteners.observer.remove()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tdone: function() {\r\n\t\t\t\t\t\t\t// deliver changes\r\n\t\t\t\t\t\t\tlang.deliverChanges(observer)\r\n\t\t\t\t\t\t\tthis.remove()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\t\r\n\t\r\n\t\tif (typeof Symbol !== 'undefined') {\r\n\t\t\tVariable.prototype[Symbol.iterator] = function() {\r\n\t\t\t\treturn this.valueOf()[Symbol.iterator]()\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tvar cacheNotFound = {}\r\n\t\tvar Caching = Variable.Caching = lang.compose(Variable, function(getValue, setValue) {\r\n\t\t\tif (getValue) {\r\n\t\t\t\tthis.getValue = getValue\r\n\t\t\t}\r\n\t\t\tif (setValue) {\r\n\t\t\t\tthis.setValue = setValue\r\n\t\t\t}\r\n\t\t}, {\r\n\t\t\tvalueOf: function(context) {\r\n\t\t\t\t// first check to see if we have the variable already computed\r\n\t\t\t\tif (this.cachedVersion === this.getVersion()) {\r\n\t\t\t\t\tif (this.contextMap) {\r\n\t\t\t\t\t\tvar contextualizedVariable = getMaterializedContextualInstance(this, context)\r\n\t\t\t\t\t\tif (contextualizedVariable) {\r\n\t\t\t\t\t\t\treturn contextualizedVariable.cachedValue\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn this.cachedValue\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar variable = this\r\n\t\r\n\t\t\t\tfunction withComputedValue(computedValue) {\r\n\t\t\t\t\tif (computedValue && computedValue.notifies && variable.dependents) {\r\n\t\t\t\t\t\tvariable.computedVariable = computedValue\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcomputedValue = variable.gotValue(computedValue, watchedContext)\r\n\t\t\t\t\tvar contextualizedVariable\r\n\t\t\t\t\tif (watchedContext && watchedContext.distinctSubject) {\r\n\t\t\t\t\t\t(variable.contextMap || (variable.contextMap = new WeakMap()))\r\n\t\t\t\t\t\t\t.set(watchedContext.distinctSubject,\r\n\t\t\t\t\t\t\t\tcontextualizedVariable = new ContextualizedVariable(variable, watchedContext.distinctSubject))\r\n\t\t\t\t\t\tcontext.distinctSubject = mergeSubject(context.distinctSubject, watchedContext.distinctSubject)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcontextualizedVariable = variable\r\n\t\t\t\t\t}\r\n\t\t\t\t\tcontextualizedVariable.cachedVersion = newVersion\r\n\t\t\t\t\tcontextualizedVariable.cachedValue = computedValue\r\n\t\t\t\t\treturn computedValue\r\n\t\t\t\t}\r\n\t\r\n\t\t\t\tvar watchedContext\r\n\t\t\t\tif (context) {\r\n\t\t\t\t\twatchedContext = new Context(context.subject)\r\n\t\t\t\t}\r\n\t\t\t\tvar newVersion = this.getVersion()\r\n\t\t\t\tvar computedValue = this.getValue(watchedContext)\r\n\t\t\t\tif (computedValue && computedValue.then) {\r\n\t\t\t\t\treturn computedValue.then(withComputedValue)\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn withComputedValue(computedValue)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\tfunction GetCache() {\r\n\t\t}\r\n\t\r\n\t\tvar Property = lang.compose(Variable, function Property(parent, key) {\r\n\t\t\tthis.parent = parent\r\n\t\t\tthis.key = key\r\n\t\t},\r\n\t\t{\r\n\t\t\tforDependencies: function(callback) {\r\n\t\t\t\tVariable.prototype.forDependencies.call(this, callback)\r\n\t\t\t\tcallback(this.parent)\r\n\t\t\t},\r\n\t\t\tvalueOf: function(context) {\r\n\t\t\t\tvar key = this.key\r\n\t\t\t\tvar property = this\r\n\t\t\t\tvar object = this.parent.valueOf(context)\r\n\t\t\t\tfunction gotValueAndListen(object) {\r\n\t\t\t\t\tif (property.dependents) {\r\n\t\t\t\t\t\tvar listeners = propertyListenersMap.get(object)\r\n\t\t\t\t\t\tif (listeners && listeners.observer && listeners.observer.addKey) {\r\n\t\t\t\t\t\t\tlisteners.observer.addKey(key)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar value = property.gotValue(object == null ? undefined : typeof object.get === 'function' ? object.get(key) : object[key])\r\n\t\t\t\t\treturn value\r\n\t\t\t\t}\r\n\t\t\t\tif (object && object.then) {\r\n\t\t\t\t\treturn when(object, gotValueAndListen)\r\n\t\t\t\t}\r\n\t\t\t\treturn gotValueAndListen(object)\r\n\t\t\t},\r\n\t\t\tput: function(value, context) {\r\n\t\t\t\treturn this._changeValue(context, RequestChange, value)\r\n\t\t\t},\r\n\t\t\tparentUpdated: function(updateEvent, context) {\r\n\t\t\t\treturn Variable.prototype.updated.call(this, updateEvent, this.parent, context)\r\n\t\t\t},\r\n\t\t\tupdated: function(updateEvent, by, context) {\r\n\t\t\t\tif (updateEvent = Variable.prototype.updated.call(this, updateEvent, by, context)) {\r\n\t\t\t\t\tthis.parent.updated(new PropertyChangeEvent(this.key, updateEvent), this, context)\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t_changeValue: function(context, type, newValue) {\r\n\t\t\t\tvar key = this.key\r\n\t\t\t\tvar parent = this.parent\r\n\t\t\t\tvar variable = this\r\n\t\t\t\treturn when(parent.valueOf(context), function(object) {\r\n\t\t\t\t\tif (object == null) {\r\n\t\t\t\t\t\t// nothing there yet, create an object to hold the new property\r\n\t\t\t\t\t\tvar response = parent.put(object = typeof key == 'number' ? [] : {}, context)\r\n\t\t\t\t\t}else if (typeof object != 'object') {\r\n\t\t\t\t\t\t// if the parent is not an object, we can't set anything (that will be retained)\r\n\t\t\t\t\t\treturn deny\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (type == RequestChange) {\r\n\t\t\t\t\t\tvar oldValue = typeof object.get === 'function' ? object.get(key) : object[key]\r\n\t\t\t\t\t\tif (oldValue === newValue) {\r\n\t\t\t\t\t\t\t// no actual change to make\r\n\t\t\t\t\t\t\treturn noChange\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (typeof object.set === 'function') {\r\n\t\t\t\t\t\t\tobject.set(key, newValue)\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tobject[key] = newValue\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvariable.updated(null, variable, context)\r\n\t\r\n\t\t\t\t\t// now notify any object listeners\r\n\t\t\t\t\tvar listeners = propertyListenersMap.get(object)\r\n\t\t\t\t\t// we need to do it before the other listeners, so we can update it before\r\n\t\t\t\t\t// we trigger a full clobbering of the object\r\n\t\t\t\t\tif (listeners) {\r\n\t\t\t\t\t\tlisteners = listeners.slice(0)\r\n\t\t\t\t\t\tfor (var i = 0, l = listeners.length; i < l; i++) {\r\n\t\t\t\t\t\t\tvar listener = listeners[i]\r\n\t\t\t\t\t\t\tif (listener !== parent) {\r\n\t\t\t\t\t\t\t\t// now go ahead and actually trigger the other listeners (but make sure we don't do the parent again)\r\n\t\t\t\t\t\t\t\tlistener._propertyChange(key, object, context, type)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tvalidate: function(target, schema) {\r\n\t\t\t\treturn this.parent.validate(target.valueOf(), schema)\r\n\t\t\t}\r\n\t\t})\r\n\t\tObject.defineProperty(Property.prototype, 'schema', {\r\n\t\t\tget: function() {\r\n\t\t\t\tvar parentSchemaProperties = this.parent.schema.properties\r\n\t\t\t\treturn parentSchemaProperties && parentSchemaProperties[this.key]\r\n\t\t\t},\r\n\t\t\tset: function(schema) {\r\n\t\t\t\t// have to repeat the override\r\n\t\t\t\tObject.defineProperty(this, 'schema', {\r\n\t\t\t\t\tvalue: schema\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t\tVariable.Property = Property\r\n\t\r\n\t\tvar Item = Variable.Item = lang.compose(Variable, function Item(value, content) {\r\n\t\t\tthis.value = value\r\n\t\t\tthis.collection = content\r\n\t\t}, {})\r\n\t\r\n\t\tvar Composite = Variable.Composite = lang.compose(Caching, function Composite(args) {\r\n\t\t\tthis.args = args\r\n\t\t}, {\r\n\t\t\tforDependencies: function(callback) {\r\n\t\t\t\t// depend on the args\r\n\t\t\t\tCaching.prototype.forDependencies.call(this, callback)\r\n\t\t\t\tvar args = this.args\r\n\t\t\t\tfor (var i = 0, l = args.length; i < l; i++) {\r\n\t\t\t\t\tvar arg = args[i]\r\n\t\t\t\t\tif (arg && arg.notifies) {\r\n\t\t\t\t\t\tcallback(arg)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\tupdated: function(updateEvent, by, context) {\r\n\t\t\t\tvar args = this.args\r\n\t\t\t\tif (by !== this.notifyingValue && updateEvent && updateEvent.type !== 'refresh') {\r\n\t\t\t\t\t// using a painful search instead of indexOf, because args may be an arguments object\r\n\t\t\t\t\tfor (var i = 0, l = args.length; i < l; i++) {\r\n\t\t\t\t\t\tvar arg = args[i]\r\n\t\t\t\t\t\tif (arg === by) {\r\n\t\t\t\t\t\t\t// if one of the args was updated, we need to do a full refresh (we can't compute differential events without knowledge of how the mapping function works)\r\n\t\t\t\t\t\t\tupdateEvent = new RefreshEvent()\r\n\t\t\t\t\t\t\tcontinue\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn Caching.prototype.updated.call(this, updateEvent, by, context)\r\n\t\t\t},\r\n\t\r\n\t\t\tgetUpdates: function(since) {\r\n\t\t\t\t// this always issues updates, nothing incremental can flow through it\r\n\t\t\t\tif (!since || since.version < getVersion()) {\r\n\t\t\t\t\treturn [new RefreshEvent()]\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\tgetVersion: function(context) {\r\n\t\t\t\tvar args = this.args\r\n\t\t\t\tvar version = Variable.prototype.getVersion.call(this, context)\r\n\t\t\t\tfor (var i = 0, l = args.length; i < l; i++) {\r\n\t\t\t\t\tvar arg = args[i]\r\n\t\t\t\t\tif (arg && arg.getVersion) {\r\n\t\t\t\t\t\tversion = Math.max(version, arg.getVersion(context))\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn version\r\n\t\t\t},\r\n\t\r\n\t\t\tgetValue: function(context) {\r\n\t\t\t\tvar results = []\r\n\t\t\t\tvar args = this.args\r\n\t\t\t\tfor (var i = 0, l = args.length; i < l; i++) {\r\n\t\t\t\t\tvar arg = args[i]\r\n\t\t\t\t\tresults[i] = arg && arg.valueOf(context)\r\n\t\t\t\t}\r\n\t\t\t\treturn whenAll(results, function(resolved) {\r\n\t\t\t\t\treturn resolved\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\t// a call variable is the result of a call\r\n\t\tvar Call = lang.compose(Composite, function Call(functionVariable, args) {\r\n\t\t\tthis.functionVariable = functionVariable\r\n\t\t\tthis.args = args\r\n\t\t}, {\r\n\t\t\tforDependencies: function(callback) {\r\n\t\t\t\t// depend on the args\r\n\t\t\t\tComposite.prototype.forDependencies.call(this, callback)\r\n\t\t\t\tif (this.functionVariable.notifies) {\r\n\t\t\t\t\tcallback(this.functionVariable)\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\r\n\t\t\tgetValue: function(context) {\r\n\t\t\t\tvar functionValue = this.functionVariable.valueOf(context)\r\n\t\t\t\tif (functionValue.then) {\r\n\t\t\t\t\tvar call = this\r\n\t\t\t\t\treturn functionValue.then(function(functionValue) {\r\n\t\t\t\t\t\treturn call.invoke(functionValue, call.args, context)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t\treturn this.invoke(functionValue, this.args, context)\r\n\t\t\t},\r\n\t\r\n\t\t\tgetVersion: function(context) {\r\n\t\t\t\t// TODO: shortcut if we are live and since equals this.lastUpdate\r\n\t\t\t\tvar argsVersion = Composite.prototype.getVersion.call(this, context)\r\n\t\t\t\tif (this.functionVariable.getVersion) {\r\n\t\t\t\t\treturn Math.max(argsVersion, this.functionVariable.getVersion(context))\r\n\t\t\t\t}\r\n\t\t\t\treturn argsVersion\r\n\t\t\t},\r\n\t\r\n\t\t\texecute: function(context) {\r\n\t\t\t\tvar call = this\r\n\t\t\t\treturn when(this.functionVariable.valueOf(context), function(functionValue) {\r\n\t\t\t\t\treturn call.invoke(functionValue, call.args, context, true)\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\r\n\t\t\tput: function(value, context) {\r\n\t\t\t\tvar call = this\r\n\t\t\t\treturn when(this.valueOf(context), function(originalValue) {\r\n\t\t\t\t\tif (originalValue === value) {\r\n\t\t\t\t\t\treturn noChange\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn when(call.functionVariable.valueOf(context), function(functionValue) {\r\n\t\t\t\t\t\treturn call.invoke(function() {\r\n\t\t\t\t\t\t\tif (functionValue.reverse) {\r\n\t\t\t\t\t\t\t\tfunctionValue.reverse.call(call, value, call.args, context)\r\n\t\t\t\t\t\t\t\treturn Variable.prototype.put.call(call, value, context)\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\treturn deny\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}, call.args, context)\r\n\t\t\t\t\t});\t\t\t\t\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tinvoke: function(functionValue, args, context, observeArguments) {\r\n\t\t\t\tvar instance = this.functionVariable.parent\r\n\t\t\t\tif (functionValue.handlesContext) {\r\n\t\t\t\t\treturn functionValue.apply(instance, args, context)\r\n\t\t\t\t}else{\r\n\t\t\t\t\tvar results = []\r\n\t\t\t\t\tfor (var i = 0, l = args.length; i < l; i++) {\r\n\t\t\t\t\t\tvar arg = args[i]\r\n\t\t\t\t\t\tresults[i] = arg && arg.valueOf(context)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tinstance = instance && instance.valueOf(context)\r\n\t\t\t\t\tif (functionValue.handlesPromises) {\r\n\t\t\t\t\t\treturn functionValue.apply(instance, results, context)\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\t// include the instance in whenAll\r\n\t\t\t\t\t\tresults.push(instance)\r\n\t\t\t\t\t\t// wait for the values to be received\r\n\t\t\t\t\t\treturn whenAll(results, function(inputs) {\r\n\t\t\t\t\t\t\tif (observeArguments) {\r\n\t\t\t\t\t\t\t\tvar handles = []\r\n\t\t\t\t\t\t\t\tfor (var i = 0, l = inputs.length; i < l; i++) {\r\n\t\t\t\t\t\t\t\t\tvar input = inputs[i]\r\n\t\t\t\t\t\t\t\t\tif (input && typeof input === 'object') {\r\n\t\t\t\t\t\t\t\t\t\thandles.push(observe(input))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tvar instance = inputs.pop()\r\n\t\t\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\t\t\tvar result = functionValue.apply(instance, inputs, context)\r\n\t\t\t\t\t\t\t\t}finally{\r\n\t\t\t\t\t\t\t\t\twhen(result, function() {\r\n\t\t\t\t\t\t\t\t\t\tfor (var i = 0; i < l; i++) {\r\n\t\t\t\t\t\t\t\t\t\t\thandles[i].done()\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\treturn result\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar instance = inputs.pop()\r\n\t\t\t\t\t\t\treturn functionValue.apply(instance, inputs, context)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tsetReverse: function(reverse) {\r\n\t\t\t\tthis.functionVariable.valueOf().reverse = reverse\r\n\t\t\t\treturn this\r\n\t\t\t}\r\n\t\t})\r\n\t\tVariable.Call = Call\r\n\t\r\n\t\tvar ContextualizedVariable = lang.compose(Variable, function ContextualizedVariable(Source, subject) {\r\n\t\t\tthis.constructor = Source\r\n\t\t\tthis.subject = subject\r\n\t\t}, {\r\n\t\t\tvalueOf: function() {\r\n\t\t\t\treturn this.constructor.valueOf(new Context(this.subject))\r\n\t\t\t},\r\n\t\r\n\t\t\tput: function(value) {\r\n\t\t\t\treturn this.constructor.put(value, new Context(this.subject))\r\n\t\t\t},\r\n\t\t\tparentUpdated: function(event, context) {\r\n\t\t\t\t// if we receive an outside update, send it to the constructor\r\n\t\t\t\tthis.constructor.updated(event, this.parent, this.context)\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\r\n\t\tfunction arrayMethod(name, sendUpdates) {\r\n\t\t\tVariable.prototype[name] = function() {\r\n\t\t\t\tvar args = arguments\r\n\t\t\t\tvar variable = this\r\n\t\t\t\treturn when(this.cachedValue || this.valueOf(), function(array) {\r\n\t\t\t\t\tif (!array) {\r\n\t\t\t\t\t\tvariable.put(array = [])\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// try to use own method, but if not available, use Array's methods\r\n\t\t\t\t\tvar result = array[name] ? array[name].apply(array, args) : Array.prototype[name].apply(array, args)\r\n\t\t\t\t\tvariable.updateVersion()\r\n\t\t\t\t\tif (sendUpdates) {\r\n\t\t\t\t\t\tsendUpdates.call(variable, args, result, array)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvariable.cachedVersion = variable.version // update the cached version so it doesn't need to be recomputed\r\n\t\t\t\t\tvariable.cachedValue = array\r\n\t\t\t\t\treturn result\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t\tarrayMethod('splice', function(args, result) {\r\n\t\t\tfor (var i = 0; i < args[1]; i++) {\r\n\t\t\t\tthis.updated(new DeleteEvent({\r\n\t\t\t\t\tpreviousIndex: args[0],\r\n\t\t\t\t\toldValue: result[i],\r\n\t\t\t\t\tmodifier: this\r\n\t\t\t\t}), this)\r\n\t\t\t}\r\n\t\t\tfor (i = 2, l = args.length; i < l; i++) {\r\n\t\t\t\tthis.updated(new AddEvent({\r\n\t\t\t\t\tvalue: args[i],\r\n\t\t\t\t\tindex: args[0] + i - 2,\r\n\t\t\t\t\tmodifier: this\r\n\t\t\t\t}), this)\r\n\t\t\t}\r\n\t\t})\r\n\t\tarrayMethod('push', function(args, result) {\r\n\t\t\tfor (var i = 0, l = args.length; i < l; i++) {\r\n\t\t\t\tvar arg = args[i]\r\n\t\t\t\tthis.updated(new AddEvent({\r\n\t\t\t\t\tindex: result - i - 1,\r\n\t\t\t\t\tvalue: arg,\r\n\t\t\t\t\tmodifier: this\r\n\t\t\t\t}), this)\r\n\t\t\t}\r\n\t\t})\r\n\t\tarrayMethod('unshift', function(args, result) {\r\n\t\t\tfor (var i = 0, l = args.length; i < l; i++) {\r\n\t\t\t\tvar arg = args[i]\r\n\t\t\t\tthis.updated(new AddEvent({\r\n\t\t\t\t\tindex: i,\r\n\t\t\t\t\tvalue: arg,\r\n\t\t\t\t\tmodifier: this\r\n\t\t\t\t}), this)\r\n\t\t\t}\r\n\t\t})\r\n\t\tarrayMethod('shift', function(args, results) {\r\n\t\t\tthis.updated(new DeleteEvent({\r\n\t\t\t\tpreviousIndex: 0,\r\n\t\t\t\tmodifier: this\r\n\t\t\t}), this)\r\n\t\t})\r\n\t\tarrayMethod('pop', function(args, results, array) {\r\n\t\t\tthis.updated(new DeleteEvent({\r\n\t\t\t\tpreviousIndex: array.length,\r\n\t\t\t\tmodifier: this\r\n\t\t\t}), this)\r\n\t\t})\r\n\t\r\n\t\tfunction iterateMethod(method) {\r\n\t\t\tVariable.prototype[method] = function() {\r\n\t\t\t\treturn new IterativeMethod(this, method, arguments)\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\titerateMethod('filter')\r\n\t\titerateMethod('map')\r\n\t\titerateMethod('reduce')\r\n\t\titerateMethod('reduceRight')\r\n\t\titerateMethod('some')\r\n\t\titerateMethod('every')\r\n\t\titerateMethod('slice')\r\n\t\t\r\n\t\tvar IterativeMethod = lang.compose(Composite, function(source, method, args) {\r\n\t\t\tthis.source = source\r\n\t\t\t// source.interestWithin = true\r\n\t\t\tthis.method = method\r\n\t\t\tthis.args = args\r\n\t\t}, {\r\n\t\t\tgetValue: function(context) {\r\n\t\t\t\tvar method = this.method\r\n\t\t\t\tvar args = this.args\r\n\t\t\t\tvar variable = this\r\n\t\t\t\treturn when(this.source.valueOf(context), function(array) {\r\n\t\t\t\t\tif (array && array.forEach) {\r\n\t\t\t\t\t\tif (variable.dependents) {\r\n\t\t\t\t\t\t\tvar contextualizedVariable\r\n\t\t\t\t\t\t\tif (context) {\r\n\t\t\t\t\t\t\t\tvar contextMap = variable.contextMap || (variable.contextMap = new WeakMap())\r\n\t\t\t\t\t\t\t\tif (contextMap.has(context.distinctSubject)) {\r\n\t\t\t\t\t\t\t\t\tcontextualizedVariable = contextMap.get(context.distinctSubject)\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\tcontextMap.set(context.distinctSubject, contextualizedVariable = new ContextualizedVariable(variable, context.distinctSubject))\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tcontextualizedVariable = variable\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (method === 'map'){\r\n\t\t\t\t\t\t\t// fast path, and special behavior for map\r\n\t\t\t\t\t\t\treturn args[0](array)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// if not an array convert to an array\r\n\t\t\t\t\t\tarray = [array]\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// apply method\r\n\t\t\t\t\treturn array[method].apply(array, args)\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tupdated: function(event, by, context) {\r\n\t\t\t\tif (!event || event.modifier === this || (event.modifier && event.modifier.constructor === this)) {\r\n\t\t\t\t\treturn Composite.prototype.updated.call(this, event, by, context)\r\n\t\t\t\t}\r\n\t\t\t\tvar propagatedEvent = event.type === 'refresh' ? event : // always propagate refreshes\r\n\t\t\t\t\tthis[this.method + 'Updated'] ? this[this.method + 'Updated'](event, context) : // if we have an updated handler, use it\r\n\t\t\t\t\tnew RefreshEvent() // else recompute the array method\r\n\t\t\t\t// TODO: make sure we normalize the event structure\r\n\t\t\t\tif (propagatedEvent) {\r\n\t\t\t\t\tComposite.prototype.updated.call(this, propagatedEvent, by, context)\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tfilterUpdated: function(event, context) {\r\n\t\t\t\tvar contextualizedVariable = getMaterializedContextualInstance(this, context) || this\r\n\t\t\t\tif (event.type === 'delete') {\r\n\t\t\t\t\tvar index = contextualizedVariable.cachedValue.indexOf(event.oldValue)\r\n\t\t\t\t\tif (index > -1) {\r\n\t\t\t\t\t\tcontextualizedVariable.splice(index, 1)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (event.type === 'add') {\r\n\t\t\t\t\tif ([event.value].filter(this.args[0]).length > 0) {\r\n\t\t\t\t\t\tcontextualizedVariable.push(event.value)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else if (event.type === 'update') {\r\n\t\t\t\t\tvar index = contextualizedVariable.cachedValue.indexOf(event.object)\r\n\t\t\t\t\tvar matches = [event.object].filter(this.args[0]).length > 0\r\n\t\t\t\t\tif (index > -1) {\r\n\t\t\t\t\t\tif (matches) {\r\n\t\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\t\ttype: 'updated',\r\n\t\t\t\t\t\t\t\tobject: event.object,\r\n\t\t\t\t\t\t\t\tindex: index\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcontextualizedVariable.splice(index, 1)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\telse {\r\n\t\t\t\t\t\tif (matches) {\r\n\t\t\t\t\t\t\tcontextualizedVariable.push(event.object)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// else nothing mactches\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn event\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tmapUpdated: function(event, context) {\r\n\t\t\t\tvar contextualizedVariable = getMaterializedContextualInstance(this, context) || this\r\n\t\t\t\tif (event.type === 'delete') {\r\n\t\t\t\t\tcontextualizedVariable.splice(event.previousIndex, 1)\r\n\t\t\t\t} else if (event.type === 'add') {\r\n\t\t\t\t\tcontextualizedVariable.push(this.args[0].call(this.args[1], event.value))\r\n\t\t\t\t} else if (event.type === 'update') {\r\n\t\t\t\t\tvar index = contextualizedVariable.cachedValue.indexOf(event.object)\r\n\t\t\t\t\tvar matches = [event.object].filter(this.args[0]).length > 0\r\n\t\t\t\t\tcontextualizedVariable.splice(index, 1, this.args[0].call(this.args[1], event.value))\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn event\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t// TODO: Create specialized updated handlers for faster recomputation of other array derivatives\r\n\t\t\tforDependencies: function(callback) {\r\n\t\t\t\t// depend on the args\r\n\t\t\t\tComposite.prototype.forDependencies.call(this, callback)\r\n\t\t\t\tcallback(this.source)\r\n\t\t\t},\r\n\t\t\tgetVersion: function(context) {\r\n\t\t\t\treturn Math.max(Composite.prototype.getVersion.call(this, context), this.source.getVersion(context))\r\n\t\t\t}\t\t\r\n\t\t})\r\n\t\r\n\t\r\n\t\tvar getValue\r\n\t\tvar GeneratorVariable = Variable.GeneratorVariable = lang.compose(Variable.Composite, function ReactiveGenerator(generator){\r\n\t\t\tthis.generator = generator\r\n\t\t\tthis.args = []\r\n\t\t}, {\r\n\t\t\tgetValue: getValue = function(context, resuming) {\r\n\t\t\t\tvar lastValue\r\n\t\t\t\tvar i\r\n\t\t\t\tvar generatorIterator\r\n\t\t\t\tvar isThrowing\r\n\t\t\t\tif (resuming) {\r\n\t\t\t\t\t// resuming from a promise\r\n\t\t\t\t\tgeneratorIterator = resuming.iterator\r\n\t\t\t\t\ti = resuming.i\r\n\t\t\t\t\tlastValue = resuming.value\r\n\t\t\t\t\tisThrowing = resuming.isThrowing\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// a fresh start\r\n\t\t\t\t\ti = 0\r\n\t\t\t\t\tgeneratorIterator = this.generator()\t\t\t\t\r\n\t\t\t\t}\r\n\t\t\t\t\r\n\t\t\t\tvar args = this.args\r\n\t\t\t\tdo {\r\n\t\t\t\t\tvar stepReturn = generatorIterator[isThrowing ? 'throw' : 'next'](lastValue)\r\n\t\t\t\t\tif (stepReturn.done) {\r\n\t\t\t\t\t\treturn stepReturn.value\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar nextVariable = stepReturn.value\r\n\t\t\t\t\t// compare with the arguments from the last\r\n\t\t\t\t\t// execution to see if they are the same\r\n\t\t\t\t\tif (args[i] !== nextVariable) {\r\n\t\t\t\t\t\tif (args[i]) {\r\n\t\t\t\t\t\t\targs[i].stopNotifies(this)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// subscribe if it is a variable\r\n\t\t\t\t\t\tif (nextVariable && nextVariable.notifies) {\r\n\t\t\t\t\t\t\tnextVariable.notifies(this)\r\n\t\t\t\t\t\t\tthis.args[i] = nextVariable\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tthis.args[i] = null\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\ti++\r\n\t\t\t\t\tlastValue = nextVariable && nextVariable.valueOf(context)\r\n\t\t\t\t\tif (lastValue && lastValue.then) {\r\n\t\t\t\t\t\t// if it is a promise, we will wait on it\r\n\t\t\t\t\t\tvar variable = this\r\n\t\t\t\t\t\t// and return the promise so that the getValue caller can wait on this\r\n\t\t\t\t\t\treturn lastValue.then(function(value) {\r\n\t\t\t\t\t\t\treturn getValue.call(variable, context, {\r\n\t\t\t\t\t\t\t\ti: i,\r\n\t\t\t\t\t\t\t\titerator: generatorIterator,\r\n\t\t\t\t\t\t\t\tvalue: value\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}, function(error) {\r\n\t\t\t\t\t\t\treturn getValue.call(variable, context, {\r\n\t\t\t\t\t\t\t\ti: i,\r\n\t\t\t\t\t\t\t\titerator: generatorIterator,\r\n\t\t\t\t\t\t\t\tvalue: error,\r\n\t\t\t\t\t\t\t\tisThrowing: true\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t} while(true)\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\tvar Validating = lang.compose(Caching, function(target) {\r\n\t\t\tthis.target = target\r\n\t\t}, {\r\n\t\t\tforDependencies: function(callback) {\r\n\t\t\t\tCaching.prototype.forDependencies.call(this, callback)\r\n\t\t\t\tcallback(this.target)\r\n\t\t\t},\r\n\t\t\tgetVersion: function(context) {\r\n\t\t\t\treturn Math.max(Variable.prototype.getVersion.call(this, context), this.target.getVersion(context))\r\n\t\t\t},\r\n\t\t\tgetValue: function(context) {\r\n\t\t\t\tvar target = this.target\r\n\t\t\t\treturn target.validate(target, target.schema)\r\n\t\t\t}\r\n\t\t})\r\n\t\r\n\t\tfunction validate(target) {\r\n\t\t\tvar schemaForObject = schema(target)\r\n\t\t\treturn new Validating(target, schemaForObject)\r\n\t\t}\r\n\t\tVariable.deny = deny\r\n\t\tVariable.noChange = noChange\r\n\t\tfunction addFlag(name) {\r\n\t\t\tVariable[name] = function(functionValue) {\r\n\t\t\t\tfunctionValue[name] = true\r\n\t\t\t}\r\n\t\t}\r\n\t\taddFlag(Variable, 'handlesContext')\r\n\t\taddFlag(Variable, 'handlesPromises')\r\n\t\r\n\t\tfunction objectUpdated(object) {\r\n\t\t\t// simply notifies any subscribers to an object, that it has changed\r\n\t\t\tvar listeners = propertyListenersMap.get(object)\r\n\t\t\tif (listeners) {\r\n\t\t\t\tfor (var i = 0, l = listeners.length; i < l; i++) {\r\n\t\t\t\t\tlisteners[i]._propertyChange(null, object)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tfunction all(array) {\r\n\t\t\t// This is intended to mirror Promise.all. It actually takes\r\n\t\t\t// an iterable, but for now we are just looking for array-like\r\n\t\t\tif (array.length > -1) {\r\n\t\t\t\treturn new Composite(array)\r\n\t\t\t}\r\n\t\t\tif (arguments.length > 1) {\r\n\t\t\t\t// support multiple arguments as an array\r\n\t\t\t\treturn new Composite(arguments)\r\n\t\t\t}\r\n\t\t\tif (typeof array === 'object') {\r\n\t\t\t\t// allow an object as a hash to be mapped\r\n\t\t\t\tvar keyMapping = []\r\n\t\t\t\tvar valueArray = []\r\n\t\t\t\tfor (var key in array) {\r\n\t\t\t\t\tkeyMapping.push(key)\r\n\t\t\t\t\tvalueArray.push(array[key])\r\n\t\t\t\t}\r\n\t\t\t\treturn new Variable(function(results) {\r\n\t\t\t\t\tvar resultObject = {}\r\n\t\t\t\t\tfor (var i = 0; i < results.length; i++) {\r\n\t\t\t\t\t\tresultObject[keyMapping[i]] = results[i]\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn resultObject\r\n\t\t\t\t}).apply(null, valueArray)\r\n\t\t\t}\r\n\t\t\tthrow new TypeError('Variable.all requires an array')\r\n\t\t}\r\n\t\r\n\t\tfunction hasOwn(Target, createForInstance) {\r\n\t\t\tvar ownedClasses = this.ownedClasses || (this.ownedClasses = new WeakMap())\r\n\t\t\t// TODO: assign to super classes\r\n\t\t\tvar Class = this\r\n\t\t\townedClasses.set(Target, createForInstance || function() { return new Target() })\r\n\t\t\treturn this\r\n\t\t}\r\n\t\tfunction getForClass(subject, Target) {\r\n\t\t\tvar createInstance = subject.constructor.ownedClasses && subject.constructor.ownedClasses.get(Target)\r\n\t\t\tif (createInstance) {\r\n\t\t\t\tvar ownedInstances = subject.ownedInstances || (subject.ownedInstances = new WeakMap())\r\n\t\t\t\tvar instance = ownedInstances.get(Target)\r\n\t\t\t\tif (!instance) {\r\n\t\t\t\t\townedInstances.set(Target, instance = createInstance(subject))\r\n\t\t\t\t\tinstance.subject = subject\r\n\t\t\t\t}\r\n\t\t\t\treturn instance\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction generalizeClass() {\r\n\t\t\tvar prototype = this.prototype\r\n\t\t\tvar prototypeNames = Object.getOwnPropertyNames(prototype)\r\n\t\t\tfor(var i = 0, l = prototypeNames.length; i < l; i++) {\r\n\t\t\t\tvar name = prototypeNames[i]\r\n\t\t\t\tObject.defineProperty(this, name, getGeneralizedDescriptor(Object.getOwnPropertyDescriptor(prototype, name), name, this))\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction getGeneralizedDescriptor(descriptor, name, Class) {\r\n\t\t\tif (typeof descriptor.value === 'function') {\r\n\t\t\t\treturn {\r\n\t\t\t\t\tvalue: generalizeMethod(Class, name)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn descriptor\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction generalizeMethod(Class, name) {\r\n\t\t\t// I think we can just rely on `this`, but we could use the argument:\r\n\t\t\t// function(possibleEvent) {\r\n\t\t\t// \tvar target = possibleEvent && possibleEvent.target\r\n\t\t\tvar method = Class[name] = function() {\r\n\t\t\t\tvar instance = Class.for(this)\r\n\t\t\t\treturn instance[name].apply(instance, arguments)\r\n\t\t\t}\r\n\t\t\tmethod.for = function(context) {\r\n\t\t\t\tvar instance = Class.for(context)\r\n\t\t\t\treturn function() {\r\n\t\t\t\t\treturn instance[name].apply(instance, arguments)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn method\r\n\t\t}\r\n\t\r\n\t\tvar defaultContext = {\r\n\t\t\tname: 'Default context',\r\n\t\t\tdescription: 'This object is the default context for classes, corresponding to a singleton instance of that class',\r\n\t\t\tconstructor: {\r\n\t\t\t\tgetForClass: function(subject, Class) {\r\n\t\t\t\t\treturn Class.defaultInstance\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcontains: function() {\r\n\t\t\t\treturn true // contains everything\r\n\t\t\t}\r\n\t\t}\r\n\t\tfunction instanceForContext(Class, context) {\r\n\t\t\tif (!context) {\r\n\t\t\t\tthrow new TypeError('Accessing a generalized class without context to resolve to an instance, call for(context) (where context is an element or related variable instance) on your variable first')\r\n\t\t\t}\r\n\t\t\tvar instance = context.subject.constructor.getForClass && context.subject.constructor.getForClass(context.subject, Class) || Class.defaultInstance\r\n\t\t\tcontext.distinctSubject = mergeSubject(context.distinctSubject, instance.subject)\r\n\t\t\treturn instance\r\n\t\t}\r\n\t\t// a variable inheritance change goes through its own prototype, so classes/constructor\r\n\t\t// can be used as variables as well\r\n\t\tfor (var key in VariablePrototype) {\r\n\t\t\tObject.defineProperty(Variable, key, Object.getOwnPropertyDescriptor(VariablePrototype, key))\r\n\t\t}\r\n\t\tVariable.valueOf = function(context) {\r\n\t\t\t// contextualized getValue\r\n\t\t\treturn instanceForContext(this, context).valueOf()\r\n\t\t}\r\n\t\tVariable.setValue = function(value, context) {\r\n\t\t\t// contextualized setValue\r\n\t\t\treturn instanceForContext(this, context).put(value)\r\n\t\t}\r\n\t\tVariable.getForClass = getForClass\r\n\t\tVariable.generalize = generalizeClass\r\n\t\tVariable.call = Function.prototype.call // restore these\r\n\t\tVariable.apply = Function.prototype.apply\r\n\t\tVariable.extend = function(properties) {\r\n\t\t\t// TODO: handle arguments\r\n\t\t\tvar Base = this\r\n\t\t\tfunction ExtendedVariable() {\r\n\t\t\t\tif (this instanceof ExtendedVariable) {\r\n\t\t\t\t\treturn Base.apply(this, arguments)\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn ExtendedVariable.extend(properties)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar prototype = ExtendedVariable.prototype = Object.create(this.prototype)\r\n\t\t\tExtendedVariable.prototype.constructor = ExtendedVariable\r\n\t\t\tsetPrototypeOf(ExtendedVariable, this)\r\n\t\t\tfor (var key in properties) {\r\n\t\t\t\tvar descriptor = Object.getOwnPropertyDescriptor(properties, key)\r\n\t\t\t\tObject.defineProperty(prototype, key, descriptor)\r\n\t\t\t\tObject.defineProperty(ExtendedVariable, key, getGeneralizedDescriptor(descriptor, key, ExtendedVariable))\r\n\t\t\t}\r\n\t\t\tif (properties && properties.hasOwn) {\r\n\t\t\t\thasOwn.call(ExtendedVariable, properties.hasOwn)\r\n\t\t\t}\r\n\t\t\treturn ExtendedVariable\r\n\t\t}\r\n\t\tObject.defineProperty(Variable, 'defaultInstance', {\r\n\t\t\tget: function() {\r\n\t\t\t\treturn this.hasOwnProperty('_defaultInstance') ?\r\n\t\t\t\t\tthis._defaultInstance : (\r\n\t\t\t\t\t\tthis._defaultInstance = new this(),\r\n\t\t\t\t\t\tthis._defaultInstance.subject = defaultContext,\r\n\t\t\t\t\t\tthis._defaultInstance)\r\n\t\t\t}\r\n\t\t})\r\n\t\tVariable.hasOwn = hasOwn\r\n\t\tVariable.all = all\r\n\t\tVariable.objectUpdated = objectUpdated\r\n\t\tVariable.observe = function() {\r\n\t\t\tthrow new Error('Use variable.observeObject() instead')\r\n\t\t}\r\n\t\r\n\t\treturn Variable\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function () {\r\n\t\tvar getPrototypeOf = Object.getPrototypeOf || (function(base) { return base.__proto__ })\r\n\t\tvar setPrototypeOf = Object.setPrototypeOf || (function(base, proto) { base.__proto__ = proto})\r\n\t\tvar hasFeatures = {\r\n\t\t\trequestAnimationFrame: typeof requestAnimationFrame != 'undefined',\r\n\t\t\tdefineProperty: Object.defineProperty && (function() {\r\n\t\t\t\ttry{\r\n\t\t\t\t\tObject.defineProperty({}, 't', {})\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}catch(e) {\r\n\t\t\t\t}\r\n\t\t\t})(),\r\n\t\t\tpromise: typeof Promise !== 'undefined',\r\n\t\t\tMutationObserver: typeof MutationObserver !== 'undefined',\r\n\t\t\t'WeakMap': typeof WeakMap === 'function'\r\n\t\t}\r\n\t\tfunction has(feature) {\r\n\t\t\treturn hasFeatures[feature]\r\n\t\t}\r\n\t\t// This is an polyfill for Object.observe with just enough functionality\r\n\t\t// for what Variables need\r\n\t\t// An observe function, with polyfile\r\n\t\tvar observe =\r\n\t\t\thas('defineProperty') ? \r\n\t\t\tfunction observe(target, listener) {\r\n\t\t\t\t/*for(var i in target) {\r\n\t\t\t\t\taddKey(i)\r\n\t\t\t\t}*/\r\n\t\t\t\tlistener.addKey = addKey\r\n\t\t\t\tlistener.remove = function() {\r\n\t\t\t\t\tlistener = null\r\n\t\t\t\t}\r\n\t\t\t\treturn listener\r\n\t\t\t\tfunction addKey(key) {\r\n\t\t\t\t\tvar keyFlag = 'key' + key\r\n\t\t\t\t\tif(this[keyFlag]) {\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tthis[keyFlag] = true\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar currentValue = target[key]\r\n\t\t\t\t\tvar targetAncestor = target\r\n\t\t\t\t\tvar descriptor\r\n\t\t\t\t\tdo {\r\n\t\t\t\t\t\tdescriptor = Object.getOwnPropertyDescriptor(targetAncestor, key)\r\n\t\t\t\t\t} while(!descriptor && (targetAncestor = getPrototypeOf(targetAncestor)))\r\n\t\r\n\t\t\t\t\tif(descriptor && descriptor.set) {\r\n\t\t\t\t\t\tvar previousSet = descriptor.set\r\n\t\t\t\t\t\tvar previousGet = descriptor.get\r\n\t\t\t\t\t\tObject.defineProperty(target, key, {\r\n\t\t\t\t\t\t\tget: function() {\r\n\t\t\t\t\t\t\t\treturn (currentValue = previousGet.call(this))\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tset: function(value) {\r\n\t\t\t\t\t\t\t\tpreviousSet.call(this, value)\r\n\t\t\t\t\t\t\t\tif(currentValue !== value) {\r\n\t\t\t\t\t\t\t\t\tcurrentValue = value\r\n\t\t\t\t\t\t\t\t\tif(listener) {\r\n\t\t\t\t\t\t\t\t\t\tlistener([{target: this, name: key}])\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tenumerable: descriptor.enumerable\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tObject.defineProperty(target, key, {\r\n\t\t\t\t\t\t\tget: function() {\r\n\t\t\t\t\t\t\t\treturn currentValue\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tset: function(value) {\r\n\t\t\t\t\t\t\t\tif(currentValue !== value) {\r\n\t\t\t\t\t\t\t\t\tcurrentValue = value\r\n\t\t\t\t\t\t\t\t\tif(listener) {\r\n\t\t\t\t\t\t\t\t\t\tlistener([{target: this, name: key}])\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\tenumerable: !descriptor || descriptor.enumerable\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} :\r\n\t\t\t// and finally a polling-based solution, for the really old browsers\r\n\t\t\tfunction(target, listener) {\r\n\t\t\t\tif(!timerStarted) {\r\n\t\t\t\t\ttimerStarted = true\r\n\t\t\t\t\tsetInterval(function() {\r\n\t\t\t\t\t\tfor(var i = 0, l = watchedObjects.length; i < l; i++) {\r\n\t\t\t\t\t\t\tdiff(watchedCopies[i], watchedObjects[i], listeners[i])\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, 20)\r\n\t\t\t\t}\r\n\t\t\t\tvar copy = {}\r\n\t\t\t\tfor(var i in target) {\r\n\t\t\t\t\tif(target.hasOwnProperty(i)) {\r\n\t\t\t\t\t\tcopy[i] = target[i]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\twatchedObjects.push(target)\r\n\t\t\t\twatchedCopies.push(copy)\r\n\t\t\t\tlisteners.push(listener)\r\n\t\t\t}\r\n\t\tvar queuedListeners\r\n\t\tfunction queue(listener, object, name) {\r\n\t\t\tif(queuedListeners) {\r\n\t\t\t\tif(queuedListeners.indexOf(listener) === -1) {\r\n\t\t\t\t\tqueuedListeners.push(listener)\r\n\t\t\t\t}\r\n\t\t\t}else{\r\n\t\t\t\tqueuedListeners = [listener]\r\n\t\t\t\tlang.nextTurn(function() {\r\n\t\t\t\t\tqueuedListeners.forEach(function(listener) {\r\n\t\t\t\t\t\tvar events = []\r\n\t\t\t\t\t\tlistener.properties.forEach(function(property) {\r\n\t\t\t\t\t\t\tevents.push({target: listener.object, name: property})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\tlistener(events)\r\n\t\t\t\t\t\tlistener.object = null\r\n\t\t\t\t\t\tlistener.properties = null\r\n\t\t\t\t\t})\r\n\t\t\t\t\tqueuedListeners = null\r\n\t\t\t\t}, 0)\r\n\t\t\t}\r\n\t\t\tlistener.object = object\r\n\t\t\tvar properties = listener.properties || (listener.properties = [])\r\n\t\t\tif(properties.indexOf(name) === -1) {\r\n\t\t\t\tproperties.push(name)\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar unobserve = has('observe') ? Object.unobserve :\r\n\t\t\tfunction(target, listener) {\r\n\t\t\t\tif(listener.remove) {\r\n\t\t\t\t\tlistener.remove()\r\n\t\t\t\t}\r\n\t\t\t\tfor(var i = 0, l = watchedObjects.length; i < l; i++) {\r\n\t\t\t\t\tif(watchedObjects[i] === target && listeners[i] === listener) {\r\n\t\t\t\t\t\twatchedObjects.splice(i, 1)\r\n\t\t\t\t\t\twatchedCopies.splice(i, 1)\r\n\t\t\t\t\t\tlisteners.splice(i, 1)\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\tvar watchedObjects = []\r\n\t\tvar watchedCopies = []\r\n\t\tvar listeners = []\r\n\t\tvar timerStarted = false\r\n\t\tfunction diff(previous, current, callback) {\r\n\t\t\t// TODO: keep an array of properties for each watch for faster iteration\r\n\t\t\tvar queued\r\n\t\t\tfor(var i in previous) {\r\n\t\t\t\tif(previous.hasOwnProperty(i) && previous[i] !== current[i]) {\r\n\t\t\t\t\t// a property has changed\r\n\t\t\t\t\tprevious[i] = current[i]\r\n\t\t\t\t\t(queued || (queued = [])).push({name: i})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tfor(var i in current) {\r\n\t\t\t\tif(current.hasOwnProperty(i) && !previous.hasOwnProperty(i)) {\r\n\t\t\t\t\t// a property has been added\r\n\t\t\t\t\tprevious[i] = current[i]\r\n\t\t\t\t\t(queued || (queued = [])).push({name: i})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(queued) {\r\n\t\t\t\tcallback(queued)\r\n\t\t\t}\r\n\t\t}\r\n\t\r\n\t\tvar id = 1\r\n\t\t// a function that returns a function, to stop JSON serialization of an\r\n\t\t// object\r\n\t\tfunction toJSONHidden() {\r\n\t\t\treturn toJSONHidden\r\n\t\t}\r\n\t\t// An object that will be hidden from JSON serialization\r\n\t\tvar Hidden = function () {\r\n\t\t}\r\n\t\tHidden.prototype.toJSON = toJSONHidden\r\n\t\r\n\t\tvar lang = {\r\n\t\t\trequestAnimationFrame: has('requestAnimationFrame') ? requestAnimationFrame :\r\n\t\t\t\t(function() {\r\n\t\t\t\t\tvar toRender = []\r\n\t\t\t\t\tvar queued = false\r\n\t\t\t\t\tfunction processAnimationFrame() {\r\n\t\t\t\t\t\tfor (var i = 0; i < toRender.length; i++) {\r\n\t\t\t\t\t\t\ttoRender[i]()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttoRender = []\r\n\t\t\t\t\t\tqueued = false\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfunction requestAnimationFrame(renderer) {\r\n\t\t\t\t\t \tif (!queued) {\r\n\t\t\t\t\t\t\tsetTimeout(processAnimationFrame)\r\n\t\t\t\t\t\t\tqueued = true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\ttoRender.push(renderer)\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn requestAnimationFrame\r\n\t\t\t\t})(),\r\n\t\t\tPromise: has('promise') ? Promise : (function() {\r\n\t\t\t\tfunction Promise(execute) {\r\n\t\t\t\t\tvar isResolved, resolution, errorResolution\r\n\t\t\t\t\tvar queue = 0\r\n\t\t\t\t\tfunction resolve(value) {\r\n\t\t\t\t\t\t// resolve function\r\n\t\t\t\t\t\tif(value && value.then) {\r\n\t\t\t\t\t\t\t// received a promise, wait for it\r\n\t\t\t\t\t\t\tvalue.then(resolve, reject)\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\tresolution = value\r\n\t\t\t\t\t\t\tfinished()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfunction reject(error) {\r\n\t\t\t\t\t\t// reject function\r\n\t\t\t\t\t\terrorResolution = error\r\n\t\t\t\t\t\tfinished()\r\n\t\t\t\t\t}\r\n\t\t\t\t\texecute(resolve, reject)\r\n\t\t\t\t\tfunction finished() {\r\n\t\t\t\t\t\tisResolved = true\r\n\t\t\t\t\t\tfor(var i = 0, l = queue.length; i < l; i++) {\r\n\t\t\t\t\t\t\tqueue[i]()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t// clean out the memory\r\n\t\t\t\t\t\tqueue = 0\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tthen: function(callback, errback) {\r\n\t\t\t\t\t\t\treturn new Promise(function(resolve, reject) {\r\n\t\t\t\t\t\t\t\tfunction handle() {\r\n\t\t\t\t\t\t\t\t\t// promise fulfilled, call the appropriate callback\r\n\t\t\t\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\t\t\t\tif(errorResolution && !errback) {\r\n\t\t\t\t\t\t\t\t\t\t\t// errors without a handler flow through\r\n\t\t\t\t\t\t\t\t\t\t\treject(errorResolution)\r\n\t\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\t\t// resolve to the callback's result\r\n\t\t\t\t\t\t\t\t\t\t\tresolve(errorResolution ?\r\n\t\t\t\t\t\t\t\t\t\t\t\terrback(errorResolution) :\r\n\t\t\t\t\t\t\t\t\t\t\t\tcallback ?\r\n\t\t\t\t\t\t\t\t\t\t\t\t\tcallback(resolution) : resolution)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}catch(newError) {\r\n\t\t\t\t\t\t\t\t\t\t// caught an error, reject the returned promise\r\n\t\t\t\t\t\t\t\t\t\treject(newError)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\tif(isResolved) {\r\n\t\t\t\t\t\t\t\t\t// already resolved, immediately handle\r\n\t\t\t\t\t\t\t\t\thandle()\r\n\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t(queue || (queue = [])).push(handle)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn Promise\r\n\t\t\t}()),\r\n\t\r\n\t\t\tWeakMap: has('WeakMap') ? WeakMap :\r\n\t\t \tfunction (values, name) {\r\n\t\t \t\tvar mapProperty = '__' + (name || '') + id++\r\n\t\t \t\treturn has('defineProperty') ?\r\n\t\t \t\t{\r\n\t\t \t\t\tget: function (key) {\r\n\t\t \t\t\t\treturn key[mapProperty]\r\n\t\t \t\t\t},\r\n\t\t \t\t\tset: function (key, value) {\r\n\t\t \t\t\t\tObject.defineProperty(key, mapProperty, {\r\n\t\t \t\t\t\t\tvalue: value,\r\n\t\t \t\t\t\t\tenumerable: false\r\n\t\t \t\t\t\t})\r\n\t\t \t\t\t}\r\n\t\t \t\t} :\r\n\t\t \t\t{\r\n\t\t \t\t\tget: function (key) {\r\n\t\t \t\t\t\tvar intermediary = key[mapProperty]\r\n\t\t \t\t\t\treturn intermediary && intermediary.value\r\n\t\t \t\t\t},\r\n\t\t \t\t\tset: function (key, value) {\r\n\t\t \t\t\t\t// we use an intermediary that is hidden from JSON serialization, at least\r\n\t\t \t\t\t\tvar intermediary = key[mapProperty] || (key[mapProperty] = new Hidden())\r\n\t\t \t\t\t\tintermediary.value = value\r\n\t\t \t\t\t}\r\n\t\t \t\t}\r\n\t\t \t},\r\n\t\r\n\t\t\tobserve: observe,\r\n\t\t\tunobserve: unobserve,\r\n\t\t\twhen: function(value, callback, errorHandler) {\r\n\t\t\t\treturn value && value.then ?\r\n\t\t\t\t\t(value.then(callback, errorHandler) || value) : callback(value)\r\n\t\t\t},\r\n\t\t\twhenAll: function(inputs, callback) {\r\n\t\t\t\tvar promiseInvolved\r\n\t\t\t\tfor(var i = 0, l = inputs.length; i < l; i++) {\r\n\t\t\t\t\tif(inputs[i] && inputs[i].then) {\r\n\t\t\t\t\t\tpromiseInvolved = true\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif(promiseInvolved) {\r\n\t\t\t\t\t// we have asynch inputs, do lazy loading\r\n\t\t\t\t\treturn {\r\n\t\t\t\t\t\tthen: function(onResolve, onError) {\r\n\t\t\t\t\t\t\tvar remaining = 1\r\n\t\t\t\t\t\t\tvar result\r\n\t\t\t\t\t\t\tvar readyInputs = []\r\n\t\t\t\t\t\t\tvar lastPromiseResult\r\n\t\t\t\t\t\t\tfor(var i = 0; i < inputs.length; i++) {\r\n\t\t\t\t\t\t\t\tvar input = inputs[i]\r\n\t\t\t\t\t\t\t\tremaining++\r\n\t\t\t\t\t\t\t\tif(input && input.then) {\r\n\t\t\t\t\t\t\t\t\t(function(i, previousPromiseResult) {\r\n\t\t\t\t\t\t\t\t\t\tlastPromiseResult = input.then(function(value) {\r\n\t\t\t\t\t\t\t\t\t\t\treadyInputs[i] = value\r\n\t\t\t\t\t\t\t\t\t\t\tonEach()\r\n\t\t\t\t\t\t\t\t\t\t\tif(!remaining) {\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn result\r\n\t\t\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\t\t\treturn previousPromiseResult\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t}, onError)\r\n\t\t\t\t\t\t\t\t\t})(i, lastPromiseResult)\r\n\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\treadyInputs[i] = input\r\n\t\t\t\t\t\t\t\t\tonEach()\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonEach()\r\n\t\t\t\t\t\t\tfunction onEach() {\r\n\t\t\t\t\t\t\t\tremaining--\r\n\t\t\t\t\t\t\t\tif(!remaining) {\r\n\t\t\t\t\t\t\t\t\tresult = onResolve(callback(readyInputs))\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn lastPromiseResult\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tinputs: inputs\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\t// just sync inputs\r\n\t\t\t\treturn callback(inputs)\r\n\t\r\n\t\t\t},\r\n\t\t\tcompose: function(Base, constructor, properties) {\r\n\t\t\t\tvar prototype = constructor.prototype = Object.create(Base.prototype)\r\n\t\t\t\tsetPrototypeOf(constructor, Base)\r\n\t\t\t\tfor(var i in properties) {\r\n\t\t\t\t\tprototype[i] = properties[i]\r\n\t\t\t\t}\r\n\t\t\t\tprototype.constructor = constructor\r\n\t\t\t\treturn constructor\r\n\t\t\t},\r\n\t\t\tnextTurn: has('MutationObserver') ?\r\n\t\t\t\tfunction (callback) {\r\n\t\t\t\t\t// promises don't resolve consistently on the next micro turn (Edge doesn't do it right),\r\n\t\t\t\t\t// so use mutation observer\r\n\t\t\t\t\t// TODO: make a faster mode that doesn't recreate each time\r\n\t\t\t\t\tvar div = document.createElement('div')\r\n\t\t\t\t\tvar observer = new MutationObserver(callback)\r\n\t\t\t\t\tobserver.observe(div, {\r\n\t\t\t\t\t\tattributes: true\r\n\t\t\t\t\t})\r\n\t\t\t\t\tdiv.setAttribute('a', id++)\r\n\t\t\t\t} :\r\n\t\t\t\tfunction (callback) {\r\n\t\t\t\t\t// TODO: we can do better for other, older browsers\r\n\t\t\t\t\tsetTimeout(callback, 0)\r\n\t\t\t\t},\r\n\t\t\tcopy: Object.assign || function(target, source) {\r\n\t\t\t\tfor(var i in source) {\r\n\t\t\t\t\ttarget[i] = source[i]\r\n\t\t\t\t}\r\n\t\t\t\treturn target\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn lang\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(3)], __WEBPACK_AMD_DEFINE_RESULT__ = function (lang, Variable) {\r\n\t\tvar doc = typeof document !== 'undefined' && document\r\n\t\tvar invalidatedElements\r\n\t\tvar queued\r\n\t\tvar toRender = []\r\n\t\tvar nextId = 1\r\n\t\tvar requestAnimationFrame = lang.requestAnimationFrame\r\n\t\r\n\t\tfunction Context(subject){\r\n\t\t\tthis.subject = subject\r\n\t\t}\r\n\t\r\n\t\tfunction Updater(options) {\r\n\t\t\tvar variable = options.variable\r\n\t\r\n\t\t\tthis.variable = variable\r\n\t\t\tthis.elements = []\r\n\t\t\tif (options) {\r\n\t\t\t\tif (options.selector) {\r\n\t\t\t\t\tthis.selector = options.selector\r\n\t\t\t\t}\r\n\t\t\t\tif (options.elements) {\r\n\t\t\t\t\tthis.elements = options.elements\r\n\t\t\t\t\tthis.element = this.elements[0]\r\n\t\t\t\t}\r\n\t\t\t\tif (options.element) {\r\n\t\t\t\t\tthis.element = options.element\r\n\t\t\t\t\tthis.elements.push(options.element)\r\n\t\t\t\t}\r\n\t\t\t\tfor(var i = 0, l = this.elements.length; i < l; i++) {\r\n\t\t\t\t\t(this.elements[i].alkaliRenderers || (this.elements[i].alkaliRenderers = [])).push(this)\r\n\t\t\t\t}\r\n\t\t\t\tif (options.update) {\r\n\t\t\t\t\tthis.updateRendering = options.update\r\n\t\t\t\t}\r\n\t\t\t\tif (options.shouldRender) {\r\n\t\t\t\t\tthis.shouldRender = options.shouldRender\r\n\t\t\t\t}\r\n\t\t\t\tif (options.renderUpdate) {\r\n\t\t\t\t\tthis.renderUpdate = options.renderUpdate\r\n\t\t\t\t}\r\n\t\t\t\tif (options.alwaysUpdate) {\r\n\t\t\t\t\tthis.alwaysUpdate = options.alwaysUpdate\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (variable.updated) {\r\n\t\t\t\t// if it has update, we don't need to instantiate a closure\r\n\t\t\t\tvariable.notifies(this)\r\n\t\t\t} else {\r\n\t\t\t\t// baconjs-esqe API\r\n\t\t\t\tvar updater = this\r\n\t\t\t\tvariable.subscribe(function (event) {\r\n\t\t\t\t\t// replace the variable with an object\r\n\t\t\t\t\t// that returns the value from the event\r\n\t\t\t\t\tupdater.variable = {\r\n\t\t\t\t\t\tvalueOf: function () {\r\n\t\t\t\t\t\t\treturn event.value()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tupdater.updated()\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tif(options && options.updateOnStart !== false){\r\n\t\t\t\tthis.updateRendering(true)\r\n\t\t\t}\r\n\t\t}\r\n\t\tUpdater.prototype = {\r\n\t\t\tconstructor: Updater,\r\n\t\t\tupdateRendering: function () {\r\n\t\t\t\tthrow new Error ('updateRendering must be implemented by sub class of Updater')\r\n\t\t\t},\r\n\t\t\tupdated: function (updateEvent, by, context) {\r\n\t\t\t\tif (!this.invalidated) {\r\n\t\t\t\t\tif (!context || this.contextMatches(context)) {\r\n\t\t\t\t\t\t// do this only once, until we render again\r\n\t\t\t\t\t\tthis.invalidated = true\r\n\t\t\t\t\t\tvar updater = this\r\n\t\t\t\t\t\trequestAnimationFrame(function(){\r\n\t\t\t\t\t\t\tinvalidatedElements = null\r\n\t\t\t\t\t\t\tupdater.updateRendering(updater.alwaysUpdate)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\tcontextMatches: function(context) {\r\n\t\t\t\treturn true\r\n\t\t\t\treturn context == this.elements ||\r\n\t\t\t\t\t// if context is any element in this.elements - perhaps return only the specific matching elements?\r\n\t\t\t\t\t(this.elements.indexOf(context) != -1) ||\r\n\t\t\t\t  // (context is an array and any/all elements are contained in this.elements) ||\r\n\t\t\t\t\t// context contains() any of this.elements\r\n\t\t\t\t\t(function(elements) {\r\n\t\t\t\t\t\tfor(var i = 0, l = elements.length; i < l; i++) {\r\n\t\t\t\t\t\t\tif (context.contains(elements[i])) return true\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn false\r\n\t\t\t\t\t})(this.elements)\r\n\t\t\t},\r\n\t\t\tinvalidateElement: function(element) {\r\n\t\t\t\tif(!invalidatedElements){\r\n\t\t\t\t\tinvalidatedElements = new WeakMap(null, 'invalidated')\r\n\t\t\t\t\t// TODO: if this is not a real weak map, we don't want to GC it, or it will leak\r\n\t\t\t\t}\r\n\t\t\t\tvar invalidatedParts = invalidatedElements.get(element)\r\n\t\t\t\tinvalidatedElements.set(element, invalidatedParts = {})\r\n\t\t\t\tif (!invalidatedParts[id]) {\r\n\t\t\t\t\tinvalidatedParts[id] = true\r\n\t\t\t\t}\r\n\t\t\t\tif (!queued) {\r\n\t\t\t\t\tlang.queueTask(processQueue)\r\n\t\t\t\t\tqueued = true\r\n\t\t\t\t}\r\n\t\t\t\tvar updater = this\r\n\t\t\t\ttoRender.push(function(){\r\n\t\t\t\t\tupdater.invalidated = false\r\n\t\t\t\t\tupdater.updateElement(element)\r\n\t\t\t\t})\r\n\t\t\t},\r\n\t\t\tgetId: function(){\r\n\t\t\t\treturn this.id || (this.id = nextId++)\r\n\t\t\t},\r\n\t\t\tstop: function() {\r\n\t\t\t\tthis.variable.stopNotifies(this)\r\n\t\t\t}\r\n\t\r\n\t\t}\r\n\t\r\n\t\tfunction ElementUpdater(options) {\r\n\t\t\tUpdater.call(this, options)\r\n\t\t}\r\n\t\tElementUpdater.prototype = Object.create(Updater.prototype)\r\n\t\tElementUpdater.prototype.shouldRender = function (element) {\r\n\t\t\treturn document.body.contains(element)\r\n\t\t}\r\n\t\tElementUpdater.prototype.getSubject = function () {\r\n\t\t\treturn this.element || this.elements[0]\r\n\t\t}\r\n\t\tElementUpdater.prototype.updateRendering = function (always, element) {\r\n\t\t\tvar elements = this.elements || (element && [element]) || []\r\n\t\t\tif(!elements.length){\r\n\t\t\t\tif(this.selector){\r\n\t\t\t\t\telements = document.querySelectorAll(this.selector)\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthrow new Error('No element or selector was provided to the Updater')\r\n\t\t\t\t}\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tfor(var i = 0, l = elements.length; i < l; i++){\r\n\t\t\t\tif(always || this.shouldRender(elements[i])){\r\n\t\t\t\t\t// it is connected\r\n\t\t\t\t\tthis.updateElement(elements[i])\r\n\t\t\t\t}else{\r\n\t\t\t\t\tvar id = this.getId()\r\n\t\t\t\t\tvar updaters = elements[i].updatersOnShow\r\n\t\t\t\t\tif(!updaters){\r\n\t\t\t\t\t\tupdaters = elements[i].updatersOnShow = []\r\n\t\t\t\t\t\telements[i].className += ' needs-rerendering'\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (!updaters[id]) {\r\n\t\t\t\t\t\tupdaters[id] = this\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tElementUpdater.prototype.addElement = function (element) {\r\n\t\t\tif (this.selector) {\r\n\t\t\t\telement.updatersOnShow = [this]\r\n\t\t\t} else {\r\n\t\t\t\tthis.elements.push(element)\r\n\t\t\t}\r\n\t\t\t// and immediately do an update\r\n\t\t\tthis.updateElement(element)\r\n\t\t}\r\n\t\tElementUpdater.prototype.updateElement = function(element) {\r\n\t\t\tthis.invalidated = false\r\n\t\t\ttry {\r\n\t\t\t\t// TODO: might make something cheaper than for(element) for setting context?\r\n\t\t\t\tvar value = !this.omitValueOf && this.variable.valueOf(new Context(element))\r\n\t\t\t} catch (error) {\r\n\t\t\t\telement.appendChild(document.createTextNode(error))\r\n\t\t\t}\r\n\t\t\tif(value !== undefined || this.started){\r\n\t\t\t\tthis.started = true\r\n\t\t\t\tif(value && value.then){\r\n\t\t\t\t\tif(this.renderLoading){\r\n\t\t\t\t\t\tthis.renderLoading(value, element)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar updater = this\r\n\t\t\t\t\tvalue.then(function (value) {\r\n\t\t\t\t\t\tupdater.renderUpdate(value, element)\r\n\t\t\t\t\t})\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis.renderUpdate(value, element)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tElementUpdater.prototype.renderUpdate = function (newValue, element) {\r\n\t\t\tthrow new Error('renderUpdate(newValue) must be implemented')\r\n\t\t}\r\n\t\tUpdater.Updater = Updater\r\n\t\tUpdater.ElementUpdater = ElementUpdater\r\n\t\r\n\t\tfunction AttributeUpdater(options) {\r\n\t\t\tif(options.name){\r\n\t\t\t\tthis.name = options.name\r\n\t\t\t}\r\n\t\t\tElementUpdater.apply(this, arguments)\r\n\t\t}\r\n\t\tAttributeUpdater.prototype = Object.create(ElementUpdater.prototype)\r\n\t\tAttributeUpdater.prototype.type = 'AttributeUpdater'\r\n\t\tAttributeUpdater.prototype.renderUpdate = function (newValue, element) {\r\n\t\t\telement.setAttribute(this.name, newValue)\r\n\t\t}\r\n\t\tUpdater.AttributeUpdater = AttributeUpdater\r\n\t\r\n\t\tfunction PropertyUpdater(options) {\r\n\t\t\tif(options.name){\r\n\t\t\t\tthis.name = options.name\r\n\t\t\t}\r\n\t\t\tElementUpdater.apply(this, arguments)\r\n\t\t}\r\n\t\tPropertyUpdater.prototype = Object.create(ElementUpdater.prototype)\r\n\t\tPropertyUpdater.prototype.type = 'PropertyUpdater'\r\n\t\tPropertyUpdater.prototype.renderUpdate = function (newValue, element) {\r\n\t\t\telement[this.name] = newValue\r\n\t\t}\r\n\t\tUpdater.PropertyUpdater = PropertyUpdater\r\n\t\r\n\t\tfunction StyleUpdater(options) {\r\n\t\t\tif(options.name){\r\n\t\t\t\tthis.name = options.name\r\n\t\t\t}\r\n\t\t\tElementUpdater.apply(this, arguments)\r\n\t\t}\r\n\t\tStyleUpdater.prototype = Object.create(ElementUpdater.prototype)\r\n\t\tStyleUpdater.prototype.type = 'StyleUpdater'\r\n\t\tStyleUpdater.prototype.renderUpdate = function (newValue, element) {\r\n\t\t\telement.style[this.name] = newValue\r\n\t\t}\r\n\t\tUpdater.StyleUpdater = StyleUpdater\r\n\t\r\n\t\tfunction ContentUpdater(options) {\r\n\t\t\tElementUpdater.apply(this, arguments)\r\n\t\t}\r\n\t\tContentUpdater.prototype = Object.create(ElementUpdater.prototype)\r\n\t\tContentUpdater.prototype.type = 'ContentUpdater'\r\n\t\tContentUpdater.prototype.renderUpdate = function (newValue, element) {\r\n\t\t\telement.innerHTML = ''\r\n\t\t\tif (newValue === undefined){\r\n\t\t\t\tnewValue = ''\r\n\t\t\t}\r\n\t\t\telement.appendChild(document.createTextNode(newValue))\r\n\t\t}\r\n\t\tUpdater.ContentUpdater = ContentUpdater\r\n\t\r\n\t\tfunction TextUpdater(options) {\r\n\t\t\tthis.position = options.position\r\n\t\t\tthis.textNode = options.textNode\r\n\t\t\tElementUpdater.apply(this, arguments)\r\n\t\t}\r\n\t\tTextUpdater.prototype = Object.create(ElementUpdater.prototype)\r\n\t\tTextUpdater.prototype.type = 'TextUpdater'\r\n\t\tTextUpdater.prototype.renderUpdate = function (newValue, element) {\r\n\t\t\tif (newValue === undefined){\r\n\t\t\t\tnewValue = ''\r\n\t\t\t}\r\n\t\t\t(this.textNode || element.childNodes[this.position]).nodeValue = newValue\r\n\t\t}\r\n\t\tUpdater.TextUpdater = TextUpdater\r\n\t\r\n\t\tfunction ListUpdater(options) {\r\n\t\t\tif (options.each) {\r\n\t\t\t\tthis.each = options.each\r\n\t\t\t}\r\n\t\t\tElementUpdater.apply(this, arguments)\r\n\t\t}\r\n\t\tListUpdater.prototype = Object.create(ElementUpdater.prototype)\r\n\t\tListUpdater.prototype.updated = function (updateEvent, context) {\r\n\t\t\t(this.updates || (this.updates = [])).push(updateEvent)\r\n\t\t\tElementUpdater.prototype.updated.call(this, updateEvent, context)\r\n\t\t}\r\n\t\tListUpdater.prototype.type = 'ListUpdater'\r\n\t\tListUpdater.prototype.omitValueOf = true\r\n\t\tListUpdater.prototype.renderUpdate = function (newValue, element) {\r\n\t\t\tvar container\r\n\t\t\tvar each = this.each\r\n\t\t\tvar thisElement = this.elements[0]\r\n\t\t\tvar updater = this\r\n\t\t\tif (!this.builtList) {\r\n\t\t\t\tthis.builtList = true\r\n\t\t\t\tcontainer = document.createDocumentFragment()\r\n\t\t\t\tvar childElements = this.childElements = []\r\n\t\t\t\tthis.variable.for(thisElement).forEach(function(item) {\r\n\t\t\t\t\teachItem(item)\r\n\t\t\t\t})\r\n\t\t\t\tthis.element.appendChild(container)\r\n\t\t\t} else {\r\n\t\t\t\tvar childElements = this.childElements\r\n\t\t\t\tvar updates = this.updates\r\n\t\t\t\tcontainer = this.element\r\n\t\t\t\tupdates.forEach(function(update) {\r\n\t\t\t\t\tif (update.type === 'refresh') {\r\n\t\t\t\t\t\tupdater.builtList = false\r\n\t\t\t\t\t\tfor (var i = 0, l = childElements.length; i < l; i++) {\r\n\t\t\t\t\t\t\tthisElement.removeChild(childElements[i])\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tupdater.renderUpdate()\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (update.previousIndex > -1) {\r\n\t\t\t\t\t\t\tthisElement.removeChild(childElements[update.previousIndex])\r\n\t\t\t\t\t\t\tchildElements.splice(update.previousIndex, 1)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif (update.index > -1) {\r\n\t\t\t\t\t\t\tvar nextChild = childElements[update.index] || null\r\n\t\t\t\t\t\t\teachItem(update.value, update.index, nextChild)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\tthis.updates = [] // clear the updates\r\n\t\t\t}\r\n\t\t\tfunction eachItem(item, index, nextChild) {\r\n\t\t\t\tvar childElement\r\n\t\t\t\tif (each.create) {\r\n\t\t\t\t\tchildElement = each.create({parent: thisElement, _item: item}) // TODO: make a faster object here potentially\r\n\t\t\t\t} else {\r\n\t\t\t\t\tchildElement = each(item, thisElement)\r\n\t\t\t\t}\r\n\t\t\t\tif (nextChild) {\r\n\t\t\t\t\tcontainer.insertBefore(childElement, nextChild)\r\n\t\t\t\t\tchildElements.splice(index, 0, childElement)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcontainer.appendChild(childElement)\r\n\t\t\t\t\tchildElements.push(childElement)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tUpdater.ListUpdater = ListUpdater\r\n\t\r\n\t\tUpdater.onShowElement = function(shownElement){\r\n\t\t\trequestAnimationFrame(function(){\r\n\t\t\t\tinvalidatedElements = null\r\n\t\t\t\tvar elements = [].slice.call(shownElement.getElementsByClassName('needs-rerendering'))\r\n\t\t\t\tif (shownElement.className.indexOf('needs-rerendering') > 0){\r\n\t\t\t\t\tvar includingTop = [shownElement]\r\n\t\t\t\t\tincludingTop.push.apply(includingTop, elements)\r\n\t\t\t\t\telements = includingTop\r\n\t\t\t\t}\r\n\t\t\t\tfor (var i = 0, l = elements.length; i < l; i++){\r\n\t\t\t\t\tvar element = elements[i]\r\n\t\t\t\t\tvar updaters = element.updatersOnShow\r\n\t\t\t\t\tif(updaters){\r\n\t\t\t\t\t\telement.updatersOnShow = null\r\n\t\t\t\t\t\t// remove needs-rerendering class\r\n\t\t\t\t\t\telement.className = element.className.replace(/\\s?needs\\-rerendering\\s?/g, '')\r\n\t\t\t\t\t\tfor (var id in updaters) {\r\n\t\t\t\t\t\t\tvar updater = updaters[id]\r\n\t\t\t\t\t\t\tupdater.updateElement(element)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t\r\n\t\tfunction onElementRemoval(element){\r\n\t\t\t// cleanup element renderers\r\n\t\t\tif(element.alkaliRenderers){\r\n\t\t\t\tvar renderers = element.alkaliRenderers\r\n\t\t\t\tfor(var i = 0; i < renderers.length; i++){\r\n\t\t\t\t\tvar renderer = renderers[i]\r\n\t\t\t\t\trenderer.variable.stopNotifies(renderer)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\tUpdater.onElementRemoval = function(element, onlyChildren){\r\n\t\t\tif(!onlyChildren){\r\n\t\t\t\tonElementRemoval(element)\r\n\t\t\t}\r\n\t\t\tvar children = element.getElementsByTagName('*')\r\n\t\t\tfor(var i = 0, l = children.length; i < l; i++){\r\n\t\t\t\tvar child = children[i]\r\n\t\t\t\tif(child.alkaliRenderers){\r\n\t\t\t\t\tonElementRemoval(child)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn Updater\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(3), __webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function (lang, Variable) {\r\n\t\r\n\t\tfunction react(generator, options) {\r\n\t\t\tif (options && options.reverse) {\r\n\t\t\t\tgenerator.reverse = options.reverse\r\n\t\t\t}\r\n\t\t\treturn new Variable.GeneratorVariable(generator)\r\n\t\t}\r\n\t\treturn react\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function (Variable) {\r\n\t\tvar deny = Variable.deny;\r\n\t\tvar operatingFunctions = {};\r\n\t\tvar operators = {};\r\n\t\tfunction getOperatingFunction(expression){\r\n\t\t\t// jshint evil: true\r\n\t\t\treturn operatingFunctions[expression] ||\r\n\t\t\t\t(operatingFunctions[expression] =\r\n\t\t\t\t\tnew Function('a', 'b', 'deny', 'return ' + expression));\r\n\t\t}\r\n\t\tfunction operator(operator, name, precedence, forward, reverseA, reverseB){\r\n\t\t\t// defines the standard operators\r\n\t\t\tvar reverse = function(output, inputs){\r\n\t\t\t\tvar a = inputs[0],\r\n\t\t\t\t\tb = inputs[1];\r\n\t\t\t\tif(a && a.put){\r\n\t\t\t\t\tvar result = reverseA(output, b && b.valueOf());\r\n\t\t\t\t\tif(result !== deny){\r\n\t\t\t\t\t\ta.put(result);\r\n\t\t\t\t\t}\r\n\t\t\t\t}else if(b && b.put){\r\n\t\t\t\t\tb.put(reverseB(output, a && a.valueOf()));\r\n\t\t\t\t}else{\r\n\t\t\t\t\treturn deny;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\t// define a function that can lazily ensure the operating function\r\n\t\t\t// is available\r\n\t\t\tvar operatorHandler = {\r\n\t\t\t\tapply: function(instance, args){\r\n\t\t\t\t\tforward = getOperatingFunction(forward);\r\n\t\t\t\t\treverseA = reverseA && getOperatingFunction(reverseA);\r\n\t\t\t\t\treverseB = reverseB && getOperatingFunction(reverseB);\r\n\t\t\t\t\tforward.reverse = reverse;\r\n\t\t\t\t\toperators[operator] = operatorHandler = new Variable(forward);\r\n\t\r\n\t\t\t\t\taddFlags(operatorHandler);\r\n\t\t\t\t\targs = Array.prototype.slice.call(args);\r\n\t\t\t\t\targs.push(deny)\r\n\t\t\t\t\treturn operatorHandler.apply(instance, args);\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t\tfunction addFlags(operatorHandler){\r\n\t\t\t\toperatorHandler.precedence = precedence;\r\n\t\t\t\toperatorHandler.infix = reverseB !== false;\r\n\t\t\t}\r\n\t\t\taddFlags(operatorHandler);\r\n\t\t\toperators[operator] = operatorHandler;\r\n\t\t\toperators[name] = function() {\r\n\t\t\t\treturn operatorHandler.apply(null, arguments)\r\n\t\t\t}\r\n\t\t}\r\n\t\t// using order precedence from:\r\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\r\n\t\toperator('+', 'add', 6, 'a+b', 'a-b', 'a-b');\r\n\t\toperator('-', 'subtract', 6, 'a-b', 'a+b', 'b-a');\r\n\t\toperator('*', 'multiply', 5, 'a*b', 'a/b', 'a/b');\r\n\t\toperator('/', 'divide', 5, 'a/b', 'a*b', 'b/a');\r\n\t//\toperator('^', 7, 'a^b', 'a^(-b)', 'Math.log(a)/Math.log(b)');\r\n\t\toperator('?', 'if', 16, 'b[a?0:1]', 'a===b[0]||(a===b[1]?false:deny)', '[a,b]');\r\n\t\toperator(':', 'choose', 15, '[a,b]', 'a[0]?a[1]:deny', 'a[1]');\r\n\t\toperator('!', 'not', 4, '!a', '!a', false);\r\n\t\toperator('%', 'remainder', 5, 'a%b');\r\n\t\toperator('>', 'greater', 8, 'a>b');\r\n\t\toperator('>=', 'greaterOrEqual', 8, 'a>=b');\r\n\t\toperator('<', 'less', 8, 'a<b');\r\n\t\toperator('<=', 'lessOrEqual', 8, 'a<=b');\r\n\t\toperator('==', 'equal', 9, 'a===b');\r\n\t\toperator('&', 'and', 8, 'a&&b');\r\n\t\toperator('|', 'or', 8, 'a||b');\r\n\t\toperator('round', 'round', 8, 'Math.round(a*Math.pow(10,b||1))/Math.pow(10,b||1)', 'a', 'a');\r\n\t\treturn operators;\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(3), __webpack_require__(2)], __WEBPACK_AMD_DEFINE_RESULT__ = function (lang, Variable) {\r\n\t\r\n\t\tfunction deepCopy(source, target, derivativeMap) {\r\n\t\t\tif (source && typeof source == 'object') {\r\n\t\t\t\tif (source instanceof Array) {\r\n\t\t\t\t\ttarget = [] // always create a new array for array targets\r\n\t\t\t\t\tfor(var i = 0, l = source.length; i < l; i++) {\r\n\t\t\t\t\t\ttarget[i] = deepCopy(source[i], null, derivativeMap)\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (!target || typeof target !== 'object') {\r\n\t\t\t\t\t\ttarget = derivativeMap && derivativeMap.get(source)\r\n\t\t\t\t\t\tif (!target) {\r\n\t\t\t\t\t\t\ttarget = {}\r\n\t\t\t\t\t\t\tderivativeMap && derivativeMap.set(source, target)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfor (var i in source) {\r\n\t\t\t\t\t\ttarget[i] = deepCopy(source[i], target[i], derivativeMap)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn target\r\n\t\t\t}\r\n\t\t\treturn source\r\n\t\t}\r\n\t\r\n\t\tvar Copy = lang.compose(Variable, function(copiedFrom) {\r\n\t\t\t// this is the variable that we derive from\r\n\t\t\tthis.copiedFrom = copiedFrom\r\n\t\t\tthis.derivativeMap = new lang.WeakMap(null, 'derivative')\r\n\t\t\tthis.isDirty = new Variable(false)\r\n\t\t}, {\r\n\t\t\tvalueOf: function(context) {\r\n\t\t\t\tif(this.state) {\r\n\t\t\t\t\tthis.state = null\r\n\t\t\t\t}\r\n\t\t\t\tvar value = this.copiedFrom.valueOf(context)\r\n\t\t\t\tif(value && typeof value == 'object') {\r\n\t\t\t\t\tvar derivative = this.derivativeMap.get(value)\r\n\t\t\t\t\tif (derivative == null) {\r\n\t\t\t\t\t\tthis.derivativeMap.set(value, derivative = deepCopy(value, undefined, this.derivativeMap))\r\n\t\t\t\t\t\tthis.setValue(derivative, context)\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn derivative\r\n\t\t\t\t}\r\n\t\t\t\tvar thisValue = this.getValue(context)\r\n\t\t\t\tif(thisValue === undefined) {\r\n\t\t\t\t\treturn value\r\n\t\t\t\t}\r\n\t\t\t\treturn thisValue\r\n\t\t\t},\r\n\t\t\tgetCopyOf: function(value) {\r\n\t\t\t\tvar derivative = this.derivativeMap.get(value)\r\n\t\t\t\tif (derivative == null) {\r\n\t\t\t\t\tthis.derivativeMap.set(value, derivative = deepCopy(value, undefined, this.derivativeMap))\r\n\t\t\t\t}\r\n\t\t\t\treturn derivative\r\n\t\t\t},\r\n\t\t\tsave: function() {\r\n\t\t\t\t// copy back to the original object\r\n\t\t\t\tvar original = this.copiedFrom.valueOf()\r\n\t\t\t\tvar newCopiedFrom = deepCopy(this.valueOf(), original)\r\n\t\t\t\tif (original !== newCopiedFrom) {\r\n\t\t\t\t\t// if we have replaced it with a new object/value, put it\r\n\t\t\t\t\tthis.copiedFrom.put && this.copiedFrom.put(newCopiedFrom)\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// else we have modified an existing object, but we still need to notify\r\n\t\t\t\t\tif (this.copiedFrom.notifies && this.copiedFrom.updated) { // copiedFrom doesn't have to be a variable, it can be a plain object\r\n\t\t\t\t\t\tthis.copiedFrom.updated()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tthis.isDirty.put(false)\r\n\t\t\t\tthis.onSave && this.onSave()\r\n\t\t\t},\r\n\t\t\trevert: function() {\r\n\t\t\t\tvar original = this.copiedFrom.valueOf()\r\n\t\t\t\tthis.put(deepCopy(original, this.derivativeMap.get(original), this.derivativeMap))\r\n\t\t\t\tthis.isDirty.put(false)\r\n\t\t\t},\r\n\t\t\tupdated: function() {\r\n\t\t\t\tthis.isDirty.put(true)\r\n\t\t\t\treturn Variable.prototype.updated.apply(this, arguments)\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn Copy\r\n\t}.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__))\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** index.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap d02bc4fc19212dae1b56\n **/","define(['./Element', './Variable', './react', './Updater', './operators', './Copy'], function(Element, Variable, react, Updater, operators, Copy) {\r\n\tvar main = Object.create(Element)\r\n\tmain.Copy = Copy\r\n\tmain.Element = Element\r\n\tmain.Variable = Variable\r\n\tmain.all = Variable.all\r\n\tmain.react = react\r\n\tmain.spawn = function(func) {\r\n\t\treturn react(func).valueOf()\r\n\t}\r\n\tmain.Updater = Updater\r\n\tObject.assign(main, Updater)\r\n\tObject.assign(main, operators)\r\n\treturn main\r\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./index.js\n ** module id = 0\n ** module chunks = 0\n **/","define(['./Variable', './Updater', './util/lang'], function (Variable, Updater, lang) {\r\n\tvar knownElementProperties = {};\r\n\t['textContent', 'innerHTML', 'title', 'href', 'value', 'valueAsNumber', 'role', 'render'].forEach(function(property) {\r\n\t\tknownElementProperties[property] = true\r\n\t})\r\n\r\n\tvar SELECTOR_REGEX = /(\\.|#)([-\\w]+)(.+)?/\r\n\tfunction isGenerator(func) {\r\n\t\tif (typeof func === 'function') {\r\n\t\t\tvar constructor = func.constructor\r\n\t\t\treturn (constructor.displayName || constructor.name) === 'GeneratorFunction'\r\n\t\t}\r\n\t}\r\n\tfunction Context(subject){\r\n\t\tthis.subject = subject\r\n\t}\r\n\r\n\tvar PropertyUpdater = Updater.PropertyUpdater\r\n\tvar AttributeUpdater = Updater.AttributeUpdater\r\n\tvar StyleUpdater = lang.compose(Updater.StyleUpdater, function StyleUpdater() {\r\n\t\tUpdater.StyleUpdater.apply(this, arguments)\r\n\t}, {\r\n\t\trenderUpdate: function(newValue, element) {\r\n\t\t\tvar definition = styleDefinitions[this.name]\r\n\t\t\tif (definition) {\r\n\t\t\t\tdefinition(element, newValue, this.name)\r\n\t\t\t} else {\r\n\t\t\t\telement.style[this.name] = newValue\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\n\tvar ClassNameUpdater = lang.compose(Updater.ElementUpdater, function ClassNameUpdater(options) {\r\n\t\tthis.className = options.className\r\n\t\tUpdater.apply(this, arguments)\r\n\t}, {\r\n\t\trenderUpdate: function(newValue, element) {\r\n\t\t\tvar currentClassName = element.className\r\n\t\t\tvar changingClassName = this.className\r\n\t\t\t// remove the className (needed for addition or removal)\r\n\t\t\t// see http://jsperf.com/remove-class-name-algorithm/2 for some tests on this\r\n\t\t\tvar removed = currentClassName && (' ' + currentClassName + ' ').replace(' ' + changingClassName + ' ', ' ')\r\n\t\t\tif (newValue) {\r\n\t\t\t\t// addition, add the className\r\n\t\t\t\tchangingClassName = currentClassName ? (removed + changingClassName).slice(1) : changingClassName;\r\n\t\t\t} else {\r\n\t\t\t\t// we already have removed the class, just need to trim\r\n\t\t\t\tchangingClassName = removed.slice(1, removed.length - 1)\r\n\t\t\t}\r\n\t\t\t// only assign if it changed, this can save a lot of time\r\n\t\t\tif (changingClassName != currentClassName) {\r\n\t\t\t\telement.className = changingClassName\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\n\t// TODO: check for renderContent with text updater\r\n\tvar TextUpdater = Updater.TextUpdater\r\n\tvar ListUpdater = Updater.ListUpdater\r\n\t\r\n\tvar toAddToElementPrototypes = []\r\n\tvar createdBaseElements = []\r\n\tvar doc = typeof document !== 'undefined' ? document : {\r\n\t\tcreateElement: function(tag) {\r\n\t\t\treturn {}\r\n\t\t},\r\n\t\taddEventListener: function() {\r\n\t\t}\r\n\t}\r\n\r\n\tvar testStyle = doc.createElement('div').style\r\n\tvar childTagForParent = {\r\n\t\tTABLE: ['tr','td'],\r\n\t\tTBODY: ['tr','td'],\r\n\t\tTR: 'td',\r\n\t\tUL: 'li',\r\n\t\tOL: 'li',\r\n\t\tSELECT: 'option'\r\n\t}\r\n\tvar inputs = {\r\n\t\tINPUT: 1,\r\n\t\tTEXTAREA: 1\r\n\t\t// SELECT: 1, we exclude this, so the default \"content\" of the element can be the options\r\n\t}\r\n\r\n\tfunction booleanStyle(options) {\r\n\t\treturn function(element, value, key) {\r\n\t\t\tif (typeof value === 'boolean') {\r\n\t\t\t\t// has a boolean conversion\r\n\t\t\t\tvalue = options[value ? 0 : 1]\r\n\t\t\t}\r\n\t\t\telement.style[key] = value\r\n\t\t}\r\n\t}\r\n\r\n\tfunction defaultStyle(element, value, key) {\r\n\t\tif (typeof value === 'number') {\r\n\t\t\tvalue = value + 'px'\r\n\t\t}\r\n\t\telement.style[key] = value\r\n\t}\r\n\tfunction directStyle(element, value, key) {\r\n\t\telement.style[key] = value\r\n\t}\r\n\r\n\tvar styleDefinitions = {\r\n\t\tdisplay: booleanStyle(['initial', 'none']),\r\n\t\tvisibility: booleanStyle(['visible', 'hidden']),\r\n\t\tcolor: directStyle,\r\n\t\topacity: directStyle,\r\n\t\tzoom: directStyle,\r\n\t\tminZoom: directStyle,\r\n\t\tmaxZoom: directStyle,\r\n\t\tfontWeight: directStyle,\r\n\t\tposition: booleanStyle(['absolute', '']),\r\n\t\ttextDecoration: booleanStyle(['underline', '']),\r\n\t\tfontWeight: booleanStyle(['bold', 'normal'])\r\n\t}\r\n\t;[\"alignContent\",\"alignItems\",\"alignSelf\",\"animation\",\"animationDelay\",\"animationDirection\",\"animationDuration\",\"animationFillMode\",\"animationIterationCount\",\"animationName\",\"animationPlayState\",\"animationTimingFunction\",\"backfaceVisibility\",\"background\",\"backgroundAttachment\",\"backgroundBlendMode\",\"backgroundClip\",\"backgroundColor\",\"backgroundImage\",\"backgroundOrigin\",\"backgroundPosition\",\"backgroundPositionX\",\"backgroundPositionY\",\"backgroundRepeat\",\"backgroundRepeatX\",\"backgroundRepeatY\",\"backgroundSize\",\"baselineShift\",\"border\",\"borderBottom\",\"borderBottomColor\",\"borderBottomLeftRadius\",\"borderBottomRightRadius\",\"borderBottomStyle\",\"borderBottomWidth\",\"borderCollapse\",\"borderColor\",\"borderImage\",\"borderImageOutset\",\"borderImageRepeat\",\"borderImageSlice\",\"borderImageSource\",\"borderImageWidth\",\"borderLeft\",\"borderLeftColor\",\"borderLeftStyle\",\"borderLeftWidth\",\"borderRadius\",\"borderRight\",\"borderRightColor\",\"borderRightStyle\",\"borderRightWidth\",\"borderSpacing\",\"borderStyle\",\"borderTop\",\"borderTopColor\",\"borderTopLeftRadius\",\"borderTopRightRadius\",\"borderTopStyle\",\"borderTopWidth\",\"borderWidth\",\"bottom\",\"boxShadow\",\"boxSizing\",\"bufferedRendering\",\"captionSide\",\"clear\",\"clip\",\"clipPath\",\"clipRule\",\"color\",\"colorInterpolation\",\"colorInterpolationFilters\",\"colorRendering\",\"counterIncrement\",\"counterReset\",\"cursor\",\"direction\",\"display\",\"emptyCells\",\"fill\",\"fillOpacity\",\"fillRule\",\"filter\",\"flex\",\"flexBasis\",\"flexDirection\",\"flexFlow\",\"flexGrow\",\"flexShrink\",\"flexWrap\",\"float\",\"floodColor\",\"floodOpacity\",\"font\",\"fontFamily\",\"fontFeatureSettings\",\"fontKerning\",\"fontSize\",\"fontStretch\",\"fontStyle\",\"fontVariant\",\"fontVariantLigatures\",\"fontWeight\",\"height\",\"imageRendering\",\"isolation\",\"justifyContent\",\"left\",\"letterSpacing\",\"lightingColor\",\"lineHeight\",\"listStyle\",\"listStyleImage\",\"listStylePosition\",\"listStyleType\",\"margin\",\"marginBottom\",\"marginLeft\",\"marginRight\",\"marginTop\",\"marker\",\"markerEnd\",\"markerMid\",\"markerStart\",\"mask\",\"maskType\",\"maxHeight\",\"maxWidth\",\"maxZoom\",\"minHeight\",\"minWidth\",\"minZoom\",\"mixBlendMode\",\"motion\",\"motionOffset\",\"motionPath\",\"motionRotation\",\"objectFit\",\"objectPosition\",\"opacity\",\"order\",\"orientation\",\"orphans\",\"outline\",\"outlineColor\",\"outlineOffset\",\"outlineStyle\",\"outlineWidth\",\"overflow\",\"overflowWrap\",\"overflowX\",\"overflowY\",\"padding\",\"paddingBottom\",\"paddingLeft\",\"paddingRight\",\"paddingTop\",\"page\",\"pageBreakAfter\",\"pageBreakBefore\",\"pageBreakInside\",\"paintOrder\",\"perspective\",\"perspectiveOrigin\",\"pointerEvents\",\"position\",\"quotes\",\"resize\",\"right\",\"shapeImageThreshold\",\"shapeMargin\",\"shapeOutside\",\"shapeRendering\",\"size\",\"speak\",\"src\",\"stopColor\",\"stopOpacity\",\"stroke\",\"strokeDasharray\",\"strokeDashoffset\",\"strokeLinecap\",\"strokeLinejoin\",\"strokeMiterlimit\",\"strokeOpacity\",\"strokeWidth\",\"tabSize\",\"tableLayout\",\"textAlign\",\"textAlignLast\",\"textAnchor\",\"textCombineUpright\",\"textDecoration\",\"textIndent\",\"textOrientation\",\"textOverflow\",\"textRendering\",\"textShadow\",\"textTransform\",\"top\",\"touchAction\",\"transform\",\"transformOrigin\",\"transformStyle\",\"transition\",\"transitionDelay\",\"transitionDuration\",\"transitionProperty\",\"transitionTimingFunction\",\"unicodeBidi\",\"unicodeRange\",\"userZoom\",\"vectorEffect\",\"verticalAlign\",\"visibility\",\"whiteSpace\",\"widows\",\"width\",\"willChange\",\"wordBreak\",\"wordSpacing\",\"wordWrap\",\"writingMode\",\"zIndex\",\"zoom\"].forEach(function(property) {\r\n\t\tstyleDefinitions[property] = styleDefinitions[property] || defaultStyle\r\n\t})\r\n\tvar styleSheet\r\n\tvar presumptiveParentMap = new WeakMap()\r\n\r\n\tvar setPrototypeOf = Object.setPrototypeOf || (function(base, proto) { base.__proto__ = proto})\r\n\tvar getPrototypeOf = Object.getPrototypeOf || (function(base) { return base.__proto__ })\r\n\tfunction createCssRule(selector) {\r\n\t\tif (!styleSheet) {\r\n\t\t\tvar styleSheetElement = doc.createElement(\"style\")\r\n\t\t\tstyleSheetElement.setAttribute(\"type\", \"text/css\")\r\n//\t\t\tstyleSheet.appendChild(doc.createTextNode(css))\r\n\t\t\tdocument.head.insertBefore(styleSheetElement, document.head.firstChild)\r\n\t\t\tstyleSheet = styleSheetElement.sheet\r\n\t\t}\r\n\t\tvar cssRules = styleSheet.cssRules || styleSheet.rules\r\n\t\treturn cssRules[styleSheet.addRule(selector, ' ', cssRules.length)]\r\n\t}\r\n\tvar invalidatedElements = new WeakMap(null, 'invalidated')\r\n\tvar queued\r\n\r\n\tvar toRender = []\r\n\tfunction flatten(target, part) {\r\n\t\tvar base = target.base\r\n\t\tif (base) {\r\n\t\t\tvar basePart = base[part]\r\n\t\t\tif (basePart) {\r\n\t\t\t\ttarget[part] || target[part]\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction layoutChildren(parent, children, container, prepend) {\r\n\t\tvar fragment = (children.length > 3 || prepend) ? doc.createDocumentFragment() : parent\r\n\t\tfor(var i = 0, l = children.length; i < l; i++) {\r\n\t\t\tvar child = children[i]\r\n\t\t\tvar childNode\r\n\t\t\tif (child && child.create) {\r\n\t\t\t\t// an element constructor\r\n\t\t\t\tcurrentParent = parent\r\n\t\t\t\tchildNode = child.create()\r\n\t\t\t\tfragment.appendChild(childNode)\r\n\t\t\t\tif (child.isContentNode) {\r\n\t\t\t\t\tcontainer.contentNode = childNode\r\n\t\t\t\t}\r\n\t\t\t} else if (typeof child == 'function') {\r\n\t\t\t\t// TODO: reenable this\r\n//\t\t\t\tif (child.for) {\r\n\t\t\t\t\t// a variable constructor that can be contextualized\r\n\t//\t\t\t\tfragment.appendChild(variableAsText(parent, child))\r\n\t\t//\t\t} else {\r\n\t\t\t\t\t// an element constructor\r\n\t\t\t\t\tchildNode = new child()\r\n\t\t\t\t\tfragment.appendChild(childNode)\r\n\t\t\t//\t}\r\n\t\t\t} else if (typeof child == 'object') {\r\n\t\t\t\tif (child instanceof Array) {\r\n\t\t\t\t\t// array of sub-children\r\n\t\t\t\t\tcontainer = container || parent\r\n\t\t\t\t\tchildNode = childNode || parent\r\n\t\t\t\t\tlayoutChildren(childNode.contentNode || childNode, child, container)\r\n\t\t\t\t} else if (child.notifies) {\r\n\t\t\t\t\t// a variable\r\n\t\t\t\t\tfragment.appendChild(variableAsText(parent, child))\r\n\t\t\t\t} else if (child.nodeType) {\r\n\t\t\t\t\t// an element itself\r\n\t\t\t\t\tfragment.appendChild(child)\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// TODO: apply properties to last child, but with binding to the parent (for events)\r\n\t\t\t\t\tthrow new Error('Unknown child type ' + child)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// a primitive value\r\n\t\t\t\tchildNode = doc.createTextNode(child)\r\n\t\t\t\tfragment.appendChild(childNode)\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (fragment != parent) {\r\n\t\t\tif (prepend) {\r\n\t\t\t\tparent.insertBefore(fragment, parent.firstChild)\r\n\t\t\t} else {\r\n\t\t\t\tparent.appendChild(fragment)\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn childNode\r\n\t}\r\n\tfunction variableAsText(parent, content) {\r\n\t\tif (content == null) {\r\n\t\t\treturn doc.createTextNode('')\r\n\t\t}\r\n\t\tvar text\r\n\t\ttry {\r\n\t\t\ttext = content.valueOf(new Context(parent))\r\n\t\t} catch (error) {\r\n\t\t\ttext = error.stack\r\n\t\t}\r\n\t\tvar textNode = doc.createTextNode(text)\r\n\t\tif (content.notifies) {\r\n\t\t\tenterUpdater(TextUpdater, {\r\n\t\t\t\telement: parent,\r\n\t\t\t\ttextNode: textNode,\r\n\t\t\t\tvariable: content\r\n\t\t\t})\r\n\t\t}\r\n\t\treturn textNode\r\n\t}\r\n\r\n\tfunction bidirectionalHandler(element, value, key) {\r\n\t\tif (value && value.notifies) {\r\n\t\t\tenterUpdater(PropertyUpdater, {\r\n\t\t\t\tname: key,\r\n\t\t\t\tvariable: value,\r\n\t\t\t\telement: element\r\n\t\t\t})\r\n\t\t\tif (inputs[element.tagName] || element.tagName === 'SELECT') {\r\n\t\t\t\tbindChanges(element, value, key)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\telement[key] = value\r\n\t\t}\r\n\t}\r\n\r\n\tfunction noop() {}\r\n\tvar propertyHandlers = {\r\n\t\tcontent: noop, // content and children have special handling in create\r\n\t\tchildren: noop,\r\n\t\ttagName: noop,\r\n\t\teach: noop, // just used by content, doesn't need to be recorded on the element\r\n\t\tclasses: function(element, classes) {\r\n\t\t\tif (!(classes.length > -1)) {\r\n\t\t\t\t// index the classes, if necessary\r\n\t\t\t\tvar i = 0\r\n\t\t\t\tfor (var key in classes) {\r\n\t\t\t\t\tif (!classes[i]) {\r\n\t\t\t\t\t\tclasses[i] = key\r\n\t\t\t\t\t}\r\n\t\t\t\t\ti++\r\n\t\t\t\t}\r\n\t\t\t\tclasses.length = i\r\n\t\t\t}\r\n\t\t\tfor (var i = 0, l = classes.length; i < l; i++) {\r\n\t\t\t\t// find each class name\r\n\t\t\t\tvar className = classes[i]\r\n\t\t\t\tvar flag = classes[className]\r\n\t\t\t\tif (flag && flag.notifies) {\r\n\t\t\t\t\t// if it is a variable, we react to it\r\n\t\t\t\t\tenterUpdater(ClassNameUpdater, {\r\n\t\t\t\t\t\telement: element,\r\n\t\t\t\t\t\tclassName: className,\r\n\t\t\t\t\t\tvariable: flag\r\n\t\t\t\t\t})\r\n\t\t\t\t} else if (flag || flag === undefined) {\r\n\t\t\t\t\telement.className += ' ' + className\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tclass: applyAttribute,\r\n\t\tfor: applyAttribute,\r\n\t\trole: applyAttribute,\r\n\t\trender: function(element, value, key) {\r\n\t\t\t// TODO: This doesn't need to be a property updater\r\n\t\t\t// we should also verify it is a generator\r\n\t\t\t// and maybe, at some point, find an optimization to eliminate the bind()\r\n\t\t\tenterUpdater(PropertyUpdater, {\r\n\t\t\t\tname: key,\r\n\t\t\t\tvariable: new Variable.GeneratorVariable(value.bind(element)),\r\n\t\t\t\telement: element\r\n\t\t\t})\r\n\t\t},\r\n\t\tvalue: bidirectionalHandler,\r\n\t\tvalueAsNumber: bidirectionalHandler,\r\n\t\tvalueAsDate: bidirectionalHandler,\r\n\t\tchecked: bidirectionalHandler,\r\n\t\tdataset: applySubProperties(function(newValue, element, key) {\r\n\t\t\telement.dataset[key || this.name] = newValue\r\n\t\t}),\r\n\t\tattributes: applySubProperties(function(newValue, element, key) {\r\n\t\t\telement.setAttribute(key || this.name, newValue)\r\n\t\t}),\r\n\t\tstyle: function(element, value, key) {\r\n\t\t\tif (typeof value === 'string') {\r\n\t\t\t\telement.setAttribute('style', value)\r\n\t\t\t} else if (value && value.notifies) {\r\n\t\t\t\tenterUpdater(AttributeUpdater, {\r\n\t\t\t\t\tname: 'style',\r\n\t\t\t\t\tvariable: value,\r\n\t\t\t\t\telment: element\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tstyleObjectHandler(element, value, key)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfunction applyAttribute(element, value, key) {\r\n\t\tif (value && value.notifies) {\r\n\t\t\tenterUpdater(AttributeUpdater, {\r\n\t\t\t\tname: key,\r\n\t\t\t\tvariable: value,\r\n\t\t\t\telement: element\r\n\t\t\t})\r\n\t\t} else {\r\n\t\t\telement.setAttribute(key, value)\r\n\t\t}\r\n\t}\r\n\r\n\tvar styleObjectHandler = applySubProperties(function(newValue, element, key) {\r\n\t\telement.style[key || this.name] = newValue\r\n\t})\r\n\r\n\tfunction applySubProperties(renderer) {\r\n\t\tvar SubPropertyUpdater = lang.compose(PropertyUpdater, function SubPropertyUpdater(options) {\r\n\t\t\tPropertyUpdater.apply(this, arguments)\r\n\t\t}, {\r\n\t\t\trenderUpdate: renderer\r\n\t\t})\t\r\n\t\treturn function(element, value, key) {\r\n\t\t\tvar target = element[key]\r\n\t\t\tfor (var subKey in value) {\r\n\t\t\t\tvar subValue = value[subKey]\r\n\t\t\t\tif (subValue && subValue.notifies) {\r\n\t\t\t\t\tenterUpdater(SubPropertyUpdater, {\r\n\t\t\t\t\t\tname: subKey,\r\n\t\t\t\t\t\tvariable: subValue,\r\n\t\t\t\t\t\telement: element\r\n\t\t\t\t\t})\r\n\t\t\t\t} else {\r\n\t\t\t\t\trenderer(subValue, element, subKey)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction applyProperties(element, properties) {\r\n\t\tfor (var key in properties) {\r\n\t\t\tvar value = properties[key]\r\n\t\t\tvar styleDefinition = styleDefinitions[key]\r\n\t\t\tif (propertyHandlers[key]) {\r\n\t\t\t\tpropertyHandlers[key](element, value, key, properties)\r\n\t\t\t} else if ((styleDefinition = styleDefinitions[key]) && element[key] === undefined) {\r\n\t\t\t\tif (value && value.notifies) {\r\n\t\t\t\t\tenterUpdater(StyleUpdater, {\r\n\t\t\t\t\t\tname: key,\r\n\t\t\t\t\t\tvariable: value,\r\n\t\t\t\t\t\telement: element\r\n\t\t\t\t\t})\r\n\t\t\t\t} else {\r\n\t\t\t\t\tstyleDefinition(element, value, key)\r\n\t\t\t\t}\r\n\t\t\t} else if (value && value.notifies) {\r\n\t\t\t\tenterUpdater(PropertyUpdater, {\r\n\t\t\t\t\tname: key,\r\n\t\t\t\t\tvariable: value,\r\n\t\t\t\t\telement: element\r\n\t\t\t\t})\r\n\t\t\t} else if (typeof value === 'function' && key.slice(0, 2) === 'on') {\r\n\t\t\t\telement.addEventListener(key.slice(2), value)\r\n\t\t\t} else {\r\n\t\t\t\telement[key] = value\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction applySelector(element, selector) {\r\n\t\tselector.replace(/(\\.|#)?(\\w+)/g, function(t, operator, name) {\r\n\t\t\tif (operator == '.') {\r\n\t\t\t\telement._class = (element._class ? element._class + ' ' : '') + name\r\n\t\t\t} else if (operator == '#') {\r\n\t\t\t\telement._id = name\r\n\t\t\t} else {\r\n\t\t\t\telement._tag = name\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tnextClassId = 1\r\n\tuniqueSelectors = {}\r\n\tfunction getUniqueSelector(element) {\r\n\t\tvar selector = element.hasOwnProperty('_uniqueSelector') ? element._uniqueSelector :\r\n\t\t\t(element._tag + (element._class ? '.' + element._class.replace(/\\s+/g, '.') : '') +\r\n\t\t\t(element._id ? '#' + element._id : ''))\r\n\t\tif (!selector.match(/[#\\.-]/)) {\r\n\t\t\tif (uniqueSelectors[selector]) {\r\n\t\t\t\telement._class = '.x-' + nextClassId++\r\n\t\t\t\tselector = getUniqueSelector(element)\r\n\t\t\t} else {\r\n\t\t\t\tuniqueSelectors[selector] = selector\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn selector\r\n\t}\r\n\r\n\tfunction buildContent(element, content, key, properties) {\r\n\t\tvar each = element.each || properties.each\r\n\t\tif (each && content) {\r\n\t\t\t// render as list\r\n\t\t\tif (each.create) {\r\n\t\t\t\tvar ItemClass = element.itemAs || Item\r\n\t\t\t\thasOwn(each, ItemClass, function (element) {\r\n\t\t\t\t\treturn new ItemClass(element._item, content)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tif (content.notifies) {\r\n\t\t\t\tenterUpdater(ListUpdater, {\r\n\t\t\t\t\teach: each,\r\n\t\t\t\t\tvariable: content,\r\n\t\t\t\t\telement: element\r\n\t\t\t\t})\r\n\t\t\t} else {\r\n\t\t\t\tvar fragment = doc.createDocumentFragment()\r\n\t\t\t\tcontent.forEach(function(item) {\r\n\t\t\t\t\tif (each.create) {\r\n\t\t\t\t\t\tchildElement = each.create({parent: element, _item: item}) // TODO: make a faster object here potentially\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tchildElement = each(item, element)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tfragment.appendChild(childElement)\r\n\t\t\t\t})\r\n\t\t\t\telement.appendChild(fragment)\r\n\t\t\t}\r\n\t\t} else if (inputs[element.tagName]) {\r\n\t\t\t// render into input\r\n\t\t\tbuildInputContent(element, content)\r\n\t\t} else if (content instanceof Array) {\r\n\t\t\t// treat array as children (potentially of the content node)\r\n\t\t\telement = element.contentNode || element\r\n\t\t\tlayoutChildren(element, content, element)\r\n\t\t} else {\r\n\t\t\t// render as string\r\n\t\t\telement.appendChild(variableAsText(element, content))\r\n\t\t}\r\n\t}\r\n\r\n\tfunction bindChanges(element, variable, key, conversion) {\r\n\t\tlang.nextTurn(function() { // wait for next turn in case inputChanges isn't set yet\r\n\t\t\tvar inputEvents = element.inputEvents || ['change', 'alkali-change']\r\n\t\t\tfor (var i = 0, l = inputEvents.length; i < l; i++) {\r\n\t\t\t\telement.addEventListener(inputEvents[i], function (event) {\r\n\t\t\t\t\tvar value = element[key]\r\n\t\t\t\t\tvar result = variable.put(conversion ? conversion(value, element) : value, new Context(element))\r\n\t\t\t\t\tif (result === Variable.deny) {\r\n\t\t\t\t\t\tthrow new Error('Variable change denied')\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tdoc.addEventListener('click', function(event) {\r\n\t\tvar target = event.target\r\n\t\tif (target.type === 'radio') {\r\n\t\t\tvar radios = document.querySelectorAll('input[type=radio]')\r\n\t\t\tfor (var i = 0, l = radios.length; i < l; i++) {\r\n\t\t\t\tvar radio = radios[i]\r\n\t\t\t\tif (radio.name === target.name && radio !== target) {\r\n\t\t\t\t\tradio.dispatchEvent(new Event('alkali-change', {}))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\n\tfunction conversion(value, element) {\r\n\t\tif (element.type == 'number') {\r\n\t\t\treturn parseFloat(value)\r\n\t\t}\r\n\t\treturn value\r\n\t}\r\n\r\n\tfunction buildInputContent(element, content) {\r\n\t\tvar inputType = element.type\r\n\t\tvar inputProperty = inputType in {date: 1, datetime: 1, time: 1} ?\r\n\t\t\t\t'valueAsDate' : (inputType === 'checkbox' || inputType === 'radio') ?\r\n\t\t\t\t\t'checked' : 'value'\r\n\r\n\t\tif (content && content.notifies) {\r\n\t\t\t// a variable, respond to changes\r\n\t\t\tenterUpdater(PropertyUpdater, {\r\n\t\t\t\tvariable: content,\r\n\t\t\t\tname: inputProperty,\r\n\t\t\t\telement: element\r\n\t\t\t})\r\n\t\t\t// and bind the other way as well, updating the variable in response to input changes\r\n\t\t\tbindChanges(element, content, inputProperty, conversion)\r\n\t\t} else {\r\n\t\t\t// primitive\r\n\t\t\telement[inputProperty] = content\r\n\t\t}\r\n\t}\r\n\tvar classHandlers = {\r\n\t\thasOwn: function(Element, value) {\r\n\t\t\thasOwn(Element, value)\r\n\t\t}\r\n\t}\r\n\r\n\tfunction applyToClass(value, Element) {\r\n\t\tvar applyOnCreate = Element._applyOnCreate\r\n\t\tvar prototype = Element.prototype\r\n\t\tif (value && typeof value === 'object') {\r\n\t\t\tif (value instanceof Array || value.notifies) {\r\n\t\t\t\tapplyOnCreate.content = value\r\n\t\t\t} else {\r\n\t\t\t\tfor (var key in value) {\r\n\t\t\t\t// TODO: eventually we want to be able to set these as rules statically per element\r\n\t\t\t\t/*if (styleDefinitions[key]) {\r\n\t\t\t\t\tvar styles = Element.styles || (Element.styles = [])\r\n\t\t\t\t\tstyles.push(key)\r\n\t\t\t\t\tstyles[key] = descriptor.value\r\n\t\t\t\t} else {*/\r\n\t\t\t\t\tif (classHandlers[key]) {\r\n\t\t\t\t\t\thasOwn(Element, value[key])\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// TODO: do deep merging of styles and classes, but not variables\r\n\t\t\t\t\t\tapplyOnCreate[key] = value[key]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} else if (typeof value === 'function' && !value.for) {\r\n\t\t\tthrow new TypeError('Function as argument not supported')\r\n\t\t} else {\r\n\t\t\tapplyOnCreate.content = value\r\n\t\t}\r\n\t}\r\n\r\n\tfunction getApplySet(Class) {\r\n\t\tif (Class.hasOwnProperty('_applyOnCreate')) {\r\n\t\t\treturn Class._applyOnCreate\r\n\t\t}\r\n\t\t// this means we didn't extend and evaluate the prototype yet\r\n\t\tif (Class.getForClass) {\r\n\t\t\t// we are extending an alkali constructor\r\n\t\t\t// if this class is inheriting from an alkali constructor, work our way up the chain\r\n\t\t\tapplyOnCreate = Class._applyOnCreate = {}\r\n\t\t\tvar parentApplySet = getApplySet(getPrototypeOf(Class))\r\n\t\t\tfor (var key in parentApplySet) {\r\n\t\t\t\tapplyOnCreate[key] = parentApplySet[key]\r\n\t\t\t}\r\n\t\t\t// we need to check the prototype for event handlers\r\n\t\t\tvar prototype = Class.prototype\r\n\t\t\tvar keys = Object.getOwnPropertyNames(prototype)\r\n\t\t\tfor (var i = 0, l = keys.length; i < l; i++) {\r\n\t\t\t\tvar key = keys[i]\r\n\t\t\t\tif (key.slice(0, 2) === 'on' || (key === 'render' && isGenerator(prototype[key]))) {\r\n\t\t\t\t\tapplyOnCreate[key] = prototype[key]\r\n\t\t\t\t} else if (key.slice(0, 6) === 'render') {\r\n\t\t\t\t\tObject.defineProperty(prototype, key[6].toLowerCase() + key.slice(7), renderDescriptor(key))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn applyOnCreate\r\n\t\t}\r\n\t\treturn null\r\n\t}\r\n\r\n\tfunction renderDescriptor(renderMethod) {\r\n\t\tvar map = new WeakMap()\r\n\t\treturn {\r\n\t\t\tget: function() {\r\n\t\t\t\treturn map.has(this) ? map.get(this) : null\r\n\t\t\t},\r\n\t\t\tset: function(value) {\r\n\t\t\t\tmap.set(this, value)\r\n\t\t\t\tthis[renderMethod](value)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction makeElementConstructor() {\r\n\t\tfunction Element(selector, properties) {\r\n\t\t\tif (this instanceof Element){\r\n\t\t\t\t// create DOM element\r\n\t\t\t\t// Need to detect if we have registered the element and `this` is actually already the correct instance\r\n\t\t\t\treturn create.apply(Element.prototype === getPrototypeOf(this) ? Element :// this means it is from this constructor\r\n\t\t\t\t\tthis.constructor, // this means it was constructed from a subclass\r\n\t\t\t\t\targuments)\r\n\t\t\t} else {\r\n\t\t\t\t// extend to create new class\r\n\t\t\t\treturn withProperties.apply(Element, arguments)\r\n\t\t\t}\r\n\t\t}\r\n\t\tElement.create = create\r\n\t\tElement.with = withProperties\r\n\t\tElement.for = forTarget\r\n\t\tElement.property = propertyForElement\r\n\t\tElement.getForClass = getForClass\r\n\t\treturn Element\r\n\t}\r\n\r\n\tfunction withProperties(selector, properties) {\r\n\t\tvar Element = makeElementConstructor()\r\n\t\tElement.superConstructor = this\r\n\t\tElement.tagName = this.tagName\r\n\t\tif (this.children) {\r\n\t\t\t// just copy this property\r\n\t\t\tElement.children = this.children\r\n\t\t}\r\n\t\tvar prototype = Element.prototype = this.prototype\r\n\r\n\t\tvar hasOwnApplySet\r\n\t\tvar applyOnCreate = Element._applyOnCreate = {}\r\n\t\tvar parentApplySet = getApplySet(this)\r\n\t\t// copy parent properties\r\n\t\tfor (var key in parentApplySet) {\r\n\t\t\tapplyOnCreate[key] = parentApplySet[key]\r\n\t\t}\r\n\r\n\t\tvar i = 0 // for arguments\r\n\t\tif (typeof selector === 'string') {\r\n\t\t\tvar selectorMatch = selector.match(SELECTOR_REGEX)\r\n\t\t\tif (selectorMatch) {\r\n\t\t\t\tdo {\r\n\t\t\t\t\tvar operator = selectorMatch[1]\r\n\t\t\t\t\tvar name = selectorMatch[2]\r\n\t\t\t\t\tif (operator == '.') {\r\n\t\t\t\t\t\tif (applyOnCreate.className) {\r\n\t\t\t\t\t\t\tapplyOnCreate.className += ' ' + name\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tapplyOnCreate.className = name\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tapplyOnCreate.id = name\r\n\t\t\t\t\t}\r\n\t\t\t\t\tvar remaining = selectorMatch[3]\r\n\t\t\t\t\tselectorMatch = remaining && remaining.match(SELECTOR_REGEX)\r\n\t\t\t\t} while (selectorMatch)\r\n\t\t\t} else {\r\n\t\t\t\tapplyOnCreate.content = selector\r\n\t\t\t}\r\n\t\t\ti++ // skip the first argument\r\n\t\t}\r\n\r\n\t\tfor (var l = arguments.length; i < l; i++) {\r\n\t\t\tapplyToClass(arguments[i], Element)\r\n\t\t}\r\n\t\treturn Element\r\n\t}\r\n\tvar currentParent\r\n\tfunction create(selector, properties) {\r\n\t\t// TODO: make this a symbol\r\n\t\tvar applyOnCreate = getApplySet(this)\r\n\t\tif (currentParent) {\r\n\t\t\tvar parent = currentParent\r\n\t\t\tcurrentParent = null\r\n\t\t}\r\n/*\t\tif (this._initialized != this) {\r\n\t\t\tthis._initialized = this\r\n\t\t\tthis.initialize && this.initialize()\r\n\t\t\tvar styles = this.styles\r\n\t\t\tif (styles) {\r\n\t\t\t\tvar rule = createCssRule(getUniqueSelector(this))\r\n\t\t\t\tfor (var i = 0, l = styles.length; i < l; i++) {\r\n\t\t\t\t\tvar key = styles[i]\r\n\t\t\t\t\tvar value = styles[key]\r\n\t\t\t\t\t// TODO: if it is a contextualized variable, do this on the element\r\n\t\t\t\t\tvar styleDefinition = styleDefinitions[key]\r\n\t\t\t\t\tif (styleDefinition) {\r\n\t\t\t\t\t\tstyleDefinition(rule, value, key)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (!this.hasOwnProperty('_applyOnCreate')) {\r\n\t\t\t\tapplyOnCreate = getApplySet(this)\r\n\t\t\t}\r\n\t\t}*/\r\n\t\tvar element = doc.createElement(this.tagName)\r\n\t\tif (selector && selector.parent) {\r\n\t\t\tparent = selector.parent\r\n\t\t}\r\n\t\tif (parent) {\r\n\t\t\tpresumptiveParentMap.set(element, parent)\r\n\t\t}\r\n\t\tif (!(element instanceof this)) {\r\n\t\t\t// ideally we want to avoid this call, as it is expensive, but for classes that\r\n\t\t\t// don't register a tag name, we have to make sure the prototype chain is correct\r\n\t\t\tsetPrototypeOf(element, this.prototype)\r\n\t\t}\r\n\t\tif (element.constructor != this) {\r\n\t\t\telement.constructor = this // need to do this for hasOwn contextualization to work\r\n\t\t}\r\n\t\tif (arguments.length > 0) {\r\n\t\t\t// copy applyOnCreate when we have arguments\r\n\t\t\tvar ElementApplyOnCreate = applyOnCreate\r\n\t\t\tapplyOnCreate = {}\r\n\t\t\tfor (var key in ElementApplyOnCreate) {\r\n\t\t\t\tapplyOnCreate[key] = ElementApplyOnCreate[key]\r\n\t\t\t}\r\n\t\t\tvar i = 0\r\n\t\t\tif (typeof selector == 'string') {\r\n\t\t\t\ti++\r\n\t\t\t\tvar selectorMatch = selector.match(SELECTOR_REGEX)\r\n\t\t\t\tif (selectorMatch) {\r\n\t\t\t\t\tdo {\r\n\t\t\t\t\t\tvar operator = selectorMatch[1]\r\n\t\t\t\t\t\tvar name = selectorMatch[2]\r\n\t\t\t\t\t\tif (operator == '.') {\r\n\t\t\t\t\t\t\tif (applyOnCreate.className) {\r\n\t\t\t\t\t\t\t\tapplyOnCreate.className += ' ' + name\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tif (element.className) {\r\n\t\t\t\t\t\t\t\t    element.className += ' ' + name\r\n\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t    element.className = name\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tif (applyOnCreate.id) {\r\n\t\t\t\t\t\t\t\tapplyOnCreate.id = name\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t// just skip right to the element\r\n\t\t\t\t\t\t\t\telement.id = name\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar remaining = selectorMatch[3]\r\n\t\t\t\t\t\tselectorMatch = remaining && remaining.match(SELECTOR_REGEX)\r\n\t\t\t\t\t} while (selectorMatch)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tapplyOnCreate.content = selector\r\n\t\t\t\t}\r\n\t\t\t} else if (selector && selector._item) {\r\n\t\t\t\t// this is kind of hack, to get the Item available before the properties, eventually we may want to\r\n\t\t\t\t// order static properties before variable binding applications, but for now.\r\n\t\t\t\telement._item = selector._item\r\n\t\t\t}\r\n\t\t\tfor (var l = arguments.length; i < l; i++) {\r\n\t\t\t\tvar argument = arguments[i]\r\n\t\t\t\tif (argument instanceof Array || argument.notifies) {\r\n\t\t\t\t\tapplyOnCreate.content = argument\r\n\t\t\t\t} else if (typeof argument === 'function' && argument.for) {\r\n\t\t\t\t\tapplyOnCreate.content = argument.for(element)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tfor (var key in argument) {\r\n\t\t\t\t\t\t// TODO: do deep merging of styles and classes, but not variables\r\n\t\t\t\t\t\tapplyOnCreate[key] = argument[key]\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t\t// TODO: inline this\r\n\t\tapplyProperties(element, applyOnCreate)\r\n\t\tif (this.children) {\r\n\t\t\tlayoutChildren(element, this.children, element)\r\n\t\t}\r\n\t\t// always do this last, so it can be properly inserted inside the children\r\n\t\tif (applyOnCreate.content) {\r\n\t\t\tbuildContent(element, applyOnCreate.content, 'content', applyOnCreate)\r\n\t\t}\r\n\t\telement.createdCallback && element.createdCallback()\r\n\t\telement.created && element.created(applyOnCreate)\r\n\t\treturn element\r\n\t}\r\n\r\n\tvar slice = [].slice\r\n\tfunction append(parent){\r\n\t\treturn this.nodeType ?\r\n\t\t\tlayoutChildren(this, arguments, this) : // called as a method\r\n\t\t\tlayoutChildren(parent, slice.call(arguments, 1), parent) // called as a function\r\n\t}\r\n\r\n\tfunction prepend(parent){\r\n\t\treturn this.nodeType ?\r\n\t\t\tlayoutChildren(this, arguments, this, true) : // called as a method\r\n\t\t\tlayoutChildren(parent, slice.call(arguments, 1), parent, true) // called as a function\r\n\t}\r\n\r\n\tfunction registerTag(tagName) {\r\n\t\tthis.tagName = tagName\r\n\t\tif (document.registerElement && this.prototype.constructor === this) {\r\n\t\t\tdocument.registerElement(tagName, this)\r\n\t\t}\r\n\t}\r\n\r\n\tvar Element = withProperties.call(typeof HTMLElement !== 'undefined' ? HTMLElement : function() {})\r\n\r\n\tElement.registerTag = registerTag\r\n\r\n\tElement.within = function(element){\r\n\t\t// find closest child\r\n\t}\r\n\r\n\tgenerate([\r\n\t\t'Video',\r\n\t\t'Source',\r\n\t\t'Media',\r\n\t\t'Audio',\r\n\t\t'UL',\r\n\t\t'Track',\r\n\t\t'Title',\r\n\t\t'TextArea',\r\n\t\t'Template',\r\n\t\t'TBody',\r\n\t\t'THead',\r\n\t\t'TFoot',\r\n\t\t'TR',\r\n\t\t'Table',\r\n\t\t'Col',\r\n\t\t'ColGroup',\r\n\t\t'TH',\r\n\t\t'TD',\r\n\t\t'Caption',\r\n\t\t'Style',\r\n\t\t'Span',\r\n\t\t'Shadow',\r\n\t\t'Select',\r\n\t\t'Script',\r\n\t\t'Quote',\r\n\t\t'Progress',\r\n\t\t'Pre',\r\n\t\t'Picture',\r\n\t\t'Param',\r\n\t\t'P',\r\n\t\t'Output',\r\n\t\t'Option',\r\n\t\t'Optgroup',\r\n\t\t'Object',\r\n\t\t'OL',\r\n\t\t'Ins',\r\n\t\t'Del',\r\n\t\t'Meter',\r\n\t\t'Meta',\r\n\t\t'Menu',\r\n\t\t'Map',\r\n\t\t'Link',\r\n\t\t'Legend',\r\n\t\t'Label',\r\n\t\t'LI',\r\n\t\t'KeyGen',\r\n\t\t'Input',\r\n\t\t'Image',\r\n\t\t'IFrame',\r\n\t\t'H1',\r\n\t\t'H2',\r\n\t\t'H3',\r\n\t\t'H4',\r\n\t\t'H5',\r\n\t\t'H6',\r\n\t\t'Hr',\r\n\t\t'FrameSet',\r\n\t\t'Frame',\r\n\t\t'Form',\r\n\t\t'Font',\r\n\t\t'Embed',\r\n\t\t'Article',\r\n\t\t'Aside',\r\n\t\t'Footer',\r\n\t\t'Figure',\r\n\t\t'FigCaption',\r\n\t\t'Header',\r\n\t\t'Main',\r\n\t\t'Mark',\r\n\t\t'MenuItem',\r\n\t\t'Nav',\r\n\t\t'Section',\r\n\t\t'Summary',\r\n\t\t'WBr',\r\n\t\t'Div',\r\n\t\t'Dialog',\r\n\t\t'Details',\r\n\t\t'DataList',\r\n\t\t'DL',\r\n\t\t'Canvas',\r\n\t\t'Button',\r\n\t\t'Base',\r\n\t\t'Br',\r\n\t\t'Area',\r\n\t\t'A'\r\n\t])\r\n\tgenerateInputs([\r\n\t\t'Checkbox',\r\n\t\t'Password',\r\n\t\t'Submit',\r\n\t\t'Radio',\r\n\t\t'Color',\r\n\t\t'Date',\r\n\t\t'DateTime',\r\n\t\t'Email',\r\n\t\t'Month',\r\n\t\t'Number',\r\n\t\t'Range',\r\n\t\t'Search',\r\n\t\t'Tel',\r\n\t\t'Time',\r\n\t\t'Url',\r\n\t\t'Week'])\r\n\r\n\tvar tags = {}\r\n\tfunction getConstructor(tagName) {\r\n\t\ttagName = tagName.toLowerCase()\r\n\t\treturn tags[tagName] ||\r\n\t\t\t(tags[tagName] =\r\n\t\t\t\tsetTag(withProperties.call(doc.createElement(tagName).constructor), tagName))\r\n\t}\r\n\r\n\tfunction setTag(Element, tagName) {\r\n\t\tElement.tagName = tagName\r\n\t\treturn Element\r\n\t}\r\n\tfunction generate(elements) {\r\n\t\telements.forEach(function(elementName) {\r\n\t\t\tvar ElementClass\r\n\t\t\tObject.defineProperty(Element, elementName, {\r\n\t\t\t\tget: function() {\r\n\t\t\t\t\treturn ElementClass || (ElementClass = getConstructor(elementName))\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\tfunction generateInputs(elements) {\r\n\t\telements.forEach(function(inputType) {\r\n\t\t\tvar ElementClass\r\n\t\t\tObject.defineProperty(Element, inputType, {\r\n\t\t\t\tget: function() {\r\n\t\t\t\t\t// TODO: make all inputs extend from input generated from generate\r\n\t\t\t\t\treturn ElementClass || (ElementClass = setTag(withProperties.call(HTMLInputElement, {\r\n\t\t\t\t\t\ttype: inputType.toLowerCase()\r\n\t\t\t\t\t}), 'input'))\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\t// alias all the inputs with an Input suffix\r\n\t\t\tObject.defineProperty(Element, inputType + 'Input', {\r\n\t\t\t\tget: function() {\r\n\t\t\t\t\treturn this[inputType]\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\tvar aliases = {\r\n\t\tAnchor: 'A',\r\n\t\tParagraph: 'P',\r\n\t\tTextarea: 'TextArea',\r\n\t\tDList: 'DL',\r\n\t\tUList: 'UL',\r\n\t\tOList: 'OL',\r\n\t\tListItem: 'LI',\r\n\t\tText: 'Input',\r\n\t\tTextInput: 'Input',\r\n\t\tTableRow: 'TR',\r\n\t\tTableCell: 'TD',\r\n\t\tTableHeaderCell: 'TH',\r\n\t\tTableHeader: 'THead',\r\n\t\tTableBody: 'TBody'\r\n\t}\r\n\tfor (var alias in aliases) {\r\n\t\t(function(alias, to) {\r\n\t\t\tObject.defineProperty(Element, alias, {\r\n\t\t\t\tget: function() {\r\n\t\t\t\t\treturn this[to]\r\n\t\t\t\t}\r\n\t\t\t})\t\t\t\r\n\t\t})(alias, aliases[alias])\r\n\t}\r\n\r\n\tElement.append = append\r\n\tElement.prepend = prepend\r\n\tElement.refresh = Updater.refresh\r\n\tvar options = Element.options = {\r\n\t\tmoveLiveElementsEnabled: true,\r\n\t}\r\n\tElement.content = function(element){\r\n\t\t// container marker\r\n\t\treturn {\r\n\t\t\tisContentNode: true,\r\n\t\t\tcreate: element.create.bind(element)\r\n\t\t}\r\n\t}\r\n\t// TODO: unify this in lang\r\n\tElement.extend = function(Class, properties) {\r\n\t\tfunction ExtendedElement() {\r\n\t\t\treturn Class.apply(this, arguments)\r\n\t\t}\r\n\t\tsetPrototypeOf(ExtendedElement, Class)\r\n\t\tvar prototype = ExtendedElement.prototype = Object.create(Class.prototype)\r\n\t\tprototype.constructor = ExtendedElement\r\n\t\tObject.getOwnPropertyNames(properties).forEach(function(key) {\r\n\t\t\tvar descriptor = Object.getOwnPropertyDescriptor(properties, key)\r\n\t\t\tif (classHandlers[key]) {\r\n\t\t\t\tclassHandlers[key](ExtendedElement, descriptor.value)\r\n\t\t\t} else {\r\n\t\t\t\tObject.defineProperty(prototype, key, descriptor)\r\n\t\t\t}\r\n\t\t})\r\n\t\treturn ExtendedElement\r\n\t}\r\n\r\n\tfunction forTarget(target) {\r\n\t\treturn target.constructor.getForClass(target, this)\r\n\t}\r\n\r\n\tfunction hasOwn(From, Target, createInstance) {\r\n\t\tif (typeof Target === 'object' && Target.Class) {\r\n\t\t\treturn hasOwn(From, Target.Class, Target.createInstance)\r\n\t\t}\r\n\t\tif (Target instanceof Array) {\r\n\t\t\treturn Target.forEach(function(Target) {\r\n\t\t\t\thasOwn(From, Target)\r\n\t\t\t})\r\n\t\t}\r\n\t\tvar ownedClasses = From.ownedClasses || (From.ownedClasses = new WeakMap())\r\n\t\t// TODO: assign to super classes\r\n\t\townedClasses.set(Target, createInstance || function() {\r\n\t\t\treturn new Target()\r\n\t\t})\r\n\t\treturn From\r\n\t}\r\n\r\n\tvar globalInstances = {}\r\n\tfunction getForClass(element, Target) {\r\n\t\tvar createInstance\r\n\t\twhile (element && !(createInstance = element.constructor.ownedClasses && element.constructor.ownedClasses.get(Target))) {\r\n\t\t\telement = element.parentNode || presumptiveParentMap.get(element)\r\n\t\t}\r\n\t\tif (createInstance) {\r\n\t\t\tvar ownedInstances = element.ownedInstances || (element.ownedInstances = new WeakMap())\r\n\t\t\tvar instance = ownedInstances.get(Target)\r\n\t\t\tif (instance === undefined) {\r\n\t\t\t\townedInstances.set(Target, instance = createInstance(element))\r\n\t\t\t\tinstance.subject = element\r\n\t\t\t}\r\n\t\t\treturn instance\r\n\t\t}\r\n\t}\r\n\r\n\tfunction propertyForElement(key) {\r\n\t\t// we just need to establish one Variable class for each element, so we cache it\r\n\t\tThisElementVariable = this._Variable\r\n\t\tif (!ThisElementVariable) {\r\n\t\t\t// need our own branded variable class for this element class\r\n\t\t\tThisElementVariable = this._Variable = Variable()\r\n\r\n\t\t\thasOwn(this, ThisElementVariable, function(element) {\r\n\t\t\t\t// when we create the instance, immediately observe it\r\n\t\t\t\t// TODO: we might want to do this in init instead\r\n\t\t\t\tvar instance = new ThisElementVariable(element)\r\n\t\t\t\tinstance.observeObject()\r\n\t\t\t\treturn instance\r\n\t\t\t})\r\n\t\t}\r\n\t\t// now actually get the property class\r\n\t\treturn ThisElementVariable.property(key)\r\n\t}\r\n\r\n\tvar Item = Element.Item = Variable.Item\r\n\r\n\tfunction enterUpdater(Updater, options/*, target*/) {\r\n\t\t// this will be used for optimized class-level variables\r\n\t\t/*if (target.started) { // TODO: Might want to pass in started as a parameter\r\n\t\t\t// this means that the updater has already been created, so we just need to add this instance\r\n\t\t\tUpdater.prototype.renderUpdate.call(options, element)\r\n\t\t} else {*/\r\n\t\tvar target = options.element\r\n\t\tvar updaters = target.updaters || (target.updaters = [])\r\n\t\tupdaters.push(new Updater(options))\r\n\t\t//}\r\n\t}\r\n\r\n\tfunction cleanup(target) {\r\n\t\tvar updaters = target.updaters\r\n\t\tif (updaters) {\r\n\t\t\tfor (var i = 0, l = updaters.length; i < l; i++) {\r\n\t\t\t\tupdaters[i].stop()\r\n\t\t\t}\r\n\t\t\ttarget.needsRestart = true\r\n\t\t}\r\n\t}\r\n\tfunction restart(target) {\r\n\t\tvar updaters = target.updaters\r\n\t\tif (updaters) {\r\n\t\t\tfor (var i = 0, l = updaters.length; i < l; i++) {\r\n//\t\t\t\tupdaters[i].start()\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t// setup the mutation observer so we can be notified of attachments and removals\r\n\tfunction elementAttached(element) {\r\n\t\tvar Class = element.constructor\r\n\t\tif (Class.create) {\r\n/*\t\t\tif (Class.attachedInstances) {\r\n\t\t\t\tClass.attachedInstances.push(element)\r\n\t\t\t\tif (Class.attachedInstances.length === 1 && Class.needsRestart) {\r\n\t\t\t\t\trestart(Class)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tClass.attachedInstances = [element]\r\n\t\t\t}*/\r\n\t\t\tif (element.attached) {\r\n\t\t\t\telement.attached()\r\n\t\t\t}\r\n\t\t\tif (element.needsRestart) {\r\n\t\t\t\trestart(element)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tfunction elementDetached(element) {\r\n\t\t/*var attachedInstances = element.constructor.attachedInstances\r\n\t\tif (attachedInstances) {\r\n\t\t\tvar index = attachedInstances.indexOf(element)\r\n\t\t\tif (index > -1) {\r\n\t\t\t\tattachedInstances.splice(index, 1)\r\n\t\t\t\tif (attachedInstances.length === 0) {\r\n\t\t\t\t\tcleanup(Class)\r\n\t\t\t\t}\r\n\t\t\t}*/\r\n\t\t\tif (element.detached) {\r\n\t\t\t\telement.detached()\r\n\t\t\t}\r\n\t\t\tcleanup(element)\r\n\t\t//}\r\n\t}\r\n\tif (typeof MutationObserver === 'function') {\r\n\t\tvar lifeStates = [{\r\n\t\t\tname: 'detached',\r\n\t\t\tnodes: 'removedNodes',\r\n\t\t\taction: elementDetached\r\n\t\t}, {\r\n\t\t\tname: 'attached',\r\n\t\t\tnodes: 'addedNodes',\r\n\t\t\taction: elementAttached\r\n\t\t}]\r\n\t\tfunction firstVisit(node, state) {\r\n\t\t\tif (state.name === 'attached') {\r\n\t\t\t\tif (node.__alkaliAttached__) {\r\n\t\t\t\t\treturn false\r\n\t\t\t\t} else {\r\n\t\t\t\t\tnode.__alkaliAttached__ = true\r\n\t\t\t\t\tstate.action(node)\r\n\t\t\t\t\treturn true\r\n\t\t\t\t}\r\n\t\t\t} else if (node.__alkaliAttached__) {\r\n\t\t\t\tif (document.contains(node)) {\r\n\t\t\t\t\t// detached event, but it is actually still attached (will get attached in a later mutation record)\r\n\t\t\t\t\t// so don't get through the detached/attached lifecycle\r\n\t\t\t\t\treturn false\r\n\t\t\t\t}\r\n\t\t\t\tnode.__alkaliAttached__ = false\r\n\t\t\t\tstate.action(node)\r\n\t\t\t}\r\n\t\t\treturn true\r\n\t\t}\r\n\t\tvar observer = new MutationObserver(function(mutations) {\r\n\t\t\tfor (var i = 0, il = mutations.length; i < il; i++) {\r\n\t\t\t\tvar mutation = mutations[i]\r\n\t\t\t\t// invoke action on element if we haven't already\r\n\t\t\t\tactionIteration:\r\n\t\t\t\tfor (var j = 0, jl = lifeStates.length; j < jl; j++) { // two steps, removed nodes and added nodes\r\n\t\t\t\t\tvar state = lifeStates[j]\r\n\t\t\t\t\tvar nodes = mutation[state.nodes]\r\n\t\t\t\t\t// iterate over node list\r\n\t\t\t\t\tnodeIteration:\r\n\t\t\t\t\tfor (var k = 0, kl = nodes.length; k < kl; k++) {\r\n\t\t\t\t\t\tvar baseNode = nodes[k]\r\n\t\t\t\t\t\tif (firstVisit(baseNode, state)) {\r\n\t\t\t\t\t\t\t// start traversal with child, if it exists\r\n\t\t\t\t\t\t\tvar currentNode = baseNode.firstChild\r\n\t\t\t\t\t\t\tif (currentNode) {\r\n\t\t\t\t\t\t\t\tdo {\r\n\t\t\t\t\t\t\t\t\tvar nextNode\r\n\t\t\t\t\t\t\t\t\tif (currentNode.nodeType === 1 && firstVisit(currentNode, state)) {\r\n\t\t\t\t\t\t\t\t\t\t// depth-first search\r\n\t\t\t\t\t\t\t\t\t\tnextNode = currentNode.firstChild\r\n\t\t\t\t\t\t\t\t\t\tif (!nextNode) {\r\n\t\t\t\t\t\t\t\t\t\t\tnextNode = currentNode.nextSibling\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\t\t\tnextNode = currentNode.nextSibling\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tif (!nextNode) {\r\n\t\t\t\t\t\t\t\t\t\t// come back out to parents\r\n\t\t\t\t\t\t\t\t\t\t// TODO: try keeping a stack to make this faster\r\n\t\t\t\t\t\t\t\t\t\tdo {\r\n\t\t\t\t\t\t\t\t\t\t\tcurrentNode = currentNode.parentNode\r\n\t\t\t\t\t\t\t\t\t\t\tif (currentNode === baseNode) {\r\n\t\t\t\t\t\t\t\t\t\t\t\tcontinue nodeIteration\r\n\t\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t\t} while (!(nextNode = currentNode.nextSibling))\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tcurrentNode = nextNode\r\n\t\t\t\t\t\t\t\t} while (true)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// if (options.moveLiveElementsEnabled) {\r\n\t\t\t\t\t\t// TODO: any options that we can really do here?\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t\tobserver.observe(document.body, {\r\n\t\t\tchildList: true,\r\n\t\t\tsubtree: true\r\n\t\t})\r\n\t}\r\n\r\n\treturn Element\r\n})\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Element.js\n ** module id = 1\n ** module chunks = 0\n **/","define(['./util/lang'], function (lang) {\r\n\tvar deny = {}\r\n\tvar noChange = {}\r\n\tvar WeakMap = lang.WeakMap\r\n\tvar setPrototypeOf = Object.setPrototypeOf || (function(base, proto) { base.__proto__ = proto})\r\n\tvar getPrototypeOf = Object.getPrototypeOf || (function(base) { return base.__proto__ })\r\n\t// update types\r\n\tvar ToParent = 2\r\n\tvar RequestChange = 3\r\n\t\r\n\tvar ToChild = Object.freeze({\r\n\t\ttype: 'refresh'\r\n\t})\r\n\tvar nextId = 1\r\n\tvar propertyListenersMap = new WeakMap(null, 'propertyListenersMap')\r\n\r\n\tvar CacheEntry = lang.compose(WeakMap, function() {\r\n\t},{\r\n\t\t_propertyChange: function(propertyName) {\r\n\t\t\tthis.variable._propertyChange(propertyName, contextFromCache(this))\r\n\t\t}\r\n\t})\r\n\tvar listenerId = 1\r\n\r\n\tfunction mergeSubject(context) {\r\n\t\tfor (var i = 1, l = arguments.length; i < l; i++) {\r\n\t\t\tvar nextContext = arguments[i]\r\n\t\t\tif (nextContext !== context && (!context || nextContext && context.contains && context.contains(nextContext))) {\r\n\t\t\t\tcontext = nextContext\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn context\r\n\t}\r\n\r\n\tfunction getMaterializedContextualInstance(variable, context) {\r\n\t\tvar subject = context && (context.distinctSubject || context.subject)\r\n\t\tif (typeof variable === 'function') {\r\n\t\t\treturn variable.for(subject)\r\n\t\t}\r\n\t\tvar contextMap = variable.contextMap\r\n\t\tif (context && contextMap) {\r\n\t\t\twhile(subject && !contextMap.has(subject)) {\r\n\t\t\t\tsubject = subject.parentNode\r\n\t\t\t}\r\n\t\t\tif (!subject) {\r\n\t\t\t\tsubject = defaultContext\r\n\t\t\t}\r\n\t\t\treturn contextMap.get(subject)\r\n\t\t}\r\n\t}\r\n\tfunction when(value, callback) {\r\n\t\tif (value && value.then) {\r\n\t\t\treturn value.then(callback)\r\n\t\t}\r\n\t\treturn callback(value)\r\n\t}\r\n\r\n\tfunction Context(subject){\r\n\t\tthis.subject = subject\r\n\t}\r\n\tfunction whenAll(inputs, callback){\r\n\t\tvar promiseInvolved\r\n\t\tvar needsContext\r\n\t\tfor (var i = 0, l = inputs.length; i < l; i++) {\r\n\t\t\tif (inputs[i] && inputs[i].then) {\r\n\t\t\t\tpromiseInvolved = true\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (promiseInvolved) {\r\n\t\t\treturn lang.whenAll(inputs, callback)\r\n\t\t}\r\n\t\treturn callback(inputs)\r\n\t}\r\n\r\n\tfunction registerListener(value, listener) {\r\n\t\tvar listeners = propertyListenersMap.get(value)\r\n\t\tvar id = listener.listenerId || (listener.listenerId = ('-' + listenerId++))\r\n\t\tif (listeners) {\r\n\t\t\tif (listeners[id] === undefined) {\r\n\t\t\t\tlisteners[id] = listeners.push(listener) - 1\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tpropertyListenersMap.set(value, listeners = [listener])\r\n\t\t\tlisteners[id] = 0\r\n\t\t\tif (Variable.autoObserveObjects) {\r\n\t\t\t\tobserve(value)\r\n\t\t\t}\r\n\t\t}\r\n\t\tlistener.listeningToObject = value\r\n\t}\r\n\tfunction deregisterListener(listener) {\r\n\t\tif (listener.listeningToObject) {\r\n\t\t\tvar value = listener.listeningToObject\r\n\t\t\tlistener.listeningToObject = null\r\n\t\t\tvar listeners = propertyListenersMap.get(value)\r\n\t\t\tif (listeners) {\r\n\t\t\t\tvar index = listeners[listener.listenerId]\r\n\t\t\t\tif (index > -1) {\r\n\t\t\t\t\tlisteners.splice(index, 1)\r\n\t\t\t\t\tdelete listeners[listener.listenerId]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction RefreshEvent() {\r\n\t\tthis.visited = new Set()\r\n\t}\r\n\tRefreshEvent.prototype.type = 'refresh'\r\n\r\n\tfunction PropertyChangeEvent(key, childEvent) {\r\n\t\tthis.key = key\r\n\t\tthis.childEvent = childEvent\r\n\t\tthis.visited = childEvent.visited\r\n\t}\r\n\tPropertyChangeEvent.prototype.type = 'update'\r\n\r\n\tfunction AddEvent(args) {\r\n\t\tthis.visited = new Set()\r\n\t\tfor (var key in args) {\r\n\t\t\tthis[key] = args[key]\r\n\t\t}\r\n\t}\r\n\tAddEvent.prototype.type = 'add'\r\n\tfunction DeleteEvent(args) {\r\n\t\tthis.visited = new Set()\r\n\t\tfor (var key in args) {\r\n\t\t\tthis[key] = args[key]\r\n\t\t}\r\n\t}\r\n\tDeleteEvent.prototype.type = 'delete'\r\n\r\n\r\n\tfunction Variable(value) {\r\n\t\tif (this instanceof Variable) {\r\n\t\t\t// new call, may eventually use new.target\r\n\t\t\tthis.value = typeof value === 'undefined' ? this.default : value\r\n\t\t} else {\r\n\t\t\treturn Variable.extend(value)\r\n\t\t}\r\n\t}\r\n\tvar VariablePrototype = Variable.prototype = {\r\n\t\tconstructor: Variable,\r\n\t\tvalueOf: function(context) {\r\n\t\t\tif (this.subject) {\r\n\t\t\t\tvar variable = this\r\n\t\t\t\tcontext = new Context(this.subject)\r\n\t\t\t}\r\n\t\t\treturn this.gotValue(this.getValue(context), context)\r\n\t\t},\r\n\t\tgetValue: function() {\r\n\t\t\treturn this.value\r\n\t\t},\r\n\t\tgotValue: function(value, context) {\r\n\t\t\tvar previousNotifyingValue = this.notifyingValue\r\n\t\t\tvar variable = this\r\n\t\t\tif (value && value.then) {\r\n\t\t\t\treturn when(value, function(value) {\r\n\t\t\t\t\treturn Variable.prototype.gotValue.call(variable, value, context)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\tif (previousNotifyingValue) {\r\n\t\t\t\tif (value === previousNotifyingValue) {\r\n\t\t\t\t\t// nothing changed, immediately return valueOf\r\n\t\t\t\t\treturn value.valueOf(context)\r\n\t\t\t\t}\r\n\t\t\t\t// if there was a another value that we were dependent on before, stop listening to it\r\n\t\t\t\t// TODO: we may want to consider doing cleanup after the next rendering turn\r\n\t\t\t\tif (variable.dependents) {\r\n\t\t\t\t\tpreviousNotifyingValue.stopNotifies(variable)\r\n\t\t\t\t}\r\n\t\t\t\tvariable.notifyingValue = null\r\n\t\t\t}\r\n\t\t\tif (value && value.notifies) {\r\n\t\t\t\tif (variable.dependents) {\r\n\t\t\t\t\t\t// the value is another variable, start receiving notifications\r\n\t\t\t\t\tvalue.notifies(variable)\r\n\t\t\t\t}\r\n\t\t\t\tvariable.notifyingValue = value\r\n\t\t\t\tvalue = value.valueOf(context)\r\n\t\t\t}\r\n\t\t\tif (value === undefined) {\r\n\t\t\t\tvalue = variable.default\r\n\t\t\t}\r\n\t\t\treturn value\r\n\t\t},\r\n\t\tisMap: function() {\r\n\t\t\treturn this.value instanceof Map\r\n\t\t},\r\n\t\tproperty: function(key) {\r\n\t\t\tvar isMap = this.isMap()\r\n\t\t\tvar properties = this._properties || (this._properties = isMap ? new Map() : {})\r\n\t\t\tvar propertyVariable = isMap ? properties.get(key) : properties[key]\r\n\t\t\tif (!propertyVariable) {\r\n\t\t\t\t// create the property variable\r\n\t\t\t\tpropertyVariable = new Property(this, key)\r\n\t\t\t\tif (isMap) {\r\n\t\t\t\t\tproperties.set(key, propertyVariable)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tproperties[key] = propertyVariable\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn propertyVariable\r\n\t\t},\r\n\t\tfor: function(subject) {\r\n\t\t\tif (subject && subject.target && !subject.constructor.getForClass) {\r\n\t\t\t\t// makes HTML events work\r\n\t\t\t\tsubject = subject.target\r\n\t\t\t}\r\n\t\t\tif (typeof this === 'function') {\r\n\t\t\t\t// this is a class, the subject should hopefully have an entry\r\n\t\t\t\tif (subject) {\r\n\t\t\t\t\tvar instance = subject.constructor.getForClass(subject, this)\r\n\t\t\t\t\tif (instance && !instance.subject) {\r\n\t\t\t\t\t\tinstance.subject = subject\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// TODO: Do we have a global context that we set on defaultInstance?\r\n\t\t\t\t\treturn instance || this.defaultInstance\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn this.defaultInstance\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn new ContextualizedVariable(this, subject || defaultContext)\r\n\t\t},\r\n\t\tdistinctFor: function(subject) {\r\n\t\t\tif (typeof this === 'function') {\r\n\t\t\t\treturn this.for(subject)\r\n\t\t\t}\r\n\t\t\tvar map = this.contextMap || (this.contextMap = new WeakMap())\r\n\t\t\tif (map.has(subject)) {\r\n\t\t\t\treturn map.get(subject)\r\n\t\t\t}\r\n\t\t\tvar contextualizedVariable\r\n\t\t\tmap.set(subject, contextualizedVariable = new ContextualizedVariable(this, subject))\r\n\t\t\treturn contextualizedVariable\r\n\t\t},\r\n\t\t_propertyChange: function(propertyName, object, context, type) {\r\n\t\t\tif (this.onPropertyChange) {\r\n\t\t\t\tthis.onPropertyChange(propertyName, object, context)\r\n\t\t\t}\r\n\t\t\tthis.updated(new PropertyChangeEvent(propertyName, new RefreshEvent()), null, context)\r\n\t\t},\r\n\t\teachKey: function(callback) {\r\n\t\t\tfor (var i in this._properties) {\r\n\t\t\t\tcallback(i)\r\n\t\t\t}\r\n\t\t},\r\n\t\tapply: function(instance, args) {\r\n\t\t\treturn new Call(this, args)\r\n\t\t},\r\n\t\tcall: function(instance) {\r\n\t\t\treturn this.apply(instance, Array.prototype.slice.call(arguments, 1))\r\n\t\t},\r\n\t\tforDependencies: function(callback) {\r\n\t\t\tif (this.notifyingValue) {\r\n\t\t\t\tcallback(this.notifyingValue)\r\n\t\t\t}\r\n\t\t},\r\n\t\tinit: function() {\r\n\t\t\tif (this.subject) {\r\n\t\t\t\tthis.constructor.notifies(this)\r\n\t\t\t}\r\n\t\t\tvar variable = this\r\n\t\t\tthis.forDependencies(function(dependency) {\r\n\t\t\t\tdependency.notifies(variable)\r\n\t\t\t})\r\n\t\t\tif (this.listeningToObject === null) {\r\n\t\t\t\t// we were previously listening to an object, but it needs to be restored\r\n\t\t\t\t// calling valueOf will cause the listening object to be restored\r\n\t\t\t\tthis.valueOf()\r\n\t\t\t}\r\n\t\t},\r\n\t\tcleanup: function() {\r\n\t\t\tvar handles = this.handles\r\n\t\t\tif (handles) {\r\n\t\t\t\tfor (var i = 0; i < handles.length; i++) {\r\n\t\t\t\t\thandles[i].remove()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.handles = null\r\n\t\t\tvar notifyingValue = this.notifyingValue\r\n\t\t\tif (notifyingValue) {\r\n\t\t\t\t// TODO: move this into the caching class\r\n\t\t\t\tthis.computedVariable = null\r\n\t\t\t}\r\n\t\t\tvar variable = this\r\n\t\t\tthis.forDependencies(function(dependency) {\r\n\t\t\t\tdependency.stopNotifies(variable)\r\n\t\t\t})\r\n\t\t\tif (this.context) {\r\n\t\t\t\tthis.constructor.stopNotifies(this)\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tupdateVersion: function(version) {\r\n\t\t\tthis.version = nextId++\r\n\t\t},\r\n\r\n\t\tgetVersion: function(context) {\r\n\t\t\treturn Math.max(this.version || 0, this.notifyingValue && this.notifyingValue.getVersion ? this.notifyingValue.getVersion(context) : 0)\r\n\t\t},\r\n\r\n\t\tgetSubject: function(selectVariable) {\r\n\t\t\treturn this.subject\r\n\t\t},\r\n\r\n\t\tgetUpdates: function(since) {\r\n\t\t\tvar updates = []\r\n\t\t\tvar nextUpdateMap = this.nextUpdateMap\r\n\t\t\tif (nextUpdateMap && since) {\r\n\t\t\t\twhile ((since = nextUpdateMap.get(since))) {\r\n\t\t\t\t\tif (since.type === 'refresh') {\r\n\t\t\t\t\t\t// if it was refresh, we can clear any prior entries\r\n\t\t\t\t\t\tupdates = []\r\n\t\t\t\t\t}\r\n\t\t\t\t\tupdates.push(since)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn updates\r\n\t\t},\r\n\r\n\t\tupdated: function(updateEvent, by, context) {\r\n\t\t\tif (!updateEvent) {\r\n\t\t\t\tupdateEvent = new RefreshEvent()\r\n\t\t\t}\r\n\t\t\tif (updateEvent.visited.has(this)){\r\n\t\t\t\t// if this event has already visited this variable, skip it\r\n\t\t\t\treturn\r\n\t\t\t}\r\n\t\t\tupdateEvent.visited.add(this)\r\n\t\t\tif (this.subject) {\r\n\t\t\t\tif (by === this.constructor) {\r\n\t\t\t\t\t// if we receive an update from the constructor, filter it\r\n\t\t\t\t\tif (!(!context || (context.distinctSubject || context.subject) === this.subject || (context.subject.contains && this.subject.nodeType && context.subject.contains(this.subject)))) {\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\t// if we receive an outside update, send it to the constructor\r\n\t\t\t\t\treturn this.constructor.updated(updateEvent, this, new Context(this.subject))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tvar contextualInstance = getMaterializedContextualInstance(this, context)\r\n\t\t\tif (contextualInstance) {\r\n\t\t\t\tcontextualInstance.updated(updateEvent, this, context)\r\n\t\t\t}\r\n\t\t\tif (this.lastUpdate) {\r\n\t\t\t\tvar nextUpdateMap = this.nextUpdateMap\r\n\t\t\t\tif (!nextUpdateMap) {\r\n\t\t\t\t\tnextUpdateMap = this.nextUpdateMap = new WeakMap()\r\n\t\t\t\t}\r\n\t\t\t\tnextUpdateMap.set(this.lastUpdate, updateEvent)\r\n\t\t\t}\r\n\r\n\t\t\tthis.lastUpdate = updateEvent\r\n\t\t\tthis.updateVersion()\r\n\t\t\tvar value = this.value\r\n\r\n\t\t\tvar dependents = this.dependents\r\n\t\t\tif (dependents) {\r\n\t\t\t\t// make a copy, in case they change\r\n\t\t\t\tdependents = dependents.slice(0)\r\n\t\t\t\tfor (var i = 0, l = dependents.length; i < l; i++) {\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\tvar dependent = dependents[i]\r\n\t\t\t\t\t\tif ((updateEvent instanceof PropertyChangeEvent) &&\r\n\t\t\t\t\t\t\t\t(dependent instanceof Property)) {\r\n\t\t\t\t\t\t\tif (dependent.key === updateEvent.key) {\r\n\t\t\t\t\t\t\t\tdependent.updated(updateEvent.childEvent, this, context)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tdependent.updated(updateEvent, this, context)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}catch(e) {\r\n\t\t\t\t\t\tconsole.error(e, e.stack, 'updating a variable')\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif (updateEvent instanceof PropertyChangeEvent) {\r\n\t\t\t\tif (this.notifyingValue) {\r\n\t\t\t\t\tthis.notifyingValue.updated(updateEvent, this, context)\r\n\t\t\t\t}\r\n\t\t\t\tif (this.collection) {\r\n\t\t\t\t\tthis.collection.updated(updateEvent, this, context)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn updateEvent\r\n\t\t},\r\n\r\n\t\tinvalidate: function() {\r\n\t\t\t// for back-compatibility for now\r\n\t\t\tthis.updated()\r\n\t\t},\r\n\r\n\t\tnotifies: function(target) {\r\n\t\t\tvar dependents = this.dependents\r\n\t\t\tif (!dependents || !this.hasOwnProperty('dependents')) {\r\n\t\t\t\tthis.dependents = dependents = []\r\n\t\t\t\tthis.init()\r\n\t\t\t}\r\n\t\t\tdependents.push(target)\r\n\t\t\tvar variable = this\r\n\t\t\treturn {\r\n\t\t\t\tunsubscribe: function() {\r\n\t\t\t\t\tvariable.stopNotifies(target)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tsubscribe: function(listener) {\r\n\t\t\t// ES7 Observable (and baconjs) compatible API\r\n\t\t\tvar updated\r\n\t\t\tvar updateQueued\r\n\t\t\tvar variable = this\r\n\t\t\t// it is important to make sure you register for notifications before getting the value\r\n\t\t\tif (typeof listener === 'function') {\r\n\t\t\t\t// BaconJS compatible API\r\n\t\t\t\tvar variable = this\r\n\t\t\t\tvar event = {\r\n\t\t\t\t\tvalue: function() {\r\n\t\t\t\t\t\treturn variable.valueOf()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tupdated = function() {\r\n\t\t\t\t\tupdateQueued = false\r\n\t\t\t\t\tlistener(event)\r\n\t\t\t\t}\r\n\t\t\t}\telse if (listener.next) {\r\n\t\t\t\t// Assuming ES7 Observable API. It is actually a streaming API, this pretty much violates all principles of reactivity, but we will support it\r\n\t\t\t\tupdated = function() {\r\n\t\t\t\t\tupdateQueued = false\r\n\t\t\t\t\tlistener.next(variable.valueOf())\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tthrow new Error('Subscribing to an invalid listener, the listener must be a function, or have an update or next method')\r\n\t\t\t}\r\n\r\n\t\t\tvar handle = this.notifies({\r\n\t\t\t\tupdated: function() {\r\n\t\t\t\t\tif (updateQueued) {\r\n\t\t\t\t\t\treturn\r\n\t\t\t\t\t}\r\n\t\t\t\t\tupdateQueued = true\r\n\t\t\t\t\tlang.nextTurn(updated)\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tvar initialValue = this.valueOf()\r\n\t\t\tif (initialValue !== undefined) {\r\n\t\t\t\tupdated()\r\n\t\t\t}\r\n\t\t\treturn handle\r\n\t\t},\r\n\t\tstopNotifies: function(dependent) {\r\n\t\t\tvar dependents = this.dependents\r\n\t\t\tif (dependents) {\r\n\t\t\t\tfor (var i = 0; i < dependents.length; i++) {\r\n\t\t\t\t\tif (dependents[i] === dependent) {\r\n\t\t\t\t\t\tdependents.splice(i--, 1)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif (dependents.length === 0) {\r\n\t\t\t\t\t// clear the dependents so it will be reinitialized if it has\r\n\t\t\t\t\t// dependents again\r\n\t\t\t\t\tthis.dependents = dependents = false\r\n\t\t\t\t\tthis.cleanup()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tput: function(value, context) {\r\n\t\t\tvar variable = this\r\n\t\t\t\r\n\t\t\treturn when(this.getValue(context), function(oldValue) {\r\n\t\t\t\tif (oldValue === value) {\r\n\t\t\t\t\treturn noChange\r\n\t\t\t\t}\r\n\t\t\t\tif (variable.fixed &&\r\n\t\t\t\t\t\t// if it is set to fixed, we see we can put in the current variable\r\n\t\t\t\t\t\toldValue && oldValue.put && // if we currently have a variable\r\n\t\t\t\t\t\t// and it is always fixed, or not a new variable\r\n\t\t\t\t\t\t(variable.fixed == 'always' || !(value && value.notifies))) {\r\n\t\t\t\t\treturn oldValue.put(value)\r\n\t\t\t\t}\r\n\t\t\t\treturn when(variable.setValue(value, context), function(value) {\r\n\t\t\t\t\tvariable.updated(new RefreshEvent(), variable, context)\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t},\r\n\t\tget: function(key) {\r\n\t\t\treturn when(this.valueOf(), function(object) {\r\n\t\t\t\tvar value = object && (typeof object.get === 'function' ? object.get(key) : object[key])\r\n\t\t\t\tif (value && value.notifies) {\r\n\t\t\t\t\t// nested variable situation, get underlying value\r\n\t\t\t\t\treturn value.valueOf()\r\n\t\t\t\t}\r\n\t\t\t\treturn value\r\n\t\t\t})\r\n\t\t},\r\n\t\tset: function(key, value) {\r\n\t\t\t// TODO: create an optimized route when the property doesn't exist yet\r\n\t\t\tthis.property(key).put(value)\r\n\t\t},\r\n\t\tundefine: function(key, context) {\r\n\t\t\tthis.set(key, undefined, context)\r\n\t\t},\r\n\r\n\t\tnext: function(value) {\r\n\t\t\t// for ES7 observable compatibility\r\n\t\t\tthis.put(value)\r\n\t\t},\r\n\t\terror: function(error) {\r\n\t\t\t// for ES7 observable compatibility\r\n\t\t\tvar dependents = this.dependents\r\n\t\t\tif (dependents) {\r\n\t\t\t\t// make a copy, in case they change\r\n\t\t\t\tdependents = dependents.slice(0)\r\n\t\t\t\tfor (var i = 0, l = dependents.length; i < l; i++) {\r\n\t\t\t\t\ttry{\r\n\t\t\t\t\t\tvar dependent = dependents[i]\r\n\t\t\t\t\t\t// skip notifying property dependents if we are headed up the parent chain\r\n\t\t\t\t\t\tdependent.error(error)\r\n\t\t\t\t\t}catch(e) {\r\n\t\t\t\t\t\tconsole.error(e, 'sending an error')\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcomplete: function(value) {\r\n\t\t\t// for ES7 observable compatibility\r\n\t\t\tthis.put(value)\r\n\t\t},\r\n\t\tsetValue: function(value) {\r\n\t\t\tthis.value = value\r\n\t\t},\r\n\t\tonValue: function(listener) {\r\n\t\t\treturn this.subscribe(function(event) {\r\n\t\t\t\tlang.when(event.value(), function(value) {\r\n\t\t\t\t\tlistener(value)\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t},\r\n\t\tforEach: function(callback, context) {\r\n\t\t\t// iterate through current value of variable\r\n\t\t\treturn when(this.valueOf(), function(value) {\r\n\t\t\t\tif (value && value.forEach) {\r\n\t\t\t\t\tvalue.forEach(callback)\r\n\t\t\t\t}else{\r\n\t\t\t\t\tfor (var i in value) {\r\n\t\t\t\t\t\tcallback(value[i], i)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\tto: function (transformFunction) {\r\n\t\t\t// TODO: create a more efficient map, we don't really need a full variable here\r\n\t\t\tif (!transformFunction) {\r\n\t\t\t\tthrow new Error('No function provided to transform')\r\n\t\t\t}\r\n\t\t\treturn new Call(transformFunction, [this])\r\n\t\t},\r\n\t\tget schema() {\r\n\t\t\t// default schema is the constructor\r\n\t\t\treturn this.notifyingValue ? this.notifyingValue.schema : this.constructor\r\n\t\t},\r\n\t\tset schema(schema) {\r\n\t\t\t// but allow it to be overriden\r\n\t\t\tObject.defineProperty(this, 'schema', {\r\n\t\t\t\tvalue: schema\r\n\t\t\t})\r\n\t\t},\r\n\t\tvalidate: function(target, schema) {\r\n\t\t\tif (this.notifyingValue) {\r\n\t\t\t\treturn this.notifyingValue.validate(target, schema)\r\n\t\t\t}\r\n\t\t\tif (schema.type && (schema.type !== typeof target)) {\r\n\t\t\t\treturn ['Target type of ' + typeof target + ' does not match schema type of ' + schema.type]\r\n\t\t\t}\r\n\t\t\tvar valid = []\r\n\t\t\tvalid.isValid = true\r\n\t\t\treturn valid\r\n\t\t},\r\n\r\n\t\tget validation() {\r\n\t\t\tvar validation = new Validating(this)\r\n\t\t\tObject.defineProperty(this, 'validation', {\r\n\t\t\t\tvalue: validation\r\n\t\t\t})\r\n\t\t\treturn validation\r\n\t\t},\r\n\t\tset validation(validation) {\r\n\t\t\t// but allow it to be overriden\r\n\t\t\tObject.defineProperty(this, 'validation', {\r\n\t\t\t\tvalue: validation\r\n\t\t\t})\r\n\t\t},\r\n\t\tgetId: function() {\r\n\t\t\treturn this.id || (this.id = nextId++)\r\n\t\t},\r\n\t\tobserveObject: function() {\r\n\t\t\tvar variable = this\r\n\t\t\treturn when(this.valueOf(), function(object) {\r\n\t\t\t\tvar listeners = propertyListenersMap.get(object)\r\n\t\t\t\tif (!listeners) {\r\n\t\t\t\t\tpropertyListenersMap.set(object, listeners = [])\r\n\t\t\t\t}\r\n\t\t\t\tif (listeners.observerCount) {\r\n\t\t\t\t\tlisteners.observerCount++\r\n\t\t\t\t}else{\r\n\t\t\t\t\tlisteners.observerCount = 1\r\n\t\t\t\t\tvar observer = listeners.observer = lang.observe(object, function(events) {\r\n\t\t\t\t\t\tfor (var i = 0, l = listeners.length; i < l; i++) {\r\n\t\t\t\t\t\t\tvar listener = listeners[i]\r\n\t\t\t\t\t\t\tfor (var j = 0, el = events.length; j < el; j++) {\r\n\t\t\t\t\t\t\t\tvar event = events[j]\r\n\t\t\t\t\t\t\t\tlistener._propertyChange(event.name, object)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t})\r\n\t\t\t\t\tif (observer.addKey) {\r\n\t\t\t\t\t\tfor (var i = 0, l = listeners.length; i < l; i++) {\r\n\t\t\t\t\t\t\tvar listener = listeners[i]\r\n\t\t\t\t\t\t\tlistener.eachKey(function(key) {\r\n\t\t\t\t\t\t\t\tobserver.addKey(key)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tregisterListener(object, variable)\r\n\t\t\t\treturn {\r\n\t\t\t\t\tremove: function() {\r\n\t\t\t\t\t\tderegisterListener(object, variable)\r\n\t\t\t\t\t\tif (!(--listeners.observerCount)) {\r\n\t\t\t\t\t\t\tlisteners.observer.remove()\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdone: function() {\r\n\t\t\t\t\t\t// deliver changes\r\n\t\t\t\t\t\tlang.deliverChanges(observer)\r\n\t\t\t\t\t\tthis.remove()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t}\r\n\t}\t\r\n\r\n\tif (typeof Symbol !== 'undefined') {\r\n\t\tVariable.prototype[Symbol.iterator] = function() {\r\n\t\t\treturn this.valueOf()[Symbol.iterator]()\r\n\t\t}\r\n\t}\r\n\r\n\tvar cacheNotFound = {}\r\n\tvar Caching = Variable.Caching = lang.compose(Variable, function(getValue, setValue) {\r\n\t\tif (getValue) {\r\n\t\t\tthis.getValue = getValue\r\n\t\t}\r\n\t\tif (setValue) {\r\n\t\t\tthis.setValue = setValue\r\n\t\t}\r\n\t}, {\r\n\t\tvalueOf: function(context) {\r\n\t\t\t// first check to see if we have the variable already computed\r\n\t\t\tif (this.cachedVersion === this.getVersion()) {\r\n\t\t\t\tif (this.contextMap) {\r\n\t\t\t\t\tvar contextualizedVariable = getMaterializedContextualInstance(this, context)\r\n\t\t\t\t\tif (contextualizedVariable) {\r\n\t\t\t\t\t\treturn contextualizedVariable.cachedValue\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn this.cachedValue\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar variable = this\r\n\r\n\t\t\tfunction withComputedValue(computedValue) {\r\n\t\t\t\tif (computedValue && computedValue.notifies && variable.dependents) {\r\n\t\t\t\t\tvariable.computedVariable = computedValue\r\n\t\t\t\t}\r\n\t\t\t\tcomputedValue = variable.gotValue(computedValue, watchedContext)\r\n\t\t\t\tvar contextualizedVariable\r\n\t\t\t\tif (watchedContext && watchedContext.distinctSubject) {\r\n\t\t\t\t\t(variable.contextMap || (variable.contextMap = new WeakMap()))\r\n\t\t\t\t\t\t.set(watchedContext.distinctSubject,\r\n\t\t\t\t\t\t\tcontextualizedVariable = new ContextualizedVariable(variable, watchedContext.distinctSubject))\r\n\t\t\t\t\tcontext.distinctSubject = mergeSubject(context.distinctSubject, watchedContext.distinctSubject)\r\n\t\t\t\t} else {\r\n\t\t\t\t\tcontextualizedVariable = variable\r\n\t\t\t\t}\r\n\t\t\t\tcontextualizedVariable.cachedVersion = newVersion\r\n\t\t\t\tcontextualizedVariable.cachedValue = computedValue\r\n\t\t\t\treturn computedValue\r\n\t\t\t}\r\n\r\n\t\t\tvar watchedContext\r\n\t\t\tif (context) {\r\n\t\t\t\twatchedContext = new Context(context.subject)\r\n\t\t\t}\r\n\t\t\tvar newVersion = this.getVersion()\r\n\t\t\tvar computedValue = this.getValue(watchedContext)\r\n\t\t\tif (computedValue && computedValue.then) {\r\n\t\t\t\treturn computedValue.then(withComputedValue)\r\n\t\t\t} else {\r\n\t\t\t\treturn withComputedValue(computedValue)\r\n\t\t\t}\r\n\t\t}\r\n\t})\r\n\r\n\tfunction GetCache() {\r\n\t}\r\n\r\n\tvar Property = lang.compose(Variable, function Property(parent, key) {\r\n\t\tthis.parent = parent\r\n\t\tthis.key = key\r\n\t},\r\n\t{\r\n\t\tforDependencies: function(callback) {\r\n\t\t\tVariable.prototype.forDependencies.call(this, callback)\r\n\t\t\tcallback(this.parent)\r\n\t\t},\r\n\t\tvalueOf: function(context) {\r\n\t\t\tvar key = this.key\r\n\t\t\tvar property = this\r\n\t\t\tvar object = this.parent.valueOf(context)\r\n\t\t\tfunction gotValueAndListen(object) {\r\n\t\t\t\tif (property.dependents) {\r\n\t\t\t\t\tvar listeners = propertyListenersMap.get(object)\r\n\t\t\t\t\tif (listeners && listeners.observer && listeners.observer.addKey) {\r\n\t\t\t\t\t\tlisteners.observer.addKey(key)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tvar value = property.gotValue(object == null ? undefined : typeof object.get === 'function' ? object.get(key) : object[key])\r\n\t\t\t\treturn value\r\n\t\t\t}\r\n\t\t\tif (object && object.then) {\r\n\t\t\t\treturn when(object, gotValueAndListen)\r\n\t\t\t}\r\n\t\t\treturn gotValueAndListen(object)\r\n\t\t},\r\n\t\tput: function(value, context) {\r\n\t\t\treturn this._changeValue(context, RequestChange, value)\r\n\t\t},\r\n\t\tparentUpdated: function(updateEvent, context) {\r\n\t\t\treturn Variable.prototype.updated.call(this, updateEvent, this.parent, context)\r\n\t\t},\r\n\t\tupdated: function(updateEvent, by, context) {\r\n\t\t\tif (updateEvent = Variable.prototype.updated.call(this, updateEvent, by, context)) {\r\n\t\t\t\tthis.parent.updated(new PropertyChangeEvent(this.key, updateEvent), this, context)\r\n\t\t\t}\r\n\t\t},\r\n\t\t_changeValue: function(context, type, newValue) {\r\n\t\t\tvar key = this.key\r\n\t\t\tvar parent = this.parent\r\n\t\t\tvar variable = this\r\n\t\t\treturn when(parent.valueOf(context), function(object) {\r\n\t\t\t\tif (object == null) {\r\n\t\t\t\t\t// nothing there yet, create an object to hold the new property\r\n\t\t\t\t\tvar response = parent.put(object = typeof key == 'number' ? [] : {}, context)\r\n\t\t\t\t}else if (typeof object != 'object') {\r\n\t\t\t\t\t// if the parent is not an object, we can't set anything (that will be retained)\r\n\t\t\t\t\treturn deny\r\n\t\t\t\t}\r\n\t\t\t\tif (type == RequestChange) {\r\n\t\t\t\t\tvar oldValue = typeof object.get === 'function' ? object.get(key) : object[key]\r\n\t\t\t\t\tif (oldValue === newValue) {\r\n\t\t\t\t\t\t// no actual change to make\r\n\t\t\t\t\t\treturn noChange\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (typeof object.set === 'function') {\r\n\t\t\t\t\t\tobject.set(key, newValue)\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tobject[key] = newValue\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tvariable.updated(null, variable, context)\r\n\r\n\t\t\t\t// now notify any object listeners\r\n\t\t\t\tvar listeners = propertyListenersMap.get(object)\r\n\t\t\t\t// we need to do it before the other listeners, so we can update it before\r\n\t\t\t\t// we trigger a full clobbering of the object\r\n\t\t\t\tif (listeners) {\r\n\t\t\t\t\tlisteners = listeners.slice(0)\r\n\t\t\t\t\tfor (var i = 0, l = listeners.length; i < l; i++) {\r\n\t\t\t\t\t\tvar listener = listeners[i]\r\n\t\t\t\t\t\tif (listener !== parent) {\r\n\t\t\t\t\t\t\t// now go ahead and actually trigger the other listeners (but make sure we don't do the parent again)\r\n\t\t\t\t\t\t\tlistener._propertyChange(key, object, context, type)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t},\r\n\t\tvalidate: function(target, schema) {\r\n\t\t\treturn this.parent.validate(target.valueOf(), schema)\r\n\t\t}\r\n\t})\r\n\tObject.defineProperty(Property.prototype, 'schema', {\r\n\t\tget: function() {\r\n\t\t\tvar parentSchemaProperties = this.parent.schema.properties\r\n\t\t\treturn parentSchemaProperties && parentSchemaProperties[this.key]\r\n\t\t},\r\n\t\tset: function(schema) {\r\n\t\t\t// have to repeat the override\r\n\t\t\tObject.defineProperty(this, 'schema', {\r\n\t\t\t\tvalue: schema\r\n\t\t\t})\r\n\t\t}\r\n\t})\r\n\tVariable.Property = Property\r\n\r\n\tvar Item = Variable.Item = lang.compose(Variable, function Item(value, content) {\r\n\t\tthis.value = value\r\n\t\tthis.collection = content\r\n\t}, {})\r\n\r\n\tvar Composite = Variable.Composite = lang.compose(Caching, function Composite(args) {\r\n\t\tthis.args = args\r\n\t}, {\r\n\t\tforDependencies: function(callback) {\r\n\t\t\t// depend on the args\r\n\t\t\tCaching.prototype.forDependencies.call(this, callback)\r\n\t\t\tvar args = this.args\r\n\t\t\tfor (var i = 0, l = args.length; i < l; i++) {\r\n\t\t\t\tvar arg = args[i]\r\n\t\t\t\tif (arg && arg.notifies) {\r\n\t\t\t\t\tcallback(arg)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tupdated: function(updateEvent, by, context) {\r\n\t\t\tvar args = this.args\r\n\t\t\tif (by !== this.notifyingValue && updateEvent && updateEvent.type !== 'refresh') {\r\n\t\t\t\t// using a painful search instead of indexOf, because args may be an arguments object\r\n\t\t\t\tfor (var i = 0, l = args.length; i < l; i++) {\r\n\t\t\t\t\tvar arg = args[i]\r\n\t\t\t\t\tif (arg === by) {\r\n\t\t\t\t\t\t// if one of the args was updated, we need to do a full refresh (we can't compute differential events without knowledge of how the mapping function works)\r\n\t\t\t\t\t\tupdateEvent = new RefreshEvent()\r\n\t\t\t\t\t\tcontinue\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn Caching.prototype.updated.call(this, updateEvent, by, context)\r\n\t\t},\r\n\r\n\t\tgetUpdates: function(since) {\r\n\t\t\t// this always issues updates, nothing incremental can flow through it\r\n\t\t\tif (!since || since.version < getVersion()) {\r\n\t\t\t\treturn [new RefreshEvent()]\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetVersion: function(context) {\r\n\t\t\tvar args = this.args\r\n\t\t\tvar version = Variable.prototype.getVersion.call(this, context)\r\n\t\t\tfor (var i = 0, l = args.length; i < l; i++) {\r\n\t\t\t\tvar arg = args[i]\r\n\t\t\t\tif (arg && arg.getVersion) {\r\n\t\t\t\t\tversion = Math.max(version, arg.getVersion(context))\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn version\r\n\t\t},\r\n\r\n\t\tgetValue: function(context) {\r\n\t\t\tvar results = []\r\n\t\t\tvar args = this.args\r\n\t\t\tfor (var i = 0, l = args.length; i < l; i++) {\r\n\t\t\t\tvar arg = args[i]\r\n\t\t\t\tresults[i] = arg && arg.valueOf(context)\r\n\t\t\t}\r\n\t\t\treturn whenAll(results, function(resolved) {\r\n\t\t\t\treturn resolved\r\n\t\t\t})\r\n\t\t}\r\n\t})\r\n\r\n\t// a call variable is the result of a call\r\n\tvar Call = lang.compose(Composite, function Call(functionVariable, args) {\r\n\t\tthis.functionVariable = functionVariable\r\n\t\tthis.args = args\r\n\t}, {\r\n\t\tforDependencies: function(callback) {\r\n\t\t\t// depend on the args\r\n\t\t\tComposite.prototype.forDependencies.call(this, callback)\r\n\t\t\tif (this.functionVariable.notifies) {\r\n\t\t\t\tcallback(this.functionVariable)\r\n\t\t\t}\r\n\t\t},\r\n\r\n\t\tgetValue: function(context) {\r\n\t\t\tvar functionValue = this.functionVariable.valueOf(context)\r\n\t\t\tif (functionValue.then) {\r\n\t\t\t\tvar call = this\r\n\t\t\t\treturn functionValue.then(function(functionValue) {\r\n\t\t\t\t\treturn call.invoke(functionValue, call.args, context)\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t\treturn this.invoke(functionValue, this.args, context)\r\n\t\t},\r\n\r\n\t\tgetVersion: function(context) {\r\n\t\t\t// TODO: shortcut if we are live and since equals this.lastUpdate\r\n\t\t\tvar argsVersion = Composite.prototype.getVersion.call(this, context)\r\n\t\t\tif (this.functionVariable.getVersion) {\r\n\t\t\t\treturn Math.max(argsVersion, this.functionVariable.getVersion(context))\r\n\t\t\t}\r\n\t\t\treturn argsVersion\r\n\t\t},\r\n\r\n\t\texecute: function(context) {\r\n\t\t\tvar call = this\r\n\t\t\treturn when(this.functionVariable.valueOf(context), function(functionValue) {\r\n\t\t\t\treturn call.invoke(functionValue, call.args, context, true)\r\n\t\t\t})\r\n\t\t},\r\n\r\n\t\tput: function(value, context) {\r\n\t\t\tvar call = this\r\n\t\t\treturn when(this.valueOf(context), function(originalValue) {\r\n\t\t\t\tif (originalValue === value) {\r\n\t\t\t\t\treturn noChange\r\n\t\t\t\t}\r\n\t\t\t\treturn when(call.functionVariable.valueOf(context), function(functionValue) {\r\n\t\t\t\t\treturn call.invoke(function() {\r\n\t\t\t\t\t\tif (functionValue.reverse) {\r\n\t\t\t\t\t\t\tfunctionValue.reverse.call(call, value, call.args, context)\r\n\t\t\t\t\t\t\treturn Variable.prototype.put.call(call, value, context)\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\treturn deny\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}, call.args, context)\r\n\t\t\t\t});\t\t\t\t\r\n\t\t\t})\r\n\t\t},\r\n\t\tinvoke: function(functionValue, args, context, observeArguments) {\r\n\t\t\tvar instance = this.functionVariable.parent\r\n\t\t\tif (functionValue.handlesContext) {\r\n\t\t\t\treturn functionValue.apply(instance, args, context)\r\n\t\t\t}else{\r\n\t\t\t\tvar results = []\r\n\t\t\t\tfor (var i = 0, l = args.length; i < l; i++) {\r\n\t\t\t\t\tvar arg = args[i]\r\n\t\t\t\t\tresults[i] = arg && arg.valueOf(context)\r\n\t\t\t\t}\r\n\t\t\t\tinstance = instance && instance.valueOf(context)\r\n\t\t\t\tif (functionValue.handlesPromises) {\r\n\t\t\t\t\treturn functionValue.apply(instance, results, context)\r\n\t\t\t\t}else{\r\n\t\t\t\t\t// include the instance in whenAll\r\n\t\t\t\t\tresults.push(instance)\r\n\t\t\t\t\t// wait for the values to be received\r\n\t\t\t\t\treturn whenAll(results, function(inputs) {\r\n\t\t\t\t\t\tif (observeArguments) {\r\n\t\t\t\t\t\t\tvar handles = []\r\n\t\t\t\t\t\t\tfor (var i = 0, l = inputs.length; i < l; i++) {\r\n\t\t\t\t\t\t\t\tvar input = inputs[i]\r\n\t\t\t\t\t\t\t\tif (input && typeof input === 'object') {\r\n\t\t\t\t\t\t\t\t\thandles.push(observe(input))\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tvar instance = inputs.pop()\r\n\t\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\t\tvar result = functionValue.apply(instance, inputs, context)\r\n\t\t\t\t\t\t\t}finally{\r\n\t\t\t\t\t\t\t\twhen(result, function() {\r\n\t\t\t\t\t\t\t\t\tfor (var i = 0; i < l; i++) {\r\n\t\t\t\t\t\t\t\t\t\thandles[i].done()\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn result\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tvar instance = inputs.pop()\r\n\t\t\t\t\t\treturn functionValue.apply(instance, inputs, context)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tsetReverse: function(reverse) {\r\n\t\t\tthis.functionVariable.valueOf().reverse = reverse\r\n\t\t\treturn this\r\n\t\t}\r\n\t})\r\n\tVariable.Call = Call\r\n\r\n\tvar ContextualizedVariable = lang.compose(Variable, function ContextualizedVariable(Source, subject) {\r\n\t\tthis.constructor = Source\r\n\t\tthis.subject = subject\r\n\t}, {\r\n\t\tvalueOf: function() {\r\n\t\t\treturn this.constructor.valueOf(new Context(this.subject))\r\n\t\t},\r\n\r\n\t\tput: function(value) {\r\n\t\t\treturn this.constructor.put(value, new Context(this.subject))\r\n\t\t},\r\n\t\tparentUpdated: function(event, context) {\r\n\t\t\t// if we receive an outside update, send it to the constructor\r\n\t\t\tthis.constructor.updated(event, this.parent, this.context)\r\n\t\t}\r\n\t})\r\n\r\n\r\n\tfunction arrayMethod(name, sendUpdates) {\r\n\t\tVariable.prototype[name] = function() {\r\n\t\t\tvar args = arguments\r\n\t\t\tvar variable = this\r\n\t\t\treturn when(this.cachedValue || this.valueOf(), function(array) {\r\n\t\t\t\tif (!array) {\r\n\t\t\t\t\tvariable.put(array = [])\r\n\t\t\t\t}\r\n\t\t\t\t// try to use own method, but if not available, use Array's methods\r\n\t\t\t\tvar result = array[name] ? array[name].apply(array, args) : Array.prototype[name].apply(array, args)\r\n\t\t\t\tvariable.updateVersion()\r\n\t\t\t\tif (sendUpdates) {\r\n\t\t\t\t\tsendUpdates.call(variable, args, result, array)\r\n\t\t\t\t}\r\n\t\t\t\tvariable.cachedVersion = variable.version // update the cached version so it doesn't need to be recomputed\r\n\t\t\t\tvariable.cachedValue = array\r\n\t\t\t\treturn result\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\tarrayMethod('splice', function(args, result) {\r\n\t\tfor (var i = 0; i < args[1]; i++) {\r\n\t\t\tthis.updated(new DeleteEvent({\r\n\t\t\t\tpreviousIndex: args[0],\r\n\t\t\t\toldValue: result[i],\r\n\t\t\t\tmodifier: this\r\n\t\t\t}), this)\r\n\t\t}\r\n\t\tfor (i = 2, l = args.length; i < l; i++) {\r\n\t\t\tthis.updated(new AddEvent({\r\n\t\t\t\tvalue: args[i],\r\n\t\t\t\tindex: args[0] + i - 2,\r\n\t\t\t\tmodifier: this\r\n\t\t\t}), this)\r\n\t\t}\r\n\t})\r\n\tarrayMethod('push', function(args, result) {\r\n\t\tfor (var i = 0, l = args.length; i < l; i++) {\r\n\t\t\tvar arg = args[i]\r\n\t\t\tthis.updated(new AddEvent({\r\n\t\t\t\tindex: result - i - 1,\r\n\t\t\t\tvalue: arg,\r\n\t\t\t\tmodifier: this\r\n\t\t\t}), this)\r\n\t\t}\r\n\t})\r\n\tarrayMethod('unshift', function(args, result) {\r\n\t\tfor (var i = 0, l = args.length; i < l; i++) {\r\n\t\t\tvar arg = args[i]\r\n\t\t\tthis.updated(new AddEvent({\r\n\t\t\t\tindex: i,\r\n\t\t\t\tvalue: arg,\r\n\t\t\t\tmodifier: this\r\n\t\t\t}), this)\r\n\t\t}\r\n\t})\r\n\tarrayMethod('shift', function(args, results) {\r\n\t\tthis.updated(new DeleteEvent({\r\n\t\t\tpreviousIndex: 0,\r\n\t\t\tmodifier: this\r\n\t\t}), this)\r\n\t})\r\n\tarrayMethod('pop', function(args, results, array) {\r\n\t\tthis.updated(new DeleteEvent({\r\n\t\t\tpreviousIndex: array.length,\r\n\t\t\tmodifier: this\r\n\t\t}), this)\r\n\t})\r\n\r\n\tfunction iterateMethod(method) {\r\n\t\tVariable.prototype[method] = function() {\r\n\t\t\treturn new IterativeMethod(this, method, arguments)\r\n\t\t}\r\n\t}\r\n\r\n\titerateMethod('filter')\r\n\titerateMethod('map')\r\n\titerateMethod('reduce')\r\n\titerateMethod('reduceRight')\r\n\titerateMethod('some')\r\n\titerateMethod('every')\r\n\titerateMethod('slice')\r\n\t\r\n\tvar IterativeMethod = lang.compose(Composite, function(source, method, args) {\r\n\t\tthis.source = source\r\n\t\t// source.interestWithin = true\r\n\t\tthis.method = method\r\n\t\tthis.args = args\r\n\t}, {\r\n\t\tgetValue: function(context) {\r\n\t\t\tvar method = this.method\r\n\t\t\tvar args = this.args\r\n\t\t\tvar variable = this\r\n\t\t\treturn when(this.source.valueOf(context), function(array) {\r\n\t\t\t\tif (array && array.forEach) {\r\n\t\t\t\t\tif (variable.dependents) {\r\n\t\t\t\t\t\tvar contextualizedVariable\r\n\t\t\t\t\t\tif (context) {\r\n\t\t\t\t\t\t\tvar contextMap = variable.contextMap || (variable.contextMap = new WeakMap())\r\n\t\t\t\t\t\t\tif (contextMap.has(context.distinctSubject)) {\r\n\t\t\t\t\t\t\t\tcontextualizedVariable = contextMap.get(context.distinctSubject)\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\tcontextMap.set(context.distinctSubject, contextualizedVariable = new ContextualizedVariable(variable, context.distinctSubject))\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tcontextualizedVariable = variable\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (method === 'map'){\r\n\t\t\t\t\t\t// fast path, and special behavior for map\r\n\t\t\t\t\t\treturn args[0](array)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// if not an array convert to an array\r\n\t\t\t\t\tarray = [array]\r\n\t\t\t\t}\r\n\t\t\t\t// apply method\r\n\t\t\t\treturn array[method].apply(array, args)\r\n\t\t\t})\r\n\t\t},\r\n\t\tupdated: function(event, by, context) {\r\n\t\t\tif (!event || event.modifier === this || (event.modifier && event.modifier.constructor === this)) {\r\n\t\t\t\treturn Composite.prototype.updated.call(this, event, by, context)\r\n\t\t\t}\r\n\t\t\tvar propagatedEvent = event.type === 'refresh' ? event : // always propagate refreshes\r\n\t\t\t\tthis[this.method + 'Updated'] ? this[this.method + 'Updated'](event, context) : // if we have an updated handler, use it\r\n\t\t\t\tnew RefreshEvent() // else recompute the array method\r\n\t\t\t// TODO: make sure we normalize the event structure\r\n\t\t\tif (propagatedEvent) {\r\n\t\t\t\tComposite.prototype.updated.call(this, propagatedEvent, by, context)\r\n\t\t\t}\r\n\t\t},\r\n\t\tfilterUpdated: function(event, context) {\r\n\t\t\tvar contextualizedVariable = getMaterializedContextualInstance(this, context) || this\r\n\t\t\tif (event.type === 'delete') {\r\n\t\t\t\tvar index = contextualizedVariable.cachedValue.indexOf(event.oldValue)\r\n\t\t\t\tif (index > -1) {\r\n\t\t\t\t\tcontextualizedVariable.splice(index, 1)\r\n\t\t\t\t}\r\n\t\t\t} else if (event.type === 'add') {\r\n\t\t\t\tif ([event.value].filter(this.args[0]).length > 0) {\r\n\t\t\t\t\tcontextualizedVariable.push(event.value)\r\n\t\t\t\t}\r\n\t\t\t} else if (event.type === 'update') {\r\n\t\t\t\tvar index = contextualizedVariable.cachedValue.indexOf(event.object)\r\n\t\t\t\tvar matches = [event.object].filter(this.args[0]).length > 0\r\n\t\t\t\tif (index > -1) {\r\n\t\t\t\t\tif (matches) {\r\n\t\t\t\t\t\treturn {\r\n\t\t\t\t\t\t\ttype: 'updated',\r\n\t\t\t\t\t\t\tobject: event.object,\r\n\t\t\t\t\t\t\tindex: index\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tcontextualizedVariable.splice(index, 1)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\telse {\r\n\t\t\t\t\tif (matches) {\r\n\t\t\t\t\t\tcontextualizedVariable.push(event.object)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// else nothing mactches\r\n\t\t\t\t}\r\n\t\t\t\treturn\r\n\t\t\t} else {\r\n\t\t\t\treturn event\r\n\t\t\t}\r\n\t\t},\r\n\t\tmapUpdated: function(event, context) {\r\n\t\t\tvar contextualizedVariable = getMaterializedContextualInstance(this, context) || this\r\n\t\t\tif (event.type === 'delete') {\r\n\t\t\t\tcontextualizedVariable.splice(event.previousIndex, 1)\r\n\t\t\t} else if (event.type === 'add') {\r\n\t\t\t\tcontextualizedVariable.push(this.args[0].call(this.args[1], event.value))\r\n\t\t\t} else if (event.type === 'update') {\r\n\t\t\t\tvar index = contextualizedVariable.cachedValue.indexOf(event.object)\r\n\t\t\t\tvar matches = [event.object].filter(this.args[0]).length > 0\r\n\t\t\t\tcontextualizedVariable.splice(index, 1, this.args[0].call(this.args[1], event.value))\r\n\t\t\t} else {\r\n\t\t\t\treturn event\r\n\t\t\t}\r\n\t\t},\r\n\t\t// TODO: Create specialized updated handlers for faster recomputation of other array derivatives\r\n\t\tforDependencies: function(callback) {\r\n\t\t\t// depend on the args\r\n\t\t\tComposite.prototype.forDependencies.call(this, callback)\r\n\t\t\tcallback(this.source)\r\n\t\t},\r\n\t\tgetVersion: function(context) {\r\n\t\t\treturn Math.max(Composite.prototype.getVersion.call(this, context), this.source.getVersion(context))\r\n\t\t}\t\t\r\n\t})\r\n\r\n\r\n\tvar getValue\r\n\tvar GeneratorVariable = Variable.GeneratorVariable = lang.compose(Variable.Composite, function ReactiveGenerator(generator){\r\n\t\tthis.generator = generator\r\n\t\tthis.args = []\r\n\t}, {\r\n\t\tgetValue: getValue = function(context, resuming) {\r\n\t\t\tvar lastValue\r\n\t\t\tvar i\r\n\t\t\tvar generatorIterator\r\n\t\t\tvar isThrowing\r\n\t\t\tif (resuming) {\r\n\t\t\t\t// resuming from a promise\r\n\t\t\t\tgeneratorIterator = resuming.iterator\r\n\t\t\t\ti = resuming.i\r\n\t\t\t\tlastValue = resuming.value\r\n\t\t\t\tisThrowing = resuming.isThrowing\r\n\t\t\t} else {\r\n\t\t\t\t// a fresh start\r\n\t\t\t\ti = 0\r\n\t\t\t\tgeneratorIterator = this.generator()\t\t\t\t\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tvar args = this.args\r\n\t\t\tdo {\r\n\t\t\t\tvar stepReturn = generatorIterator[isThrowing ? 'throw' : 'next'](lastValue)\r\n\t\t\t\tif (stepReturn.done) {\r\n\t\t\t\t\treturn stepReturn.value\r\n\t\t\t\t}\r\n\t\t\t\tvar nextVariable = stepReturn.value\r\n\t\t\t\t// compare with the arguments from the last\r\n\t\t\t\t// execution to see if they are the same\r\n\t\t\t\tif (args[i] !== nextVariable) {\r\n\t\t\t\t\tif (args[i]) {\r\n\t\t\t\t\t\targs[i].stopNotifies(this)\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// subscribe if it is a variable\r\n\t\t\t\t\tif (nextVariable && nextVariable.notifies) {\r\n\t\t\t\t\t\tnextVariable.notifies(this)\r\n\t\t\t\t\t\tthis.args[i] = nextVariable\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tthis.args[i] = null\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\ti++\r\n\t\t\t\tlastValue = nextVariable && nextVariable.valueOf(context)\r\n\t\t\t\tif (lastValue && lastValue.then) {\r\n\t\t\t\t\t// if it is a promise, we will wait on it\r\n\t\t\t\t\tvar variable = this\r\n\t\t\t\t\t// and return the promise so that the getValue caller can wait on this\r\n\t\t\t\t\treturn lastValue.then(function(value) {\r\n\t\t\t\t\t\treturn getValue.call(variable, context, {\r\n\t\t\t\t\t\t\ti: i,\r\n\t\t\t\t\t\t\titerator: generatorIterator,\r\n\t\t\t\t\t\t\tvalue: value\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}, function(error) {\r\n\t\t\t\t\t\treturn getValue.call(variable, context, {\r\n\t\t\t\t\t\t\ti: i,\r\n\t\t\t\t\t\t\titerator: generatorIterator,\r\n\t\t\t\t\t\t\tvalue: error,\r\n\t\t\t\t\t\t\tisThrowing: true\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t} while(true)\r\n\t\t}\r\n\t})\r\n\r\n\tvar Validating = lang.compose(Caching, function(target) {\r\n\t\tthis.target = target\r\n\t}, {\r\n\t\tforDependencies: function(callback) {\r\n\t\t\tCaching.prototype.forDependencies.call(this, callback)\r\n\t\t\tcallback(this.target)\r\n\t\t},\r\n\t\tgetVersion: function(context) {\r\n\t\t\treturn Math.max(Variable.prototype.getVersion.call(this, context), this.target.getVersion(context))\r\n\t\t},\r\n\t\tgetValue: function(context) {\r\n\t\t\tvar target = this.target\r\n\t\t\treturn target.validate(target, target.schema)\r\n\t\t}\r\n\t})\r\n\r\n\tfunction validate(target) {\r\n\t\tvar schemaForObject = schema(target)\r\n\t\treturn new Validating(target, schemaForObject)\r\n\t}\r\n\tVariable.deny = deny\r\n\tVariable.noChange = noChange\r\n\tfunction addFlag(name) {\r\n\t\tVariable[name] = function(functionValue) {\r\n\t\t\tfunctionValue[name] = true\r\n\t\t}\r\n\t}\r\n\taddFlag(Variable, 'handlesContext')\r\n\taddFlag(Variable, 'handlesPromises')\r\n\r\n\tfunction objectUpdated(object) {\r\n\t\t// simply notifies any subscribers to an object, that it has changed\r\n\t\tvar listeners = propertyListenersMap.get(object)\r\n\t\tif (listeners) {\r\n\t\t\tfor (var i = 0, l = listeners.length; i < l; i++) {\r\n\t\t\t\tlisteners[i]._propertyChange(null, object)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tfunction all(array) {\r\n\t\t// This is intended to mirror Promise.all. It actually takes\r\n\t\t// an iterable, but for now we are just looking for array-like\r\n\t\tif (array.length > -1) {\r\n\t\t\treturn new Composite(array)\r\n\t\t}\r\n\t\tif (arguments.length > 1) {\r\n\t\t\t// support multiple arguments as an array\r\n\t\t\treturn new Composite(arguments)\r\n\t\t}\r\n\t\tif (typeof array === 'object') {\r\n\t\t\t// allow an object as a hash to be mapped\r\n\t\t\tvar keyMapping = []\r\n\t\t\tvar valueArray = []\r\n\t\t\tfor (var key in array) {\r\n\t\t\t\tkeyMapping.push(key)\r\n\t\t\t\tvalueArray.push(array[key])\r\n\t\t\t}\r\n\t\t\treturn new Variable(function(results) {\r\n\t\t\t\tvar resultObject = {}\r\n\t\t\t\tfor (var i = 0; i < results.length; i++) {\r\n\t\t\t\t\tresultObject[keyMapping[i]] = results[i]\r\n\t\t\t\t}\r\n\t\t\t\treturn resultObject\r\n\t\t\t}).apply(null, valueArray)\r\n\t\t}\r\n\t\tthrow new TypeError('Variable.all requires an array')\r\n\t}\r\n\r\n\tfunction hasOwn(Target, createForInstance) {\r\n\t\tvar ownedClasses = this.ownedClasses || (this.ownedClasses = new WeakMap())\r\n\t\t// TODO: assign to super classes\r\n\t\tvar Class = this\r\n\t\townedClasses.set(Target, createForInstance || function() { return new Target() })\r\n\t\treturn this\r\n\t}\r\n\tfunction getForClass(subject, Target) {\r\n\t\tvar createInstance = subject.constructor.ownedClasses && subject.constructor.ownedClasses.get(Target)\r\n\t\tif (createInstance) {\r\n\t\t\tvar ownedInstances = subject.ownedInstances || (subject.ownedInstances = new WeakMap())\r\n\t\t\tvar instance = ownedInstances.get(Target)\r\n\t\t\tif (!instance) {\r\n\t\t\t\townedInstances.set(Target, instance = createInstance(subject))\r\n\t\t\t\tinstance.subject = subject\r\n\t\t\t}\r\n\t\t\treturn instance\r\n\t\t}\r\n\t}\r\n\tfunction generalizeClass() {\r\n\t\tvar prototype = this.prototype\r\n\t\tvar prototypeNames = Object.getOwnPropertyNames(prototype)\r\n\t\tfor(var i = 0, l = prototypeNames.length; i < l; i++) {\r\n\t\t\tvar name = prototypeNames[i]\r\n\t\t\tObject.defineProperty(this, name, getGeneralizedDescriptor(Object.getOwnPropertyDescriptor(prototype, name), name, this))\r\n\t\t}\r\n\t}\r\n\tfunction getGeneralizedDescriptor(descriptor, name, Class) {\r\n\t\tif (typeof descriptor.value === 'function') {\r\n\t\t\treturn {\r\n\t\t\t\tvalue: generalizeMethod(Class, name)\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\treturn descriptor\r\n\t\t}\r\n\t}\r\n\tfunction generalizeMethod(Class, name) {\r\n\t\t// I think we can just rely on `this`, but we could use the argument:\r\n\t\t// function(possibleEvent) {\r\n\t\t// \tvar target = possibleEvent && possibleEvent.target\r\n\t\tvar method = Class[name] = function() {\r\n\t\t\tvar instance = Class.for(this)\r\n\t\t\treturn instance[name].apply(instance, arguments)\r\n\t\t}\r\n\t\tmethod.for = function(context) {\r\n\t\t\tvar instance = Class.for(context)\r\n\t\t\treturn function() {\r\n\t\t\t\treturn instance[name].apply(instance, arguments)\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn method\r\n\t}\r\n\r\n\tvar defaultContext = {\r\n\t\tname: 'Default context',\r\n\t\tdescription: 'This object is the default context for classes, corresponding to a singleton instance of that class',\r\n\t\tconstructor: {\r\n\t\t\tgetForClass: function(subject, Class) {\r\n\t\t\t\treturn Class.defaultInstance\r\n\t\t\t}\r\n\t\t},\r\n\t\tcontains: function() {\r\n\t\t\treturn true // contains everything\r\n\t\t}\r\n\t}\r\n\tfunction instanceForContext(Class, context) {\r\n\t\tif (!context) {\r\n\t\t\tthrow new TypeError('Accessing a generalized class without context to resolve to an instance, call for(context) (where context is an element or related variable instance) on your variable first')\r\n\t\t}\r\n\t\tvar instance = context.subject.constructor.getForClass && context.subject.constructor.getForClass(context.subject, Class) || Class.defaultInstance\r\n\t\tcontext.distinctSubject = mergeSubject(context.distinctSubject, instance.subject)\r\n\t\treturn instance\r\n\t}\r\n\t// a variable inheritance change goes through its own prototype, so classes/constructor\r\n\t// can be used as variables as well\r\n\tfor (var key in VariablePrototype) {\r\n\t\tObject.defineProperty(Variable, key, Object.getOwnPropertyDescriptor(VariablePrototype, key))\r\n\t}\r\n\tVariable.valueOf = function(context) {\r\n\t\t// contextualized getValue\r\n\t\treturn instanceForContext(this, context).valueOf()\r\n\t}\r\n\tVariable.setValue = function(value, context) {\r\n\t\t// contextualized setValue\r\n\t\treturn instanceForContext(this, context).put(value)\r\n\t}\r\n\tVariable.getForClass = getForClass\r\n\tVariable.generalize = generalizeClass\r\n\tVariable.call = Function.prototype.call // restore these\r\n\tVariable.apply = Function.prototype.apply\r\n\tVariable.extend = function(properties) {\r\n\t\t// TODO: handle arguments\r\n\t\tvar Base = this\r\n\t\tfunction ExtendedVariable() {\r\n\t\t\tif (this instanceof ExtendedVariable) {\r\n\t\t\t\treturn Base.apply(this, arguments)\r\n\t\t\t} else {\r\n\t\t\t\treturn ExtendedVariable.extend(properties)\r\n\t\t\t}\r\n\t\t}\r\n\t\tvar prototype = ExtendedVariable.prototype = Object.create(this.prototype)\r\n\t\tExtendedVariable.prototype.constructor = ExtendedVariable\r\n\t\tsetPrototypeOf(ExtendedVariable, this)\r\n\t\tfor (var key in properties) {\r\n\t\t\tvar descriptor = Object.getOwnPropertyDescriptor(properties, key)\r\n\t\t\tObject.defineProperty(prototype, key, descriptor)\r\n\t\t\tObject.defineProperty(ExtendedVariable, key, getGeneralizedDescriptor(descriptor, key, ExtendedVariable))\r\n\t\t}\r\n\t\tif (properties && properties.hasOwn) {\r\n\t\t\thasOwn.call(ExtendedVariable, properties.hasOwn)\r\n\t\t}\r\n\t\treturn ExtendedVariable\r\n\t}\r\n\tObject.defineProperty(Variable, 'defaultInstance', {\r\n\t\tget: function() {\r\n\t\t\treturn this.hasOwnProperty('_defaultInstance') ?\r\n\t\t\t\tthis._defaultInstance : (\r\n\t\t\t\t\tthis._defaultInstance = new this(),\r\n\t\t\t\t\tthis._defaultInstance.subject = defaultContext,\r\n\t\t\t\t\tthis._defaultInstance)\r\n\t\t}\r\n\t})\r\n\tVariable.hasOwn = hasOwn\r\n\tVariable.all = all\r\n\tVariable.objectUpdated = objectUpdated\r\n\tVariable.observe = function() {\r\n\t\tthrow new Error('Use variable.observeObject() instead')\r\n\t}\r\n\r\n\treturn Variable\r\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Variable.js\n ** module id = 2\n ** module chunks = 0\n **/","define([], function () {\r\n\tvar getPrototypeOf = Object.getPrototypeOf || (function(base) { return base.__proto__ })\r\n\tvar setPrototypeOf = Object.setPrototypeOf || (function(base, proto) { base.__proto__ = proto})\r\n\tvar hasFeatures = {\r\n\t\trequestAnimationFrame: typeof requestAnimationFrame != 'undefined',\r\n\t\tdefineProperty: Object.defineProperty && (function() {\r\n\t\t\ttry{\r\n\t\t\t\tObject.defineProperty({}, 't', {})\r\n\t\t\t\treturn true\r\n\t\t\t}catch(e) {\r\n\t\t\t}\r\n\t\t})(),\r\n\t\tpromise: typeof Promise !== 'undefined',\r\n\t\tMutationObserver: typeof MutationObserver !== 'undefined',\r\n\t\t'WeakMap': typeof WeakMap === 'function'\r\n\t}\r\n\tfunction has(feature) {\r\n\t\treturn hasFeatures[feature]\r\n\t}\r\n\t// This is an polyfill for Object.observe with just enough functionality\r\n\t// for what Variables need\r\n\t// An observe function, with polyfile\r\n\tvar observe =\r\n\t\thas('defineProperty') ? \r\n\t\tfunction observe(target, listener) {\r\n\t\t\t/*for(var i in target) {\r\n\t\t\t\taddKey(i)\r\n\t\t\t}*/\r\n\t\t\tlistener.addKey = addKey\r\n\t\t\tlistener.remove = function() {\r\n\t\t\t\tlistener = null\r\n\t\t\t}\r\n\t\t\treturn listener\r\n\t\t\tfunction addKey(key) {\r\n\t\t\t\tvar keyFlag = 'key' + key\r\n\t\t\t\tif(this[keyFlag]) {\r\n\t\t\t\t\treturn\r\n\t\t\t\t}else{\r\n\t\t\t\t\tthis[keyFlag] = true\r\n\t\t\t\t}\r\n\t\t\t\tvar currentValue = target[key]\r\n\t\t\t\tvar targetAncestor = target\r\n\t\t\t\tvar descriptor\r\n\t\t\t\tdo {\r\n\t\t\t\t\tdescriptor = Object.getOwnPropertyDescriptor(targetAncestor, key)\r\n\t\t\t\t} while(!descriptor && (targetAncestor = getPrototypeOf(targetAncestor)))\r\n\r\n\t\t\t\tif(descriptor && descriptor.set) {\r\n\t\t\t\t\tvar previousSet = descriptor.set\r\n\t\t\t\t\tvar previousGet = descriptor.get\r\n\t\t\t\t\tObject.defineProperty(target, key, {\r\n\t\t\t\t\t\tget: function() {\r\n\t\t\t\t\t\t\treturn (currentValue = previousGet.call(this))\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tset: function(value) {\r\n\t\t\t\t\t\t\tpreviousSet.call(this, value)\r\n\t\t\t\t\t\t\tif(currentValue !== value) {\r\n\t\t\t\t\t\t\t\tcurrentValue = value\r\n\t\t\t\t\t\t\t\tif(listener) {\r\n\t\t\t\t\t\t\t\t\tlistener([{target: this, name: key}])\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tenumerable: descriptor.enumerable\r\n\t\t\t\t\t})\r\n\t\t\t\t}else{\r\n\t\t\t\t\tObject.defineProperty(target, key, {\r\n\t\t\t\t\t\tget: function() {\r\n\t\t\t\t\t\t\treturn currentValue\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tset: function(value) {\r\n\t\t\t\t\t\t\tif(currentValue !== value) {\r\n\t\t\t\t\t\t\t\tcurrentValue = value\r\n\t\t\t\t\t\t\t\tif(listener) {\r\n\t\t\t\t\t\t\t\t\tlistener([{target: this, name: key}])\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tenumerable: !descriptor || descriptor.enumerable\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t} :\r\n\t\t// and finally a polling-based solution, for the really old browsers\r\n\t\tfunction(target, listener) {\r\n\t\t\tif(!timerStarted) {\r\n\t\t\t\ttimerStarted = true\r\n\t\t\t\tsetInterval(function() {\r\n\t\t\t\t\tfor(var i = 0, l = watchedObjects.length; i < l; i++) {\r\n\t\t\t\t\t\tdiff(watchedCopies[i], watchedObjects[i], listeners[i])\r\n\t\t\t\t\t}\r\n\t\t\t\t}, 20)\r\n\t\t\t}\r\n\t\t\tvar copy = {}\r\n\t\t\tfor(var i in target) {\r\n\t\t\t\tif(target.hasOwnProperty(i)) {\r\n\t\t\t\t\tcopy[i] = target[i]\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\twatchedObjects.push(target)\r\n\t\t\twatchedCopies.push(copy)\r\n\t\t\tlisteners.push(listener)\r\n\t\t}\r\n\tvar queuedListeners\r\n\tfunction queue(listener, object, name) {\r\n\t\tif(queuedListeners) {\r\n\t\t\tif(queuedListeners.indexOf(listener) === -1) {\r\n\t\t\t\tqueuedListeners.push(listener)\r\n\t\t\t}\r\n\t\t}else{\r\n\t\t\tqueuedListeners = [listener]\r\n\t\t\tlang.nextTurn(function() {\r\n\t\t\t\tqueuedListeners.forEach(function(listener) {\r\n\t\t\t\t\tvar events = []\r\n\t\t\t\t\tlistener.properties.forEach(function(property) {\r\n\t\t\t\t\t\tevents.push({target: listener.object, name: property})\r\n\t\t\t\t\t})\r\n\t\t\t\t\tlistener(events)\r\n\t\t\t\t\tlistener.object = null\r\n\t\t\t\t\tlistener.properties = null\r\n\t\t\t\t})\r\n\t\t\t\tqueuedListeners = null\r\n\t\t\t}, 0)\r\n\t\t}\r\n\t\tlistener.object = object\r\n\t\tvar properties = listener.properties || (listener.properties = [])\r\n\t\tif(properties.indexOf(name) === -1) {\r\n\t\t\tproperties.push(name)\r\n\t\t}\r\n\t}\r\n\tvar unobserve = has('observe') ? Object.unobserve :\r\n\t\tfunction(target, listener) {\r\n\t\t\tif(listener.remove) {\r\n\t\t\t\tlistener.remove()\r\n\t\t\t}\r\n\t\t\tfor(var i = 0, l = watchedObjects.length; i < l; i++) {\r\n\t\t\t\tif(watchedObjects[i] === target && listeners[i] === listener) {\r\n\t\t\t\t\twatchedObjects.splice(i, 1)\r\n\t\t\t\t\twatchedCopies.splice(i, 1)\r\n\t\t\t\t\tlisteners.splice(i, 1)\r\n\t\t\t\t\treturn\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\tvar watchedObjects = []\r\n\tvar watchedCopies = []\r\n\tvar listeners = []\r\n\tvar timerStarted = false\r\n\tfunction diff(previous, current, callback) {\r\n\t\t// TODO: keep an array of properties for each watch for faster iteration\r\n\t\tvar queued\r\n\t\tfor(var i in previous) {\r\n\t\t\tif(previous.hasOwnProperty(i) && previous[i] !== current[i]) {\r\n\t\t\t\t// a property has changed\r\n\t\t\t\tprevious[i] = current[i]\r\n\t\t\t\t(queued || (queued = [])).push({name: i})\r\n\t\t\t}\r\n\t\t}\r\n\t\tfor(var i in current) {\r\n\t\t\tif(current.hasOwnProperty(i) && !previous.hasOwnProperty(i)) {\r\n\t\t\t\t// a property has been added\r\n\t\t\t\tprevious[i] = current[i]\r\n\t\t\t\t(queued || (queued = [])).push({name: i})\r\n\t\t\t}\r\n\t\t}\r\n\t\tif(queued) {\r\n\t\t\tcallback(queued)\r\n\t\t}\r\n\t}\r\n\r\n\tvar id = 1\r\n\t// a function that returns a function, to stop JSON serialization of an\r\n\t// object\r\n\tfunction toJSONHidden() {\r\n\t\treturn toJSONHidden\r\n\t}\r\n\t// An object that will be hidden from JSON serialization\r\n\tvar Hidden = function () {\r\n\t}\r\n\tHidden.prototype.toJSON = toJSONHidden\r\n\r\n\tvar lang = {\r\n\t\trequestAnimationFrame: has('requestAnimationFrame') ? requestAnimationFrame :\r\n\t\t\t(function() {\r\n\t\t\t\tvar toRender = []\r\n\t\t\t\tvar queued = false\r\n\t\t\t\tfunction processAnimationFrame() {\r\n\t\t\t\t\tfor (var i = 0; i < toRender.length; i++) {\r\n\t\t\t\t\t\ttoRender[i]()\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttoRender = []\r\n\t\t\t\t\tqueued = false\r\n\t\t\t\t}\r\n\t\t\t\tfunction requestAnimationFrame(renderer) {\r\n\t\t\t\t \tif (!queued) {\r\n\t\t\t\t\t\tsetTimeout(processAnimationFrame)\r\n\t\t\t\t\t\tqueued = true\r\n\t\t\t\t\t}\r\n\t\t\t\t\ttoRender.push(renderer)\r\n\t\t\t\t}\r\n\t\t\t\treturn requestAnimationFrame\r\n\t\t\t})(),\r\n\t\tPromise: has('promise') ? Promise : (function() {\r\n\t\t\tfunction Promise(execute) {\r\n\t\t\t\tvar isResolved, resolution, errorResolution\r\n\t\t\t\tvar queue = 0\r\n\t\t\t\tfunction resolve(value) {\r\n\t\t\t\t\t// resolve function\r\n\t\t\t\t\tif(value && value.then) {\r\n\t\t\t\t\t\t// received a promise, wait for it\r\n\t\t\t\t\t\tvalue.then(resolve, reject)\r\n\t\t\t\t\t}else{\r\n\t\t\t\t\t\tresolution = value\r\n\t\t\t\t\t\tfinished()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfunction reject(error) {\r\n\t\t\t\t\t// reject function\r\n\t\t\t\t\terrorResolution = error\r\n\t\t\t\t\tfinished()\r\n\t\t\t\t}\r\n\t\t\t\texecute(resolve, reject)\r\n\t\t\t\tfunction finished() {\r\n\t\t\t\t\tisResolved = true\r\n\t\t\t\t\tfor(var i = 0, l = queue.length; i < l; i++) {\r\n\t\t\t\t\t\tqueue[i]()\r\n\t\t\t\t\t}\r\n\t\t\t\t\t// clean out the memory\r\n\t\t\t\t\tqueue = 0\r\n\t\t\t\t}\r\n\t\t\t\treturn {\r\n\t\t\t\t\tthen: function(callback, errback) {\r\n\t\t\t\t\t\treturn new Promise(function(resolve, reject) {\r\n\t\t\t\t\t\t\tfunction handle() {\r\n\t\t\t\t\t\t\t\t// promise fulfilled, call the appropriate callback\r\n\t\t\t\t\t\t\t\ttry{\r\n\t\t\t\t\t\t\t\t\tif(errorResolution && !errback) {\r\n\t\t\t\t\t\t\t\t\t\t// errors without a handler flow through\r\n\t\t\t\t\t\t\t\t\t\treject(errorResolution)\r\n\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\t// resolve to the callback's result\r\n\t\t\t\t\t\t\t\t\t\tresolve(errorResolution ?\r\n\t\t\t\t\t\t\t\t\t\t\terrback(errorResolution) :\r\n\t\t\t\t\t\t\t\t\t\t\tcallback ?\r\n\t\t\t\t\t\t\t\t\t\t\t\tcallback(resolution) : resolution)\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}catch(newError) {\r\n\t\t\t\t\t\t\t\t\t// caught an error, reject the returned promise\r\n\t\t\t\t\t\t\t\t\treject(newError)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tif(isResolved) {\r\n\t\t\t\t\t\t\t\t// already resolved, immediately handle\r\n\t\t\t\t\t\t\t\thandle()\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t(queue || (queue = [])).push(handle)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn Promise\r\n\t\t}()),\r\n\r\n\t\tWeakMap: has('WeakMap') ? WeakMap :\r\n\t \tfunction (values, name) {\r\n\t \t\tvar mapProperty = '__' + (name || '') + id++\r\n\t \t\treturn has('defineProperty') ?\r\n\t \t\t{\r\n\t \t\t\tget: function (key) {\r\n\t \t\t\t\treturn key[mapProperty]\r\n\t \t\t\t},\r\n\t \t\t\tset: function (key, value) {\r\n\t \t\t\t\tObject.defineProperty(key, mapProperty, {\r\n\t \t\t\t\t\tvalue: value,\r\n\t \t\t\t\t\tenumerable: false\r\n\t \t\t\t\t})\r\n\t \t\t\t}\r\n\t \t\t} :\r\n\t \t\t{\r\n\t \t\t\tget: function (key) {\r\n\t \t\t\t\tvar intermediary = key[mapProperty]\r\n\t \t\t\t\treturn intermediary && intermediary.value\r\n\t \t\t\t},\r\n\t \t\t\tset: function (key, value) {\r\n\t \t\t\t\t// we use an intermediary that is hidden from JSON serialization, at least\r\n\t \t\t\t\tvar intermediary = key[mapProperty] || (key[mapProperty] = new Hidden())\r\n\t \t\t\t\tintermediary.value = value\r\n\t \t\t\t}\r\n\t \t\t}\r\n\t \t},\r\n\r\n\t\tobserve: observe,\r\n\t\tunobserve: unobserve,\r\n\t\twhen: function(value, callback, errorHandler) {\r\n\t\t\treturn value && value.then ?\r\n\t\t\t\t(value.then(callback, errorHandler) || value) : callback(value)\r\n\t\t},\r\n\t\twhenAll: function(inputs, callback) {\r\n\t\t\tvar promiseInvolved\r\n\t\t\tfor(var i = 0, l = inputs.length; i < l; i++) {\r\n\t\t\t\tif(inputs[i] && inputs[i].then) {\r\n\t\t\t\t\tpromiseInvolved = true\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tif(promiseInvolved) {\r\n\t\t\t\t// we have asynch inputs, do lazy loading\r\n\t\t\t\treturn {\r\n\t\t\t\t\tthen: function(onResolve, onError) {\r\n\t\t\t\t\t\tvar remaining = 1\r\n\t\t\t\t\t\tvar result\r\n\t\t\t\t\t\tvar readyInputs = []\r\n\t\t\t\t\t\tvar lastPromiseResult\r\n\t\t\t\t\t\tfor(var i = 0; i < inputs.length; i++) {\r\n\t\t\t\t\t\t\tvar input = inputs[i]\r\n\t\t\t\t\t\t\tremaining++\r\n\t\t\t\t\t\t\tif(input && input.then) {\r\n\t\t\t\t\t\t\t\t(function(i, previousPromiseResult) {\r\n\t\t\t\t\t\t\t\t\tlastPromiseResult = input.then(function(value) {\r\n\t\t\t\t\t\t\t\t\t\treadyInputs[i] = value\r\n\t\t\t\t\t\t\t\t\t\tonEach()\r\n\t\t\t\t\t\t\t\t\t\tif(!remaining) {\r\n\t\t\t\t\t\t\t\t\t\t\treturn result\r\n\t\t\t\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\t\t\t\treturn previousPromiseResult\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}, onError)\r\n\t\t\t\t\t\t\t\t})(i, lastPromiseResult)\r\n\t\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\t\t\treadyInputs[i] = input\r\n\t\t\t\t\t\t\t\tonEach()\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tonEach()\r\n\t\t\t\t\t\tfunction onEach() {\r\n\t\t\t\t\t\t\tremaining--\r\n\t\t\t\t\t\t\tif(!remaining) {\r\n\t\t\t\t\t\t\t\tresult = onResolve(callback(readyInputs))\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\treturn lastPromiseResult\r\n\t\t\t\t\t},\r\n\t\t\t\t\tinputs: inputs\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\t// just sync inputs\r\n\t\t\treturn callback(inputs)\r\n\r\n\t\t},\r\n\t\tcompose: function(Base, constructor, properties) {\r\n\t\t\tvar prototype = constructor.prototype = Object.create(Base.prototype)\r\n\t\t\tsetPrototypeOf(constructor, Base)\r\n\t\t\tfor(var i in properties) {\r\n\t\t\t\tprototype[i] = properties[i]\r\n\t\t\t}\r\n\t\t\tprototype.constructor = constructor\r\n\t\t\treturn constructor\r\n\t\t},\r\n\t\tnextTurn: has('MutationObserver') ?\r\n\t\t\tfunction (callback) {\r\n\t\t\t\t// promises don't resolve consistently on the next micro turn (Edge doesn't do it right),\r\n\t\t\t\t// so use mutation observer\r\n\t\t\t\t// TODO: make a faster mode that doesn't recreate each time\r\n\t\t\t\tvar div = document.createElement('div')\r\n\t\t\t\tvar observer = new MutationObserver(callback)\r\n\t\t\t\tobserver.observe(div, {\r\n\t\t\t\t\tattributes: true\r\n\t\t\t\t})\r\n\t\t\t\tdiv.setAttribute('a', id++)\r\n\t\t\t} :\r\n\t\t\tfunction (callback) {\r\n\t\t\t\t// TODO: we can do better for other, older browsers\r\n\t\t\t\tsetTimeout(callback, 0)\r\n\t\t\t},\r\n\t\tcopy: Object.assign || function(target, source) {\r\n\t\t\tfor(var i in source) {\r\n\t\t\t\ttarget[i] = source[i]\r\n\t\t\t}\r\n\t\t\treturn target\r\n\t\t}\r\n\t}\r\n\treturn lang\r\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./util/lang.js\n ** module id = 3\n ** module chunks = 0\n **/","define(['./util/lang'], function (lang, Variable) {\r\n\tvar doc = typeof document !== 'undefined' && document\r\n\tvar invalidatedElements\r\n\tvar queued\r\n\tvar toRender = []\r\n\tvar nextId = 1\r\n\tvar requestAnimationFrame = lang.requestAnimationFrame\r\n\r\n\tfunction Context(subject){\r\n\t\tthis.subject = subject\r\n\t}\r\n\r\n\tfunction Updater(options) {\r\n\t\tvar variable = options.variable\r\n\r\n\t\tthis.variable = variable\r\n\t\tthis.elements = []\r\n\t\tif (options) {\r\n\t\t\tif (options.selector) {\r\n\t\t\t\tthis.selector = options.selector\r\n\t\t\t}\r\n\t\t\tif (options.elements) {\r\n\t\t\t\tthis.elements = options.elements\r\n\t\t\t\tthis.element = this.elements[0]\r\n\t\t\t}\r\n\t\t\tif (options.element) {\r\n\t\t\t\tthis.element = options.element\r\n\t\t\t\tthis.elements.push(options.element)\r\n\t\t\t}\r\n\t\t\tfor(var i = 0, l = this.elements.length; i < l; i++) {\r\n\t\t\t\t(this.elements[i].alkaliRenderers || (this.elements[i].alkaliRenderers = [])).push(this)\r\n\t\t\t}\r\n\t\t\tif (options.update) {\r\n\t\t\t\tthis.updateRendering = options.update\r\n\t\t\t}\r\n\t\t\tif (options.shouldRender) {\r\n\t\t\t\tthis.shouldRender = options.shouldRender\r\n\t\t\t}\r\n\t\t\tif (options.renderUpdate) {\r\n\t\t\t\tthis.renderUpdate = options.renderUpdate\r\n\t\t\t}\r\n\t\t\tif (options.alwaysUpdate) {\r\n\t\t\t\tthis.alwaysUpdate = options.alwaysUpdate\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (variable.updated) {\r\n\t\t\t// if it has update, we don't need to instantiate a closure\r\n\t\t\tvariable.notifies(this)\r\n\t\t} else {\r\n\t\t\t// baconjs-esqe API\r\n\t\t\tvar updater = this\r\n\t\t\tvariable.subscribe(function (event) {\r\n\t\t\t\t// replace the variable with an object\r\n\t\t\t\t// that returns the value from the event\r\n\t\t\t\tupdater.variable = {\r\n\t\t\t\t\tvalueOf: function () {\r\n\t\t\t\t\t\treturn event.value()\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tupdater.updated()\r\n\t\t\t})\r\n\t\t}\r\n\t\tif(options && options.updateOnStart !== false){\r\n\t\t\tthis.updateRendering(true)\r\n\t\t}\r\n\t}\r\n\tUpdater.prototype = {\r\n\t\tconstructor: Updater,\r\n\t\tupdateRendering: function () {\r\n\t\t\tthrow new Error ('updateRendering must be implemented by sub class of Updater')\r\n\t\t},\r\n\t\tupdated: function (updateEvent, by, context) {\r\n\t\t\tif (!this.invalidated) {\r\n\t\t\t\tif (!context || this.contextMatches(context)) {\r\n\t\t\t\t\t// do this only once, until we render again\r\n\t\t\t\t\tthis.invalidated = true\r\n\t\t\t\t\tvar updater = this\r\n\t\t\t\t\trequestAnimationFrame(function(){\r\n\t\t\t\t\t\tinvalidatedElements = null\r\n\t\t\t\t\t\tupdater.updateRendering(updater.alwaysUpdate)\r\n\t\t\t\t\t})\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t},\r\n\t\tcontextMatches: function(context) {\r\n\t\t\treturn true\r\n\t\t\treturn context == this.elements ||\r\n\t\t\t\t// if context is any element in this.elements - perhaps return only the specific matching elements?\r\n\t\t\t\t(this.elements.indexOf(context) != -1) ||\r\n\t\t\t  // (context is an array and any/all elements are contained in this.elements) ||\r\n\t\t\t\t// context contains() any of this.elements\r\n\t\t\t\t(function(elements) {\r\n\t\t\t\t\tfor(var i = 0, l = elements.length; i < l; i++) {\r\n\t\t\t\t\t\tif (context.contains(elements[i])) return true\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn false\r\n\t\t\t\t})(this.elements)\r\n\t\t},\r\n\t\tinvalidateElement: function(element) {\r\n\t\t\tif(!invalidatedElements){\r\n\t\t\t\tinvalidatedElements = new WeakMap(null, 'invalidated')\r\n\t\t\t\t// TODO: if this is not a real weak map, we don't want to GC it, or it will leak\r\n\t\t\t}\r\n\t\t\tvar invalidatedParts = invalidatedElements.get(element)\r\n\t\t\tinvalidatedElements.set(element, invalidatedParts = {})\r\n\t\t\tif (!invalidatedParts[id]) {\r\n\t\t\t\tinvalidatedParts[id] = true\r\n\t\t\t}\r\n\t\t\tif (!queued) {\r\n\t\t\t\tlang.queueTask(processQueue)\r\n\t\t\t\tqueued = true\r\n\t\t\t}\r\n\t\t\tvar updater = this\r\n\t\t\ttoRender.push(function(){\r\n\t\t\t\tupdater.invalidated = false\r\n\t\t\t\tupdater.updateElement(element)\r\n\t\t\t})\r\n\t\t},\r\n\t\tgetId: function(){\r\n\t\t\treturn this.id || (this.id = nextId++)\r\n\t\t},\r\n\t\tstop: function() {\r\n\t\t\tthis.variable.stopNotifies(this)\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction ElementUpdater(options) {\r\n\t\tUpdater.call(this, options)\r\n\t}\r\n\tElementUpdater.prototype = Object.create(Updater.prototype)\r\n\tElementUpdater.prototype.shouldRender = function (element) {\r\n\t\treturn document.body.contains(element)\r\n\t}\r\n\tElementUpdater.prototype.getSubject = function () {\r\n\t\treturn this.element || this.elements[0]\r\n\t}\r\n\tElementUpdater.prototype.updateRendering = function (always, element) {\r\n\t\tvar elements = this.elements || (element && [element]) || []\r\n\t\tif(!elements.length){\r\n\t\t\tif(this.selector){\r\n\t\t\t\telements = document.querySelectorAll(this.selector)\r\n\t\t\t}else{\r\n\t\t\t\tthrow new Error('No element or selector was provided to the Updater')\r\n\t\t\t}\r\n\t\t\treturn\r\n\t\t}\r\n\t\tfor(var i = 0, l = elements.length; i < l; i++){\r\n\t\t\tif(always || this.shouldRender(elements[i])){\r\n\t\t\t\t// it is connected\r\n\t\t\t\tthis.updateElement(elements[i])\r\n\t\t\t}else{\r\n\t\t\t\tvar id = this.getId()\r\n\t\t\t\tvar updaters = elements[i].updatersOnShow\r\n\t\t\t\tif(!updaters){\r\n\t\t\t\t\tupdaters = elements[i].updatersOnShow = []\r\n\t\t\t\t\telements[i].className += ' needs-rerendering'\r\n\t\t\t\t}\r\n\t\t\t\tif (!updaters[id]) {\r\n\t\t\t\t\tupdaters[id] = this\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tElementUpdater.prototype.addElement = function (element) {\r\n\t\tif (this.selector) {\r\n\t\t\telement.updatersOnShow = [this]\r\n\t\t} else {\r\n\t\t\tthis.elements.push(element)\r\n\t\t}\r\n\t\t// and immediately do an update\r\n\t\tthis.updateElement(element)\r\n\t}\r\n\tElementUpdater.prototype.updateElement = function(element) {\r\n\t\tthis.invalidated = false\r\n\t\ttry {\r\n\t\t\t// TODO: might make something cheaper than for(element) for setting context?\r\n\t\t\tvar value = !this.omitValueOf && this.variable.valueOf(new Context(element))\r\n\t\t} catch (error) {\r\n\t\t\telement.appendChild(document.createTextNode(error))\r\n\t\t}\r\n\t\tif(value !== undefined || this.started){\r\n\t\t\tthis.started = true\r\n\t\t\tif(value && value.then){\r\n\t\t\t\tif(this.renderLoading){\r\n\t\t\t\t\tthis.renderLoading(value, element)\r\n\t\t\t\t}\r\n\t\t\t\tvar updater = this\r\n\t\t\t\tvalue.then(function (value) {\r\n\t\t\t\t\tupdater.renderUpdate(value, element)\r\n\t\t\t\t})\r\n\t\t\t}else{\r\n\t\t\t\tthis.renderUpdate(value, element)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tElementUpdater.prototype.renderUpdate = function (newValue, element) {\r\n\t\tthrow new Error('renderUpdate(newValue) must be implemented')\r\n\t}\r\n\tUpdater.Updater = Updater\r\n\tUpdater.ElementUpdater = ElementUpdater\r\n\r\n\tfunction AttributeUpdater(options) {\r\n\t\tif(options.name){\r\n\t\t\tthis.name = options.name\r\n\t\t}\r\n\t\tElementUpdater.apply(this, arguments)\r\n\t}\r\n\tAttributeUpdater.prototype = Object.create(ElementUpdater.prototype)\r\n\tAttributeUpdater.prototype.type = 'AttributeUpdater'\r\n\tAttributeUpdater.prototype.renderUpdate = function (newValue, element) {\r\n\t\telement.setAttribute(this.name, newValue)\r\n\t}\r\n\tUpdater.AttributeUpdater = AttributeUpdater\r\n\r\n\tfunction PropertyUpdater(options) {\r\n\t\tif(options.name){\r\n\t\t\tthis.name = options.name\r\n\t\t}\r\n\t\tElementUpdater.apply(this, arguments)\r\n\t}\r\n\tPropertyUpdater.prototype = Object.create(ElementUpdater.prototype)\r\n\tPropertyUpdater.prototype.type = 'PropertyUpdater'\r\n\tPropertyUpdater.prototype.renderUpdate = function (newValue, element) {\r\n\t\telement[this.name] = newValue\r\n\t}\r\n\tUpdater.PropertyUpdater = PropertyUpdater\r\n\r\n\tfunction StyleUpdater(options) {\r\n\t\tif(options.name){\r\n\t\t\tthis.name = options.name\r\n\t\t}\r\n\t\tElementUpdater.apply(this, arguments)\r\n\t}\r\n\tStyleUpdater.prototype = Object.create(ElementUpdater.prototype)\r\n\tStyleUpdater.prototype.type = 'StyleUpdater'\r\n\tStyleUpdater.prototype.renderUpdate = function (newValue, element) {\r\n\t\telement.style[this.name] = newValue\r\n\t}\r\n\tUpdater.StyleUpdater = StyleUpdater\r\n\r\n\tfunction ContentUpdater(options) {\r\n\t\tElementUpdater.apply(this, arguments)\r\n\t}\r\n\tContentUpdater.prototype = Object.create(ElementUpdater.prototype)\r\n\tContentUpdater.prototype.type = 'ContentUpdater'\r\n\tContentUpdater.prototype.renderUpdate = function (newValue, element) {\r\n\t\telement.innerHTML = ''\r\n\t\tif (newValue === undefined){\r\n\t\t\tnewValue = ''\r\n\t\t}\r\n\t\telement.appendChild(document.createTextNode(newValue))\r\n\t}\r\n\tUpdater.ContentUpdater = ContentUpdater\r\n\r\n\tfunction TextUpdater(options) {\r\n\t\tthis.position = options.position\r\n\t\tthis.textNode = options.textNode\r\n\t\tElementUpdater.apply(this, arguments)\r\n\t}\r\n\tTextUpdater.prototype = Object.create(ElementUpdater.prototype)\r\n\tTextUpdater.prototype.type = 'TextUpdater'\r\n\tTextUpdater.prototype.renderUpdate = function (newValue, element) {\r\n\t\tif (newValue === undefined){\r\n\t\t\tnewValue = ''\r\n\t\t}\r\n\t\t(this.textNode || element.childNodes[this.position]).nodeValue = newValue\r\n\t}\r\n\tUpdater.TextUpdater = TextUpdater\r\n\r\n\tfunction ListUpdater(options) {\r\n\t\tif (options.each) {\r\n\t\t\tthis.each = options.each\r\n\t\t}\r\n\t\tElementUpdater.apply(this, arguments)\r\n\t}\r\n\tListUpdater.prototype = Object.create(ElementUpdater.prototype)\r\n\tListUpdater.prototype.updated = function (updateEvent, context) {\r\n\t\t(this.updates || (this.updates = [])).push(updateEvent)\r\n\t\tElementUpdater.prototype.updated.call(this, updateEvent, context)\r\n\t}\r\n\tListUpdater.prototype.type = 'ListUpdater'\r\n\tListUpdater.prototype.omitValueOf = true\r\n\tListUpdater.prototype.renderUpdate = function (newValue, element) {\r\n\t\tvar container\r\n\t\tvar each = this.each\r\n\t\tvar thisElement = this.elements[0]\r\n\t\tvar updater = this\r\n\t\tif (!this.builtList) {\r\n\t\t\tthis.builtList = true\r\n\t\t\tcontainer = document.createDocumentFragment()\r\n\t\t\tvar childElements = this.childElements = []\r\n\t\t\tthis.variable.for(thisElement).forEach(function(item) {\r\n\t\t\t\teachItem(item)\r\n\t\t\t})\r\n\t\t\tthis.element.appendChild(container)\r\n\t\t} else {\r\n\t\t\tvar childElements = this.childElements\r\n\t\t\tvar updates = this.updates\r\n\t\t\tcontainer = this.element\r\n\t\t\tupdates.forEach(function(update) {\r\n\t\t\t\tif (update.type === 'refresh') {\r\n\t\t\t\t\tupdater.builtList = false\r\n\t\t\t\t\tfor (var i = 0, l = childElements.length; i < l; i++) {\r\n\t\t\t\t\t\tthisElement.removeChild(childElements[i])\r\n\t\t\t\t\t}\r\n\t\t\t\t\tupdater.renderUpdate()\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (update.previousIndex > -1) {\r\n\t\t\t\t\t\tthisElement.removeChild(childElements[update.previousIndex])\r\n\t\t\t\t\t\tchildElements.splice(update.previousIndex, 1)\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif (update.index > -1) {\r\n\t\t\t\t\t\tvar nextChild = childElements[update.index] || null\r\n\t\t\t\t\t\teachItem(update.value, update.index, nextChild)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t})\r\n\t\t\tthis.updates = [] // clear the updates\r\n\t\t}\r\n\t\tfunction eachItem(item, index, nextChild) {\r\n\t\t\tvar childElement\r\n\t\t\tif (each.create) {\r\n\t\t\t\tchildElement = each.create({parent: thisElement, _item: item}) // TODO: make a faster object here potentially\r\n\t\t\t} else {\r\n\t\t\t\tchildElement = each(item, thisElement)\r\n\t\t\t}\r\n\t\t\tif (nextChild) {\r\n\t\t\t\tcontainer.insertBefore(childElement, nextChild)\r\n\t\t\t\tchildElements.splice(index, 0, childElement)\r\n\t\t\t} else {\r\n\t\t\t\tcontainer.appendChild(childElement)\r\n\t\t\t\tchildElements.push(childElement)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tUpdater.ListUpdater = ListUpdater\r\n\r\n\tUpdater.onShowElement = function(shownElement){\r\n\t\trequestAnimationFrame(function(){\r\n\t\t\tinvalidatedElements = null\r\n\t\t\tvar elements = [].slice.call(shownElement.getElementsByClassName('needs-rerendering'))\r\n\t\t\tif (shownElement.className.indexOf('needs-rerendering') > 0){\r\n\t\t\t\tvar includingTop = [shownElement]\r\n\t\t\t\tincludingTop.push.apply(includingTop, elements)\r\n\t\t\t\telements = includingTop\r\n\t\t\t}\r\n\t\t\tfor (var i = 0, l = elements.length; i < l; i++){\r\n\t\t\t\tvar element = elements[i]\r\n\t\t\t\tvar updaters = element.updatersOnShow\r\n\t\t\t\tif(updaters){\r\n\t\t\t\t\telement.updatersOnShow = null\r\n\t\t\t\t\t// remove needs-rerendering class\r\n\t\t\t\t\telement.className = element.className.replace(/\\s?needs\\-rerendering\\s?/g, '')\r\n\t\t\t\t\tfor (var id in updaters) {\r\n\t\t\t\t\t\tvar updater = updaters[id]\r\n\t\t\t\t\t\tupdater.updateElement(element)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\tfunction onElementRemoval(element){\r\n\t\t// cleanup element renderers\r\n\t\tif(element.alkaliRenderers){\r\n\t\t\tvar renderers = element.alkaliRenderers\r\n\t\t\tfor(var i = 0; i < renderers.length; i++){\r\n\t\t\t\tvar renderer = renderers[i]\r\n\t\t\t\trenderer.variable.stopNotifies(renderer)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\tUpdater.onElementRemoval = function(element, onlyChildren){\r\n\t\tif(!onlyChildren){\r\n\t\t\tonElementRemoval(element)\r\n\t\t}\r\n\t\tvar children = element.getElementsByTagName('*')\r\n\t\tfor(var i = 0, l = children.length; i < l; i++){\r\n\t\t\tvar child = children[i]\r\n\t\t\tif(child.alkaliRenderers){\r\n\t\t\t\tonElementRemoval(child)\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn Updater\r\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Updater.js\n ** module id = 4\n ** module chunks = 0\n **/","define(['./util/lang', './Variable'], function (lang, Variable) {\r\n\r\n\tfunction react(generator, options) {\r\n\t\tif (options && options.reverse) {\r\n\t\t\tgenerator.reverse = options.reverse\r\n\t\t}\r\n\t\treturn new Variable.GeneratorVariable(generator)\r\n\t}\r\n\treturn react\r\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./react.js\n ** module id = 5\n ** module chunks = 0\n **/","define(['./Variable'], function (Variable) {\r\n\tvar deny = Variable.deny;\r\n\tvar operatingFunctions = {};\r\n\tvar operators = {};\r\n\tfunction getOperatingFunction(expression){\r\n\t\t// jshint evil: true\r\n\t\treturn operatingFunctions[expression] ||\r\n\t\t\t(operatingFunctions[expression] =\r\n\t\t\t\tnew Function('a', 'b', 'deny', 'return ' + expression));\r\n\t}\r\n\tfunction operator(operator, name, precedence, forward, reverseA, reverseB){\r\n\t\t// defines the standard operators\r\n\t\tvar reverse = function(output, inputs){\r\n\t\t\tvar a = inputs[0],\r\n\t\t\t\tb = inputs[1];\r\n\t\t\tif(a && a.put){\r\n\t\t\t\tvar result = reverseA(output, b && b.valueOf());\r\n\t\t\t\tif(result !== deny){\r\n\t\t\t\t\ta.put(result);\r\n\t\t\t\t}\r\n\t\t\t}else if(b && b.put){\r\n\t\t\t\tb.put(reverseB(output, a && a.valueOf()));\r\n\t\t\t}else{\r\n\t\t\t\treturn deny;\r\n\t\t\t}\r\n\t\t};\r\n\t\t// define a function that can lazily ensure the operating function\r\n\t\t// is available\r\n\t\tvar operatorHandler = {\r\n\t\t\tapply: function(instance, args){\r\n\t\t\t\tforward = getOperatingFunction(forward);\r\n\t\t\t\treverseA = reverseA && getOperatingFunction(reverseA);\r\n\t\t\t\treverseB = reverseB && getOperatingFunction(reverseB);\r\n\t\t\t\tforward.reverse = reverse;\r\n\t\t\t\toperators[operator] = operatorHandler = new Variable(forward);\r\n\r\n\t\t\t\taddFlags(operatorHandler);\r\n\t\t\t\targs = Array.prototype.slice.call(args);\r\n\t\t\t\targs.push(deny)\r\n\t\t\t\treturn operatorHandler.apply(instance, args);\r\n\t\t\t}\r\n\t\t};\r\n\t\tfunction addFlags(operatorHandler){\r\n\t\t\toperatorHandler.precedence = precedence;\r\n\t\t\toperatorHandler.infix = reverseB !== false;\r\n\t\t}\r\n\t\taddFlags(operatorHandler);\r\n\t\toperators[operator] = operatorHandler;\r\n\t\toperators[name] = function() {\r\n\t\t\treturn operatorHandler.apply(null, arguments)\r\n\t\t}\r\n\t}\r\n\t// using order precedence from:\r\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Operator_Precedence\r\n\toperator('+', 'add', 6, 'a+b', 'a-b', 'a-b');\r\n\toperator('-', 'subtract', 6, 'a-b', 'a+b', 'b-a');\r\n\toperator('*', 'multiply', 5, 'a*b', 'a/b', 'a/b');\r\n\toperator('/', 'divide', 5, 'a/b', 'a*b', 'b/a');\r\n//\toperator('^', 7, 'a^b', 'a^(-b)', 'Math.log(a)/Math.log(b)');\r\n\toperator('?', 'if', 16, 'b[a?0:1]', 'a===b[0]||(a===b[1]?false:deny)', '[a,b]');\r\n\toperator(':', 'choose', 15, '[a,b]', 'a[0]?a[1]:deny', 'a[1]');\r\n\toperator('!', 'not', 4, '!a', '!a', false);\r\n\toperator('%', 'remainder', 5, 'a%b');\r\n\toperator('>', 'greater', 8, 'a>b');\r\n\toperator('>=', 'greaterOrEqual', 8, 'a>=b');\r\n\toperator('<', 'less', 8, 'a<b');\r\n\toperator('<=', 'lessOrEqual', 8, 'a<=b');\r\n\toperator('==', 'equal', 9, 'a===b');\r\n\toperator('&', 'and', 8, 'a&&b');\r\n\toperator('|', 'or', 8, 'a||b');\r\n\toperator('round', 'round', 8, 'Math.round(a*Math.pow(10,b||1))/Math.pow(10,b||1)', 'a', 'a');\r\n\treturn operators;\r\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./operators.js\n ** module id = 6\n ** module chunks = 0\n **/","define(['./util/lang', './Variable'], function (lang, Variable) {\r\n\r\n\tfunction deepCopy(source, target, derivativeMap) {\r\n\t\tif (source && typeof source == 'object') {\r\n\t\t\tif (source instanceof Array) {\r\n\t\t\t\ttarget = [] // always create a new array for array targets\r\n\t\t\t\tfor(var i = 0, l = source.length; i < l; i++) {\r\n\t\t\t\t\ttarget[i] = deepCopy(source[i], null, derivativeMap)\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif (!target || typeof target !== 'object') {\r\n\t\t\t\t\ttarget = derivativeMap && derivativeMap.get(source)\r\n\t\t\t\t\tif (!target) {\r\n\t\t\t\t\t\ttarget = {}\r\n\t\t\t\t\t\tderivativeMap && derivativeMap.set(source, target)\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tfor (var i in source) {\r\n\t\t\t\t\ttarget[i] = deepCopy(source[i], target[i], derivativeMap)\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn target\r\n\t\t}\r\n\t\treturn source\r\n\t}\r\n\r\n\tvar Copy = lang.compose(Variable, function(copiedFrom) {\r\n\t\t// this is the variable that we derive from\r\n\t\tthis.copiedFrom = copiedFrom\r\n\t\tthis.derivativeMap = new lang.WeakMap(null, 'derivative')\r\n\t\tthis.isDirty = new Variable(false)\r\n\t}, {\r\n\t\tvalueOf: function(context) {\r\n\t\t\tif(this.state) {\r\n\t\t\t\tthis.state = null\r\n\t\t\t}\r\n\t\t\tvar value = this.copiedFrom.valueOf(context)\r\n\t\t\tif(value && typeof value == 'object') {\r\n\t\t\t\tvar derivative = this.derivativeMap.get(value)\r\n\t\t\t\tif (derivative == null) {\r\n\t\t\t\t\tthis.derivativeMap.set(value, derivative = deepCopy(value, undefined, this.derivativeMap))\r\n\t\t\t\t\tthis.setValue(derivative, context)\r\n\t\t\t\t}\r\n\t\t\t\treturn derivative\r\n\t\t\t}\r\n\t\t\tvar thisValue = this.getValue(context)\r\n\t\t\tif(thisValue === undefined) {\r\n\t\t\t\treturn value\r\n\t\t\t}\r\n\t\t\treturn thisValue\r\n\t\t},\r\n\t\tgetCopyOf: function(value) {\r\n\t\t\tvar derivative = this.derivativeMap.get(value)\r\n\t\t\tif (derivative == null) {\r\n\t\t\t\tthis.derivativeMap.set(value, derivative = deepCopy(value, undefined, this.derivativeMap))\r\n\t\t\t}\r\n\t\t\treturn derivative\r\n\t\t},\r\n\t\tsave: function() {\r\n\t\t\t// copy back to the original object\r\n\t\t\tvar original = this.copiedFrom.valueOf()\r\n\t\t\tvar newCopiedFrom = deepCopy(this.valueOf(), original)\r\n\t\t\tif (original !== newCopiedFrom) {\r\n\t\t\t\t// if we have replaced it with a new object/value, put it\r\n\t\t\t\tthis.copiedFrom.put && this.copiedFrom.put(newCopiedFrom)\r\n\t\t\t} else {\r\n\t\t\t\t// else we have modified an existing object, but we still need to notify\r\n\t\t\t\tif (this.copiedFrom.notifies && this.copiedFrom.updated) { // copiedFrom doesn't have to be a variable, it can be a plain object\r\n\t\t\t\t\tthis.copiedFrom.updated()\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tthis.isDirty.put(false)\r\n\t\t\tthis.onSave && this.onSave()\r\n\t\t},\r\n\t\trevert: function() {\r\n\t\t\tvar original = this.copiedFrom.valueOf()\r\n\t\t\tthis.put(deepCopy(original, this.derivativeMap.get(original), this.derivativeMap))\r\n\t\t\tthis.isDirty.put(false)\r\n\t\t},\r\n\t\tupdated: function() {\r\n\t\t\tthis.isDirty.put(true)\r\n\t\t\treturn Variable.prototype.updated.apply(this, arguments)\r\n\t\t}\r\n\t})\r\n\treturn Copy\r\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./Copy.js\n ** module id = 7\n ** module chunks = 0\n **/"],"sourceRoot":""}